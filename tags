!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	tests/unittest.cc	/^    explicit A(int x_) : x(x_) {}$/;"	f	class:A
A	tests/unittest.cc	/^class A : public Xapian::Internal::intrusive_base {$/;"	c	file:
ABSOLUTE_DISCOUNT_SMOOTHING	include/xapian/weight.h	/^	ABSOLUTE_DISCOUNT_SMOOTHING = 3,$/;"	e	enum:Xapian::Weight::__anon15
ACCEPT	queryparser/lemon.c	/^  ACCEPT,$/;"	e	enum:e_action	file:
ACLOCAL	Makefile	/^ACLOCAL = ${SHELL} \/home\/sammar\/new-xapian-v2\/missing aclocal-1.15 $/;"	m
ACLOCAL	docs/Makefile	/^ACLOCAL = ${SHELL} \/home\/sammar\/new-xapian-v2\/missing aclocal-1.15 $/;"	m
ACLOCAL	tests/Makefile	/^ACLOCAL = ${SHELL} \/home\/sammar\/new-xapian-v2\/missing aclocal-1.15 $/;"	m
ACLOCAL_AMFLAGS	Makefile	/^ACLOCAL_AMFLAGS = -I m4$/;"	m
ACLOCAL_M4	Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	docs/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	tests/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ADDED	matcher/collapser.h	/^    ADDED,$/;"	e	enum:__anon29
ADJ	queryparser/queryparser_token.h	7;"	d
AE	languages/compiler/header.h	/^    struct node * AE;$/;"	m	struct:node	typeref:struct:node::node
AI_ADDRCONFIG	common/safenetdb.h	40;"	d
AI_NUMERICSERV	common/safenetdb.h	37;"	d
AI_V4MAPPED	common/safenetdb.h	43;"	d
AMTAR	Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	docs/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	tests/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AM_CPPFLAGS	Makefile	/^AM_CPPFLAGS = -I$(top_srcdir)\/common -I$(top_srcdir)\/include \\$/;"	m
AM_CPPFLAGS	tests/Makefile	/^AM_CPPFLAGS = -I$(top_srcdir) -I$(top_srcdir)\/common -I$(top_srcdir)\/include \\$/;"	m
AM_CXXFLAGS	Makefile	/^AM_CXXFLAGS =  -Wall -W -Wredundant-decls -Wpointer-arith -Wcast-qual -Wcast-align -Wformat-security -fno-gnu-keywords -Wundef -Woverloaded-virtual -Wstrict-null-sentinel -Wshadow -Wstrict-overflow=1 -Wlogical-op -Wmissing-declarations -Wdouble-promotion -Winit-self -fvisibility=hidden -fvisibility-inlines-hidden$/;"	m
AM_CXXFLAGS	docs/Makefile	/^AM_CXXFLAGS =  -Wall -W -Wredundant-decls -Wpointer-arith -Wcast-qual -Wcast-align -Wformat-security -fno-gnu-keywords -Wundef -Woverloaded-virtual -Wstrict-null-sentinel -Wshadow -Wstrict-overflow=1 -Wlogical-op -Wmissing-declarations -Wdouble-promotion -Winit-self -fvisibility=hidden -fvisibility-inlines-hidden$/;"	m
AM_CXXFLAGS	tests/Makefile	/^AM_CXXFLAGS =  -Wall -W -Wredundant-decls -Wpointer-arith -Wcast-qual -Wcast-align -Wformat-security -fno-gnu-keywords -Wundef -Woverloaded-virtual -Wstrict-null-sentinel -Wshadow -Wstrict-overflow=1 -Wlogical-op -Wmissing-declarations -Wdouble-promotion -Winit-self -fvisibility=hidden -fvisibility-inlines-hidden$/;"	m
AM_DEFAULT_VERBOSITY	Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	docs/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	tests/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_RECURSIVE_TARGETS	Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_V_CC	Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CC	tests/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CCLD	Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CCLD	tests/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CXX	Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	tests/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXXLD	Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	tests/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_GEN	Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	docs/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	tests/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_P	Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	docs/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	tests/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_at	Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	docs/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	tests/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_lt	Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AM_V_lt	tests/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AND	queryparser/queryparser_token.h	4;"	d
APIDOC_SRC	docs/docsource.mk	/^APIDOC_SRC=\\$/;"	m
AR	Makefile	/^AR = ar$/;"	m
AR	docs/Makefile	/^AR = ar$/;"	m
AR	tests/Makefile	/^AR = ar$/;"	m
ARABIC	languages/sbl-dispatch.h	/^    ARABIC = 1,$/;"	e	enum:sbl_code
ARMENIAN	languages/sbl-dispatch.h	/^    ARMENIAN = 2,$/;"	e	enum:sbl_code
AS	Makefile	/^AS = as$/;"	m
AS	docs/Makefile	/^AS = as$/;"	m
AS	tests/Makefile	/^AS = as$/;"	m
ASCENDING	include/xapian/enquire.h	/^	    ASCENDING = 1,$/;"	e	enum:Xapian::Enquire::__anon16
AUTOCONF	Makefile	/^AUTOCONF = ${SHELL} \/home\/sammar\/new-xapian-v2\/missing autoconf$/;"	m
AUTOCONF	docs/Makefile	/^AUTOCONF = ${SHELL} \/home\/sammar\/new-xapian-v2\/missing autoconf$/;"	m
AUTOCONF	tests/Makefile	/^AUTOCONF = ${SHELL} \/home\/sammar\/new-xapian-v2\/missing autoconf$/;"	m
AUTOHEADER	Makefile	/^AUTOHEADER = ${SHELL} \/home\/sammar\/new-xapian-v2\/missing autoheader$/;"	m
AUTOHEADER	docs/Makefile	/^AUTOHEADER = ${SHELL} \/home\/sammar\/new-xapian-v2\/missing autoheader$/;"	m
AUTOHEADER	tests/Makefile	/^AUTOHEADER = ${SHELL} \/home\/sammar\/new-xapian-v2\/missing autoheader$/;"	m
AUTOM4TE	Makefile	/^AUTOM4TE = autom4te$/;"	m
AUTOM4TE	docs/Makefile	/^AUTOM4TE = autom4te$/;"	m
AUTOM4TE	tests/Makefile	/^AUTOM4TE = autom4te$/;"	m
AUTOMAKE	Makefile	/^AUTOMAKE = ${SHELL} \/home\/sammar\/new-xapian-v2\/missing automake-1.15$/;"	m
AUTOMAKE	docs/Makefile	/^AUTOMAKE = ${SHELL} \/home\/sammar\/new-xapian-v2\/missing automake-1.15$/;"	m
AUTOMAKE	tests/Makefile	/^AUTOMAKE = ${SHELL} \/home\/sammar\/new-xapian-v2\/missing automake-1.15$/;"	m
AUTOMAKE_OPTIONS	Makefile	/^AUTOMAKE_OPTIONS = 1.5 subdir-objects$/;"	m
AUTOMAKE_OPTIONS	tests/Makefile	/^AUTOMAKE_OPTIONS = 1.12.2 serial-tests subdir-objects$/;"	m
AVERAGE_LENGTH	include/xapian/weight.h	/^	AVERAGE_LENGTH = 4,$/;"	e	enum:Xapian::Weight::__anon14
AWK	Makefile	/^AWK = mawk$/;"	m
AWK	docs/Makefile	/^AWK = mawk$/;"	m
AWK	tests/Makefile	/^AWK = mawk$/;"	m
Action_add	queryparser/lemon.c	/^void Action_add($/;"	f
Action_new	queryparser/lemon.c	/^static struct action *Action_new(void){$/;"	f	file:
Action_sort	queryparser/lemon.c	/^static struct action *Action_sort($/;"	f	file:
AllTermsList	backends/alltermslist.h	/^    AllTermsList() { }$/;"	f	class:AllTermsList
AllTermsList	backends/alltermslist.h	/^class AllTermsList : public TermList {$/;"	c
AndContext	api/queryinternal.cc	/^    AndContext(QueryOptimiser* qopt_, size_t reserve)$/;"	f	class:Xapian::Internal::AndContext
AndContext	api/queryinternal.cc	/^class AndContext : public Context {$/;"	c	namespace:Xapian::Internal	file:
AndMaybePostList	matcher/andmaybepostlist.h	/^	AndMaybePostList(PostList *left_,$/;"	f	class:AndMaybePostList
AndMaybePostList	matcher/andmaybepostlist.h	/^class AndMaybePostList : public BranchPostList {$/;"	c
AndNotPostList	matcher/andnotpostlist.cc	/^AndNotPostList::AndNotPostList(PostList *left_,$/;"	f	class:AndNotPostList
AndNotPostList	matcher/andnotpostlist.h	/^class AndNotPostList : public BranchPostList {$/;"	c
ApiTestRunner	tests/apitest.cc	/^class ApiTestRunner : public TestRunner$/;"	c	file:
Assert	common/omassert.h	122;"	d
Assert	common/omassert.h	59;"	d
AssertEq	common/omassert.h	124;"	d
AssertEq	common/omassert.h	91;"	d
AssertEqDouble	common/omassert.h	101;"	d
AssertEqDouble	common/omassert.h	125;"	d
AssertEqDoubleParanoid	common/omassert.h	132;"	d
AssertEqDoubleParanoid	common/omassert.h	52;"	d
AssertEqParanoid	common/omassert.h	131;"	d
AssertEqParanoid	common/omassert.h	51;"	d
AssertParanoid	common/omassert.h	129;"	d
AssertParanoid	common/omassert.h	49;"	d
AssertRel	common/omassert.h	123;"	d
AssertRel	common/omassert.h	72;"	d
AssertRelParanoid	common/omassert.h	130;"	d
AssertRelParanoid	common/omassert.h	50;"	d
AssertionError	include/xapian/error.h	/^    AssertionError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::AssertionError
AssertionError	include/xapian/error.h	/^    AssertionError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::AssertionError
AssertionError	include/xapian/error.h	/^    AssertionError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::AssertionError
AssertionError	include/xapian/error.h	/^    AssertionError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::AssertionError
AssertionError	include/xapian/error.h	/^    explicit AssertionError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::AssertionError
AssertionError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT AssertionError : public LogicError {$/;"	c	namespace:Xapian
AuthorRangeProcessor	tests/api_queryparser.cc	/^    AuthorRangeProcessor() : Xapian::RangeProcessor(4, "author:") { }$/;"	f	struct:AuthorRangeProcessor
AuthorRangeProcessor	tests/api_queryparser.cc	/^struct AuthorRangeProcessor : public Xapian::RangeProcessor {$/;"	s	file:
AuthorValueRangeProcessor	tests/api_queryparser.cc	/^    AuthorValueRangeProcessor() {}$/;"	f	struct:AuthorValueRangeProcessor
AuthorValueRangeProcessor	tests/api_queryparser.cc	/^struct AuthorValueRangeProcessor : public Xapian::ValueRangeProcessor {$/;"	s	file:
Auto	include/xapian/dbfactory.h	/^namespace Auto {$/;"	n	namespace:Xapian
AutoPtr	common/autoptr.h	27;"	d
B	backends/chert/chert_cursor.h	/^	const ChertTable * B;$/;"	m	class:ChertCursor
B	backends/glass/glass_cursor.h	/^	const GlassTable * B;$/;"	m	class:GlassCursor
B	languages/compiler/header.h	/^    symbol * B[10];      \/* blocks *\/$/;"	m	struct:generator
B	tests/unittest.cc	/^    B(int x_, bool & alive_) : x(x_), alive(alive_) {$/;"	f	class:B
B	tests/unittest.cc	/^class B : public Xapian::Internal::opt_intrusive_base {$/;"	c	file:
BACKEND	tests/harness/testrunner.h	/^	BACKEND		= 0x00000001,$/;"	e	enum:TestRunner::__anon35
BACKENDS_INMEMORY_TMP_H_	backends/inmemory/tmp.h	9;"	d
BACKEND_CHERT	backends/backends.h	/^    BACKEND_CHERT = 2,$/;"	e	enum:__anon3
BACKEND_GLASS	backends/backends.h	/^    BACKEND_GLASS = 3,$/;"	e	enum:__anon3
BACKEND_INMEMORY	backends/backends.h	/^    BACKEND_INMEMORY = 1,$/;"	e	enum:__anon3
BACKEND_MAX_	backends/backends.h	/^    BACKEND_MAX_$/;"	e	enum:__anon3
BACKEND_REMOTE	backends/backends.h	/^    BACKEND_REMOTE = 0,$/;"	e	enum:__anon3
BACKEND_UNKNOWN	backends/backends.h	/^    BACKEND_UNKNOWN = -1,$/;"	e	enum:__anon3
BAD_VALUENO	include/xapian/types.h	/^const valueno BAD_VALUENO = 0xffffffff;$/;"	m	namespace:Xapian
BASQUE	languages/sbl-dispatch.h	/^    BASQUE = 3,$/;"	e	enum:sbl_code
BB2Weight	include/xapian/weight.h	/^    BB2Weight() : param_c(1.0) {$/;"	f	class:Xapian::BB2Weight
BB2Weight	include/xapian/weight.h	/^class XAPIAN_VISIBILITY_DEFAULT BB2Weight : public Weight {$/;"	c	namespace:Xapian
BB2Weight	weight/bb2weight.cc	/^BB2Weight::BB2Weight(double c) : param_c(c)$/;"	f	class:Xapian::BB2Weight
BINARY_SIZE	backends/uuids.h	/^    static constexpr unsigned BINARY_SIZE = 16;$/;"	m	class:Uuid
BIT_MAP_INC	backends/chert/chert_btreebase.cc	386;"	d	file:
BItem	backends/glass/glass_table.h	/^    BItem(const uint8_t * p_, int c) : BItem_base<const uint8_t *>(p_, c) { }$/;"	f	class:Glass::BItem
BItem	backends/glass/glass_table.h	/^    explicit BItem(const uint8_t * p_) : BItem_base<const uint8_t *>(p_) { }$/;"	f	class:Glass::BItem
BItem	backends/glass/glass_table.h	/^class BItem : public BItem_base<const uint8_t *> {$/;"	c	namespace:Glass
BItem_base	backends/glass/glass_table.h	/^    BItem_base(T p_, int c) : p(p_ + getD(p_, c)) { }$/;"	f	class:Glass::BItem_base
BItem_base	backends/glass/glass_table.h	/^    explicit BItem_base(T p_) : p(p_) { }$/;"	f	class:Glass::BItem_base
BItem_base	backends/glass/glass_table.h	/^template<class T> class BItem_base {$/;"	c	namespace:Glass
BItem_wr	backends/glass/glass_table.h	/^    BItem_wr(uint8_t * p_, int c) : BItem_base<uint8_t *>(p_, c) { }$/;"	f	class:Glass::BItem_wr
BItem_wr	backends/glass/glass_table.h	/^    explicit BItem_wr(uint8_t * p_) : BItem_base<uint8_t *>(p_) { }$/;"	f	class:Glass::BItem_wr
BItem_wr	backends/glass/glass_table.h	/^class BItem_wr : public BItem_base<uint8_t *> {$/;"	c	namespace:Glass
BLK_UNUSED	backends/chert/chert_cursor.h	31;"	d
BLK_UNUSED	backends/glass/glass_cursor.h	36;"	d
BLOCK_CAPACITY	backends/chert/chert_table.h	/^const size_t BLOCK_CAPACITY = 4;$/;"	v
BLOCK_CAPACITY	backends/glass/glass_table.h	/^const size_t BLOCK_CAPACITY = 4;$/;"	m	namespace:Glass
BM25PlusWeight	include/xapian/weight.h	/^    BM25PlusWeight()$/;"	f	class:Xapian::BM25PlusWeight
BM25PlusWeight	include/xapian/weight.h	/^    BM25PlusWeight(double k1, double k2, double k3, double b,$/;"	f	class:Xapian::BM25PlusWeight
BM25PlusWeight	include/xapian/weight.h	/^class XAPIAN_VISIBILITY_DEFAULT BM25PlusWeight : public Weight {$/;"	c	namespace:Xapian
BM25Weight	include/xapian/weight.h	/^    BM25Weight()$/;"	f	class:Xapian::BM25Weight
BM25Weight	include/xapian/weight.h	/^    BM25Weight(double k1, double k2, double k3, double b, double min_normlen)$/;"	f	class:Xapian::BM25Weight
BM25Weight	include/xapian/weight.h	/^class XAPIAN_VISIBILITY_DEFAULT BM25Weight : public Weight {$/;"	c	namespace:Xapian
BOOLEAN	queryparser/queryparser_internal.h	/^typedef enum { NON_BOOLEAN, BOOLEAN, BOOLEAN_EXCLUSIVE } filter_type;$/;"	e	enum:__anon30
BOOLEAN_EXCLUSIVE	queryparser/queryparser_internal.h	/^typedef enum { NON_BOOLEAN, BOOLEAN, BOOLEAN_EXCLUSIVE } filter_type;$/;"	e	enum:__anon30
BOOLEAN_FILTER	queryparser/queryparser_token.h	17;"	d
BOOL_OP_TO_QUERY	queryparser/queryparser_internal.cc	1171;"	d	file:
BRA	queryparser/queryparser_token.h	20;"	d
BTREE_CURSOR_LEVELS	backends/chert/chert_table.h	/^const int BTREE_CURSOR_LEVELS = 10;$/;"	v
BTREE_CURSOR_LEVELS	backends/glass/glass_table.h	/^const int BTREE_CURSOR_LEVELS = 10;$/;"	m	namespace:Glass
BTREE_DEBUG_FULL	backends/chert/chert_table.cc	74;"	d	file:
BTREE_DEBUG_FULL	backends/glass/glass_table.cc	62;"	d	file:
BUILT_SOURCES	Makefile	/^BUILT_SOURCES = $(am__append_23)$/;"	m
BUILT_SOURCES	tests/Makefile	/^BUILT_SOURCES = $(am__append_1)$/;"	m
BYTES_PER_BLOCK_NUMBER	backends/chert/chert_table.h	/^const int BYTES_PER_BLOCK_NUMBER = 4;$/;"	v
BYTES_PER_BLOCK_NUMBER	backends/glass/glass_table.h	/^const int BYTES_PER_BLOCK_NUMBER = 4;$/;"	m	namespace:Glass
BYTE_PAIR_RANGE	backends/chert/chert_table.cc	166;"	d	file:
BYTE_PAIR_RANGE	backends/glass/glass_table.cc	155;"	d	file:
B_GE_removed	languages/kraaij_pohlmann.h	/^    unsigned char B_GE_removed;$/;"	m	class:Xapian::InternalStemKraaij_pohlmann
B_Y_found	languages/earlyenglish.h	/^    unsigned char B_Y_found;$/;"	m	class:Xapian::InternalStemEarlyenglish
B_Y_found	languages/english.h	/^    unsigned char B_Y_found;$/;"	m	class:Xapian::InternalStemEnglish
B_Y_found	languages/kraaij_pohlmann.h	/^    unsigned char B_Y_found;$/;"	m	class:Xapian::InternalStemKraaij_pohlmann
B_Y_found	languages/porter.h	/^    unsigned char B_Y_found;$/;"	m	class:Xapian::InternalStemPorter
B_constant	include/xapian/weight.h	/^    double B_constant;$/;"	m	class:Xapian::BB2Weight
B_constant	include/xapian/weight.h	/^    double B_constant;$/;"	m	class:Xapian::IfB2Weight
B_constant	include/xapian/weight.h	/^    double B_constant;$/;"	m	class:Xapian::IneB2Weight
B_continue_stemming_noun_suffixes	languages/turkish.h	/^    unsigned char B_continue_stemming_noun_suffixes;$/;"	m	class:Xapian::InternalStemTurkish
B_e_found	languages/dutch.h	/^    unsigned char B_e_found;$/;"	m	class:Xapian::InternalStemDutch
B_ending_removed	languages/finnish.h	/^    unsigned char B_ending_removed;$/;"	m	class:Xapian::InternalStemFinnish
B_found_a_match	languages/tamil.h	/^    unsigned char B_found_a_match;$/;"	m	class:Xapian::InternalStemTamil
B_found_vetrumai_urupu	languages/tamil.h	/^    unsigned char B_found_vetrumai_urupu;$/;"	m	class:Xapian::InternalStemTamil
B_is_defined	languages/arabic.h	/^    unsigned char B_is_defined;$/;"	m	class:Xapian::InternalStemArabic
B_is_noun	languages/arabic.h	/^    unsigned char B_is_noun;$/;"	m	class:Xapian::InternalStemArabic
B_is_verb	languages/arabic.h	/^    unsigned char B_is_verb;$/;"	m	class:Xapian::InternalStemArabic
B_standard_suffix_removed	languages/romanian.h	/^    unsigned char B_standard_suffix_removed;$/;"	m	class:Xapian::InternalStemRomanian
B_stemmed	languages/kraaij_pohlmann.h	/^    unsigned char B_stemmed;$/;"	m	class:Xapian::InternalStemKraaij_pohlmann
BackendManager	tests/harness/backendmanager.h	/^    BackendManager() { }$/;"	f	class:BackendManager
BackendManager	tests/harness/backendmanager.h	/^class BackendManager {$/;"	c
BackendManagerChert	tests/harness/backendmanager_chert.h	/^    BackendManagerChert() { }$/;"	f	class:BackendManagerChert
BackendManagerChert	tests/harness/backendmanager_chert.h	/^class BackendManagerChert : public BackendManager {$/;"	c
BackendManagerGlass	tests/harness/backendmanager_glass.h	/^    BackendManagerGlass() { }$/;"	f	class:BackendManagerGlass
BackendManagerGlass	tests/harness/backendmanager_glass.h	/^class BackendManagerGlass : public BackendManager {$/;"	c
BackendManagerInMemory	tests/harness/backendmanager_inmemory.h	/^    BackendManagerInMemory() { }$/;"	f	class:BackendManagerInMemory
BackendManagerInMemory	tests/harness/backendmanager_inmemory.h	/^class BackendManagerInMemory : public BackendManager {$/;"	c
BackendManagerLocal	tests/harness/backendmanager_local.h	/^    BackendManagerLocal() {$/;"	f	class:BackendManagerLocal
BackendManagerLocal	tests/harness/backendmanager_local.h	/^class BackendManagerLocal : public BackendManager {$/;"	c
BackendManagerLocal	tests/harness/backendmanager_local.h	28;"	d
BackendManagerLocal	tests/harness/backendmanager_local.h	31;"	d
BackendManagerMulti	tests/harness/backendmanager_multi.cc	/^BackendManagerMulti::BackendManagerMulti(const std::string & subtype_)$/;"	f	class:BackendManagerMulti
BackendManagerMulti	tests/harness/backendmanager_multi.h	/^class BackendManagerMulti : public BackendManager {$/;"	c
BackendManagerRemote	tests/harness/backendmanager_remote.cc	/^BackendManagerRemote::BackendManagerRemote(const std::string & remote_type_)$/;"	f	class:BackendManagerRemote
BackendManagerRemote	tests/harness/backendmanager_remote.h	/^class BackendManagerRemote : public BackendManager {$/;"	c
BackendManagerRemoteProg	tests/harness/backendmanager_remoteprog.h	/^    BackendManagerRemoteProg(const std::string & remote_type_)$/;"	f	class:BackendManagerRemoteProg
BackendManagerRemoteProg	tests/harness/backendmanager_remoteprog.h	/^class BackendManagerRemoteProg : public BackendManagerRemote {$/;"	c
BackendManagerRemoteTcp	tests/harness/backendmanager_remotetcp.h	/^    BackendManagerRemoteTcp(const std::string & remote_type_)$/;"	f	class:BackendManagerRemoteTcp
BackendManagerRemoteTcp	tests/harness/backendmanager_remotetcp.h	/^class BackendManagerRemoteTcp : public BackendManagerRemote {$/;"	c
BackendManagerSingleFile	tests/harness/backendmanager_singlefile.cc	/^BackendManagerSingleFile::BackendManagerSingleFile(const std::string & subtype_)$/;"	f	class:BackendManagerSingleFile
BackendManagerSingleFile	tests/harness/backendmanager_singlefile.h	/^class BackendManagerSingleFile : public BackendManager {$/;"	c
BitReader	common/bitstream.h	/^    BitReader() { }$/;"	f	class:Xapian::BitReader
BitReader	common/bitstream.h	/^    BitReader(const std::string &buf_, size_t skip)$/;"	f	class:Xapian::BitReader
BitReader	common/bitstream.h	/^    explicit BitReader(const std::string &buf_)$/;"	f	class:Xapian::BitReader
BitReader	common/bitstream.h	/^class BitReader {$/;"	c	namespace:Xapian
BitWriter	common/bitstream.h	/^    BitWriter() : n_bits(0), acc(0) { }$/;"	f	class:Xapian::BitWriter
BitWriter	common/bitstream.h	/^    explicit BitWriter(const std::string & seed)$/;"	f	class:Xapian::BitWriter
BitWriter	common/bitstream.h	/^class BitWriter {$/;"	c	namespace:Xapian
Bo1EWeight	expand/expandweight.h	/^    Bo1EWeight(const Xapian::Database &db_,$/;"	f	class:Xapian::Internal::Bo1EWeight
Bo1EWeight	expand/expandweight.h	/^class Bo1EWeight : public ExpandWeight {$/;"	c	namespace:Xapian::Internal
BoolWeight	include/xapian/weight.h	/^    BoolWeight() { }$/;"	f	class:Xapian::BoolWeight
BoolWeight	include/xapian/weight.h	/^class XAPIAN_VISIBILITY_DEFAULT BoolWeight : public Weight {$/;"	c	namespace:Xapian
Boolean	queryparser/lemon.c	/^typedef enum {LEMON_FALSE=0, LEMON_TRUE} Boolean;$/;"	t	typeref:enum:__anon31	file:
BranchPostList	matcher/branchpostlist.h	/^	BranchPostList(PostList *l_, PostList *r_, MultiMatch *matcher_)$/;"	f	class:BranchPostList
BranchPostList	matcher/branchpostlist.h	/^class BranchPostList : public PostList {$/;"	c
Btree_modified	backends/chert/chert_table.h	/^	mutable bool Btree_modified;$/;"	m	class:ChertTable
Btree_modified	backends/glass/glass_table.h	/^	mutable bool Btree_modified;$/;"	m	class:GlassTable
ByQueryIndexCmp	api/omenquire.cc	/^    explicit ByQueryIndexCmp(const tmap_t &tmap_) : tmap(tmap_) {}$/;"	f	class:Xapian::ByQueryIndexCmp
ByQueryIndexCmp	api/omenquire.cc	/^class ByQueryIndexCmp {$/;"	c	namespace:Xapian	file:
ByteLengthPrefixedStringItor	backends/byte_length_strings.h	/^    ByteLengthPrefixedStringItor(const unsigned char * p_, size_t left_)$/;"	f	class:ByteLengthPrefixedStringItor
ByteLengthPrefixedStringItor	backends/byte_length_strings.h	/^    explicit ByteLengthPrefixedStringItor(const std::string & s)$/;"	f	class:ByteLengthPrefixedStringItor
ByteLengthPrefixedStringItor	backends/byte_length_strings.h	/^class ByteLengthPrefixedStringItor {$/;"	c
ByteLengthPrefixedStringItorGt	backends/byte_length_strings.h	/^struct ByteLengthPrefixedStringItorGt {$/;"	s
C	backends/chert/chert_cursor.h	/^	Cursor * C;$/;"	m	class:ChertCursor
C	backends/chert/chert_table.h	/^	mutable Cursor C[BTREE_CURSOR_LEVELS];$/;"	m	class:ChertTable
C	backends/glass/glass_cursor.h	/^	Glass::Cursor * C;$/;"	m	class:GlassCursor
C	backends/glass/glass_table.h	/^	mutable Glass::Cursor C[Glass::BTREE_CURSOR_LEVELS];$/;"	m	class:GlassTable
C	net/remoteconnection.h	119;"	d
C	net/remoteconnection.h	148;"	d
C2	backends/chert/chert_table.h	/^const int C2 = 2;$/;"	v
CAPACITY	languages/compiler/header.h	17;"	d
CAPACITY	languages/steminternal.h	/^    CAPACITY(const symbol* p)$/;"	f	class:Xapian::SnowballStemImplementation
CATALAN	languages/sbl-dispatch.h	/^    CATALAN = 4,$/;"	e	enum:sbl_code
CC	Makefile	/^CC = gcc$/;"	m
CC	docs/Makefile	/^CC = gcc$/;"	m
CC	tests/Makefile	/^CC = gcc$/;"	m
CCDEPMODE	Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	docs/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	tests/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCLD	Makefile	/^CCLD = $(CC)$/;"	m
CCLD	tests/Makefile	/^CCLD = $(CC)$/;"	m
CC_FOR_BUILD	Makefile	/^CC_FOR_BUILD = gcc$/;"	m
CC_FOR_BUILD	docs/Makefile	/^CC_FOR_BUILD = gcc$/;"	m
CC_FOR_BUILD	tests/Makefile	/^CC_FOR_BUILD = gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	docs/Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	tests/Makefile	/^CFLAGS = -g -O2$/;"	m
CHANGES_MAGIC_STRING	backends/chert/chert_replicate_internal.h	26;"	d
CHANGES_MAGIC_STRING	backends/glass/glass_replicate_internal.h	27;"	d
CHANGES_VERSION	backends/chert/chert_replicate_internal.h	30;"	d
CHANGES_VERSION	backends/glass/glass_replicate_internal.h	34;"	d
CHERT	backends/dbcheck.cc	/^typedef enum { UNKNOWN, CHERT, GLASS } backend_type;$/;"	e	enum:__anon5	file:
CHERT	tests/harness/testrunner.h	/^	CHERT		= 0x00004000,$/;"	e	enum:TestRunner::__anon35
CHERT_BTREE_MAX_KEY_LEN	backends/chert/chert_table.h	101;"	d
CHERT_DEFAULT_BLOCK_SIZE	backends/chert/chert_types.h	57;"	d
CHERT_MAX_DOCID	backends/chert/chert_types.h	60;"	d
CHERT_MAX_ITEM_SIZE	backends/chert/chert_table.h	/^const size_t CHERT_MAX_ITEM_SIZE = 0x7fff;$/;"	v
CHERT_VERSION	backends/chert/chert_version.cc	40;"	d	file:
CHUNKSIZE	backends/chert/chert_postlist.cc	/^const unsigned int CHUNKSIZE = 2000;$/;"	v
CHUNKSIZE	backends/glass/glass_postlist.cc	/^const unsigned int CHUNKSIZE = 2000;$/;"	v
CHUNKSIZE	net/remoteconnection.cc	52;"	d	file:
CHUNK_SIZE_THRESHOLD	backends/chert/chert_values.cc	/^static const size_t CHUNK_SIZE_THRESHOLD = 2000;$/;"	v	file:
CHUNK_SIZE_THRESHOLD	backends/glass/glass_values.cc	/^static const size_t CHUNK_SIZE_THRESHOLD = 2000;$/;"	v	file:
CJK	queryparser/cjk-tokenizer.h	/^namespace CJK {$/;"	n
CJKTERM	queryparser/queryparser_token.h	22;"	d
CJKTokenIterator	queryparser/cjk-tokenizer.h	/^    CJKTokenIterator()$/;"	f	class:CJKTokenIterator
CJKTokenIterator	queryparser/cjk-tokenizer.h	/^    explicit CJKTokenIterator(const Xapian::Utf8Iterator & it_)$/;"	f	class:CJKTokenIterator
CJKTokenIterator	queryparser/cjk-tokenizer.h	/^    explicit CJKTokenIterator(const std::string & s)$/;"	f	class:CJKTokenIterator
CJKTokenIterator	queryparser/cjk-tokenizer.h	/^class CJKTokenIterator {$/;"	c
CLEANFILES	Makefile	/^CLEANFILES = installable\/xapian-config $(am__append_24)$/;"	m
CLEANFILES	tests/Makefile	/^CLEANFILES = .valgrind.log.* $(am__append_7)$/;"	m
CLONE	tests/api_serialise.cc	/^    typedef enum { NONE, CLONE } failmode;$/;"	e	enum:ExceptionalMatchSpy::__anon38	file:
CLONE	tests/api_serialise.cc	/^    typedef enum { NONE, CLONE } failmode;$/;"	e	enum:ExceptionalPostingSource::__anon36	file:
CLONE	tests/api_serialise.cc	/^    typedef enum { NONE, CLONE } failmode;$/;"	e	enum:ExceptionalWeight::__anon37	file:
CLOSESOCKET	net/remoteconnection.h	105;"	d
CLOSESOCKET	net/remoteconnection.h	109;"	d
CLOSESOCKET	net/tcpserver.cc	67;"	d	file:
CLOSE_PUNCTUATION	include/xapian/unicode.h	/^    CLOSE_PUNCTUATION,$/;"	e	enum:Xapian::Unicode::__anon13
COLLECTION_FREQ	include/xapian/weight.h	/^	COLLECTION_FREQ = 4096,$/;"	e	enum:Xapian::Weight::__anon14
COLLECTION_SIZE	include/xapian/weight.h	/^	COLLECTION_SIZE = 1,$/;"	e	enum:Xapian::Weight::__anon14
COMBINING_SPACING_MARK	include/xapian/unicode.h	/^    COMBINING_SPACING_MARK,$/;"	e	enum:Xapian::Unicode::__anon13
COMPACT	tests/harness/testrunner.h	/^	COMPACT		= 0x00010000,$/;"	e	enum:TestRunner::__anon35
COMPILE	Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	tests/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPLETE	queryparser/lemon.c	/^  COMPLETE,$/;"	e	enum:cfgstatus	file:
COMPRESSED	backends/chert/chert_cursor.h	/^	enum { UNREAD, UNCOMPRESSED, COMPRESSED } tag_status;$/;"	e	enum:ChertCursor::__anon8
COMPRESSED	backends/glass/glass_cursor.h	/^	enum { UNREAD, UNREAD_ON_LAST_CHUNK, UNCOMPRESSED, COMPRESSED } tag_status;$/;"	e	enum:GlassCursor::__anon6
COMPRESS_MIN	backends/chert/chert_table.cc	/^const size_t COMPRESS_MIN = 4;$/;"	v
COMPRESS_MIN	backends/glass/glass_version.cc	/^const size_t COMPRESS_MIN = 4;$/;"	v
CONFIG_CLEAN_FILES	Makefile	/^CONFIG_CLEAN_FILES = xapian-core.spec cmake\/xapian-config.cmake \\$/;"	m
CONFIG_CLEAN_FILES	docs/Makefile	/^CONFIG_CLEAN_FILES = doxygen_api.conf doxygen_source.conf$/;"	m
CONFIG_CLEAN_FILES	tests/Makefile	/^CONFIG_CLEAN_FILES = runtest runsrv submitperftest$/;"	m
CONFIG_CLEAN_VPATH_FILES	Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	docs/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	tests/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_HEADER	Makefile	/^CONFIG_HEADER = config.h$/;"	m
CONFIG_HEADER	docs/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	tests/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_STATUS_DEPENDENCIES	Makefile	/^CONFIG_STATUS_DEPENDENCIES = include\/xapian\/version_h.cc$/;"	m
CONNECTOR_PUNCTUATION	include/xapian/unicode.h	/^    CONNECTOR_PUNCTUATION,$/;"	e	enum:Xapian::Unicode::__anon13
CONST_STRLEN	common/stringutils.h	43;"	d
CONTROL	include/xapian/unicode.h	/^    CONTROL,$/;"	e	enum:Xapian::Unicode::__anon13
COUNT_CLOSEDEXC	tests/api_closedb.cc	33;"	d	file:
COVERAGE_CONFIGURE	Makefile	/^COVERAGE_CONFIGURE = \\$/;"	m
CPP	Makefile	/^CPP = gcc -E$/;"	m
CPP	docs/Makefile	/^CPP = gcc -E$/;"	m
CPP	tests/Makefile	/^CPP = gcc -E$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	docs/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	tests/Makefile	/^CPPFLAGS = $/;"	m
CPUTimer	tests/harness/cputimer.h	/^    CPUTimer() : start(get_current_cputime()) { }$/;"	f	class:CPUTimer
CPUTimer	tests/harness/cputimer.h	/^class CPUTimer {$/;"	c
CREATE_SIZE	languages/steminternal.cc	72;"	d	file:
CSCOPE	Makefile	/^CSCOPE = cscope$/;"	m
CTAGS	Makefile	/^CTAGS = ctags$/;"	m
CTAGS	tests/Makefile	/^CTAGS = ctags$/;"	m
CURRENCY_SYMBOL	include/xapian/unicode.h	/^    CURRENCY_SYMBOL,$/;"	e	enum:Xapian::Unicode::__anon13
CURR_FORMAT	backends/chert/chert_btreebase.cc	72;"	d	file:
CXX	Makefile	/^CXX = g++$/;"	m
CXX	docs/Makefile	/^CXX = g++$/;"	m
CXX	testing-xapian/makefile	/^CXX=g++$/;"	m
CXX	tests/Makefile	/^CXX = g++$/;"	m
CXXCOMPILE	Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	tests/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCPP	Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	docs/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	tests/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXDEPMODE	Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	docs/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	tests/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	docs/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	testing-xapian/makefile	/^CXXFLAGS=-lxapian$/;"	m
CXXFLAGS	tests/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXLD	Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	tests/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLINK	Makefile	/^CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
CXXLINK	tests/Makefile	/^CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
CYGPATH_W	Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	docs/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	tests/Makefile	/^CYGPATH_W = echo$/;"	m
C_BASE	backends/glass/glass_freelist.cc	/^const unsigned C_BASE = 8;$/;"	v
C_isalnum	common/stringutils.h	/^inline bool C_isalnum(char ch) {$/;"	f
C_isalpha	common/stringutils.h	/^inline bool C_isalpha(char ch) {$/;"	f
C_isdigit	common/stringutils.h	/^inline bool C_isdigit(char ch) {$/;"	f
C_islower	common/stringutils.h	/^inline bool C_islower(char ch) {$/;"	f
C_isnotalnum	common/stringutils.h	/^inline bool C_isnotalnum(char ch) { return !C_isalnum(ch); }$/;"	f
C_isnotalpha	common/stringutils.h	/^inline bool C_isnotalpha(char ch) { return !C_isalpha(ch); }$/;"	f
C_isnotdigit	common/stringutils.h	/^inline bool C_isnotdigit(char ch) { return !C_isdigit(ch); }$/;"	f
C_isnotlower	common/stringutils.h	/^inline bool C_isnotlower(char ch) { return !C_islower(ch); }$/;"	f
C_isnotspace	common/stringutils.h	/^inline bool C_isnotspace(char ch) { return !C_isspace(ch); }$/;"	f
C_isnotupper	common/stringutils.h	/^inline bool C_isnotupper(char ch) { return !C_isupper(ch); }$/;"	f
C_isnotxdigit	common/stringutils.h	/^inline bool C_isnotxdigit(char ch) { return !C_isxdigit(ch); }$/;"	f
C_isspace	common/stringutils.h	/^inline bool C_isspace(char ch) {$/;"	f
C_isupper	common/stringutils.h	/^inline bool C_isupper(char ch) {$/;"	f
C_isxdigit	common/stringutils.h	/^inline bool C_isxdigit(char ch) {$/;"	f
C_pack_uint_preserving_sort	common/pack.h	/^C_pack_uint_preserving_sort(std::string & s, U value)$/;"	f
C_style	languages/compiler/analyser.c	/^static struct node * C_style(struct analyser * a, const char * s, int token) {$/;"	f	file:
C_tab	include/xapian/constinfo.h	/^    unsigned char C_tab[256];$/;"	m	struct:Xapian::Internal::constinfo
C_tab_	common/stringutils.h	/^inline unsigned char C_tab_(char ch) {$/;"	f
C_tolower	common/stringutils.h	/^inline char C_tolower(char ch) {$/;"	f
C_toupper	common/stringutils.h	/^inline char C_toupper(char ch) {$/;"	f
C_unpack_uint_preserving_sort	common/pack.h	/^C_unpack_uint_preserving_sort(const char ** p, const char * end, U * result)$/;"	f
ChangeMaxweightPostingSource	tests/api_postingsource.cc	/^    ChangeMaxweightPostingSource(Xapian::docid maxid_accessed_)$/;"	f	class:ChangeMaxweightPostingSource
ChangeMaxweightPostingSource	tests/api_postingsource.cc	/^class ChangeMaxweightPostingSource : public Xapian::PostingSource {$/;"	c	file:
CheckBoundsPostingSource	tests/api_postingsource.cc	/^    CheckBoundsPostingSource(Xapian::doccount& doclen_lb_,$/;"	f	class:CheckBoundsPostingSource
CheckBoundsPostingSource	tests/api_postingsource.cc	/^class CheckBoundsPostingSource$/;"	c	file:
CheckInitWeight	tests/api_weight.cc	/^    CheckInitWeight(unsigned &z, unsigned &n)$/;"	f	class:CheckInitWeight
CheckInitWeight	tests/api_weight.cc	/^class CheckInitWeight : public Xapian::Weight {$/;"	c	file:
CheckMatchDecider	tests/api_backend.cc	/^    CheckMatchDecider() : called(false) { }$/;"	f	class:CheckMatchDecider
CheckMatchDecider	tests/api_backend.cc	/^class CheckMatchDecider : public Xapian::MatchDecider {$/;"	c	file:
CheckStatsWeight	tests/api_weight.cc	/^    CheckStatsWeight(const Xapian::Database & db_,$/;"	f	class:CheckStatsWeight
CheckStatsWeight	tests/api_weight.cc	/^class CheckStatsWeight : public Xapian::Weight {$/;"	c	file:
Chert	backends/chert/chert_postlist.h	/^namespace Chert {$/;"	n
Chert	include/xapian/dbfactory.h	/^namespace Chert {$/;"	n	namespace:Xapian
ChertAllDocsModifiedPostList	backends/chert/chert_alldocsmodifiedpostlist.cc	/^ChertAllDocsModifiedPostList::ChertAllDocsModifiedPostList(intrusive_ptr<const ChertDatabase> db_,$/;"	f	class:ChertAllDocsModifiedPostList
ChertAllDocsModifiedPostList	backends/chert/chert_alldocsmodifiedpostlist.h	/^class ChertAllDocsModifiedPostList : public ChertAllDocsPostList {$/;"	c
ChertAllDocsPostList	backends/chert/chert_alldocspostlist.cc	/^ChertAllDocsPostList::ChertAllDocsPostList(intrusive_ptr<const ChertDatabase> db_,$/;"	f	class:ChertAllDocsPostList
ChertAllDocsPostList	backends/chert/chert_alldocspostlist.h	/^class ChertAllDocsPostList : public ChertPostList {$/;"	c
ChertAllTermsList	backends/chert/chert_alltermslist.h	/^    ChertAllTermsList(Xapian::Internal::intrusive_ptr<const ChertDatabase> database_,$/;"	f	class:ChertAllTermsList
ChertAllTermsList	backends/chert/chert_alltermslist.h	/^class ChertAllTermsList : public AllTermsList {$/;"	c
ChertCompact	backends/chert/chert_compact.cc	/^namespace ChertCompact {$/;"	n	file:
ChertCursor	backends/chert/chert_cursor.cc	/^ChertCursor::ChertCursor(const ChertTable *B_)$/;"	f	class:ChertCursor
ChertCursor	backends/chert/chert_cursor.h	/^class ChertCursor {$/;"	c
ChertDatabase	backends/chert/chert_database.cc	/^ChertDatabase::ChertDatabase(const string &chert_dir, int flags,$/;"	f	class:ChertDatabase
ChertDatabase	backends/chert/chert_database.h	/^class ChertDatabase : public Xapian::Database::Internal {$/;"	c
ChertDatabaseReplicator	backends/chert/chert_databasereplicator.cc	/^ChertDatabaseReplicator::ChertDatabaseReplicator(const string & db_dir_)$/;"	f	class:ChertDatabaseReplicator
ChertDatabaseReplicator	backends/chert/chert_databasereplicator.h	/^class ChertDatabaseReplicator : public Xapian::DatabaseReplicator {$/;"	c
ChertDatabaseStats	backends/chert/chert_dbstats.h	/^    ChertDatabaseStats()$/;"	f	class:ChertDatabaseStats
ChertDatabaseStats	backends/chert/chert_dbstats.h	/^class ChertDatabaseStats {$/;"	c
ChertDocument	backends/chert/chert_document.h	/^    ChertDocument(Xapian::Internal::intrusive_ptr<const Xapian::Database::Internal> db,$/;"	f	class:ChertDocument
ChertDocument	backends/chert/chert_document.h	/^class ChertDocument : public Xapian::Document::Internal {$/;"	c
ChertLazyTable	backends/chert/chert_lazytable.h	/^    ChertLazyTable(const char * name_, const std::string & path, bool readonly,$/;"	f	class:ChertLazyTable
ChertLazyTable	backends/chert/chert_lazytable.h	/^class ChertLazyTable : public ChertTable {$/;"	c
ChertMetadataTermList	backends/chert/chert_metadata.cc	/^ChertMetadataTermList::ChertMetadataTermList($/;"	f	class:ChertMetadataTermList
ChertMetadataTermList	backends/chert/chert_metadata.h	/^class ChertMetadataTermList : public AllTermsList {$/;"	c
ChertModifiedPostList	backends/chert/chert_modifiedpostlist.h	/^    ChertModifiedPostList(Xapian::Internal::intrusive_ptr<const ChertDatabase> this_db_,$/;"	f	class:ChertModifiedPostList
ChertModifiedPostList	backends/chert/chert_modifiedpostlist.h	/^class ChertModifiedPostList : public ChertPostList {$/;"	c
ChertPositionList	backends/chert/chert_positionlist.h	/^    ChertPositionList() { }$/;"	f	class:ChertPositionList
ChertPositionList	backends/chert/chert_positionlist.h	/^    ChertPositionList(const ChertTable * table, Xapian::docid did,$/;"	f	class:ChertPositionList
ChertPositionList	backends/chert/chert_positionlist.h	/^class ChertPositionList : public PositionList {$/;"	c
ChertPositionListTable	backends/chert/chert_positionlist.h	/^    ChertPositionListTable(const string & dbdir, bool readonly)$/;"	f	class:ChertPositionListTable
ChertPositionListTable	backends/chert/chert_positionlist.h	/^class ChertPositionListTable : public ChertLazyTable {$/;"	c
ChertPostList	backends/chert/chert_postlist.cc	/^ChertPostList::ChertPostList(intrusive_ptr<const ChertDatabase> this_db_,$/;"	f	class:ChertPostList
ChertPostList	backends/chert/chert_postlist.h	/^class ChertPostList : public LeafPostList {$/;"	c
ChertPostListTable	backends/chert/chert_postlist.h	/^	ChertPostListTable(const string & path_, bool readonly_)$/;"	f	class:ChertPostListTable
ChertPostListTable	backends/chert/chert_postlist.h	/^class ChertPostListTable : public ChertTable {$/;"	c
ChertRecordTable	backends/chert/chert_record.h	/^	ChertRecordTable(const string & path_, bool readonly_)$/;"	f	class:ChertRecordTable
ChertRecordTable	backends/chert/chert_record.h	/^class ChertRecordTable : public ChertTable {$/;"	c
ChertSpellingTable	backends/chert/chert_spelling.h	/^    ChertSpellingTable(const std::string & dbdir, bool readonly)$/;"	f	class:ChertSpellingTable
ChertSpellingTable	backends/chert/chert_spelling.h	/^class ChertSpellingTable : public ChertLazyTable {$/;"	c
ChertSpellingTermList	backends/chert/chert_spelling.h	/^    explicit ChertSpellingTermList(const std::string & data_)$/;"	f	class:ChertSpellingTermList
ChertSpellingTermList	backends/chert/chert_spelling.h	/^class ChertSpellingTermList : public TermList {$/;"	c
ChertSpellingWordsList	backends/chert/chert_spellingwordslist.h	/^    ChertSpellingWordsList(Xapian::Internal::intrusive_ptr<const Xapian::Database::Internal> database_,$/;"	f	class:ChertSpellingWordsList
ChertSpellingWordsList	backends/chert/chert_spellingwordslist.h	/^class ChertSpellingWordsList : public AllTermsList {$/;"	c
ChertSynonymTable	backends/chert/chert_synonym.h	/^    ChertSynonymTable(const std::string & dbdir, bool readonly)$/;"	f	class:ChertSynonymTable
ChertSynonymTable	backends/chert/chert_synonym.h	/^class ChertSynonymTable : public ChertLazyTable {$/;"	c
ChertSynonymTermList	backends/chert/chert_synonym.h	/^    ChertSynonymTermList(Xapian::Internal::intrusive_ptr<const Xapian::Database::Internal> database_,$/;"	f	class:ChertSynonymTermList
ChertSynonymTermList	backends/chert/chert_synonym.h	/^class ChertSynonymTermList : public AllTermsList {$/;"	c
ChertTable	backends/chert/chert_table.cc	/^ChertTable::ChertTable(const char * tablename_, const string & path_,$/;"	f	class:ChertTable
ChertTable	backends/chert/chert_table.h	/^class ChertTable {$/;"	c
ChertTableCheck	backends/chert/chert_check.h	/^	ChertTableCheck(const char * tablename_, const std::string &path_,$/;"	f	class:ChertTableCheck
ChertTableCheck	backends/chert/chert_check.h	/^class ChertTableCheck : public ChertTable {$/;"	c
ChertTable_base	backends/chert/chert_btreebase.cc	/^ChertTable_base::ChertTable_base()$/;"	f	class:ChertTable_base
ChertTable_base	backends/chert/chert_btreebase.h	/^class ChertTable_base {$/;"	c
ChertTermList	backends/chert/chert_termlist.cc	/^ChertTermList::ChertTermList(intrusive_ptr<const ChertDatabase> db_,$/;"	f	class:ChertTermList
ChertTermList	backends/chert/chert_termlist.h	/^class ChertTermList : public TermList {$/;"	c
ChertTermListTable	backends/chert/chert_termlisttable.h	/^    ChertTermListTable(const std::string & dbdir, bool readonly)$/;"	f	class:ChertTermListTable
ChertTermListTable	backends/chert/chert_termlisttable.h	/^class ChertTermListTable : public ChertLazyTable {$/;"	c
ChertValueList	backends/chert/chert_valuelist.h	/^    ChertValueList(Xapian::valueno slot_,$/;"	f	class:ChertValueList
ChertValueList	backends/chert/chert_valuelist.h	/^class ChertValueList : public Xapian::ValueIterator::Internal {$/;"	c
ChertValueManager	backends/chert/chert_values.h	/^    ChertValueManager(ChertPostListTable * postlist_table_,$/;"	f	class:ChertValueManager
ChertValueManager	backends/chert/chert_values.h	/^class ChertValueManager {$/;"	c
ChertVersion	backends/chert/chert_version.h	/^    explicit ChertVersion(const std::string & dbdir) : filename(dbdir) {$/;"	f	class:ChertVersion
ChertVersion	backends/chert/chert_version.h	/^class ChertVersion {$/;"	c
ChertWritableDatabase	backends/chert/chert_database.cc	/^ChertWritableDatabase::ChertWritableDatabase(const string &dir, int action,$/;"	f	class:ChertWritableDatabase
ChertWritableDatabase	backends/chert/chert_database.h	/^class ChertWritableDatabase : public ChertDatabase {$/;"	c
CloneTestPostingSource	tests/api_postingsource.cc	/^    CloneTestPostingSource(int& clone_count_)$/;"	f	class:CloneTestPostingSource
CloneTestPostingSource	tests/api_postingsource.cc	/^class CloneTestPostingSource : public Xapian::PostingSource {$/;"	c	file:
Cmp	matcher/nearpostlist.cc	/^struct Cmp {$/;"	s	file:
CmpByFirstUsed	api/compactor.cc	/^    CmpByFirstUsed(const vector<pair<Xapian::docid, Xapian::docid>>& ur)$/;"	f	class:CmpByFirstUsed
CmpByFirstUsed	api/compactor.cc	/^class CmpByFirstUsed {$/;"	c	file:
CmpMaxOrTerms	api/queryinternal.cc	/^struct CmpMaxOrTerms {$/;"	s	namespace:Xapian::Internal	file:
CollapseData	matcher/collapser.h	/^    explicit CollapseData(const Xapian::Internal::MSetItem & item)$/;"	f	class:CollapseData
CollapseData	matcher/collapser.h	/^class CollapseData {$/;"	c
Collapser	matcher/collapser.h	/^    Collapser(Xapian::valueno slot_, Xapian::doccount collapse_max_)$/;"	f	class:Collapser
Collapser	matcher/collapser.h	/^class Collapser {$/;"	c
Compactor	api/compactor.cc	/^Compactor::Compactor() : internal(new Compactor::Internal()) { }$/;"	f	class:Xapian::Compactor
Compactor	include/xapian/compactor.h	/^class XAPIAN_VISIBILITY_DEFAULT Compactor {$/;"	c	namespace:Xapian
ComparePostListTermFreqAscending	api/queryinternal.cc	/^struct ComparePostListTermFreqAscending {$/;"	s	namespace:Xapian::Internal	file:
ComparePostListTermFreqAscending	matcher/multiandpostlist.h	/^    struct ComparePostListTermFreqAscending {$/;"	s	class:MultiAndPostList
CompareSubValueListsByDocId	backends/multi/multi_valuelist.cc	/^struct CompareSubValueListsByDocId {$/;"	s	file:
CompareTermListSizeAscending	expand/esetinternal.cc	/^struct CompareTermListSizeAscending {$/;"	s	namespace:Xapian	file:
CompareTermListsByTerm	backends/multi/multi_alltermslist.cc	/^struct CompareTermListsByTerm {$/;"	s	file:
CompressTables	queryparser/lemon.c	/^void CompressTables(struct lemon *lemp)$/;"	f
CompressionStream	common/compression_stream.h	/^    explicit CompressionStream(int compress_strategy_ = Z_DEFAULT_STRATEGY)$/;"	f	class:CompressionStream
CompressionStream	common/compression_stream.h	/^class CompressionStream {$/;"	c
ConfigPrint	queryparser/lemon.c	/^void ConfigPrint(FILE *fp, struct config *cfp){$/;"	f
Configcmp	queryparser/lemon.c	/^int Configcmp(const char *_a,const char *_b)$/;"	f
Configlist_add	queryparser/lemon.c	/^struct config *Configlist_add($/;"	f
Configlist_addbasis	queryparser/lemon.c	/^struct config *Configlist_addbasis(struct rule *rp, int dot)$/;"	f
Configlist_basis	queryparser/lemon.c	/^struct config *Configlist_basis(void){$/;"	f
Configlist_closure	queryparser/lemon.c	/^void Configlist_closure(struct lemon *lemp)$/;"	f
Configlist_eat	queryparser/lemon.c	/^void Configlist_eat(struct config *cfp)$/;"	f
Configlist_init	queryparser/lemon.c	/^void Configlist_init(void){$/;"	f
Configlist_reset	queryparser/lemon.c	/^void Configlist_reset(void){$/;"	f
Configlist_return	queryparser/lemon.c	/^struct config *Configlist_return(void){$/;"	f
Configlist_sort	queryparser/lemon.c	/^void Configlist_sort(void){$/;"	f
Configlist_sortbasis	queryparser/lemon.c	/^void Configlist_sortbasis(void){$/;"	f
Configtable_clear	queryparser/lemon.c	/^void Configtable_clear(int(*f)(struct config *))$/;"	f
Configtable_find	queryparser/lemon.c	/^struct config *Configtable_find(struct config *key)$/;"	f
Configtable_init	queryparser/lemon.c	/^void Configtable_init(void){$/;"	f
Configtable_insert	queryparser/lemon.c	/^int Configtable_insert(struct config *data)$/;"	f
ConnectionClosed	net/remoteserver.cc	/^struct ConnectionClosed { };$/;"	s	file:
Context	api/queryinternal.cc	/^Context::Context(QueryOptimiser* qopt_, size_t reserve)$/;"	f	class:Xapian::Internal::Context
Context	api/queryinternal.cc	/^class Context {$/;"	c	namespace:Xapian::Internal	file:
ContiguousAllDocsPostList	backends/contiguousalldocspostlist.h	/^    ContiguousAllDocsPostList(Xapian::Internal::intrusive_ptr<const Xapian::Database::Internal> db_,$/;"	f	class:ContiguousAllDocsPostList
ContiguousAllDocsPostList	backends/contiguousalldocspostlist.h	/^class ContiguousAllDocsPostList : public LeafPostList {$/;"	c
CoordWeight	include/xapian/weight.h	/^    CoordWeight() { }$/;"	f	class:Xapian::CoordWeight
CoordWeight	include/xapian/weight.h	/^class XAPIAN_VISIBILITY_DEFAULT CoordWeight : public Weight {$/;"	c	namespace:Xapian
CreateProcess	libtool	/^   CreateProcess().  We must quote the arguments since Win32 CreateProcess()$/;"	f
CreateProcess	ltmain.sh	/^   CreateProcess().  We must quote the arguments since Win32 CreateProcess()$/;"	f
CtrlHandler	net/tcpserver.cc	/^CtrlHandler(DWORD fdwCtrlType)$/;"	f	file:
Cursor	backends/chert/chert_cursor.h	/^	Cursor() : p(0), c(-1), n(BLK_UNUSED), rewrite(false)$/;"	f	class:Cursor
Cursor	backends/chert/chert_cursor.h	/^class Cursor {$/;"	c
Cursor	backends/glass/glass_cursor.h	/^	Cursor() : data(0), c(-1), rewrite(false) { }$/;"	f	class:Glass::Cursor
Cursor	backends/glass/glass_cursor.h	/^class Cursor {$/;"	c	namespace:Glass
CursorGt	backends/chert/chert_compact.cc	/^struct CursorGt {$/;"	s	namespace:ChertCompact	file:
CursorGt	backends/glass/glass_compact.cc	/^struct CursorGt {$/;"	s	namespace:GlassCompact	file:
D2	backends/chert/chert_table.h	/^const int D2 = 2;$/;"	v
D2	backends/glass/glass_table.h	/^const int D2 = 2;$/;"	m	namespace:Glass
DANISH	languages/sbl-dispatch.h	/^    DANISH = 5,$/;"	e	enum:sbl_code
DASH_PUNCTUATION	include/xapian/unicode.h	/^    DASH_PUNCTUATION,$/;"	e	enum:Xapian::Unicode::__anon13
DATA	Makefile	/^DATA = $(cmake_DATA) $(dist_m4data_DATA) $(dist_stopword_DATA) \\$/;"	m
DATA	docs/Makefile	/^DATA = $(doc_DATA)$/;"	m
DATE_TO_VERSION	backends/glass/glass_version.cc	58;"	d	file:
DBCHECK_FIX	include/xapian/constants.h	/^const int DBCHECK_FIX = 16;$/;"	m	namespace:Xapian
DBCHECK_FULL_TREE	include/xapian/constants.h	/^const int DBCHECK_FULL_TREE = 2;$/;"	m	namespace:Xapian
DBCHECK_SHORT_TREE	include/xapian/constants.h	/^const int DBCHECK_SHORT_TREE = 1;$/;"	m	namespace:Xapian
DBCHECK_SHOW_FREELIST	include/xapian/constants.h	/^const int DBCHECK_SHOW_FREELIST = 4;$/;"	m	namespace:Xapian
DBCHECK_SHOW_STATS	include/xapian/constants.h	/^const int DBCHECK_SHOW_STATS = 8;$/;"	m	namespace:Xapian
DBCOMPACT_MULTIPASS	include/xapian/constants.h	/^const int DBCOMPACT_MULTIPASS = 8;$/;"	m	namespace:Xapian
DBCOMPACT_NO_RENUMBER	include/xapian/constants.h	/^const int DBCOMPACT_NO_RENUMBER = 4;$/;"	m	namespace:Xapian
DBCOMPACT_SINGLE_FILE	include/xapian/constants.h	/^const int DBCOMPACT_SINGLE_FILE = 16;$/;"	m	namespace:Xapian
DB_ACTION_MASK_	include/xapian/constants.h	/^const int DB_ACTION_MASK_	 = 0x03;$/;"	m	namespace:Xapian
DB_BACKEND_CHERT	include/xapian/constants.h	/^const int DB_BACKEND_CHERT	 = 0x200;$/;"	m	namespace:Xapian
DB_BACKEND_GLASS	include/xapian/constants.h	/^const int DB_BACKEND_GLASS	 = 0x100;$/;"	m	namespace:Xapian
DB_BACKEND_INMEMORY	include/xapian/constants.h	/^const int DB_BACKEND_INMEMORY	 = 0x400;$/;"	m	namespace:Xapian
DB_BACKEND_MASK_	include/xapian/constants.h	/^const int DB_BACKEND_MASK_	 = 0x700;$/;"	m	namespace:Xapian
DB_BACKEND_STUB	include/xapian/constants.h	/^const int DB_BACKEND_STUB	 = 0x300;$/;"	m	namespace:Xapian
DB_CREATE	include/xapian/constants.h	/^const int DB_CREATE		 = 0x02;$/;"	m	namespace:Xapian
DB_CREATE_OR_OPEN	include/xapian/constants.h	/^const int DB_CREATE_OR_OPEN	 = 0x00;$/;"	m	namespace:Xapian
DB_CREATE_OR_OVERWRITE	include/xapian/constants.h	/^const int DB_CREATE_OR_OVERWRITE = 0x01;$/;"	m	namespace:Xapian
DB_DANGEROUS	include/xapian/constants.h	/^const int DB_DANGEROUS		 = 0x10;$/;"	m	namespace:Xapian
DB_FULL_SYNC	include/xapian/constants.h	/^const int DB_FULL_SYNC		 = 0x08;$/;"	m	namespace:Xapian
DB_NO_SYNC	include/xapian/constants.h	/^const int DB_NO_SYNC		 = 0x04;$/;"	m	namespace:Xapian
DB_NO_TERMLIST	include/xapian/constants.h	/^const int DB_NO_TERMLIST	 = 0x20;$/;"	m	namespace:Xapian
DB_OPEN	include/xapian/constants.h	/^const int DB_OPEN		 = 0x03;$/;"	m	namespace:Xapian
DB_READONLY_	include/xapian/constants.h	/^const int DB_READONLY_		 = -1;$/;"	m	namespace:Xapian
DB_RETRY_LOCK	include/xapian/constants.h	/^const int DB_RETRY_LOCK		 = 0x40;$/;"	m	namespace:Xapian
DEBUGLOG_CATEGORY_ALWAYS	common/debuglog.h	/^    DEBUGLOG_CATEGORY_ALWAYS = 31$/;"	e	enum:debuglog_categories
DEBUGLOG_CATEGORY_API	common/debuglog.h	/^    DEBUGLOG_CATEGORY_API = ('A' - '@'),$/;"	e	enum:debuglog_categories
DEBUGLOG_CATEGORY_DB	common/debuglog.h	/^    DEBUGLOG_CATEGORY_DB = ('D' - '@'),$/;"	e	enum:debuglog_categories
DEBUGLOG_CATEGORY_EXCEPTION	common/debuglog.h	/^    DEBUGLOG_CATEGORY_EXCEPTION = ('X' - '@'),$/;"	e	enum:debuglog_categories
DEBUGLOG_CATEGORY_EXPAND	common/debuglog.h	/^    DEBUGLOG_CATEGORY_EXPAND = ('E' - '@'),$/;"	e	enum:debuglog_categories
DEBUGLOG_CATEGORY_MATCH	common/debuglog.h	/^    DEBUGLOG_CATEGORY_MATCH = ('M' - '@'),$/;"	e	enum:debuglog_categories
DEBUGLOG_CATEGORY_NEVER	common/debuglog.h	/^    DEBUGLOG_CATEGORY_NEVER = 0,$/;"	e	enum:debuglog_categories
DEBUGLOG_CATEGORY_QUERY	common/debuglog.h	/^    DEBUGLOG_CATEGORY_QUERY = ('Y' - '@'),$/;"	e	enum:debuglog_categories
DEBUGLOG_CATEGORY_QUERYPARSER	common/debuglog.h	/^    DEBUGLOG_CATEGORY_QUERYPARSER = ('Q' - '@'),$/;"	e	enum:debuglog_categories
DEBUGLOG_CATEGORY_REMOTE	common/debuglog.h	/^    DEBUGLOG_CATEGORY_REMOTE = ('R' - '@'),$/;"	e	enum:debuglog_categories
DEBUGLOG_CATEGORY_REPLICA	common/debuglog.h	/^    DEBUGLOG_CATEGORY_REPLICA = ('C' - '@'),$/;"	e	enum:debuglog_categories
DEBUGLOG_CATEGORY_SPELLING	common/debuglog.h	/^    DEBUGLOG_CATEGORY_SPELLING = ('S' - '@'),$/;"	e	enum:debuglog_categories
DEBUGLOG_CATEGORY_UNKNOWN	common/debuglog.h	/^    DEBUGLOG_CATEGORY_UNKNOWN = ('U' - '@'),$/;"	e	enum:debuglog_categories
DEBUGLOG_CATEGORY_WTCALC	common/debuglog.h	/^    DEBUGLOG_CATEGORY_WTCALC = ('W' - '@'),$/;"	e	enum:debuglog_categories
DECAY	queryparser/termgenerator_internal.cc	361;"	d	file:
DECIMAL_DIGIT_NUMBER	include/xapian/unicode.h	/^    DECIMAL_DIGIT_NUMBER,$/;"	e	enum:Xapian::Unicode::__anon13
DEFAULT_CS_AMONG_CLASS	languages/compiler/driver.c	17;"	d	file:
DEFAULT_CS_BASE_CLASS	languages/compiler/driver.c	16;"	d	file:
DEFAULT_CS_NAMESPACE	languages/compiler/driver.c	15;"	d	file:
DEFAULT_CS_STRING_CLASS	languages/compiler/driver.c	18;"	d	file:
DEFAULT_ELITE_SET_SIZE	api/queryinternal.h	/^const Xapian::termcount DEFAULT_ELITE_SET_SIZE = 10;$/;"	v
DEFAULT_GO_PACKAGE	languages/compiler/driver.c	12;"	d	file:
DEFAULT_GO_SNOWBALL_RUNTIME	languages/compiler/driver.c	13;"	d	file:
DEFAULT_INCLUDES	Makefile	/^DEFAULT_INCLUDES = -I.$/;"	m
DEFAULT_INCLUDES	tests/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INTERVAL	bin/xapian-replicate.cc	43;"	d	file:
DEFAULT_JAVA_AMONG_CLASS	languages/compiler/driver.c	9;"	d	file:
DEFAULT_JAVA_BASE_CLASS	languages/compiler/driver.c	8;"	d	file:
DEFAULT_JAVA_PACKAGE	languages/compiler/driver.c	7;"	d	file:
DEFAULT_JAVA_STRING_CLASS	languages/compiler/driver.c	10;"	d	file:
DEFAULT_JS_BASE_CLASS	languages/compiler/driver.c	20;"	d	file:
DEFAULT_PORT	tests/harness/backendmanager_remotetcp.cc	69;"	d	file:
DEFAULT_PYTHON_BASE_CLASS	languages/compiler/driver.c	22;"	d	file:
DEFAULT_TIMEOUT	bin/xapian-replicate.cc	49;"	d	file:
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(absentterm1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(absentterm2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(alldocspl1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(alldocspl2, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(allowqterms1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(allpostlist1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(bm25weight1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(boolquery1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(checkatleast1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(checkatleast2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(checkatleast3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(cutoff1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(eliteset1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(eliteset2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(eliteset3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(eliteset4, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(eliteset5, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(emptyop1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(emptyquery1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(emptyterm1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(expanddeciderfilterprefix2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(expandfunctor1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(expandmaxitems1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(expandweights1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(expandweights2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(expandweights3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(expandweights4, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(expandweights5, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(expandweights6, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(expandweights7, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(expandweights8, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(fetchdocs1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(getdoc1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(getmterms1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(getmterms2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(matches1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(maxattain1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(msetfirst1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(msetmaxitems1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(msetzeroitems1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(multidb3, backend && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(multidb4, backend && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(multidb5, backend && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(pctcutoff1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(pctcutoff2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(pctcutoff3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(puncterms1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(qlen1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(qterminfo1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(qterminfo2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(repeatquery1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(reversebool1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(reversebool2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(rset1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(rset2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(rsetmultidb1, backend && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(rsetmultidb3, backend && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(scaleweight1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(scaleweight2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(simplequery1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(simplequery2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(simplequery3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(spaceterms1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(termlist1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(termlist2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(termlist3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(termlist4, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(termlisttermfreq1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(topercent1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(topercent2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(tradweight1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(tradweight4, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(uuid1, backend && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(wqf1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(xor1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(xor2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(zerodocid1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(alldocspl3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(blocksize1, chert || glass) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(bm25weight2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(checkatleast4, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(cursorbug1, chert || glass) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(databasemodified1, writable && !inmemory && !remote && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(dbfilefd012, chert || glass) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(dbstats1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(dbstats2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(doclenaftercommit1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(embedded1, singlefile) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(emptydb1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(enquiregetquery1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(estimaterounding1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(exactxor1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(exceed32bitcombineddb1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(failedreplace1, chert || glass) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(failedreplace2, chert || glass) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(getdocumentlazy1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(getdocumentlazy2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(getrevision1, chert || glass) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(getuniqueterms1, generated) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(itorskiptofromend1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(lockfilealreadyopen1, chert || glass) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(lockfilefd0or1, chert || glass) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(lockfileumask1, chert || glass) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(matchdecider4, remote) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(modifiedpostlist1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(msetfirst2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(msetweights1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(msize1, generated) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(msize2, generated) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(newfreelistblock1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(nodocs1, transactions && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(nopositionbug1, generated) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(notermlist1, glass) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(orcheck1, generated) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(ordecay1, generated) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(ordecay2, generated) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(phrase3, positional) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(phrasebug1, generated && positional) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(qpmemoryleak1, writable && !inmemory) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(readonlyparentdir1, chert || glass) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(replacedoc7, writable && !inmemory && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(replacedoc8, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(retrylock1, writable && !inmemory && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(sortvalue2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(splitpostings1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(stubdb7, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(testlock1, chert || glass) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(testlock2, backend && !writable && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(totaldoclen1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(tradweight2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(unigramlmweight2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(valuesaftercommit1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(xordecay1, generated) {$/;"	f
DEFINE_TESTCASE	tests/api_closedb.cc	/^DEFINE_TESTCASE(closedb1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_closedb.cc	/^DEFINE_TESTCASE(closedb10, writable && metadata) {$/;"	f
DEFINE_TESTCASE	tests/api_closedb.cc	/^DEFINE_TESTCASE(closedb2, writable && !inmemory && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_closedb.cc	/^DEFINE_TESTCASE(closedb3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_closedb.cc	/^DEFINE_TESTCASE(closedb4, writable && !inmemory) {$/;"	f
DEFINE_TESTCASE	tests/api_closedb.cc	/^DEFINE_TESTCASE(closedb5, transactions) {$/;"	f
DEFINE_TESTCASE	tests/api_closedb.cc	/^DEFINE_TESTCASE(closedb6, remote) {$/;"	f
DEFINE_TESTCASE	tests/api_closedb.cc	/^DEFINE_TESTCASE(closedb7, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_closedb.cc	/^DEFINE_TESTCASE(closedb8, writable && spelling) {$/;"	f
DEFINE_TESTCASE	tests/api_closedb.cc	/^DEFINE_TESTCASE(closedb9, writable && synonyms) {$/;"	f
DEFINE_TESTCASE	tests/api_collapse.cc	/^DEFINE_TESTCASE(collapsekey5, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_compact.cc	/^DEFINE_TESTCASE(compact1, compact) {$/;"	f
DEFINE_TESTCASE	tests/api_compact.cc	/^DEFINE_TESTCASE(compactempty1, compact) {$/;"	f
DEFINE_TESTCASE	tests/api_compact.cc	/^DEFINE_TESTCASE(compactmerge1, compact) {$/;"	f
DEFINE_TESTCASE	tests/api_compact.cc	/^DEFINE_TESTCASE(compactmergesynonym1, compact && generated) {$/;"	f
DEFINE_TESTCASE	tests/api_compact.cc	/^DEFINE_TESTCASE(compactmissingtables1, compact && generated) {$/;"	f
DEFINE_TESTCASE	tests/api_compact.cc	/^DEFINE_TESTCASE(compactmultichunks1, compact && generated) {$/;"	f
DEFINE_TESTCASE	tests/api_compact.cc	/^DEFINE_TESTCASE(compactmultipass1, compact && generated) {$/;"	f
DEFINE_TESTCASE	tests/api_compact.cc	/^DEFINE_TESTCASE(compactnorenumber1, compact && generated) {$/;"	f
DEFINE_TESTCASE	tests/api_compact.cc	/^DEFINE_TESTCASE(compactsingle1, compact && !chert) {$/;"	f
DEFINE_TESTCASE	tests/api_compact.cc	/^DEFINE_TESTCASE(compactstub1, compact) {$/;"	f
DEFINE_TESTCASE	tests/api_compact.cc	/^DEFINE_TESTCASE(compactstub2, compact) {$/;"	f
DEFINE_TESTCASE	tests/api_compact.cc	/^DEFINE_TESTCASE(compactstub3, compact) {$/;"	f
DEFINE_TESTCASE	tests/api_compact.cc	/^DEFINE_TESTCASE(compactstub4, compact) {$/;"	f
DEFINE_TESTCASE	tests/api_compact.cc	/^DEFINE_TESTCASE(compacttofd1, compact && !chert) {$/;"	f
DEFINE_TESTCASE	tests/api_compact.cc	/^DEFINE_TESTCASE(compacttofd2, compact && !chert) {$/;"	f
DEFINE_TESTCASE	tests/api_compactold.cc	/^DEFINE_TESTCASE(compactoldempty1, compact) {$/;"	f
DEFINE_TESTCASE	tests/api_compactold.cc	/^DEFINE_TESTCASE(compactoldmerge1, compact) {$/;"	f
DEFINE_TESTCASE	tests/api_compactold.cc	/^DEFINE_TESTCASE(compactoldmergesynonym1, compact && generated) {$/;"	f
DEFINE_TESTCASE	tests/api_compactold.cc	/^DEFINE_TESTCASE(compactoldmissingtables1, compact && generated) {$/;"	f
DEFINE_TESTCASE	tests/api_compactold.cc	/^DEFINE_TESTCASE(compactoldmultichunks1, compact && generated) {$/;"	f
DEFINE_TESTCASE	tests/api_compactold.cc	/^DEFINE_TESTCASE(compactoldmultipass1, compact) {$/;"	f
DEFINE_TESTCASE	tests/api_compactold.cc	/^DEFINE_TESTCASE(compactoldnorenumber1, compact && generated) {$/;"	f
DEFINE_TESTCASE	tests/api_compactold.cc	/^DEFINE_TESTCASE(compactoldstub1, compact) {$/;"	f
DEFINE_TESTCASE	tests/api_compactold.cc	/^DEFINE_TESTCASE(compactoldstub2, compact) {$/;"	f
DEFINE_TESTCASE	tests/api_compactold.cc	/^DEFINE_TESTCASE(compactoldstub3, compact) {$/;"	f
DEFINE_TESTCASE	tests/api_compactold.cc	/^DEFINE_TESTCASE(compactoldstub4, compact) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(allterms1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(allterms2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(allterms3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(allterms4, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(allterms5, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(allterms6, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(chertdatabaseopen1, chert) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(chertdatabaseopeningerror1, chert) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(collapsekey1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(collapsekey2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(collapsekey3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(collapsekey4, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(collfreq1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(consistency1, backend && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(esetiterator1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(esetiterator2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(keepalive1, remote) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(matchall1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(matchdecider1, backend && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(matchdecider2, backend && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(matchdecider3, backend && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(msetiterator1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(msetiterator2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(msetiterator3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(multiexpand1, backend && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(netstats1, remote) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(postlist1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(postlist2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(postlist3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(postlist4, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(postlist5, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(postlist6, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(rsetmultidb2, backend && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(sortrel1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(sortvalue1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(specialterms1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(specialterms2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(stubdb1, backend && !inmemory && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(stubdb2, backend && !inmemory && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(stubdb3, backend && !inmemory && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(stubdb4, backend && !inmemory && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(stubdb5, backend && !inmemory && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(stubdb6, inmemory) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(stubdb8, inmemory) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(termstats, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(userweight1, backend && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(valuesetmatchdecider2, backend && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_generated.cc	/^DEFINE_TESTCASE(copyassign1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_generated.cc	/^DEFINE_TESTCASE(defaultctor1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_geospatial.cc	/^DEFINE_TESTCASE(latlongcoords1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_geospatial.cc	/^DEFINE_TESTCASE(latlongkeymaker1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_geospatial.cc	/^DEFINE_TESTCASE(latlongmetric1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_geospatial.cc	/^DEFINE_TESTCASE(latlongmetric2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_geospatial.cc	/^DEFINE_TESTCASE(latlongpostingsource1, generated && !remote && !inmemory) {$/;"	f
DEFINE_TESTCASE	tests/api_matchspy.cc	/^DEFINE_TESTCASE(matchspy1, backend && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_matchspy.cc	/^DEFINE_TESTCASE(matchspy2, generated)$/;"	f
DEFINE_TESTCASE	tests/api_matchspy.cc	/^DEFINE_TESTCASE(matchspy4, generated)$/;"	f
DEFINE_TESTCASE	tests/api_matchspy.cc	/^DEFINE_TESTCASE(matchspy5, backend)$/;"	f
DEFINE_TESTCASE	tests/api_matchspy.cc	/^DEFINE_TESTCASE(matchspy6, !backend)$/;"	f
DEFINE_TESTCASE	tests/api_metadata.cc	/^DEFINE_TESTCASE(metadata1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_metadata.cc	/^DEFINE_TESTCASE(metadata2, metadata && !inmemory) {$/;"	f
DEFINE_TESTCASE	tests/api_metadata.cc	/^DEFINE_TESTCASE(metadata3, metadata) {$/;"	f
DEFINE_TESTCASE	tests/api_metadata.cc	/^DEFINE_TESTCASE(metadata4, metadata && !inmemory) {$/;"	f
DEFINE_TESTCASE	tests/api_metadata.cc	/^DEFINE_TESTCASE(metadata5, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_metadata.cc	/^DEFINE_TESTCASE(writeread1, writable && metadata) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(addvalue1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(dontflattensubqueries1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(emptymset1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(emptyquery2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(emptyquery3, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(emptyquerypart1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(expanddeciderfilterprefix1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(getqterms1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(getqterms2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(nosuchdb1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(poscollapse2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(querylen1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(querylen2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(queryvalid1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(rset3, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(rset4, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(scaleweight3, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(stemlangs1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(trivial1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(uninitdb1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(valuesetmatchdecider1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(weight1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_none.cc	/^DEFINE_TESTCASE(combinewqfnomore1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_none.cc	/^DEFINE_TESTCASE(deletewhileiterating1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_none.cc	/^DEFINE_TESTCASE(document1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_none.cc	/^DEFINE_TESTCASE(document2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_none.cc	/^DEFINE_TESTCASE(documentclearterms1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_none.cc	/^DEFINE_TESTCASE(documentclearvalues1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_none.cc	/^DEFINE_TESTCASE(documentemptyterm1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_none.cc	/^DEFINE_TESTCASE(emptyquery4, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_none.cc	/^DEFINE_TESTCASE(nonutf8docdesc1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_none.cc	/^DEFINE_TESTCASE(nosubdatabases1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_none.cc	/^DEFINE_TESTCASE(removepostings, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_none.cc	/^DEFINE_TESTCASE(singlesubquery1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_none.cc	/^DEFINE_TESTCASE(singlesubquery2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_none.cc	/^DEFINE_TESTCASE(singlesubquery3, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_none.cc	/^DEFINE_TESTCASE(subclassablerefcount1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_none.cc	/^DEFINE_TESTCASE(subclassablerefcount2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_none.cc	/^DEFINE_TESTCASE(subclassablerefcount3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_none.cc	/^DEFINE_TESTCASE(subclassablerefcount4, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_none.cc	/^DEFINE_TESTCASE(subclassablerefcount5, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_none.cc	/^DEFINE_TESTCASE(subclassablerefcount6, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_none.cc	/^DEFINE_TESTCASE(subclassablerefcount7, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_none.cc	/^DEFINE_TESTCASE(subclassablerefcount8, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_none.cc	/^DEFINE_TESTCASE(version1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_opsynonym.cc	/^DEFINE_TESTCASE(opmax1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_opsynonym.cc	/^DEFINE_TESTCASE(synonym1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_opsynonym.cc	/^DEFINE_TESTCASE(synonym2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_opsynonym.cc	/^DEFINE_TESTCASE(synonym3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_opsynonym.cc	/^DEFINE_TESTCASE(synonym4, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_opvalue.cc	/^DEFINE_TESTCASE(valuege1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_opvalue.cc	/^DEFINE_TESTCASE(valuege2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_opvalue.cc	/^DEFINE_TESTCASE(valuege3, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_opvalue.cc	/^DEFINE_TESTCASE(valuege4, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_opvalue.cc	/^DEFINE_TESTCASE(valuele1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_opvalue.cc	/^DEFINE_TESTCASE(valuerange1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_opvalue.cc	/^DEFINE_TESTCASE(valuerange2, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_opvalue.cc	/^DEFINE_TESTCASE(valuerange3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_opvalue.cc	/^DEFINE_TESTCASE(valuerange4, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_opvalue.cc	/^DEFINE_TESTCASE(valuerange5, generated) {$/;"	f
DEFINE_TESTCASE	tests/api_opvalue.cc	/^DEFINE_TESTCASE(valuerange6, generated) {$/;"	f
DEFINE_TESTCASE	tests/api_opvalue.cc	/^DEFINE_TESTCASE(valuerange7, generated) {$/;"	f
DEFINE_TESTCASE	tests/api_opvalue.cc	/^DEFINE_TESTCASE(valuerangematchesub1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_percentages.cc	/^DEFINE_TESTCASE(checkzeromaxpartopt1, backend && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_percentages.cc	/^DEFINE_TESTCASE(consistency3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_percentages.cc	/^DEFINE_TESTCASE(pctcutoff4, backend && !remote && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_percentages.cc	/^DEFINE_TESTCASE(pctcutoff5, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_percentages.cc	/^DEFINE_TESTCASE(topercent3, remote) {$/;"	f
DEFINE_TESTCASE	tests/api_percentages.cc	/^DEFINE_TESTCASE(topercent4, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_percentages.cc	/^DEFINE_TESTCASE(topercent5, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_percentages.cc	/^DEFINE_TESTCASE(topercent6, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_percentages.cc	/^DEFINE_TESTCASE(topercent7, generated) {$/;"	f
DEFINE_TESTCASE	tests/api_posdb.cc	/^DEFINE_TESTCASE(near1, positional) {$/;"	f
DEFINE_TESTCASE	tests/api_posdb.cc	/^DEFINE_TESTCASE(near2, positional) {$/;"	f
DEFINE_TESTCASE	tests/api_posdb.cc	/^DEFINE_TESTCASE(phrase1, positional) {$/;"	f
DEFINE_TESTCASE	tests/api_posdb.cc	/^DEFINE_TESTCASE(phrase2, positional) {$/;"	f
DEFINE_TESTCASE	tests/api_posdb.cc	/^DEFINE_TESTCASE(positfromtermit1, positional) {$/;"	f
DEFINE_TESTCASE	tests/api_posdb.cc	/^DEFINE_TESTCASE(poslist1, positional) {$/;"	f
DEFINE_TESTCASE	tests/api_posdb.cc	/^DEFINE_TESTCASE(poslist2, positional && writable) {$/;"	f
DEFINE_TESTCASE	tests/api_posdb.cc	/^DEFINE_TESTCASE(poslist3, positional && writable) {$/;"	f
DEFINE_TESTCASE	tests/api_postingsource.cc	/^DEFINE_TESTCASE(changemaxweightsource1, backend && !remote && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_postingsource.cc	/^DEFINE_TESTCASE(emptyvalwtsource1, backend && !remote && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_postingsource.cc	/^DEFINE_TESTCASE(externalsource1, backend && !remote && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_postingsource.cc	/^DEFINE_TESTCASE(externalsource2, remote) {$/;"	f
DEFINE_TESTCASE	tests/api_postingsource.cc	/^DEFINE_TESTCASE(externalsource3, backend && !remote && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_postingsource.cc	/^DEFINE_TESTCASE(externalsource4, backend && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_postingsource.cc	/^DEFINE_TESTCASE(fixedweightsource1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_postingsource.cc	/^DEFINE_TESTCASE(matchtimelimit1, generated && !remote)$/;"	f
DEFINE_TESTCASE	tests/api_postingsource.cc	/^DEFINE_TESTCASE(postingsourcebounds1, backend && !remote)$/;"	f
DEFINE_TESTCASE	tests/api_postingsource.cc	/^DEFINE_TESTCASE(postingsourceclone1, !backend)$/;"	f
DEFINE_TESTCASE	tests/api_postingsource.cc	/^DEFINE_TESTCASE(valueweightsource1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_postingsource.cc	/^DEFINE_TESTCASE(valueweightsource2, valuestats) {$/;"	f
DEFINE_TESTCASE	tests/api_postingsource.cc	/^DEFINE_TESTCASE(valueweightsource3, valuestats && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_qpbackend.cc	/^DEFINE_TESTCASE(qpsynonympartial1, synonyms) {$/;"	f
DEFINE_TESTCASE	tests/api_query.cc	/^DEFINE_TESTCASE(complexnear1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_query.cc	/^DEFINE_TESTCASE(complexnear2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_query.cc	/^DEFINE_TESTCASE(complexnear3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_query.cc	/^DEFINE_TESTCASE(complexphrase1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_query.cc	/^DEFINE_TESTCASE(complexphrase2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_query.cc	/^DEFINE_TESTCASE(complexphrase3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_query.cc	/^DEFINE_TESTCASE(dualprefixwildcard1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_query.cc	/^DEFINE_TESTCASE(loosenear1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_query.cc	/^DEFINE_TESTCASE(loosephrase1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_query.cc	/^DEFINE_TESTCASE(matchall2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_query.cc	/^DEFINE_TESTCASE(matchnothing1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_query.cc	/^DEFINE_TESTCASE(nonutf8termdesc1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_query.cc	/^DEFINE_TESTCASE(notandor1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_query.cc	/^DEFINE_TESTCASE(overload1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_query.cc	/^DEFINE_TESTCASE(phrasealldocs1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_query.cc	/^DEFINE_TESTCASE(possubqueries1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_query.cc	/^DEFINE_TESTCASE(queryintro1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_query.cc	/^DEFINE_TESTCASE(queryterms1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_query.cc	/^DEFINE_TESTCASE(subdbwithoutpos1, generated) {$/;"	f
DEFINE_TESTCASE	tests/api_query.cc	/^DEFINE_TESTCASE(wildcard1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_query.cc	/^DEFINE_TESTCASE(wildcard2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_query.cc	/^DEFINE_TESTCASE(xor3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_query.cc	/^DEFINE_TESTCASE(zeroestimate1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_customrange1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_daterange1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_daterange2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_default_op1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_default_op2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_default_op3, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_default_prefix1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_default_prefix2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_defaultstrategysome1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_fieldproc1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_fieldproc2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_fieldproc3, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_flag_bool_any_case1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_flag_partial1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_flag_pure_not1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_flag_wildcard1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_flag_wildcard2, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_flag_wildcard3, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_near1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_odd_chars1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_phrase1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_range1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_range2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_range3, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_range4, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_scale1, synonyms) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_spell1, spelling) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_spell2, spelling)$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_spellpartial1, spelling) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_spellwild1, spelling) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_stem_all1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_stem_all_z1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_stemsomefullpos, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_stoplist1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_stopper1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_stopword_group1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_stringrange1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_synonym1, spelling) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_synonym2, synonyms) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_synonym3, synonyms) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_unstem_boolean_prefix, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_value_customrange1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_value_daterange1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_value_daterange2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_value_range1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_value_range2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_value_range3, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_value_range4, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(qp_value_stringrange1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(queryparser1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_queryparser.cc	/^DEFINE_TESTCASE(wildquery1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_replacedoc.cc	/^DEFINE_TESTCASE(modtermwdf1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_replacedoc.cc	/^DEFINE_TESTCASE(poslistupdate1, positional && writable) {$/;"	f
DEFINE_TESTCASE	tests/api_replicate.cc	/^DEFINE_TESTCASE(replicate1, replicas) {$/;"	f
DEFINE_TESTCASE	tests/api_replicate.cc	/^DEFINE_TESTCASE(replicate2, replicas) {$/;"	f
DEFINE_TESTCASE	tests/api_replicate.cc	/^DEFINE_TESTCASE(replicate3, replicas) {$/;"	f
DEFINE_TESTCASE	tests/api_replicate.cc	/^DEFINE_TESTCASE(replicate4, replicas) {$/;"	f
DEFINE_TESTCASE	tests/api_replicate.cc	/^DEFINE_TESTCASE(replicate5, replicas) {$/;"	f
DEFINE_TESTCASE	tests/api_replicate.cc	/^DEFINE_TESTCASE(replicate6, replicas) {$/;"	f
DEFINE_TESTCASE	tests/api_replicate.cc	/^DEFINE_TESTCASE(replicate7, replicas) {$/;"	f
DEFINE_TESTCASE	tests/api_scalability.cc	/^DEFINE_TESTCASE(bigoaddvalue1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_scalability.cc	/^DEFINE_TESTCASE(querypairwise1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_serialise.cc	/^DEFINE_TESTCASE(double_register_leak, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_serialise.cc	/^DEFINE_TESTCASE(registry1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_serialise.cc	/^DEFINE_TESTCASE(registry2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_serialise.cc	/^DEFINE_TESTCASE(registry3, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_serialise.cc	/^DEFINE_TESTCASE(serialise_document1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_serialise.cc	/^DEFINE_TESTCASE(serialise_document2, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_serialise.cc	/^DEFINE_TESTCASE(serialise_query1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_serialise.cc	/^DEFINE_TESTCASE(serialise_query2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_serialise.cc	/^DEFINE_TESTCASE(serialise_query3, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_serialise.cc	/^DEFINE_TESTCASE(serialise_query4, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_snippets.cc	/^DEFINE_TESTCASE(snippet1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_snippets.cc	/^DEFINE_TESTCASE(snippet_empty, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_snippets.cc	/^DEFINE_TESTCASE(snippet_start_nonspace, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_snippets.cc	/^DEFINE_TESTCASE(snippet_termcover1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_snippets.cc	/^DEFINE_TESTCASE(snippet_termcover2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_snippets.cc	/^DEFINE_TESTCASE(snippetmisc1, generated) {$/;"	f
DEFINE_TESTCASE	tests/api_snippets.cc	/^DEFINE_TESTCASE(snippetphrase1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_snippets.cc	/^DEFINE_TESTCASE(snippetstem1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_sorting.cc	/^DEFINE_TESTCASE(changesorter1, backend && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_sorting.cc	/^DEFINE_TESTCASE(multivaluekeymaker1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_sorting.cc	/^DEFINE_TESTCASE(sortfunctor1, backend && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_sorting.cc	/^DEFINE_TESTCASE(sortfunctor2, writable && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_sorting.cc	/^DEFINE_TESTCASE(sortfunctor3, backend && !remote && valuestats) {$/;"	f
DEFINE_TESTCASE	tests/api_sorting.cc	/^DEFINE_TESTCASE(sortfunctorempty1, backend && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_sorting.cc	/^DEFINE_TESTCASE(sortfunctorremote1, remote) {$/;"	f
DEFINE_TESTCASE	tests/api_spelling.cc	/^DEFINE_TESTCASE(spell0, spelling || remote) {$/;"	f
DEFINE_TESTCASE	tests/api_spelling.cc	/^DEFINE_TESTCASE(spell1, spelling) {$/;"	f
DEFINE_TESTCASE	tests/api_spelling.cc	/^DEFINE_TESTCASE(spell2, spelling) {$/;"	f
DEFINE_TESTCASE	tests/api_spelling.cc	/^DEFINE_TESTCASE(spell3, spelling) {$/;"	f
DEFINE_TESTCASE	tests/api_spelling.cc	/^DEFINE_TESTCASE(spell4, spelling) {$/;"	f
DEFINE_TESTCASE	tests/api_spelling.cc	/^DEFINE_TESTCASE(spell5, spelling) {$/;"	f
DEFINE_TESTCASE	tests/api_spelling.cc	/^DEFINE_TESTCASE(spell6, spelling) {$/;"	f
DEFINE_TESTCASE	tests/api_spelling.cc	/^DEFINE_TESTCASE(spell7, spelling) {$/;"	f
DEFINE_TESTCASE	tests/api_spelling.cc	/^DEFINE_TESTCASE(spell8, spelling) {$/;"	f
DEFINE_TESTCASE	tests/api_stem.cc	/^DEFINE_TESTCASE(stem1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_stem.cc	/^DEFINE_TESTCASE(stem2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_stem.cc	/^DEFINE_TESTCASE(stem3, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_stem.cc	/^DEFINE_TESTCASE(stemempty1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_stem.cc	/^DEFINE_TESTCASE(stemlangs2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_termgen.cc	/^DEFINE_TESTCASE(termgen1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_termgen.cc	/^DEFINE_TESTCASE(tg_max_word_length1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_termgen.cc	/^DEFINE_TESTCASE(tg_spell1, spelling) {$/;"	f
DEFINE_TESTCASE	tests/api_termgen.cc	/^DEFINE_TESTCASE(tg_spell2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_transdb.cc	/^DEFINE_TESTCASE(badtransaction1, transactions) {$/;"	f
DEFINE_TESTCASE	tests/api_transdb.cc	/^DEFINE_TESTCASE(canceltransaction1, transactions) {$/;"	f
DEFINE_TESTCASE	tests/api_transdb.cc	/^DEFINE_TESTCASE(canceltransaction2, transactions) {$/;"	f
DEFINE_TESTCASE	tests/api_transdb.cc	/^DEFINE_TESTCASE(canceltransaction3, transactions && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_transdb.cc	/^DEFINE_TESTCASE(committransaction1, transactions) {$/;"	f
DEFINE_TESTCASE	tests/api_unicode.cc	/^DEFINE_TESTCASE(caseconvert1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_unicode.cc	/^DEFINE_TESTCASE(caseconvert2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_unicode.cc	/^DEFINE_TESTCASE(unicode1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_unicode.cc	/^DEFINE_TESTCASE(unicodepredicates1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_unicode.cc	/^DEFINE_TESTCASE(utf8convert1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_unicode.cc	/^DEFINE_TESTCASE(utf8iterator1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_unicode.cc	/^DEFINE_TESTCASE(utf8iterator2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestats.cc	/^DEFINE_TESTCASE(valuestats1, writable && valuestats) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestats.cc	/^DEFINE_TESTCASE(valuestats2, transactions && valuestats) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestats.cc	/^DEFINE_TESTCASE(valuestats3, valuestats) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestats.cc	/^DEFINE_TESTCASE(valuestats4, transactions && valuestats) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestats.cc	/^DEFINE_TESTCASE(valuestats5, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestream.cc	/^DEFINE_TESTCASE(decvalwtsource1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestream.cc	/^DEFINE_TESTCASE(decvalwtsource2, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestream.cc	/^DEFINE_TESTCASE(decvalwtsource3, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestream.cc	/^DEFINE_TESTCASE(decvalwtsource4, backend && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestream.cc	/^DEFINE_TESTCASE(decvalwtsource5, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestream.cc	/^DEFINE_TESTCASE(fixedweightsource2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestream.cc	/^DEFINE_TESTCASE(valuemapsource1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestream.cc	/^DEFINE_TESTCASE(valuemapsource2, backend && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestream.cc	/^DEFINE_TESTCASE(valuestream1, backend && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestream.cc	/^DEFINE_TESTCASE(valuestream2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestream.cc	/^DEFINE_TESTCASE(valuestream3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestream.cc	/^DEFINE_TESTCASE(valueweightsource5, writable && valuestats) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(bb2weight1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(bb2weight2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(bb2weight3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(bb2weight4, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(bm25plusweight1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(bm25plusweight2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(bm25plusweight3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(bm25weight3, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(bm25weight4, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(bm25weight5, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(boolweight1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(checkinitweight1, backend && !multi && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(checkstatsweight1, backend && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(checkstatsweight2, backend && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(checkstatsweight3, backend && !remote && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(checkstatsweight4, backend && !remote && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(coordweight1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(coordweight2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(dlhweight1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(dlhweight2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(dlhweight3, generated) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(dphweight1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(dphweight2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(dphweight3, generated) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(ifb2weight1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(ifb2weight2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(ifb2weight3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(ineb2weight1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(ineb2weight2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(ineb2weight3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(inl2weight1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(inl2weight2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(inl2weight3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(pl2plusweight1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(pl2plusweight2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(pl2plusweight3, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(pl2plusweight4, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(pl2plusweight5, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(pl2weight1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(pl2weight2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(pl2weight3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(tfidfweight1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(tfidfweight2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(tfidfweight3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(tradweight3, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(unigramlmweight3, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(unigramlmweight4, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(unigramlmweight5, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(unigramlmweight6, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(unigramlmweight7, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(unigramlmweight8, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(adddoc1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(adddoc2, writable && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(adddoc3, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(adddoc4, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(adddoc5, writable && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(adddoc6, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(allpostlist2, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(consistency2, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(crashrecovery1, chert) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(cursordelbug1, chert || glass) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(databaseassign1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(deldoc1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(deldoc2, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(deldoc3, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(deldoc4, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(deldoc5, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(deldoc6, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(emptyterm2, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(implicitendsession1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(lazytablebug1, chert || glass) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(longpositionlist1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(modifyvalues1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(nomoredocids1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(phraseorneartoand1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(postlist7, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(replacedoc1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(replacedoc2, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(replacedoc3, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(replacedoc4, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(replacedoc5, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(replacedoc6, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(synonymitor1, writable && synonyms) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(termtoolong1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(uniqueterm1, writable) {$/;"	f
DEFINE_TESTCASE	tests/harness/testsuite.h	305;"	d
DEFINE_TESTCASE	tests/perftest/perftest_matchdecider.cc	/^DEFINE_TESTCASE(alldocsiter1, writable && !remote && !inmemory) {$/;"	f
DEFINE_TESTCASE	tests/perftest/perftest_matchdecider.cc	/^DEFINE_TESTCASE(valuesetmatchdecider1, writable && !remote && !inmemory) {$/;"	f
DEFINE_TESTCASE	tests/perftest/perftest_randomidx.cc	/^DEFINE_TESTCASE(randomidx1, writable && !inmemory) {$/;"	f
DEFINE_TESTCASE	tests/soaktest/soaktest_queries.cc	/^DEFINE_TESTCASE(queries1, writable && !remote && !inmemory) {$/;"	f
DEFINE_TESTCASE_	tests/harness/testmacros.h	27;"	d
DEFINE_TESTCASE_	tests/unittest.cc	/^DEFINE_TESTCASE_(class_exceptions_work1) {$/;"	f
DEFINE_TESTCASE_	tests/unittest.cc	/^DEFINE_TESTCASE_(resolverelativepath1) {$/;"	f
DEFINE_TESTCASE_	tests/unittest.cc	/^DEFINE_TESTCASE_(serialisedouble1) {$/;"	f
DEFINE_TESTCASE_	tests/unittest.cc	/^DEFINE_TESTCASE_(simple_exceptions_work1) {$/;"	f
DEFS	Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	docs/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	tests/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DELETED_POSTING	backends/glass/glass_inverter.h	/^const Xapian::termcount DELETED_POSTING = Xapian::termcount(-1);$/;"	v
DEPDIR	Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	docs/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	tests/Makefile	/^DEPDIR = .deps$/;"	m
DESCENDING	include/xapian/enquire.h	/^	    DESCENDING = 0,$/;"	e	enum:Xapian::Enquire::__anon16
DIR	common/msvc_dirent.cc	/^struct DIR$/;"	s	file:
DIR	common/msvc_dirent.h	/^typedef struct DIR DIR;$/;"	t	typeref:struct:DIR
DIRICHLET_PLUS_SMOOTHING	include/xapian/weight.h	/^	DIRICHLET_PLUS_SMOOTHING = 5$/;"	e	enum:Xapian::Weight::__anon15
DIRICHLET_SMOOTHING	include/xapian/weight.h	/^	DIRICHLET_SMOOTHING = 2,$/;"	e	enum:Xapian::Weight::__anon15
DIR_END	backends/chert/chert_table.h	/^inline int DIR_END(const uint8_t * b) { return getint2(b, 9); }$/;"	f
DIR_END	backends/glass/glass_table.h	/^inline int DIR_END(const uint8_t * b) { return unaligned_read2(b + 9); }$/;"	f	namespace:Glass
DIR_SEPS	config.h	8;"	d
DIR_SEPS_LIST	config.h	11;"	d
DIR_START	backends/chert/chert_cursor.cc	51;"	d	file:
DIR_START	backends/chert/chert_table.h	/^const int DIR_START = 11;$/;"	v
DIR_START	backends/glass/glass_cursor.cc	53;"	d	file:
DIR_START	backends/glass/glass_table.h	/^const int DIR_START = 11;$/;"	m	namespace:Glass
DISTCLEANFILES	Makefile	/^DISTCLEANFILES = xapian-config pkgconfig\/xapian-core.pc \\$/;"	m
DISTFILES	Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	docs/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	tests/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_ARCHIVES	Makefile	/^DIST_ARCHIVES = $(distdir).tar.xz$/;"	m
DIST_COMMON	Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(top_srcdir)\/configure \\$/;"	m
DIST_COMMON	docs/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(am__DIST_COMMON)$/;"	m
DIST_COMMON	tests/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(noinst_HEADERS) \\$/;"	m
DIST_SOURCES	Makefile	/^DIST_SOURCES = $(libgetopt_la_SOURCES) \\$/;"	m
DIST_SOURCES	docs/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	tests/Makefile	/^DIST_SOURCES = $(am__apitest_SOURCES_DIST) \\$/;"	m
DIST_SUBDIRS	Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DIST_TARGETS	Makefile	/^DIST_TARGETS = dist-xz$/;"	m
DIStack	common/bitstream.h	/^    struct DIStack {$/;"	s	class:Xapian::BitReader
DIState	common/bitstream.h	/^	DIState() { uninit(); }$/;"	f	struct:Xapian::BitReader::DIState
DIState	common/bitstream.h	/^	DIState(int j_, int k_,$/;"	f	struct:Xapian::BitReader::DIState
DIState	common/bitstream.h	/^    struct DIState : public DIStack {$/;"	s	class:Xapian::BitReader
DLHWeight	include/xapian/weight.h	/^    DLHWeight() {$/;"	f	class:Xapian::DLHWeight
DLHWeight	include/xapian/weight.h	/^class XAPIAN_VISIBILITY_DEFAULT DLHWeight : public Weight {$/;"	c	namespace:Xapian
DLLTOOL	Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	docs/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	tests/Makefile	/^DLLTOOL = false$/;"	m
DOCDATA	backends/glass/glass_defs.h	/^	DOCDATA,$/;"	e	enum:Glass::table_type
DOC_ASSUME_VALID	include/xapian/constants.h	/^const int DOC_ASSUME_VALID = 1;$/;"	m	namespace:Xapian
DOC_LENGTH	include/xapian/weight.h	/^	DOC_LENGTH = 256,$/;"	e	enum:Xapian::Weight::__anon14
DOC_LENGTH_MAX	include/xapian/weight.h	/^	DOC_LENGTH_MAX = 1024,$/;"	e	enum:Xapian::Weight::__anon14
DOC_LENGTH_MIN	include/xapian/weight.h	/^	DOC_LENGTH_MIN = 512,$/;"	e	enum:Xapian::Weight::__anon14
DONT_CARE	include/xapian/enquire.h	/^	    DONT_CARE = 2$/;"	e	enum:Xapian::Enquire::__anon16
DONT_COMPRESS	backends/chert/chert_table.h	/^const int DONT_COMPRESS = -1;$/;"	v
DOT	Makefile	/^DOT = $/;"	m
DOT	docs/Makefile	/^DOT = $/;"	m
DOT	tests/Makefile	/^DOT = $/;"	m
DOXYGEN	Makefile	/^DOXYGEN = $/;"	m
DOXYGEN	docs/Makefile	/^DOXYGEN = $/;"	m
DOXYGEN	tests/Makefile	/^DOXYGEN = $/;"	m
DOXYGEN_DOT_PATH	Makefile	/^DOXYGEN_DOT_PATH = $/;"	m
DOXYGEN_DOT_PATH	docs/Makefile	/^DOXYGEN_DOT_PATH = $/;"	m
DOXYGEN_DOT_PATH	tests/Makefile	/^DOXYGEN_DOT_PATH = $/;"	m
DO_UNPACK_UINT_ERRCHECK	backends/chert/chert_btreebase.cc	150;"	d	file:
DPHWeight	include/xapian/weight.h	/^    DPHWeight() {$/;"	f	class:Xapian::DPHWeight
DPHWeight	include/xapian/weight.h	/^class XAPIAN_VISIBILITY_DEFAULT DPHWeight : public Weight {$/;"	c	namespace:Xapian
DSYMUTIL	Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	docs/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	tests/Makefile	/^DSYMUTIL = $/;"	m
DUMPBIN	Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	docs/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	tests/Makefile	/^DUMPBIN = $/;"	m
DUTCH	languages/sbl-dispatch.h	/^    DUTCH = 6,$/;"	e	enum:sbl_code
Database	api/omdatabase.cc	/^Database::Database()$/;"	f	class:Xapian::Database
Database	api/omdatabase.cc	/^Database::Database(Database::Internal *internal_)$/;"	f	class:Xapian::Database
Database	api/omdatabase.cc	/^Database::Database(const Database &other)$/;"	f	class:Xapian::Database
Database	backends/dbfactory.cc	/^Database::Database(const string &path, int flags)$/;"	f	class:Xapian::Database
Database	backends/dbfactory.cc	/^Database::Database(int fd, int flags)$/;"	f	class:Xapian::Database
Database	include/xapian/database.h	/^class XAPIAN_VISIBILITY_DEFAULT Database {$/;"	c	namespace:Xapian
DatabaseCorruptError	include/xapian/error.h	/^    DatabaseCorruptError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::DatabaseCorruptError
DatabaseCorruptError	include/xapian/error.h	/^    DatabaseCorruptError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::DatabaseCorruptError
DatabaseCorruptError	include/xapian/error.h	/^    DatabaseCorruptError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::DatabaseCorruptError
DatabaseCorruptError	include/xapian/error.h	/^    DatabaseCorruptError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::DatabaseCorruptError
DatabaseCorruptError	include/xapian/error.h	/^    explicit DatabaseCorruptError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::DatabaseCorruptError
DatabaseCorruptError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT DatabaseCorruptError : public DatabaseError {$/;"	c	namespace:Xapian
DatabaseCreateError	include/xapian/error.h	/^    DatabaseCreateError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::DatabaseCreateError
DatabaseCreateError	include/xapian/error.h	/^    DatabaseCreateError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::DatabaseCreateError
DatabaseCreateError	include/xapian/error.h	/^    DatabaseCreateError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::DatabaseCreateError
DatabaseCreateError	include/xapian/error.h	/^    DatabaseCreateError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::DatabaseCreateError
DatabaseCreateError	include/xapian/error.h	/^    explicit DatabaseCreateError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::DatabaseCreateError
DatabaseCreateError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT DatabaseCreateError : public DatabaseError {$/;"	c	namespace:Xapian
DatabaseError	include/xapian/error.h	/^    DatabaseError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::DatabaseError
DatabaseError	include/xapian/error.h	/^    DatabaseError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::DatabaseError
DatabaseError	include/xapian/error.h	/^    DatabaseError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::DatabaseError
DatabaseError	include/xapian/error.h	/^    DatabaseError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::DatabaseError
DatabaseError	include/xapian/error.h	/^    explicit DatabaseError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::DatabaseError
DatabaseError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT DatabaseError : public RuntimeError {$/;"	c	namespace:Xapian
DatabaseLockError	include/xapian/error.h	/^    DatabaseLockError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::DatabaseLockError
DatabaseLockError	include/xapian/error.h	/^    DatabaseLockError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::DatabaseLockError
DatabaseLockError	include/xapian/error.h	/^    DatabaseLockError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::DatabaseLockError
DatabaseLockError	include/xapian/error.h	/^    DatabaseLockError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::DatabaseLockError
DatabaseLockError	include/xapian/error.h	/^    explicit DatabaseLockError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::DatabaseLockError
DatabaseLockError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT DatabaseLockError : public DatabaseError {$/;"	c	namespace:Xapian
DatabaseMaster	api/replication.h	/^    explicit DatabaseMaster(const std::string & path_) : path(path_) {}$/;"	f	class:Xapian::DatabaseMaster
DatabaseMaster	api/replication.h	/^class XAPIAN_VISIBILITY_DEFAULT DatabaseMaster {$/;"	c	namespace:Xapian
DatabaseModifiedError	include/xapian/error.h	/^    DatabaseModifiedError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::DatabaseModifiedError
DatabaseModifiedError	include/xapian/error.h	/^    DatabaseModifiedError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::DatabaseModifiedError
DatabaseModifiedError	include/xapian/error.h	/^    DatabaseModifiedError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::DatabaseModifiedError
DatabaseModifiedError	include/xapian/error.h	/^    DatabaseModifiedError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::DatabaseModifiedError
DatabaseModifiedError	include/xapian/error.h	/^    explicit DatabaseModifiedError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::DatabaseModifiedError
DatabaseModifiedError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT DatabaseModifiedError : public DatabaseError {$/;"	c	namespace:Xapian
DatabaseOpeningError	include/xapian/error.h	/^    DatabaseOpeningError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::DatabaseOpeningError
DatabaseOpeningError	include/xapian/error.h	/^    DatabaseOpeningError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::DatabaseOpeningError
DatabaseOpeningError	include/xapian/error.h	/^    DatabaseOpeningError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::DatabaseOpeningError
DatabaseOpeningError	include/xapian/error.h	/^    DatabaseOpeningError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::DatabaseOpeningError
DatabaseOpeningError	include/xapian/error.h	/^    explicit DatabaseOpeningError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::DatabaseOpeningError
DatabaseOpeningError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT DatabaseOpeningError : public DatabaseError {$/;"	c	namespace:Xapian
DatabaseReplica	api/replication.cc	/^DatabaseReplica::DatabaseReplica(const string & path)$/;"	f	class:DatabaseReplica
DatabaseReplica	api/replication.h	/^class XAPIAN_VISIBILITY_DEFAULT DatabaseReplica {$/;"	c	namespace:Xapian
DatabaseReplicator	backends/databasereplicator.h	/^	DatabaseReplicator() { }$/;"	f	class:Xapian::DatabaseReplicator
DatabaseReplicator	backends/databasereplicator.h	/^class DatabaseReplicator {$/;"	c	namespace:Xapian
DatabaseVersionError	include/xapian/error.h	/^    DatabaseVersionError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::DatabaseVersionError
DatabaseVersionError	include/xapian/error.h	/^    DatabaseVersionError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::DatabaseVersionError
DatabaseVersionError	include/xapian/error.h	/^    DatabaseVersionError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::DatabaseVersionError
DatabaseVersionError	include/xapian/error.h	/^    DatabaseVersionError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::DatabaseVersionError
DatabaseVersionError	include/xapian/error.h	/^    explicit DatabaseVersionError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::DatabaseVersionError
DatabaseVersionError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT DatabaseVersionError : public DatabaseOpeningError {$/;"	c	namespace:Xapian
DateRangeFieldProcessor	tests/api_queryparser.cc	/^class DateRangeFieldProcessor : public Xapian::FieldProcessor {$/;"	c	file:
DateRangeProcessor	include/xapian/queryparser.h	/^    DateRangeProcessor(Xapian::valueno slot_, const std::string &str_,$/;"	f	class:Xapian::DateRangeProcessor
DateRangeProcessor	include/xapian/queryparser.h	/^    explicit DateRangeProcessor(Xapian::valueno slot_,$/;"	f	class:Xapian::DateRangeProcessor
DateRangeProcessor	include/xapian/queryparser.h	/^class XAPIAN_VISIBILITY_DEFAULT DateRangeProcessor : public RangeProcessor {$/;"	c	namespace:Xapian
DateValueRangeProcessor	include/xapian/queryparser.h	/^    DateValueRangeProcessor(Xapian::valueno slot_, bool prefer_mdy_ = false,$/;"	f	class:Xapian::DateValueRangeProcessor
DateValueRangeProcessor	include/xapian/queryparser.h	/^    DateValueRangeProcessor(Xapian::valueno slot_, const char * str_,$/;"	f	class:Xapian::DateValueRangeProcessor
DateValueRangeProcessor	include/xapian/queryparser.h	/^    DateValueRangeProcessor(Xapian::valueno slot_, const std::string &str_,$/;"	f	class:Xapian::DateValueRangeProcessor
DateValueRangeProcessor	include/xapian/queryparser.h	/^class XAPIAN_DEPRECATED_CLASS_EX XAPIAN_VISIBILITY_DEFAULT DateValueRangeProcessor : public StringValueRangeProcessor {$/;"	c	namespace:Xapian
DebugLogFunc	common/debuglog.h	/^    DebugLogFunc(const void * this_ptr_, debuglog_categories category_,$/;"	f	class:DebugLogFunc
DebugLogFunc	common/debuglog.h	/^class DebugLogFunc {$/;"	c
DebugLogFuncVoid	common/debuglog.h	/^    DebugLogFuncVoid(const void * this_ptr_, debuglog_categories category_,$/;"	f	class:DebugLogFuncVoid
DebugLogFuncVoid	common/debuglog.h	/^class DebugLogFuncVoid {$/;"	c
DebugLogger	common/debuglog.h	/^    DebugLogger()$/;"	f	class:DebugLogger
DebugLogger	common/debuglog.h	/^class DebugLogger {$/;"	c
DecoderWithBoundingBox	geospatial/geoencode.cc	/^GeoEncode::DecoderWithBoundingBox::DecoderWithBoundingBox$/;"	f	class:GeoEncode::DecoderWithBoundingBox
DecoderWithBoundingBox	geospatial/geoencode.h	/^class DecoderWithBoundingBox {$/;"	c	namespace:GeoEncode
DecreasingValueWeightPostingSource	api/decvalwtsource.cc	/^DecreasingValueWeightPostingSource::DecreasingValueWeightPostingSource($/;"	f	class:DecreasingValueWeightPostingSource
DecreasingValueWeightPostingSource	include/xapian/postingsource.h	/^class XAPIAN_VISIBILITY_DEFAULT DecreasingValueWeightPostingSource$/;"	c	namespace:Xapian
DegreesMinutesSeconds	geospatial/geoencode.cc	/^    explicit DegreesMinutesSeconds(int angle_16th_secs) {$/;"	f	struct:DegreesMinutesSeconds
DegreesMinutesSeconds	geospatial/geoencode.cc	/^struct DegreesMinutesSeconds {$/;"	s	file:
DerefWrapper_	include/xapian/derefwrapper.h	/^    explicit DerefWrapper_(const T &res_) : res(res_) { }$/;"	f	class:Xapian::DerefWrapper_
DerefWrapper_	include/xapian/derefwrapper.h	/^class DerefWrapper_ {$/;"	c	namespace:Xapian
DestroyedFlag	tests/api_none.cc	/^    DestroyedFlag(bool & destroyed_) : destroyed(destroyed_) {$/;"	f	class:DestroyedFlag
DestroyedFlag	tests/api_none.cc	/^class DestroyedFlag {$/;"	c	file:
DocNotFoundError	include/xapian/error.h	/^    DocNotFoundError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::DocNotFoundError
DocNotFoundError	include/xapian/error.h	/^    DocNotFoundError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::DocNotFoundError
DocNotFoundError	include/xapian/error.h	/^    DocNotFoundError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::DocNotFoundError
DocNotFoundError	include/xapian/error.h	/^    DocNotFoundError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::DocNotFoundError
DocNotFoundError	include/xapian/error.h	/^    explicit DocNotFoundError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::DocNotFoundError
DocNotFoundError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT DocNotFoundError : public RuntimeError {$/;"	c	namespace:Xapian
Document	api/omdocument.cc	/^Document::Document() : internal(new Xapian::Document::Internal)$/;"	f	class:Xapian::Document
Document	api/omdocument.cc	/^Document::Document(Document::Internal *internal_) : internal(internal_)$/;"	f	class:Xapian::Document
Document	api/omdocument.cc	/^Document::Document(const Document &other)$/;"	f	class:Xapian::Document
Document	include/xapian/document.h	/^class XAPIAN_VISIBILITY_DEFAULT Document {$/;"	c	namespace:Xapian
DocumentValueList	api/documentvaluelist.h	/^    explicit DocumentValueList(const Xapian::Internal::intrusive_ptr<Xapian::Document::Internal> & doc_)$/;"	f	class:DocumentValueList
DocumentValueList	api/documentvaluelist.h	/^class DocumentValueList : public ValueList {$/;"	c
EADDRINUSE	net/remoteconnection.h	94;"	d
EARLYENGLISH	languages/sbl-dispatch.h	/^    EARLYENGLISH = 7,$/;"	e	enum:sbl_code
EATMYDATA	Makefile	/^EATMYDATA = $/;"	m
EATMYDATA	docs/Makefile	/^EATMYDATA = $/;"	m
EATMYDATA	tests/Makefile	/^EATMYDATA = $/;"	m
ECHO_C	Makefile	/^ECHO_C = $/;"	m
ECHO_C	docs/Makefile	/^ECHO_C = $/;"	m
ECHO_C	tests/Makefile	/^ECHO_C = $/;"	m
ECHO_N	Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	docs/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	tests/Makefile	/^ECHO_N = -n$/;"	m
ECHO_T	Makefile	/^ECHO_T = $/;"	m
ECHO_T	docs/Makefile	/^ECHO_T = $/;"	m
ECHO_T	tests/Makefile	/^ECHO_T = $/;"	m
EGREP	Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	docs/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	tests/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EINPROGRESS	net/remoteconnection.h	100;"	d
EMPTY	matcher/collapser.h	/^    EMPTY,$/;"	e	enum:__anon29
EMPTY_GROUP_OK	queryparser/queryparser_token.h	23;"	d
ENCLOSING_MARK	include/xapian/unicode.h	/^    ENCLOSING_MARK,$/;"	e	enum:Xapian::Unicode::__anon13
ENC_SINGLEBYTE	languages/compiler/header.h	/^typedef enum { ENC_SINGLEBYTE, ENC_UTF8, ENC_WIDECHARS } enc;$/;"	e	enum:__anon26
ENC_UTF8	languages/compiler/header.h	/^typedef enum { ENC_SINGLEBYTE, ENC_UTF8, ENC_WIDECHARS } enc;$/;"	e	enum:__anon26
ENC_WIDECHARS	languages/compiler/header.h	/^typedef enum { ENC_SINGLEBYTE, ENC_UTF8, ENC_WIDECHARS } enc;$/;"	e	enum:__anon26
END_OF_TESTCASES	tests/harness/testmacros.h	29;"	d
ENGLISH	languages/sbl-dispatch.h	/^    ENGLISH = 8,$/;"	e	enum:sbl_code
ERROR	queryparser/lemon.c	/^  ERROR,$/;"	e	enum:e_action	file:
ERROR	queryparser/queryparser_token.h	1;"	d
ESet	expand/esetinternal.cc	/^ESet::ESet() { }$/;"	f	class:Xapian::ESet
ESet	expand/esetinternal.cc	/^ESet::ESet(const ESet & o) : internal(o.internal) { }$/;"	f	class:Xapian::ESet
ESet	include/xapian/eset.h	/^class XAPIAN_VISIBILITY_DEFAULT ESet {$/;"	c	namespace:Xapian
ESetIterator	include/xapian/eset.h	/^    ESetIterator() : off_from_end(0) { }$/;"	f	class:Xapian::ESetIterator
ESetIterator	include/xapian/eset.h	/^    ESetIterator(const Xapian::ESet & eset_, Xapian::doccount off_from_end_)$/;"	f	class:Xapian::ESetIterator
ESetIterator	include/xapian/eset.h	/^class XAPIAN_VISIBILITY_DEFAULT ESetIterator {$/;"	c	namespace:Xapian
ETAGS	Makefile	/^ETAGS = etags$/;"	m
ETAGS	tests/Makefile	/^ETAGS = etags$/;"	m
ETIMEDOUT	net/remoteconnection.h	97;"	d
EXEEXT	Makefile	/^EXEEXT = $/;"	m
EXEEXT	docs/Makefile	/^EXEEXT = $/;"	m
EXEEXT	tests/Makefile	/^EXEEXT = $/;"	m
EXE_SUFFIX	tests/harness/backendmanager.h	34;"	d
EXE_SUFFIX	tests/harness/backendmanager.h	37;"	d
EXPECTED_EXCEPTION	tests/api_db.cc	147;"	d	file:
EXTENDER	languages/compiler/space.c	9;"	d	file:
EXTRA_DIST	Makefile	/^EXTRA_DIST = ChangeLog ChangeLog.0 ChangeLog.examples HACKING \\$/;"	m
EXTRA_DIST	docs/Makefile	/^EXTRA_DIST = doxygen_api.conf.in doxygen_source.conf.in \\$/;"	m
EXTRA_DIST	tests/Makefile	/^EXTRA_DIST = collate-test generate-api_generated api_all.h \\$/;"	m
EXTRA_PROGRAMS	Makefile	/^EXTRA_PROGRAMS =$/;"	m
EmptyPostList	api/emptypostlist.h	/^    EmptyPostList() { }$/;"	f	class:EmptyPostList
EmptyPostList	api/emptypostlist.h	/^class EmptyPostList : public PostList {$/;"	c
Enquire	api/omenquire.cc	/^Enquire::Enquire(const Database &databases)$/;"	f	class:Xapian::Enquire
Enquire	api/omenquire.cc	/^Enquire::Enquire(const Database &databases, ErrorHandler *)$/;"	f	class:Xapian::Enquire
Enquire	api/omenquire.cc	/^Enquire::Enquire(const Enquire & other) : internal(other.internal)$/;"	f	class:Xapian::Enquire
Enquire	include/xapian/enquire.h	/^class XAPIAN_VISIBILITY_DEFAULT Enquire {$/;"	c	namespace:Xapian
Error	api/error.cc	/^Xapian::Error::Error(const std::string &msg_, const std::string &context_,$/;"	f	class:Xapian::Error
Error	include/xapian/error.h	/^    Error(const std::string &msg_, const std::string &context_,$/;"	f	class:Xapian::Error
Error	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT Error {$/;"	c	namespace:Xapian
ErrorHandler	include/xapian/errorhandler.h	/^    XAPIAN_NOTHROW(ErrorHandler()) {}$/;"	f	class:Xapian::ErrorHandler
ErrorHandler	include/xapian/errorhandler.h	/^class XAPIAN_VISIBILITY_DEFAULT ErrorHandler$/;"	c	namespace:Xapian
ErrorMsg	queryparser/lemon.c	/^void ErrorMsg(const char *filename, int lineno, const char *format, ...){$/;"	f
EvenParityExpandFunctor	tests/api_anydb.cc	/^class EvenParityExpandFunctor : public Xapian::ExpandDecider {$/;"	c	file:
ExactPhrasePostList	matcher/exactphrasepostlist.cc	/^ExactPhrasePostList::ExactPhrasePostList(PostList *source_,$/;"	f	class:ExactPhrasePostList
ExactPhrasePostList	matcher/exactphrasepostlist.h	/^class ExactPhrasePostList : public SelectPostList {$/;"	c
ExceptionalMatchSpy	tests/api_serialise.cc	/^    ExceptionalMatchSpy(failmode fail_) : fail(fail_) { }$/;"	f	class:ExceptionalMatchSpy
ExceptionalMatchSpy	tests/api_serialise.cc	/^class ExceptionalMatchSpy : public Xapian::MatchSpy {$/;"	c	file:
ExceptionalPostingSource	tests/api_serialise.cc	/^    ExceptionalPostingSource(failmode fail_) : fail(fail_) { }$/;"	f	class:ExceptionalPostingSource
ExceptionalPostingSource	tests/api_serialise.cc	/^class ExceptionalPostingSource : public Xapian::PostingSource {$/;"	c	file:
ExceptionalWeight	tests/api_serialise.cc	/^    ExceptionalWeight(failmode fail_) : fail(fail_) { }$/;"	f	class:ExceptionalWeight
ExceptionalWeight	tests/api_serialise.cc	/^class ExceptionalWeight : public Xapian::Weight {$/;"	c	file:
ExpandDecider	include/xapian/expanddecider.h	/^    ExpandDecider() { }$/;"	f	class:Xapian::ExpandDecider
ExpandDecider	include/xapian/expanddecider.h	/^class XAPIAN_VISIBILITY_DEFAULT ExpandDecider$/;"	c	namespace:Xapian
ExpandDeciderAnd	include/xapian/expanddecider.h	/^    ExpandDeciderAnd(const ExpandDecider &first_,$/;"	f	class:Xapian::ExpandDeciderAnd
ExpandDeciderAnd	include/xapian/expanddecider.h	/^    ExpandDeciderAnd(const ExpandDecider *first_,$/;"	f	class:Xapian::ExpandDeciderAnd
ExpandDeciderAnd	include/xapian/expanddecider.h	/^class XAPIAN_VISIBILITY_DEFAULT ExpandDeciderAnd : public ExpandDecider {$/;"	c	namespace:Xapian
ExpandDeciderFilterPrefix	include/xapian/expanddecider.h	/^    explicit ExpandDeciderFilterPrefix(const std::string &prefix_)$/;"	f	class:Xapian::ExpandDeciderFilterPrefix
ExpandDeciderFilterPrefix	include/xapian/expanddecider.h	/^class XAPIAN_VISIBILITY_DEFAULT ExpandDeciderFilterPrefix : public ExpandDecider {$/;"	c	namespace:Xapian
ExpandDeciderFilterTerms	include/xapian/expanddecider.h	/^    ExpandDeciderFilterTerms(Iterator reject_begin, Iterator reject_end)$/;"	f	class:Xapian::ExpandDeciderFilterTerms
ExpandDeciderFilterTerms	include/xapian/expanddecider.h	/^class XAPIAN_VISIBILITY_DEFAULT ExpandDeciderFilterTerms : public ExpandDecider {$/;"	c	namespace:Xapian
ExpandStats	expand/expandweight.h	/^    ExpandStats(Xapian::doclength avlen_, double expand_k_)$/;"	f	class:Xapian::Internal::ExpandStats
ExpandStats	expand/expandweight.h	/^    explicit ExpandStats(Xapian::doclength avlen_)$/;"	f	class:Xapian::Internal::ExpandStats
ExpandStats	expand/expandweight.h	/^class ExpandStats {$/;"	c	namespace:Xapian::Internal
ExpandTerm	expand/esetinternal.h	/^    ExpandTerm(double wt_, const std::string & term_)$/;"	f	class:Xapian::Internal::ExpandTerm
ExpandTerm	expand/esetinternal.h	/^class ExpandTerm {$/;"	c	namespace:Xapian::Internal
ExpandWeight	expand/expandweight.h	/^    ExpandWeight(const Xapian::Database &db_,$/;"	f	class:Xapian::Internal::ExpandWeight
ExpandWeight	expand/expandweight.h	/^class ExpandWeight {$/;"	c	namespace:Xapian::Internal
ExternalPostList	matcher/externalpostlist.cc	/^ExternalPostList::ExternalPostList(const Xapian::Database & db,$/;"	f	class:ExternalPostList
ExternalPostList	matcher/externalpostlist.h	/^class ExternalPostList : public PostList {$/;"	c
ExtraWeightPostList	matcher/extraweightpostlist.h	/^	ExtraWeightPostList(PostList * pl_, Xapian::Weight *wt_,$/;"	f	class:ExtraWeightPostList
ExtraWeightPostList	matcher/extraweightpostlist.h	/^class ExtraWeightPostList : public PostList {$/;"	c
FAIL	tests/harness/testsuite.h	/^	    XPASS = 3, XFAIL = 2, PASS = 1, FAIL = 0, SKIP = -1$/;"	e	enum:test_driver::test_result
FAIL_TEST	tests/harness/testsuite.h	58;"	d
FD	common/fd.h	/^    FD() : fd(-1) { }$/;"	f	class:FD
FD	common/fd.h	/^    FD(int fd_) : fd(fd_) { }$/;"	f	class:FD
FD	common/fd.h	/^class FD {$/;"	c
FDLIMIT	backends/flint_lock.h	/^	FDLIMIT, \/\/ Process hit its file descriptor limit.$/;"	e	enum:FlintLock::__anon2
FDTracker	tests/harness/fdtracker.h	/^    FDTracker() : dir_void(NULL) { }$/;"	f	class:FDTracker
FDTracker	tests/harness/fdtracker.h	/^class FDTracker {$/;"	c
FD_DIRECTORY	tests/harness/fdtracker.cc	47;"	d	file:
FD_SET	common/safesysselect.h	54;"	d
FD_SET	common/safesysselect.h	56;"	d
FGREP	Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	docs/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	tests/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FINAL_QUOTE_PUNCTUATION	include/xapian/unicode.h	/^    FINAL_QUOTE_PUNCTUATION,$/;"	e	enum:Xapian::Unicode::__anon13
FINNISH	languages/sbl-dispatch.h	/^    FINNISH = 9,$/;"	e	enum:sbl_code
FLAG_AUTO_MULTIWORD_SYNONYMS	include/xapian/queryparser.h	/^	FLAG_AUTO_MULTIWORD_SYNONYMS = 1024,$/;"	e	enum:Xapian::QueryParser::__anon24
FLAG_AUTO_SYNONYMS	include/xapian/queryparser.h	/^	FLAG_AUTO_SYNONYMS = 512,$/;"	e	enum:Xapian::QueryParser::__anon24
FLAG_BOOLEAN	include/xapian/queryparser.h	/^	FLAG_BOOLEAN = 1,$/;"	e	enum:Xapian::QueryParser::__anon24
FLAG_BOOLEAN_ANY_CASE	include/xapian/queryparser.h	/^	FLAG_BOOLEAN_ANY_CASE = 8,$/;"	e	enum:Xapian::QueryParser::__anon24
FLAG_CJK_NGRAM	include/xapian/queryparser.h	/^	FLAG_CJK_NGRAM = 2048,$/;"	e	enum:Xapian::QueryParser::__anon24
FLAG_CJK_NGRAM	include/xapian/termgenerator.h	/^	FLAG_CJK_NGRAM = 2048 \/\/ Value matches QueryParser flag.$/;"	e	enum:Xapian::TermGenerator::__anon20
FLAG_DEFAULT	include/xapian/queryparser.h	/^	FLAG_DEFAULT = FLAG_PHRASE|FLAG_BOOLEAN|FLAG_LOVEHATE$/;"	e	enum:Xapian::QueryParser::__anon24
FLAG_LOVEHATE	include/xapian/queryparser.h	/^	FLAG_LOVEHATE = 4,$/;"	e	enum:Xapian::QueryParser::__anon24
FLAG_NAME	net/tcpclient.cc	76;"	d	file:
FLAG_NAME	net/tcpclient.cc	88;"	d	file:
FLAG_PARTIAL	include/xapian/queryparser.h	/^	FLAG_PARTIAL = 64,$/;"	e	enum:Xapian::QueryParser::__anon24
FLAG_PHRASE	include/xapian/queryparser.h	/^	FLAG_PHRASE = 2,$/;"	e	enum:Xapian::QueryParser::__anon24
FLAG_PURE_NOT	include/xapian/queryparser.h	/^	FLAG_PURE_NOT = 32,$/;"	e	enum:Xapian::QueryParser::__anon24
FLAG_SPELLING	include/xapian/termgenerator.h	/^	FLAG_SPELLING = 128, \/\/ Value matches QueryParser flag.$/;"	e	enum:Xapian::TermGenerator::__anon20
FLAG_SPELLING_CORRECTION	include/xapian/queryparser.h	/^	FLAG_SPELLING_CORRECTION = 128,$/;"	e	enum:Xapian::QueryParser::__anon24
FLAG_SYNONYM	include/xapian/queryparser.h	/^	FLAG_SYNONYM = 256,$/;"	e	enum:Xapian::QueryParser::__anon24
FLAG_WILDCARD	include/xapian/queryparser.h	/^	FLAG_WILDCARD = 16,$/;"	e	enum:Xapian::QueryParser::__anon24
FORMAT	include/xapian/unicode.h	/^    FORMAT,$/;"	e	enum:Xapian::Unicode::__anon13
FP_EXCESS_PRECISION	Makefile	/^FP_EXCESS_PRECISION = no$/;"	m
FP_EXCESS_PRECISION	docs/Makefile	/^FP_EXCESS_PRECISION = no$/;"	m
FP_EXCESS_PRECISION	tests/Makefile	/^FP_EXCESS_PRECISION = no$/;"	m
FREE	languages/compiler/header.h	10;"	d
FREELIST_END	backends/glass/glass_freelist.cc	46;"	d	file:
FREELIST_END_	backends/glass/glass_freelist.cc	44;"	d	file:
FRENCH	languages/sbl-dispatch.h	/^    FRENCH = 10,$/;"	e	enum:sbl_code
FULL	include/xapian/compactor.h	/^	FULL = 1,$/;"	e	enum:Xapian::Compactor::__anon17
FULLER	include/xapian/compactor.h	/^	FULLER = 2$/;"	e	enum:Xapian::Compactor::__anon17
F_OFD_GETLK	backends/flint_lock.cc	60;"	d	file:
F_OFD_SETLK	backends/flint_lock.cc	61;"	d	file:
F_OFD_SETLKW	backends/flint_lock.cc	62;"	d	file:
FeatureUnavailableError	include/xapian/error.h	/^    FeatureUnavailableError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::FeatureUnavailableError
FeatureUnavailableError	include/xapian/error.h	/^    FeatureUnavailableError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::FeatureUnavailableError
FeatureUnavailableError	include/xapian/error.h	/^    FeatureUnavailableError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::FeatureUnavailableError
FeatureUnavailableError	include/xapian/error.h	/^    FeatureUnavailableError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::FeatureUnavailableError
FeatureUnavailableError	include/xapian/error.h	/^    explicit FeatureUnavailableError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::FeatureUnavailableError
FeatureUnavailableError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT FeatureUnavailableError : public RuntimeError {$/;"	c	namespace:Xapian
FieldInfo	queryparser/queryparser_internal.h	/^    FieldInfo(filter_type type_, Xapian::FieldProcessor* proc,$/;"	f	struct:FieldInfo
FieldInfo	queryparser/queryparser_internal.h	/^    FieldInfo(filter_type type_, const string& prefix,$/;"	f	struct:FieldInfo
FieldInfo	queryparser/queryparser_internal.h	/^struct FieldInfo {$/;"	s
FieldProcessor	include/xapian/queryparser.h	/^    FieldProcessor() { }$/;"	f	class:Xapian::FieldProcessor
FieldProcessor	include/xapian/queryparser.h	/^class XAPIAN_VISIBILITY_DEFAULT FieldProcessor$/;"	c	namespace:Xapian
FileIndexer	tests/harness/index_utils.h	/^    FileIndexer(const std::string & datadir_,$/;"	f	class:FileIndexer
FileIndexer	tests/harness/index_utils.h	/^class FileIndexer {$/;"	c
FindActions	queryparser/lemon.c	/^void FindActions(struct lemon *lemp)$/;"	f
FindFirstSets	queryparser/lemon.c	/^void FindFirstSets(struct lemon *lemp)$/;"	f
FindFollowSets	queryparser/lemon.c	/^void FindFollowSets(struct lemon *lemp)$/;"	f
FindLinks	queryparser/lemon.c	/^void FindLinks(struct lemon *lemp)$/;"	f
FindRulePrecedences	queryparser/lemon.c	/^void FindRulePrecedences(struct lemon *xp)$/;"	f
FindStates	queryparser/lemon.c	/^void FindStates(struct lemon *lemp)$/;"	f
FixedWeightPostingSource	api/postingsource.cc	/^FixedWeightPostingSource::FixedWeightPostingSource(double wt)$/;"	f	class:Xapian::FixedWeightPostingSource
FixedWeightPostingSource	include/xapian/postingsource.h	/^class XAPIAN_VISIBILITY_DEFAULT FixedWeightPostingSource : public PostingSource {$/;"	c	namespace:Xapian
FlintLock	backends/flint_lock.h	/^    FlintLock() {}$/;"	f	class:FlintLock
FlintLock	backends/flint_lock.h	/^    explicit FlintLock(const std::string &filename_)$/;"	f	class:FlintLock
FlintLock	backends/flint_lock.h	/^class FlintLock {$/;"	c
FreqAdderOrTermList	expand/ortermlist.h	/^	FreqAdderOrTermList(TermList * left_, TermList * right_)$/;"	f	class:FreqAdderOrTermList
FreqAdderOrTermList	expand/ortermlist.h	/^class FreqAdderOrTermList : public OrTermList {$/;"	c
GENERATED	tests/harness/testrunner.h	/^	GENERATED	= 0x00000400,$/;"	e	enum:TestRunner::__anon35
GERMAN	languages/sbl-dispatch.h	/^    GERMAN = 11,$/;"	e	enum:sbl_code
GERMAN2	languages/sbl-dispatch.h	/^    GERMAN2 = 12,$/;"	e	enum:sbl_code
GET_LEVEL	backends/chert/chert_table.h	/^inline int GET_LEVEL(const uint8_t * b) { return getint1(b, 4); }$/;"	f
GET_LEVEL	backends/glass/glass_table.h	/^inline int GET_LEVEL(const uint8_t * b) { return b[4]; }$/;"	f	namespace:Glass
GLASS	backends/dbcheck.cc	/^typedef enum { UNKNOWN, CHERT, GLASS } backend_type;$/;"	e	enum:__anon5	file:
GLASS	tests/harness/testrunner.h	/^	GLASS		= 0x00008000,$/;"	e	enum:TestRunner::__anon35
GLASS_BTREE_MAX_KEY_LEN	backends/glass/glass_table.h	57;"	d
GLASS_DEFAULT_BLOCKSIZE	backends/glass/glass_defs.h	30;"	d
GLASS_FORMAT_VERSION	backends/glass/glass_version.cc	52;"	d	file:
GLASS_MAX_DOCID	backends/glass/glass_defs.h	37;"	d
GLASS_TABLE_EXTENSION	backends/glass/glass_defs.h	27;"	d
GLASS_VERSION_MAGIC	backends/glass/glass_version.cc	/^static const char GLASS_VERSION_MAGIC[GLASS_VERSION_MAGIC_AND_VERSION_LEN] = {$/;"	v	file:
GLASS_VERSION_MAGIC_AND_VERSION_LEN	backends/glass/glass_version.cc	65;"	d	file:
GLASS_VERSION_MAGIC_LEN	backends/glass/glass_version.cc	64;"	d	file:
GNU_GETOPT_INTERFACE_VERSION	common/gnu_getopt.h	29;"	d
GREP	Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	docs/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	tests/Makefile	/^GREP = \/bin\/grep$/;"	m
GROUP_TERM	queryparser/queryparser_token.h	13;"	d
GZIP_ENV	Makefile	/^GZIP_ENV = --best$/;"	m
GeoEncode	geospatial/geoencode.h	/^namespace GeoEncode {$/;"	n
Glass	backends/glass/glass_cursor.h	/^namespace Glass {$/;"	n
Glass	backends/glass/glass_defs.h	/^namespace Glass {$/;"	n
Glass	backends/glass/glass_postlist.h	/^namespace Glass {$/;"	n
Glass	backends/glass/glass_spelling.h	/^namespace Glass {$/;"	n
Glass	backends/glass/glass_synonym.h	/^namespace Glass {$/;"	n
Glass	backends/glass/glass_table.h	/^namespace Glass {$/;"	n
Glass	backends/glass/glass_values.cc	/^namespace Glass {$/;"	n	file:
Glass	backends/glass/glass_values.h	/^namespace Glass {$/;"	n
Glass	backends/glass/glass_version.cc	/^namespace Glass {$/;"	n	file:
Glass	backends/glass/glass_version.h	/^namespace Glass {$/;"	n
Glass	common/pretty.h	/^namespace Glass {$/;"	n
GlassAllDocsPostList	backends/glass/glass_alldocspostlist.cc	/^GlassAllDocsPostList::GlassAllDocsPostList(intrusive_ptr<const GlassDatabase> db_,$/;"	f	class:GlassAllDocsPostList
GlassAllDocsPostList	backends/glass/glass_alldocspostlist.h	/^class GlassAllDocsPostList : public GlassPostList {$/;"	c
GlassAllTermsList	backends/glass/glass_alltermslist.h	/^    GlassAllTermsList(Xapian::Internal::intrusive_ptr<const GlassDatabase> database_,$/;"	f	class:GlassAllTermsList
GlassAllTermsList	backends/glass/glass_alltermslist.h	/^class GlassAllTermsList : public AllTermsList {$/;"	c
GlassChanges	backends/glass/glass_changes.h	/^    explicit GlassChanges(const std::string & db_dir)$/;"	f	class:GlassChanges
GlassChanges	backends/glass/glass_changes.h	/^class GlassChanges {$/;"	c
GlassCompact	backends/glass/glass_compact.cc	/^namespace GlassCompact {$/;"	n	file:
GlassCursor	backends/glass/glass_cursor.cc	/^GlassCursor::GlassCursor(const GlassTable *B_, const Glass::Cursor * C_)$/;"	f	class:GlassCursor
GlassCursor	backends/glass/glass_cursor.h	/^class GlassCursor {$/;"	c
GlassDatabase	backends/glass/glass_database.cc	/^GlassDatabase::GlassDatabase(const string &glass_dir, int flags,$/;"	f	class:GlassDatabase
GlassDatabase	backends/glass/glass_database.cc	/^GlassDatabase::GlassDatabase(int fd)$/;"	f	class:GlassDatabase
GlassDatabase	backends/glass/glass_database.h	/^class GlassDatabase : public Xapian::Database::Internal {$/;"	c
GlassDatabaseReplicator	backends/glass/glass_databasereplicator.cc	/^GlassDatabaseReplicator::GlassDatabaseReplicator(const string & db_dir_)$/;"	f	class:GlassDatabaseReplicator
GlassDatabaseReplicator	backends/glass/glass_databasereplicator.h	/^class GlassDatabaseReplicator : public Xapian::DatabaseReplicator {$/;"	c
GlassDocDataTable	backends/glass/glass_docdata.h	/^    GlassDocDataTable(const std::string & dbdir, bool readonly)$/;"	f	class:GlassDocDataTable
GlassDocDataTable	backends/glass/glass_docdata.h	/^    GlassDocDataTable(int fd, off_t offset_, bool readonly)$/;"	f	class:GlassDocDataTable
GlassDocDataTable	backends/glass/glass_docdata.h	/^class GlassDocDataTable : public GlassLazyTable {$/;"	c
GlassDocument	backends/glass/glass_document.h	/^    GlassDocument(Xapian::Internal::intrusive_ptr<const Xapian::Database::Internal> db,$/;"	f	class:GlassDocument
GlassDocument	backends/glass/glass_document.h	/^class GlassDocument : public Xapian::Document::Internal {$/;"	c
GlassFLCursor	backends/glass/glass_freelist.h	/^    GlassFLCursor() : n(0), c(0) { }$/;"	f	class:GlassFLCursor
GlassFLCursor	backends/glass/glass_freelist.h	/^class GlassFLCursor {$/;"	c
GlassFreeList	backends/glass/glass_freelist.h	/^    GlassFreeList() {$/;"	f	class:GlassFreeList
GlassFreeList	backends/glass/glass_freelist.h	/^class GlassFreeList {$/;"	c
GlassFreeListChecker	backends/glass/glass_freelist.cc	/^GlassFreeListChecker::GlassFreeListChecker(const GlassFreeList & fl)$/;"	f	class:GlassFreeListChecker
GlassFreeListChecker	backends/glass/glass_freelist.h	/^class GlassFreeListChecker {$/;"	c
GlassLazyTable	backends/glass/glass_lazytable.h	/^    GlassLazyTable(const char * name_, const std::string & path, bool readonly)$/;"	f	class:GlassLazyTable
GlassLazyTable	backends/glass/glass_lazytable.h	/^    GlassLazyTable(const char * name_, int fd, off_t offset_, bool readonly)$/;"	f	class:GlassLazyTable
GlassLazyTable	backends/glass/glass_lazytable.h	/^class GlassLazyTable : public GlassTable {$/;"	c
GlassMetadataTermList	backends/glass/glass_metadata.cc	/^GlassMetadataTermList::GlassMetadataTermList($/;"	f	class:GlassMetadataTermList
GlassMetadataTermList	backends/glass/glass_metadata.h	/^class GlassMetadataTermList : public AllTermsList {$/;"	c
GlassPositionList	backends/glass/glass_positionlist.h	/^    GlassPositionList() { }$/;"	f	class:GlassPositionList
GlassPositionList	backends/glass/glass_positionlist.h	/^    GlassPositionList(const GlassTable * table, Xapian::docid did,$/;"	f	class:GlassPositionList
GlassPositionList	backends/glass/glass_positionlist.h	/^class GlassPositionList : public PositionList {$/;"	c
GlassPositionListTable	backends/glass/glass_positionlist.h	/^    GlassPositionListTable(const string & dbdir, bool readonly)$/;"	f	class:GlassPositionListTable
GlassPositionListTable	backends/glass/glass_positionlist.h	/^    GlassPositionListTable(int fd, off_t offset_, bool readonly_)$/;"	f	class:GlassPositionListTable
GlassPositionListTable	backends/glass/glass_positionlist.h	/^class GlassPositionListTable : public GlassLazyTable {$/;"	c
GlassPostList	backends/glass/glass_postlist.cc	/^GlassPostList::GlassPostList(intrusive_ptr<const GlassDatabase> this_db_,$/;"	f	class:GlassPostList
GlassPostList	backends/glass/glass_postlist.h	/^class GlassPostList : public LeafPostList {$/;"	c
GlassPostListTable	backends/glass/glass_postlist.h	/^	GlassPostListTable(const string & path_, bool readonly_)$/;"	f	class:GlassPostListTable
GlassPostListTable	backends/glass/glass_postlist.h	/^	GlassPostListTable(int fd, off_t offset_, bool readonly_)$/;"	f	class:GlassPostListTable
GlassPostListTable	backends/glass/glass_postlist.h	/^class GlassPostListTable : public GlassTable {$/;"	c
GlassSpellingTable	backends/glass/glass_spelling.h	/^    GlassSpellingTable(const std::string & dbdir, bool readonly)$/;"	f	class:GlassSpellingTable
GlassSpellingTable	backends/glass/glass_spelling.h	/^    GlassSpellingTable(int fd, off_t offset_, bool readonly)$/;"	f	class:GlassSpellingTable
GlassSpellingTable	backends/glass/glass_spelling.h	/^class GlassSpellingTable : public GlassLazyTable {$/;"	c
GlassSpellingTermList	backends/glass/glass_spelling.h	/^    explicit GlassSpellingTermList(const std::string & data_)$/;"	f	class:GlassSpellingTermList
GlassSpellingTermList	backends/glass/glass_spelling.h	/^class GlassSpellingTermList : public TermList {$/;"	c
GlassSpellingWordsList	backends/glass/glass_spellingwordslist.h	/^    GlassSpellingWordsList(Xapian::Internal::intrusive_ptr<const Xapian::Database::Internal> database_,$/;"	f	class:GlassSpellingWordsList
GlassSpellingWordsList	backends/glass/glass_spellingwordslist.h	/^class GlassSpellingWordsList : public AllTermsList {$/;"	c
GlassSynonymTable	backends/glass/glass_synonym.h	/^    GlassSynonymTable(const std::string & dbdir, bool readonly)$/;"	f	class:GlassSynonymTable
GlassSynonymTable	backends/glass/glass_synonym.h	/^    GlassSynonymTable(int fd, off_t offset_, bool readonly)$/;"	f	class:GlassSynonymTable
GlassSynonymTable	backends/glass/glass_synonym.h	/^class GlassSynonymTable : public GlassLazyTable {$/;"	c
GlassSynonymTermList	backends/glass/glass_synonym.h	/^    GlassSynonymTermList(Xapian::Internal::intrusive_ptr<const Xapian::Database::Internal> database_,$/;"	f	class:GlassSynonymTermList
GlassSynonymTermList	backends/glass/glass_synonym.h	/^class GlassSynonymTermList : public AllTermsList {$/;"	c
GlassTable	backends/glass/glass_table.cc	/^GlassTable::GlassTable(const char * tablename_, const string & path_,$/;"	f	class:GlassTable
GlassTable	backends/glass/glass_table.cc	/^GlassTable::GlassTable(const char * tablename_, int fd, off_t offset_,$/;"	f	class:GlassTable
GlassTable	backends/glass/glass_table.h	/^class GlassTable {$/;"	c
GlassTableCheck	backends/glass/glass_check.h	/^	GlassTableCheck(const char * tablename_, const std::string &path_,$/;"	f	class:GlassTableCheck
GlassTableCheck	backends/glass/glass_check.h	/^	GlassTableCheck(const char * tablename_, int fd, off_t offset_,$/;"	f	class:GlassTableCheck
GlassTableCheck	backends/glass/glass_check.h	/^class GlassTableCheck : public GlassTable {$/;"	c
GlassTermList	backends/glass/glass_termlist.cc	/^GlassTermList::GlassTermList(intrusive_ptr<const GlassDatabase> db_,$/;"	f	class:GlassTermList
GlassTermList	backends/glass/glass_termlist.h	/^class GlassTermList : public TermList {$/;"	c
GlassTermListTable	backends/glass/glass_termlisttable.h	/^    GlassTermListTable(const std::string & dbdir, bool readonly, bool lazy_)$/;"	f	class:GlassTermListTable
GlassTermListTable	backends/glass/glass_termlisttable.h	/^    GlassTermListTable(int fd, off_t offset_, bool readonly, bool lazy_)$/;"	f	class:GlassTermListTable
GlassTermListTable	backends/glass/glass_termlisttable.h	/^class GlassTermListTable : public GlassTable {$/;"	c
GlassValueList	backends/glass/glass_valuelist.h	/^    GlassValueList(Xapian::valueno slot_,$/;"	f	class:GlassValueList
GlassValueList	backends/glass/glass_valuelist.h	/^class GlassValueList : public Xapian::ValueIterator::Internal {$/;"	c
GlassValueManager	backends/glass/glass_values.h	/^    GlassValueManager(GlassPostListTable * postlist_table_,$/;"	f	class:GlassValueManager
GlassValueManager	backends/glass/glass_values.h	/^class GlassValueManager {$/;"	c
GlassVersion	backends/glass/glass_version.cc	/^GlassVersion::GlassVersion(int fd_)$/;"	f	class:GlassVersion
GlassVersion	backends/glass/glass_version.h	/^    explicit GlassVersion(const std::string & db_dir_ = std::string())$/;"	f	class:GlassVersion
GlassVersion	backends/glass/glass_version.h	/^class GlassVersion {$/;"	c
GlassWritableDatabase	backends/glass/glass_database.cc	/^GlassWritableDatabase::GlassWritableDatabase(const string &dir, int flags,$/;"	f	class:GlassWritableDatabase
GlassWritableDatabase	backends/glass/glass_database.h	/^class GlassWritableDatabase : public GlassDatabase {$/;"	c
GreatCircleMetric	geospatial/latlong_metrics.cc	/^GreatCircleMetric::GreatCircleMetric()$/;"	f	class:GreatCircleMetric
GreatCircleMetric	geospatial/latlong_metrics.cc	/^GreatCircleMetric::GreatCircleMetric(double radius_)$/;"	f	class:GreatCircleMetric
GreatCircleMetric	include/xapian/geospatial.h	/^class XAPIAN_VISIBILITY_DEFAULT GreatCircleMetric : public LatLongMetric {$/;"	c	namespace:Xapian
GrepMatchDecider	tests/api_db.cc	/^    explicit GrepMatchDecider(const string& needle_)$/;"	f	class:GrepMatchDecider
GrepMatchDecider	tests/api_db.cc	/^class GrepMatchDecider : public Xapian::MatchDecider {$/;"	c	file:
HATE	queryparser/queryparser_token.h	9;"	d
HATE_AFTER_AND	queryparser/queryparser_token.h	10;"	d
HAVE_CLOCK_GETTIME	config.h	20;"	d
HAVE_CXX11	Makefile	/^HAVE_CXX11 = $/;"	m
HAVE_CXX11	docs/Makefile	/^HAVE_CXX11 = $/;"	m
HAVE_CXX11	tests/Makefile	/^HAVE_CXX11 = $/;"	m
HAVE_CXXABI_H	config.h	29;"	d
HAVE_DECL_EXP10	config.h	33;"	d
HAVE_DECL_LOG2	config.h	37;"	d
HAVE_DECL_STRERROR_R	config.h	41;"	d
HAVE_DECL__BYTESWAP_ULONG	config.h	45;"	d
HAVE_DECL__BYTESWAP_USHORT	config.h	49;"	d
HAVE_DECL__PUTENV_S	config.h	53;"	d
HAVE_DECL___BUILTIN_ADD_OVERFLOW	config.h	57;"	d
HAVE_DECL___BUILTIN_BSWAP16	config.h	61;"	d
HAVE_DECL___BUILTIN_BSWAP32	config.h	65;"	d
HAVE_DECL___BUILTIN_CLZ	config.h	69;"	d
HAVE_DECL___BUILTIN_CLZL	config.h	73;"	d
HAVE_DECL___BUILTIN_CLZLL	config.h	77;"	d
HAVE_DECL___BUILTIN_CTZ	config.h	81;"	d
HAVE_DECL___BUILTIN_CTZL	config.h	85;"	d
HAVE_DECL___BUILTIN_CTZLL	config.h	89;"	d
HAVE_DECL___BUILTIN_EXPECT	config.h	93;"	d
HAVE_DECL___BUILTIN_MUL_OVERFLOW	config.h	97;"	d
HAVE_DECL___BUILTIN_POPCOUNT	config.h	101;"	d
HAVE_DECL___BUILTIN_POPCOUNTL	config.h	105;"	d
HAVE_DECL___BUILTIN_POPCOUNTLL	config.h	109;"	d
HAVE_DECL___EXP10	config.h	113;"	d
HAVE_DECL___POPCNT	config.h	117;"	d
HAVE_DECL___POPCNT64	config.h	121;"	d
HAVE_DISK_BACKEND	backends/dbfactory.cc	464;"	d	file:
HAVE_DLFCN_H	config.h	124;"	d
HAVE_DO_CLZ	common/pack.h	246;"	d
HAVE_FCNTL_H	config.h	127;"	d
HAVE_FDATASYNC	config.h	130;"	d
HAVE_FORK	config.h	133;"	d
HAVE_FSYNC	config.h	136;"	d
HAVE_FTIME	config.h	139;"	d
HAVE_FTRUNCATE	config.h	142;"	d
HAVE_GETDIRENTRIES	config.h	145;"	d
HAVE_GETHOSTNAME	config.h	148;"	d
HAVE_GETRLIMIT	config.h	151;"	d
HAVE_GETRUSAGE	config.h	154;"	d
HAVE_GETTIMEOFDAY	config.h	157;"	d
HAVE_INTTYPES_H	config.h	160;"	d
HAVE_LIMITS_H	config.h	163;"	d
HAVE_LINK	config.h	166;"	d
HAVE_MEMORY_H	config.h	169;"	d
HAVE_NANOSLEEP	config.h	172;"	d
HAVE_NFTW	config.h	175;"	d
HAVE_POSIX_FADVISE	config.h	178;"	d
HAVE_PREAD	config.h	181;"	d
HAVE_PWRITE	config.h	184;"	d
HAVE_RANDOM	config.h	187;"	d
HAVE_SETENV	config.h	190;"	d
HAVE_SIGACTION	config.h	193;"	d
HAVE_SIGSETJMP	config.h	196;"	d
HAVE_SLEEP	config.h	199;"	d
HAVE_SOCKETPAIR	config.h	202;"	d
HAVE_SRANDOM	config.h	205;"	d
HAVE_STDINT_H	config.h	208;"	d
HAVE_STDLIB_H	config.h	211;"	d
HAVE_STRERROR_R	config.h	214;"	d
HAVE_STRINGS_H	config.h	217;"	d
HAVE_STRING_H	config.h	220;"	d
HAVE_SYSCONF	config.h	223;"	d
HAVE_SYS_ERRLIST_AND_SYS_NERR	config.h	226;"	d
HAVE_SYS_ERRNO_H	config.h	229;"	d
HAVE_SYS_RESOURCE_H	config.h	232;"	d
HAVE_SYS_SELECT_H	config.h	235;"	d
HAVE_SYS_STAT_H	config.h	238;"	d
HAVE_SYS_TYPES_H	config.h	241;"	d
HAVE_SYS_UTSNAME_H	config.h	244;"	d
HAVE_TIMER_CREATE	config.h	247;"	d
HAVE_TIMES	config.h	250;"	d
HAVE_UNISTD_H	config.h	253;"	d
HAVE_ZLIB_H	config.h	268;"	d
HAVE__SYS_ERRLIST_AND__SYS_NERR	config.h	271;"	d
HAVE___BUILTIN_EXP10	config.h	274;"	d
HEAD	languages/compiler/space.c	8;"	d	file:
HEAD	languages/steminternal.h	34;"	d
HEADERS	Makefile	/^HEADERS = $(inc_HEADERS) $(nodist_xapianinclude_HEADERS) \\$/;"	m
HEADERS	tests/Makefile	/^HEADERS = $(noinst_HEADERS)$/;"	m
HELP2MAN	Makefile	/^HELP2MAN = $/;"	m
HELP2MAN	docs/Makefile	/^HELP2MAN = $/;"	m
HELP2MAN	tests/Makefile	/^HELP2MAN = $/;"	m
HEX_MASK	common/stringutils.h	/^	const unsigned char HEX_MASK = 0x0f;$/;"	m	namespace:Xapian::Internal
HUNGARIAN	languages/sbl-dispatch.h	/^    HUNGARIAN = 13,$/;"	e	enum:sbl_code
HostFieldProcessor	tests/api_queryparser.cc	/^class HostFieldProcessor : public Xapian::FieldProcessor {$/;"	c	file:
I	languages/compiler/header.h	/^    int I[10];           \/* integers *\/$/;"	m	struct:generator
I2	backends/chert/chert_table.h	/^const int I2 = 2;$/;"	v
I2	backends/glass/glass_table.h	/^const int I2 = 2;$/;"	m	namespace:Glass
IF_NOT_CLOSEDEXC	tests/api_closedb.cc	36;"	d	file:
INCLUDE_QUERY_TERMS	include/xapian/enquire.h	/^	static const int INCLUDE_QUERY_TERMS = 1;$/;"	m	class:Xapian::Enquire
INCOMPLETE	queryparser/lemon.c	/^  INCOMPLETE$/;"	e	enum:cfgstatus	file:
INDENT	examples/quest.cc	144;"	d	file:
INDONESIAN	languages/sbl-dispatch.h	/^    INDONESIAN = 14,$/;"	e	enum:sbl_code
INF	api/editdistance.cc	137;"	d	file:
INITIALIZE	queryparser/lemon.c	/^  INITIALIZE,$/;"	e	enum:e_state	file:
INITIAL_QUOTE_PUNCTUATION	include/xapian/unicode.h	/^    INITIAL_QUOTE_PUNCTUATION,$/;"	e	enum:Xapian::Unicode::__anon13
INMEMORY	tests/harness/testrunner.h	/^	INMEMORY	= 0x00002000,$/;"	e	enum:TestRunner::__anon35
INSTALL	Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	docs/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	tests/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	docs/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	tests/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_HEADER	Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	docs/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	tests/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	docs/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	tests/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_SCRIPT	Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	docs/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	tests/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_PROGRAM	Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	docs/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	tests/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INTERFACE	queryparser/queryparser_internal.cc	1241;"	d	file:
INUSE	backends/flint_lock.h	/^	INUSE, \/\/ Already locked by someone else.$/;"	e	enum:FlintLock::__anon2
IN_RHS	queryparser/lemon.c	/^  IN_RHS,$/;"	e	enum:e_state	file:
IRISH	languages/sbl-dispatch.h	/^    IRISH = 15,$/;"	e	enum:sbl_code
ISALNUM	queryparser/lemon.c	24;"	d	file:
ISALPHA	queryparser/lemon.c	25;"	d	file:
ISDIGIT	queryparser/lemon.c	23;"	d	file:
ISLOWER	queryparser/lemon.c	27;"	d	file:
ISOPT	queryparser/lemon.c	1937;"	d	file:
ISSPACE	queryparser/lemon.c	22;"	d	file:
ISUPPER	queryparser/lemon.c	26;"	d	file:
IS_ALPHA	common/stringutils.h	/^	const unsigned char IS_ALPHA = 0x20; \/\/ NB Same as ASCII "case bit".$/;"	m	namespace:Xapian::Internal
IS_DIGIT	common/stringutils.h	/^	const unsigned char IS_DIGIT = 0x40;$/;"	m	namespace:Xapian::Internal
IS_SPACE	common/stringutils.h	/^	const unsigned char IS_SPACE = 0x80;$/;"	m	namespace:Xapian::Internal
IS_UPPER	common/stringutils.h	/^	const unsigned char IS_UPPER = 0x10;$/;"	m	namespace:Xapian::Internal
ITALIAN	languages/sbl-dispatch.h	/^    ITALIAN = 16,$/;"	e	enum:sbl_code
ITEM_SIZE_MASK	backends/glass/glass_table.h	/^const int ITEM_SIZE_MASK = (0xffff &~ (I_MASK << 8));$/;"	m	namespace:Glass
I_COMPRESSED_BIT	backends/glass/glass_table.h	/^const int I_COMPRESSED_BIT = 0x80;$/;"	m	namespace:Glass
I_FIRST_BIT	backends/glass/glass_table.h	/^const int I_FIRST_BIT = 0x20;$/;"	m	namespace:Glass
I_LAST_BIT	backends/glass/glass_table.h	/^const int I_LAST_BIT = 0x40;$/;"	m	namespace:Glass
I_MASK	backends/glass/glass_table.h	/^const int I_MASK = (I_COMPRESSED_BIT|I_LAST_BIT|I_FIRST_BIT);$/;"	m	namespace:Glass
I_measure	languages/indonesian.h	/^    int I_measure;$/;"	m	class:Xapian::InternalStemIndonesian
I_p1	languages/basque.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemBasque
I_p1	languages/catalan.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemCatalan
I_p1	languages/danish.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemDanish
I_p1	languages/dutch.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemDutch
I_p1	languages/earlyenglish.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemEarlyenglish
I_p1	languages/english.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemEnglish
I_p1	languages/finnish.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemFinnish
I_p1	languages/french.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemFrench
I_p1	languages/german.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemGerman
I_p1	languages/german2.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemGerman2
I_p1	languages/hungarian.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemHungarian
I_p1	languages/irish.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemIrish
I_p1	languages/italian.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemItalian
I_p1	languages/kraaij_pohlmann.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemKraaij_pohlmann
I_p1	languages/lithuanian.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemLithuanian
I_p1	languages/norwegian.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemNorwegian
I_p1	languages/porter.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemPorter
I_p1	languages/portuguese.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemPortuguese
I_p1	languages/romanian.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemRomanian
I_p1	languages/spanish.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemSpanish
I_p1	languages/swedish.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemSwedish
I_p2	languages/armenian.h	/^    int I_p2;$/;"	m	class:Xapian::InternalStemArmenian
I_p2	languages/basque.h	/^    int I_p2;$/;"	m	class:Xapian::InternalStemBasque
I_p2	languages/catalan.h	/^    int I_p2;$/;"	m	class:Xapian::InternalStemCatalan
I_p2	languages/dutch.h	/^    int I_p2;$/;"	m	class:Xapian::InternalStemDutch
I_p2	languages/earlyenglish.h	/^    int I_p2;$/;"	m	class:Xapian::InternalStemEarlyenglish
I_p2	languages/english.h	/^    int I_p2;$/;"	m	class:Xapian::InternalStemEnglish
I_p2	languages/finnish.h	/^    int I_p2;$/;"	m	class:Xapian::InternalStemFinnish
I_p2	languages/french.h	/^    int I_p2;$/;"	m	class:Xapian::InternalStemFrench
I_p2	languages/german.h	/^    int I_p2;$/;"	m	class:Xapian::InternalStemGerman
I_p2	languages/german2.h	/^    int I_p2;$/;"	m	class:Xapian::InternalStemGerman2
I_p2	languages/irish.h	/^    int I_p2;$/;"	m	class:Xapian::InternalStemIrish
I_p2	languages/italian.h	/^    int I_p2;$/;"	m	class:Xapian::InternalStemItalian
I_p2	languages/kraaij_pohlmann.h	/^    int I_p2;$/;"	m	class:Xapian::InternalStemKraaij_pohlmann
I_p2	languages/porter.h	/^    int I_p2;$/;"	m	class:Xapian::InternalStemPorter
I_p2	languages/portuguese.h	/^    int I_p2;$/;"	m	class:Xapian::InternalStemPortuguese
I_p2	languages/romanian.h	/^    int I_p2;$/;"	m	class:Xapian::InternalStemRomanian
I_p2	languages/russian.h	/^    int I_p2;$/;"	m	class:Xapian::InternalStemRussian
I_p2	languages/spanish.h	/^    int I_p2;$/;"	m	class:Xapian::InternalStemSpanish
I_pV	languages/armenian.h	/^    int I_pV;$/;"	m	class:Xapian::InternalStemArmenian
I_pV	languages/basque.h	/^    int I_pV;$/;"	m	class:Xapian::InternalStemBasque
I_pV	languages/french.h	/^    int I_pV;$/;"	m	class:Xapian::InternalStemFrench
I_pV	languages/irish.h	/^    int I_pV;$/;"	m	class:Xapian::InternalStemIrish
I_pV	languages/italian.h	/^    int I_pV;$/;"	m	class:Xapian::InternalStemItalian
I_pV	languages/portuguese.h	/^    int I_pV;$/;"	m	class:Xapian::InternalStemPortuguese
I_pV	languages/romanian.h	/^    int I_pV;$/;"	m	class:Xapian::InternalStemRomanian
I_pV	languages/russian.h	/^    int I_pV;$/;"	m	class:Xapian::InternalStemRussian
I_pV	languages/spanish.h	/^    int I_pV;$/;"	m	class:Xapian::InternalStemSpanish
I_prefix	languages/indonesian.h	/^    int I_prefix;$/;"	m	class:Xapian::InternalStemIndonesian
I_x	languages/danish.h	/^    int I_x;$/;"	m	class:Xapian::InternalStemDanish
I_x	languages/german.h	/^    int I_x;$/;"	m	class:Xapian::InternalStemGerman
I_x	languages/german2.h	/^    int I_x;$/;"	m	class:Xapian::InternalStemGerman2
I_x	languages/norwegian.h	/^    int I_x;$/;"	m	class:Xapian::InternalStemNorwegian
I_x	languages/swedish.h	/^    int I_x;$/;"	m	class:Xapian::InternalStemSwedish
IfB2Weight	include/xapian/weight.h	/^    IfB2Weight() : param_c(1.0) {$/;"	f	class:Xapian::IfB2Weight
IfB2Weight	include/xapian/weight.h	/^class XAPIAN_VISIBILITY_DEFAULT IfB2Weight : public Weight {$/;"	c	namespace:Xapian
IfB2Weight	weight/ifb2weight.cc	/^IfB2Weight::IfB2Weight(double c)$/;"	f	class:Xapian::IfB2Weight
InL2Weight	include/xapian/weight.h	/^    InL2Weight()$/;"	f	class:Xapian::InL2Weight
InL2Weight	include/xapian/weight.h	/^class XAPIAN_VISIBILITY_DEFAULT InL2Weight : public Weight {$/;"	c	namespace:Xapian
InL2Weight	weight/inl2weight.cc	/^InL2Weight::InL2Weight(double c)$/;"	f	class:Xapian::InL2Weight
InMemory	include/xapian/dbfactory.h	/^namespace InMemory {$/;"	n	namespace:Xapian
InMemoryAllDocsPostList	backends/inmemory/inmemory_database.cc	/^InMemoryAllDocsPostList::InMemoryAllDocsPostList(intrusive_ptr<const InMemoryDatabase> db_)$/;"	f	class:InMemoryAllDocsPostList
InMemoryAllDocsPostList	backends/inmemory/inmemory_database.h	/^class InMemoryAllDocsPostList : public LeafPostList {$/;"	c
InMemoryAllTermsList	backends/inmemory/inmemory_alltermslist.h	/^	InMemoryAllTermsList($/;"	f	class:InMemoryAllTermsList
InMemoryAllTermsList	backends/inmemory/inmemory_alltermslist.h	/^class InMemoryAllTermsList : public AllTermsList$/;"	c
InMemoryDatabase	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::InMemoryDatabase()$/;"	f	class:InMemoryDatabase
InMemoryDatabase	backends/inmemory/inmemory_database.h	/^class InMemoryDatabase : public Xapian::Database::Internal {$/;"	c
InMemoryDoc	backends/inmemory/inmemory_database.h	/^	InMemoryDoc() : is_valid(false) {}$/;"	f	class:InMemoryDoc
InMemoryDoc	backends/inmemory/inmemory_database.h	/^	explicit InMemoryDoc(bool is_valid_) : is_valid(is_valid_) {}$/;"	f	class:InMemoryDoc
InMemoryDoc	backends/inmemory/inmemory_database.h	/^class InMemoryDoc {$/;"	c
InMemoryDocument	backends/inmemory/inmemory_document.h	/^    InMemoryDocument(const Xapian::Database::Internal *db, Xapian::docid did_)$/;"	f	class:InMemoryDocument
InMemoryDocument	backends/inmemory/inmemory_document.h	/^class InMemoryDocument : public Xapian::Document::Internal {$/;"	c
InMemoryPositionList	backends/inmemory/inmemory_positionlist.cc	/^InMemoryPositionList::InMemoryPositionList(const OmDocumentTerm::term_positions & positions_)$/;"	f	class:InMemoryPositionList
InMemoryPositionList	backends/inmemory/inmemory_positionlist.h	/^	InMemoryPositionList() : iterating_in_progress(false) { }$/;"	f	class:InMemoryPositionList
InMemoryPositionList	backends/inmemory/inmemory_positionlist.h	/^	explicit InMemoryPositionList(bool)$/;"	f	class:InMemoryPositionList
InMemoryPositionList	backends/inmemory/inmemory_positionlist.h	/^class InMemoryPositionList : public PositionList$/;"	c
InMemoryPostList	backends/inmemory/inmemory_database.cc	/^InMemoryPostList::InMemoryPostList(intrusive_ptr<const InMemoryDatabase> db_,$/;"	f	class:InMemoryPostList
InMemoryPostList	backends/inmemory/inmemory_database.h	/^class InMemoryPostList : public LeafPostList {$/;"	c
InMemoryPosting	backends/inmemory/inmemory_database.h	/^class InMemoryPosting {$/;"	c
InMemoryPostingLessThan	backends/inmemory/inmemory_database.h	/^class InMemoryPostingLessThan {$/;"	c
InMemoryTerm	backends/inmemory/inmemory_database.h	/^	InMemoryTerm() : term_freq(0), collection_freq(0) {}$/;"	f	class:InMemoryTerm
InMemoryTerm	backends/inmemory/inmemory_database.h	/^class InMemoryTerm {$/;"	c
InMemoryTermEntry	backends/inmemory/inmemory_database.h	/^class InMemoryTermEntry {$/;"	c
InMemoryTermEntryLessThan	backends/inmemory/inmemory_database.h	/^class InMemoryTermEntryLessThan {$/;"	c
InMemoryTermList	backends/inmemory/inmemory_database.cc	/^InMemoryTermList::InMemoryTermList(intrusive_ptr<const InMemoryDatabase> db_,$/;"	f	class:InMemoryTermList
InMemoryTermList	backends/inmemory/inmemory_database.h	/^class InMemoryTermList : public TermList {$/;"	c
IneB2Weight	include/xapian/weight.h	/^    IneB2Weight() : param_c(1.0) {$/;"	f	class:Xapian::IneB2Weight
IneB2Weight	include/xapian/weight.h	/^class XAPIAN_VISIBILITY_DEFAULT IneB2Weight : public Weight {$/;"	c	namespace:Xapian
IneB2Weight	weight/ineb2weight.cc	/^IneB2Weight::IneB2Weight(double c) : param_c(c) {$/;"	f	class:Xapian::IneB2Weight
Internal	api/compactor.cc	/^    Internal() : block_size(8192), flags(FULL) { }$/;"	f	class:Xapian::Compactor::Internal
Internal	api/compactor.cc	/^class Compactor::Internal : public Xapian::Internal::intrusive_base {$/;"	c	class:Xapian::Compactor	file:
Internal	api/constinfo.cc	/^namespace Internal {$/;"	n	namespace:Xapian	file:
Internal	api/omenquire.cc	/^Enquire::Internal::Internal(const Database &db_)$/;"	f	class:Xapian::Enquire::Internal
Internal	api/omenquire.cc	/^namespace Internal {$/;"	n	namespace:Xapian	file:
Internal	api/omenquireinternal.h	/^	Internal()$/;"	f	class:Xapian::MSet::Internal
Internal	api/omenquireinternal.h	/^	Internal(Xapian::doccount firstitem_,$/;"	f	class:Xapian::MSet::Internal
Internal	api/omenquireinternal.h	/^class Enquire::Internal : public Xapian::Internal::intrusive_base {$/;"	c	class:Xapian::Enquire
Internal	api/omenquireinternal.h	/^class MSet::Internal : public Xapian::Internal::intrusive_base {$/;"	c	class:Xapian::MSet
Internal	api/omenquireinternal.h	/^class RSet::Internal : public Xapian::Internal::intrusive_base {$/;"	c	class:Xapian::RSet
Internal	api/omenquireinternal.h	/^namespace Internal {$/;"	n	namespace:Xapian
Internal	api/postlist.h	/^    Internal() { }$/;"	f	class:Xapian::PostingIterator::Internal
Internal	api/postlist.h	/^class Xapian::PostingIterator::Internal : public Xapian::Internal::intrusive_base {$/;"	c	class:Xapian::PostingIterator
Internal	api/queryinternal.cc	/^namespace Internal {$/;"	n	namespace:Xapian	file:
Internal	api/queryinternal.h	/^namespace Internal {$/;"	n	namespace:Xapian
Internal	api/registry.cc	/^Registry::Internal::Internal()$/;"	f	class:Xapian::Registry::Internal
Internal	api/registry.cc	/^class Xapian::Registry::Internal : public Xapian::Internal::intrusive_base {$/;"	c	class:Xapian::Registry	file:
Internal	api/replication.cc	/^DatabaseReplica::Internal::Internal(const string & path_)$/;"	f	class:DatabaseReplica::Internal
Internal	api/replication.cc	/^class DatabaseReplica::Internal : public Xapian::Internal::intrusive_base {$/;"	c	class:DatabaseReplica	file:
Internal	api/termlist.h	/^    Internal() { }$/;"	f	class:Xapian::TermIterator::Internal
Internal	api/termlist.h	/^    namespace Internal {$/;"	n	namespace:Xapian
Internal	api/termlist.h	/^class Xapian::TermIterator::Internal : public Xapian::Internal::intrusive_base {$/;"	c	class:Xapian::TermIterator
Internal	backends/chert/chert_termlist.h	/^    namespace Internal {$/;"	n	namespace:Xapian
Internal	backends/database.h	/^	Internal() : transaction_state(TRANSACTION_NONE) { }$/;"	f	class:Xapian::Database::Internal
Internal	backends/database.h	/^class Database::Internal : public Xapian::Internal::intrusive_base {$/;"	c	class:Xapian::Database
Internal	backends/document.h	/^	Internal()$/;"	f	class:Xapian::Document::Internal
Internal	backends/document.h	/^	Internal(Xapian::Internal::intrusive_ptr<const Xapian::Database::Internal> database_,$/;"	f	class:Xapian::Document::Internal
Internal	backends/document.h	/^class Xapian::Document::Internal : public Xapian::Internal::intrusive_base {$/;"	c	class:Xapian::Document
Internal	backends/glass/glass_termlist.h	/^    namespace Internal {$/;"	n	namespace:Xapian
Internal	backends/positionlist.h	/^    Internal() { }$/;"	f	class:Xapian::PositionIterator::Internal
Internal	backends/positionlist.h	/^class PositionIterator::Internal : public Xapian::Internal::intrusive_base$/;"	c	class:Xapian::PositionIterator
Internal	backends/valuelist.h	/^    Internal() { }$/;"	f	class:Xapian::ValueIterator::Internal
Internal	backends/valuelist.h	/^class Xapian::ValueIterator::Internal : public Xapian::Internal::intrusive_base {$/;"	c	class:Xapian::ValueIterator
Internal	common/closefrom.h	/^namespace Internal {$/;"	n	namespace:Xapian
Internal	common/omassert.cc	/^namespace Internal {$/;"	n	namespace:Xapian	file:
Internal	common/omassert.h	/^namespace Internal {$/;"	n	namespace:Xapian
Internal	common/pretty.h	/^    namespace Internal {$/;"	n	namespace:Xapian
Internal	common/str.cc	/^namespace Internal {$/;"	n	namespace:Xapian	file:
Internal	common/str.h	/^namespace Internal {$/;"	n	namespace:Xapian
Internal	common/stringutils.h	/^    namespace Internal {$/;"	n	namespace:Xapian
Internal	expand/bo1eweight.cc	/^namespace Internal {$/;"	n	namespace:Xapian	file:
Internal	expand/esetinternal.h	/^    Internal() : ebound(0) { }$/;"	f	class:Xapian::ESet::Internal
Internal	expand/esetinternal.h	/^    namespace Internal {$/;"	n	namespace:Xapian
Internal	expand/esetinternal.h	/^class ESet::Internal : public Xapian::Internal::intrusive_base {$/;"	c	class:Xapian::ESet
Internal	expand/expandweight.cc	/^namespace Internal {$/;"	n	namespace:Xapian	file:
Internal	expand/expandweight.h	/^namespace Internal {$/;"	n	namespace:Xapian
Internal	expand/ortermlist.h	/^namespace Internal {$/;"	n	namespace:Xapian
Internal	expand/tradeweight.cc	/^namespace Internal {$/;"	n	namespace:Xapian	file:
Internal	include/xapian/constinfo.h	/^namespace Internal {$/;"	n	namespace:Xapian
Internal	include/xapian/intrusive_ptr.h	/^namespace Internal {$/;"	n	namespace:Xapian
Internal	include/xapian/matchspy.h	/^	Internal() : slot(Xapian::BAD_VALUENO), total(0) {}$/;"	f	struct:Xapian::ValueCountMatchSpy::Internal
Internal	include/xapian/matchspy.h	/^	explicit Internal(Xapian::valueno slot_) : slot(slot_), total(0) {}$/;"	f	struct:Xapian::ValueCountMatchSpy::Internal
Internal	include/xapian/matchspy.h	/^    struct XAPIAN_VISIBILITY_DEFAULT Internal$/;"	s	class:Xapian::ValueCountMatchSpy
Internal	include/xapian/query.h	/^    XAPIAN_NOTHROW(Internal()) { }$/;"	f	class:Xapian::Query::Internal
Internal	include/xapian/query.h	/^class Query::Internal : public Xapian::Internal::intrusive_base {$/;"	c	class:Xapian::Query
Internal	include/xapian/query.h	/^namespace Internal {$/;"	n	namespace:Xapian
Internal	include/xapian/unicode.h	/^namespace Internal {$/;"	n	namespace:Xapian::Unicode
Internal	queryparser/queryparser_internal.h	/^    Internal() : stem_action(STEM_SOME), stopper(NULL),$/;"	f	class:Xapian::QueryParser::Internal
Internal	queryparser/queryparser_internal.h	/^class QueryParser::Internal : public Xapian::Internal::intrusive_base {$/;"	c	class:Xapian::QueryParser
Internal	queryparser/termgenerator_internal.h	/^    Internal() : strategy(STEM_SOME), stopper(NULL), stop_mode(STOP_STEMMED),$/;"	f	class:Xapian::TermGenerator::Internal
Internal	queryparser/termgenerator_internal.h	/^class TermGenerator::Internal : public Xapian::Internal::intrusive_base {$/;"	c	class:Xapian::TermGenerator
Internal	weight/weightinternal.h	/^    Internal()$/;"	f	class:Xapian::Weight::Internal
Internal	weight/weightinternal.h	/^class Weight::Internal {$/;"	c	class:Xapian::Weight
InternalError	include/xapian/error.h	/^    InternalError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::InternalError
InternalError	include/xapian/error.h	/^    InternalError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::InternalError
InternalError	include/xapian/error.h	/^    InternalError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::InternalError
InternalError	include/xapian/error.h	/^    InternalError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::InternalError
InternalError	include/xapian/error.h	/^    explicit InternalError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::InternalError
InternalError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT InternalError : public RuntimeError {$/;"	c	namespace:Xapian
InternalStemArabic	languages/arabic.cc	/^Xapian::InternalStemArabic::InternalStemArabic()$/;"	f	class:Xapian::InternalStemArabic
InternalStemArabic	languages/arabic.h	/^class InternalStemArabic : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemArmenian	languages/armenian.cc	/^Xapian::InternalStemArmenian::InternalStemArmenian()$/;"	f	class:Xapian::InternalStemArmenian
InternalStemArmenian	languages/armenian.h	/^class InternalStemArmenian : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemBasque	languages/basque.cc	/^Xapian::InternalStemBasque::InternalStemBasque()$/;"	f	class:Xapian::InternalStemBasque
InternalStemBasque	languages/basque.h	/^class InternalStemBasque : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemCatalan	languages/catalan.cc	/^Xapian::InternalStemCatalan::InternalStemCatalan()$/;"	f	class:Xapian::InternalStemCatalan
InternalStemCatalan	languages/catalan.h	/^class InternalStemCatalan : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemDanish	languages/danish.cc	/^Xapian::InternalStemDanish::InternalStemDanish()$/;"	f	class:Xapian::InternalStemDanish
InternalStemDanish	languages/danish.h	/^class InternalStemDanish : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemDutch	languages/dutch.cc	/^Xapian::InternalStemDutch::InternalStemDutch()$/;"	f	class:Xapian::InternalStemDutch
InternalStemDutch	languages/dutch.h	/^class InternalStemDutch : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemEarlyenglish	languages/earlyenglish.cc	/^Xapian::InternalStemEarlyenglish::InternalStemEarlyenglish()$/;"	f	class:Xapian::InternalStemEarlyenglish
InternalStemEarlyenglish	languages/earlyenglish.h	/^class InternalStemEarlyenglish : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemEnglish	languages/english.cc	/^Xapian::InternalStemEnglish::InternalStemEnglish()$/;"	f	class:Xapian::InternalStemEnglish
InternalStemEnglish	languages/english.h	/^class InternalStemEnglish : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemFinnish	languages/finnish.cc	/^Xapian::InternalStemFinnish::InternalStemFinnish()$/;"	f	class:Xapian::InternalStemFinnish
InternalStemFinnish	languages/finnish.h	/^class InternalStemFinnish : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemFrench	languages/french.cc	/^Xapian::InternalStemFrench::InternalStemFrench()$/;"	f	class:Xapian::InternalStemFrench
InternalStemFrench	languages/french.h	/^class InternalStemFrench : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemGerman	languages/german.cc	/^Xapian::InternalStemGerman::InternalStemGerman()$/;"	f	class:Xapian::InternalStemGerman
InternalStemGerman	languages/german.h	/^class InternalStemGerman : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemGerman2	languages/german2.cc	/^Xapian::InternalStemGerman2::InternalStemGerman2()$/;"	f	class:Xapian::InternalStemGerman2
InternalStemGerman2	languages/german2.h	/^class InternalStemGerman2 : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemHungarian	languages/hungarian.cc	/^Xapian::InternalStemHungarian::InternalStemHungarian()$/;"	f	class:Xapian::InternalStemHungarian
InternalStemHungarian	languages/hungarian.h	/^class InternalStemHungarian : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemIndonesian	languages/indonesian.cc	/^Xapian::InternalStemIndonesian::InternalStemIndonesian()$/;"	f	class:Xapian::InternalStemIndonesian
InternalStemIndonesian	languages/indonesian.h	/^class InternalStemIndonesian : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemIrish	languages/irish.cc	/^Xapian::InternalStemIrish::InternalStemIrish()$/;"	f	class:Xapian::InternalStemIrish
InternalStemIrish	languages/irish.h	/^class InternalStemIrish : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemItalian	languages/italian.cc	/^Xapian::InternalStemItalian::InternalStemItalian()$/;"	f	class:Xapian::InternalStemItalian
InternalStemItalian	languages/italian.h	/^class InternalStemItalian : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemKraaij_pohlmann	languages/kraaij_pohlmann.cc	/^Xapian::InternalStemKraaij_pohlmann::InternalStemKraaij_pohlmann()$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
InternalStemKraaij_pohlmann	languages/kraaij_pohlmann.h	/^class InternalStemKraaij_pohlmann : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemLithuanian	languages/lithuanian.cc	/^Xapian::InternalStemLithuanian::InternalStemLithuanian()$/;"	f	class:Xapian::InternalStemLithuanian
InternalStemLithuanian	languages/lithuanian.h	/^class InternalStemLithuanian : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemLovins	languages/lovins.cc	/^Xapian::InternalStemLovins::InternalStemLovins()$/;"	f	class:Xapian::InternalStemLovins
InternalStemLovins	languages/lovins.h	/^class InternalStemLovins : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemNepali	languages/nepali.cc	/^Xapian::InternalStemNepali::InternalStemNepali()$/;"	f	class:Xapian::InternalStemNepali
InternalStemNepali	languages/nepali.h	/^class InternalStemNepali : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemNorwegian	languages/norwegian.cc	/^Xapian::InternalStemNorwegian::InternalStemNorwegian()$/;"	f	class:Xapian::InternalStemNorwegian
InternalStemNorwegian	languages/norwegian.h	/^class InternalStemNorwegian : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemPorter	languages/porter.cc	/^Xapian::InternalStemPorter::InternalStemPorter()$/;"	f	class:Xapian::InternalStemPorter
InternalStemPorter	languages/porter.h	/^class InternalStemPorter : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemPortuguese	languages/portuguese.cc	/^Xapian::InternalStemPortuguese::InternalStemPortuguese()$/;"	f	class:Xapian::InternalStemPortuguese
InternalStemPortuguese	languages/portuguese.h	/^class InternalStemPortuguese : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemRomanian	languages/romanian.cc	/^Xapian::InternalStemRomanian::InternalStemRomanian()$/;"	f	class:Xapian::InternalStemRomanian
InternalStemRomanian	languages/romanian.h	/^class InternalStemRomanian : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemRussian	languages/russian.cc	/^Xapian::InternalStemRussian::InternalStemRussian()$/;"	f	class:Xapian::InternalStemRussian
InternalStemRussian	languages/russian.h	/^class InternalStemRussian : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemSpanish	languages/spanish.cc	/^Xapian::InternalStemSpanish::InternalStemSpanish()$/;"	f	class:Xapian::InternalStemSpanish
InternalStemSpanish	languages/spanish.h	/^class InternalStemSpanish : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemSwedish	languages/swedish.cc	/^Xapian::InternalStemSwedish::InternalStemSwedish()$/;"	f	class:Xapian::InternalStemSwedish
InternalStemSwedish	languages/swedish.h	/^class InternalStemSwedish : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemTamil	languages/tamil.cc	/^Xapian::InternalStemTamil::InternalStemTamil()$/;"	f	class:Xapian::InternalStemTamil
InternalStemTamil	languages/tamil.h	/^class InternalStemTamil : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemTurkish	languages/turkish.cc	/^Xapian::InternalStemTurkish::InternalStemTurkish()$/;"	f	class:Xapian::InternalStemTurkish
InternalStemTurkish	languages/turkish.h	/^class InternalStemTurkish : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InvalidArgumentError	include/xapian/error.h	/^    InvalidArgumentError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::InvalidArgumentError
InvalidArgumentError	include/xapian/error.h	/^    InvalidArgumentError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::InvalidArgumentError
InvalidArgumentError	include/xapian/error.h	/^    InvalidArgumentError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::InvalidArgumentError
InvalidArgumentError	include/xapian/error.h	/^    InvalidArgumentError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::InvalidArgumentError
InvalidArgumentError	include/xapian/error.h	/^    explicit InvalidArgumentError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::InvalidArgumentError
InvalidArgumentError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT InvalidArgumentError : public LogicError {$/;"	c	namespace:Xapian
InvalidOperationError	include/xapian/error.h	/^    InvalidOperationError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::InvalidOperationError
InvalidOperationError	include/xapian/error.h	/^    InvalidOperationError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::InvalidOperationError
InvalidOperationError	include/xapian/error.h	/^    InvalidOperationError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::InvalidOperationError
InvalidOperationError	include/xapian/error.h	/^    InvalidOperationError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::InvalidOperationError
InvalidOperationError	include/xapian/error.h	/^    explicit InvalidOperationError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::InvalidOperationError
InvalidOperationError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT InvalidOperationError : public LogicError {$/;"	c	namespace:Xapian
InvertedQuery_	include/xapian/query.h	/^    InvertedQuery_(const InvertedQuery_ & o) : query(o.query) { }$/;"	f	class:Xapian::InvertedQuery_
InvertedQuery_	include/xapian/query.h	/^    explicit InvertedQuery_(const Query & query_) : query(query_) { }$/;"	f	class:Xapian::InvertedQuery_
InvertedQuery_	include/xapian/query.h	/^class InvertedQuery_ {$/;"	c	namespace:Xapian
Inverter	backends/glass/glass_inverter.h	/^class Inverter {$/;"	c
Item	backends/chert/chert_table.h	/^    Item(const uint8_t * p_, int c) : Item_base<const uint8_t *>(p_, c) { }$/;"	f	class:Item
Item	backends/chert/chert_table.h	/^    explicit Item(const uint8_t * p_) : Item_base<const uint8_t *>(p_) { }$/;"	f	class:Item
Item	backends/chert/chert_table.h	/^class Item : public Item_base<const uint8_t *> {$/;"	c
Item_base	backends/chert/chert_table.h	/^    Item_base(T p_, int c) : p(p_ + getint2(p_, c)) { }$/;"	f	class:Item_base
Item_base	backends/chert/chert_table.h	/^    explicit Item_base(T p_) : p(p_) { }$/;"	f	class:Item_base
Item_base	backends/chert/chert_table.h	/^template <class T> class Item_base {$/;"	c
Item_wr	backends/chert/chert_table.h	/^    Item_wr(uint8_t * p_, int c) : Item_base<uint8_t *>(p_, c) { }$/;"	f	class:Item_wr
Item_wr	backends/chert/chert_table.h	/^    explicit Item_wr(uint8_t * p_) : Item_base<uint8_t *>(p_) { }$/;"	f	class:Item_wr
Item_wr	backends/chert/chert_table.h	/^class Item_wr : public Item_base<uint8_t *> {$/;"	c
J2	include/xapian/version_h.cc	58;"	d	file:
J3	include/xapian/version_h.cc	60;"	d	file:
JELINEK_MERCER_SMOOTHING	include/xapian/weight.h	/^	JELINEK_MERCER_SMOOTHING = 4,$/;"	e	enum:Xapian::Weight::__anon15
JUNKSIZE	tests/stemtest.cc	/^static const int JUNKSIZE = 2 * 1048576;$/;"	v	file:
K1	backends/chert/chert_table.h	/^const int K1 = 1;$/;"	v
K1	backends/glass/glass_table.h	/^const int K1 = 1;$/;"	m	namespace:Glass
KET	queryparser/queryparser_token.h	21;"	d
KEYDOMET_KEYDOMET_H	backends/inmemory/KeyDomet.h	6;"	d
KRAAIJ_POHLMANN	languages/sbl-dispatch.h	/^    KRAAIJ_POHLMANN = 17,$/;"	e	enum:sbl_code
K_needed	languages/compiler/generator.c	/^extern int K_needed(struct generator * g, struct node * p) {$/;"	f
K_needed_	languages/compiler/generator.c	/^static int K_needed_(struct generator * g, struct node * p, int call_depth) {$/;"	f	file:
Key	backends/chert/chert_table.h	/^    explicit Key(const uint8_t * p_) : p(p_) { }$/;"	f	class:Key
Key	backends/chert/chert_table.h	/^class Key {$/;"	c
Key	backends/glass/glass_table.h	/^    explicit Key(const uint8_t * p_) : p(p_) { }$/;"	f	class:Glass::Key
Key	backends/glass/glass_table.h	/^class Key {$/;"	c	namespace:Glass
KeyDomet	backends/inmemory/KeyDomet.h	/^        KeyDomet(KeyDomet& other) : val(other.val)$/;"	f	class:kdmt::KeyDometSize::KeyDomet
KeyDomet	backends/inmemory/KeyDomet.h	/^        KeyDomet(const KeyDomet& other) : val(other.val)$/;"	f	class:kdmt::KeyDometSize::KeyDomet
KeyDomet	backends/inmemory/KeyDomet.h	/^        explicit KeyDomet(const StrImp& str) : val{strToPrefix<KeyDometType>(str)}$/;"	f	class:kdmt::KeyDometSize::KeyDomet
KeyDomet	backends/inmemory/KeyDomet.h	/^    class KeyDomet$/;"	c	class:kdmt::KeyDometSize
KeyDometComparator	backends/inmemory/KeyDomet.h	/^    struct KeyDometComparator$/;"	s	class:kdmt::KeyDometSize
KeyDometHasher	backends/inmemory/KeyDomet.h	/^    struct KeyDometHasher$/;"	s	class:kdmt::KeyDometSize
KeyDometSize	backends/inmemory/KeyDomet.h	/^    enum class KeyDometSize : uint8_t$/;"	c	namespace:kdmt
KeyDometStorage	backends/inmemory/KeyDomet.h	/^    template<> struct KeyDometStorage<KeyDometSize::SIZE_128BIT> { using type = kdmt128_t; };$/;"	s	class:kdmt::KeyDometSize
KeyDometStorage	backends/inmemory/KeyDomet.h	/^    template<> struct KeyDometStorage<KeyDometSize::SIZE_16BIT>  { using type = uint16_t; };$/;"	s	class:kdmt::KeyDometSize
KeyDometStorage	backends/inmemory/KeyDomet.h	/^    template<> struct KeyDometStorage<KeyDometSize::SIZE_32BIT>  { using type = uint32_t; };$/;"	s	class:kdmt::KeyDometSize
KeyDometStorage	backends/inmemory/KeyDomet.h	/^    template<> struct KeyDometStorage<KeyDometSize::SIZE_64BIT>  { using type = uint64_t; };$/;"	s	class:kdmt::KeyDometSize
KeyDometStr	backends/inmemory/KeyDomet.h	/^        KeyDometStr(KeyDometStr& other) :$/;"	f	class:kdmt::KeyDometSize::KeyDometStr
KeyDometStr	backends/inmemory/KeyDomet.h	/^        KeyDometStr(const KeyDometStr& other) :$/;"	f	class:kdmt::KeyDometSize::KeyDometStr
KeyDometStr	backends/inmemory/KeyDomet.h	/^        explicit KeyDometStr() :$/;"	f	class:kdmt::KeyDometSize::KeyDometStr
KeyDometStr	backends/inmemory/KeyDomet.h	/^        explicit KeyDometStr(const StrImp_& other) :$/;"	f	class:kdmt::KeyDometSize::KeyDometStr
KeyDometStr	backends/inmemory/KeyDomet.h	/^    class KeyDometStr$/;"	c	class:kdmt::KeyDometSize
KeyMaker	include/xapian/keymaker.h	/^    KeyMaker() { }$/;"	f	class:Xapian::KeyMaker
KeyMaker	include/xapian/keymaker.h	/^class XAPIAN_VISIBILITY_DEFAULT KeyMaker$/;"	c	namespace:Xapian
KeySpec	include/xapian/keymaker.h	/^	KeySpec(Xapian::valueno slot_, bool reverse_,$/;"	f	struct:Xapian::MultiValueKeyMaker::KeySpec
KeySpec	include/xapian/keymaker.h	/^    struct KeySpec {$/;"	s	class:Xapian::MultiValueKeyMaker
L	languages/compiler/header.h	/^    symbol * L[5];       \/* literals, used in formatted write *\/$/;"	m	struct:generator
LANGSTRING	languages/sbl-dispatch.h	141;"	d
LANG_C	languages/compiler/header.h	/^    enum { LANG_JAVA, LANG_C, LANG_CPLUSPLUS, LANG_CSHARP, LANG_PASCAL, LANG_PYTHON, LANG_JAVASCRIPT, LANG_RUST, LANG_GO } make_lang;$/;"	e	enum:options::__anon27
LANG_CPLUSPLUS	languages/compiler/header.h	/^    enum { LANG_JAVA, LANG_C, LANG_CPLUSPLUS, LANG_CSHARP, LANG_PASCAL, LANG_PYTHON, LANG_JAVASCRIPT, LANG_RUST, LANG_GO } make_lang;$/;"	e	enum:options::__anon27
LANG_CSHARP	languages/compiler/header.h	/^    enum { LANG_JAVA, LANG_C, LANG_CPLUSPLUS, LANG_CSHARP, LANG_PASCAL, LANG_PYTHON, LANG_JAVASCRIPT, LANG_RUST, LANG_GO } make_lang;$/;"	e	enum:options::__anon27
LANG_GO	languages/compiler/header.h	/^    enum { LANG_JAVA, LANG_C, LANG_CPLUSPLUS, LANG_CSHARP, LANG_PASCAL, LANG_PYTHON, LANG_JAVASCRIPT, LANG_RUST, LANG_GO } make_lang;$/;"	e	enum:options::__anon27
LANG_JAVA	languages/compiler/header.h	/^    enum { LANG_JAVA, LANG_C, LANG_CPLUSPLUS, LANG_CSHARP, LANG_PASCAL, LANG_PYTHON, LANG_JAVASCRIPT, LANG_RUST, LANG_GO } make_lang;$/;"	e	enum:options::__anon27
LANG_JAVASCRIPT	languages/compiler/header.h	/^    enum { LANG_JAVA, LANG_C, LANG_CPLUSPLUS, LANG_CSHARP, LANG_PASCAL, LANG_PYTHON, LANG_JAVASCRIPT, LANG_RUST, LANG_GO } make_lang;$/;"	e	enum:options::__anon27
LANG_PASCAL	languages/compiler/header.h	/^    enum { LANG_JAVA, LANG_C, LANG_CPLUSPLUS, LANG_CSHARP, LANG_PASCAL, LANG_PYTHON, LANG_JAVASCRIPT, LANG_RUST, LANG_GO } make_lang;$/;"	e	enum:options::__anon27
LANG_PYTHON	languages/compiler/header.h	/^    enum { LANG_JAVA, LANG_C, LANG_CPLUSPLUS, LANG_CSHARP, LANG_PASCAL, LANG_PYTHON, LANG_JAVASCRIPT, LANG_RUST, LANG_GO } make_lang;$/;"	e	enum:options::__anon27
LANG_RUST	languages/compiler/header.h	/^    enum { LANG_JAVA, LANG_C, LANG_CPLUSPLUS, LANG_CSHARP, LANG_PASCAL, LANG_PYTHON, LANG_JAVASCRIPT, LANG_RUST, LANG_GO } make_lang;$/;"	e	enum:options::__anon27
LD	Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LD	docs/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LD	tests/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LDFLAGS	Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	docs/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	tests/Makefile	/^LDFLAGS = $/;"	m
LEAF_MATCH_ALL	include/xapian/query.h	/^	LEAF_MATCH_ALL,$/;"	e	enum:Xapian::Query::op
LEAF_MATCH_NOTHING	include/xapian/query.h	/^	LEAF_MATCH_NOTHING$/;"	e	enum:Xapian::Query::op
LEAF_POSTING_SOURCE	include/xapian/query.h	/^	LEAF_POSTING_SOURCE,$/;"	e	enum:Xapian::Query::op
LEAF_TERM	include/xapian/query.h	/^	LEAF_TERM = 100,$/;"	e	enum:Xapian::Query::op
LEFT	queryparser/lemon.c	/^    LEFT,$/;"	e	enum:e_assoc	file:
LEMON_FALSE	queryparser/lemon.c	/^typedef enum {LEMON_FALSE=0, LEMON_TRUE} Boolean;$/;"	e	enum:__anon31	file:
LEMON_TRUE	queryparser/lemon.c	/^typedef enum {LEMON_FALSE=0, LEMON_TRUE} Boolean;$/;"	e	enum:__anon31	file:
LETTER_NUMBER	include/xapian/unicode.h	/^    LETTER_NUMBER,$/;"	e	enum:Xapian::Unicode::__anon13
LEVEL_FREELIST	backends/glass/glass_table.h	/^const int LEVEL_FREELIST = 254;$/;"	m	namespace:Glass
LHS_ALIAS_1	queryparser/lemon.c	/^  LHS_ALIAS_1,$/;"	e	enum:e_state	file:
LHS_ALIAS_2	queryparser/lemon.c	/^  LHS_ALIAS_2,$/;"	e	enum:e_state	file:
LHS_ALIAS_3	queryparser/lemon.c	/^  LHS_ALIAS_3,$/;"	e	enum:e_state	file:
LIBOBJS	Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	docs/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	tests/Makefile	/^LIBOBJS = $/;"	m
LIBRARY_VERSION_INFO	Makefile	/^LIBRARY_VERSION_INFO = 36:1:6$/;"	m
LIBRARY_VERSION_INFO	docs/Makefile	/^LIBRARY_VERSION_INFO = 36:1:6$/;"	m
LIBRARY_VERSION_INFO	tests/Makefile	/^LIBRARY_VERSION_INFO = 36:1:6$/;"	m
LIBRARY_VERSION_SUFFIX	Makefile	/^LIBRARY_VERSION_SUFFIX = $/;"	m
LIBRARY_VERSION_SUFFIX	docs/Makefile	/^LIBRARY_VERSION_SUFFIX = $/;"	m
LIBRARY_VERSION_SUFFIX	tests/Makefile	/^LIBRARY_VERSION_SUFFIX = $/;"	m
LIBS	Makefile	/^LIBS = $/;"	m
LIBS	docs/Makefile	/^LIBS = $/;"	m
LIBS	tests/Makefile	/^LIBS = $/;"	m
LIBTOOL	Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	docs/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	tests/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LINESIZE	queryparser/lemon.c	3447;"	d	file:
LINE_SEPARATOR	include/xapian/unicode.h	/^    LINE_SEPARATOR,$/;"	e	enum:Xapian::Unicode::__anon13
LINK	Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LINK	tests/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LIPO	Makefile	/^LIPO = $/;"	m
LIPO	docs/Makefile	/^LIPO = $/;"	m
LIPO	tests/Makefile	/^LIPO = $/;"	m
LISTSIZE	queryparser/lemon.c	1906;"	d	file:
LITHUANIAN	languages/sbl-dispatch.h	/^    LITHUANIAN = 18,$/;"	e	enum:sbl_code
LMWeight	include/xapian/weight.h	/^    explicit LMWeight(double param_log_ = 0.0,$/;"	f	class:Xapian::LMWeight
LMWeight	include/xapian/weight.h	/^class XAPIAN_VISIBILITY_DEFAULT LMWeight : public Weight {$/;"	c	namespace:Xapian
LN_S	Makefile	/^LN_S = ln -s$/;"	m
LN_S	docs/Makefile	/^LN_S = ln -s$/;"	m
LN_S	tests/Makefile	/^LN_S = ln -s$/;"	m
LOCALHOST	tests/harness/backendmanager_remotetcp.cc	66;"	d	file:
LOGCALL	common/debuglog.h	369;"	d
LOGCALL	common/debuglog.h	453;"	d
LOGCALL_CTOR	common/debuglog.h	392;"	d
LOGCALL_CTOR	common/debuglog.h	455;"	d
LOGCALL_DTOR	common/debuglog.h	403;"	d
LOGCALL_DTOR	common/debuglog.h	456;"	d
LOGCALL_STATIC	common/debuglog.h	407;"	d
LOGCALL_STATIC	common/debuglog.h	457;"	d
LOGCALL_STATIC_VOID	common/debuglog.h	419;"	d
LOGCALL_STATIC_VOID	common/debuglog.h	458;"	d
LOGCALL_VOID	common/debuglog.h	381;"	d
LOGCALL_VOID	common/debuglog.h	454;"	d
LOGLINE	common/debuglog.h	446;"	d
LOGLINE	common/debuglog.h	460;"	d
LOGLINE_	common/debuglog.h	165;"	d
LOGLINE_ALWAYS_	common/debuglog.h	157;"	d
LOGVALUE	common/debuglog.h	449;"	d
LOGVALUE	common/debuglog.h	461;"	d
LOVE	queryparser/queryparser_token.h	8;"	d
LOVINS	languages/sbl-dispatch.h	/^    LOVINS = 19,$/;"	e	enum:sbl_code
LOWERCASE_LETTER	include/xapian/unicode.h	/^    LOWERCASE_LETTER,$/;"	e	enum:Xapian::Unicode::__anon13
LTCOMPILE	Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	tests/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCXXCOMPILE	Makefile	/^LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCXXCOMPILE	tests/Makefile	/^LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
LTLIBOBJS	Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	docs/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	tests/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBRARIES	Makefile	/^LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)$/;"	m
LT_OBJDIR	config.h	277;"	d
LT_SYS_LIBRARY_PATH	Makefile	/^LT_SYS_LIBRARY_PATH = $/;"	m
LT_SYS_LIBRARY_PATH	docs/Makefile	/^LT_SYS_LIBRARY_PATH = $/;"	m
LT_SYS_LIBRARY_PATH	tests/Makefile	/^LT_SYS_LIBRARY_PATH = $/;"	m
LatLongCoord	geospatial/latlongcoord.cc	/^LatLongCoord::LatLongCoord(double latitude_, double longitude_)$/;"	f	class:LatLongCoord
LatLongCoord	include/xapian/geospatial.h	/^    XAPIAN_NOTHROW(LatLongCoord()) {}$/;"	f	struct:Xapian::LatLongCoord
LatLongCoord	include/xapian/geospatial.h	/^struct XAPIAN_VISIBILITY_DEFAULT LatLongCoord {$/;"	s	namespace:Xapian
LatLongCoords	include/xapian/geospatial.h	/^    LatLongCoords() : coords() {}$/;"	f	class:Xapian::LatLongCoords
LatLongCoords	include/xapian/geospatial.h	/^    LatLongCoords(const LatLongCoord & coord) : coords()$/;"	f	class:Xapian::LatLongCoords
LatLongCoords	include/xapian/geospatial.h	/^class XAPIAN_VISIBILITY_DEFAULT LatLongCoords {$/;"	c	namespace:Xapian
LatLongCoordsIterator	include/xapian/geospatial.h	/^    LatLongCoordsIterator() {}$/;"	f	class:Xapian::LatLongCoordsIterator
LatLongCoordsIterator	include/xapian/geospatial.h	/^    LatLongCoordsIterator(std::vector<LatLongCoord>::const_iterator iter_)$/;"	f	class:Xapian::LatLongCoordsIterator
LatLongCoordsIterator	include/xapian/geospatial.h	/^class XAPIAN_VISIBILITY_DEFAULT LatLongCoordsIterator {$/;"	c	namespace:Xapian
LatLongDistanceKeyMaker	include/xapian/geospatial.h	/^    LatLongDistanceKeyMaker(Xapian::valueno slot_,$/;"	f	class:Xapian::LatLongDistanceKeyMaker
LatLongDistanceKeyMaker	include/xapian/geospatial.h	/^class XAPIAN_VISIBILITY_DEFAULT LatLongDistanceKeyMaker : public KeyMaker {$/;"	c	namespace:Xapian
LatLongDistancePostingSource	geospatial/latlong_posting_source.cc	/^LatLongDistancePostingSource::LatLongDistancePostingSource($/;"	f	class:LatLongDistancePostingSource
LatLongDistancePostingSource	include/xapian/geospatial.h	/^class XAPIAN_VISIBILITY_DEFAULT LatLongDistancePostingSource : public ValuePostingSource$/;"	c	namespace:Xapian
LatLongMetric	include/xapian/geospatial.h	/^class XAPIAN_VISIBILITY_DEFAULT LatLongMetric {$/;"	c	namespace:Xapian
LazyWeight	matcher/localsubmatch.cc	/^    LazyWeight(LeafPostList * pl_,$/;"	f	class:LazyWeight
LazyWeight	matcher/localsubmatch.cc	/^class LazyWeight : public Xapian::Weight {$/;"	c	file:
LeafItem	backends/glass/glass_table.h	/^    LeafItem(const uint8_t * p_, int c)$/;"	f	class:Glass::LeafItem
LeafItem	backends/glass/glass_table.h	/^    explicit LeafItem(const uint8_t * p_)$/;"	f	class:Glass::LeafItem
LeafItem	backends/glass/glass_table.h	/^class LeafItem : public LeafItem_base<const uint8_t *> {$/;"	c	namespace:Glass
LeafItem_base	backends/glass/glass_table.h	/^    LeafItem_base(T p_, int c) : p(p_ + getD(p_, c)) { }$/;"	f	class:Glass::LeafItem_base
LeafItem_base	backends/glass/glass_table.h	/^    explicit LeafItem_base(T p_) : p(p_) { }$/;"	f	class:Glass::LeafItem_base
LeafItem_base	backends/glass/glass_table.h	/^template<class T> class LeafItem_base {$/;"	c	namespace:Glass
LeafItem_wr	backends/glass/glass_table.h	/^    LeafItem_wr(uint8_t * p_, int c) : LeafItem_base<uint8_t *>(p_, c) { }$/;"	f	class:Glass::LeafItem_wr
LeafItem_wr	backends/glass/glass_table.h	/^    explicit LeafItem_wr(uint8_t * p_) : LeafItem_base<uint8_t *>(p_) { }$/;"	f	class:Glass::LeafItem_wr
LeafItem_wr	backends/glass/glass_table.h	/^class LeafItem_wr : public LeafItem_base<uint8_t *> {$/;"	c	namespace:Glass
LeafPostList	api/leafpostlist.h	/^    explicit LeafPostList(const std::string & term_)$/;"	f	class:LeafPostList
LeafPostList	api/leafpostlist.h	/^class LeafPostList : public PostList {$/;"	c
Literal	common/pretty.h	/^    explicit Literal(const char * lit) : _lit(lit) { }$/;"	f	struct:Literal
Literal	common/pretty.h	/^    explicit Literal(const std::string & s) : _lit(s.c_str()) { }$/;"	f	struct:Literal
Literal	common/pretty.h	/^struct Literal {$/;"	s
LocalSubMatch	matcher/localsubmatch.h	/^    LocalSubMatch(const Xapian::Database::Internal *db_,$/;"	f	class:LocalSubMatch
LocalSubMatch	matcher/localsubmatch.h	/^class LocalSubMatch : public SubMatch {$/;"	c
LogicError	include/xapian/error.h	/^    LogicError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::LogicError
LogicError	include/xapian/error.h	/^    LogicError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::LogicError
LogicError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT LogicError : public Error {$/;"	c	namespace:Xapian
MAGIC_LEN	backends/chert/chert_version.cc	47;"	d	file:
MAGIC_STRING	backends/chert/chert_version.cc	45;"	d	file:
MAGIC_XOR_VALUE	backends/byte_length_strings.h	33;"	d
MAGIC_XOR_VALUE	backends/chert/chert_synonym.cc	40;"	d	file:
MAGIC_XOR_VALUE	backends/glass/glass_synonym.cc	40;"	d	file:
MAGIC_XOR_VALUE	backends/prefix_compressed_strings.h	34;"	d
MAINT	Makefile	/^MAINT = #$/;"	m
MAINT	docs/Makefile	/^MAINT = #$/;"	m
MAINT	tests/Makefile	/^MAINT = #$/;"	m
MAINTAINERCLEANFILES	Makefile	/^MAINTAINERCLEANFILES = $(am__append_27) $(am__append_28) \\$/;"	m
MAINTAINERCLEANFILES	docs/Makefile	/^MAINTAINERCLEANFILES = doxygen_api.conf doxygen_source.conf \\$/;"	m
MAINTAINERCLEANFILES	tests/Makefile	/^MAINTAINERCLEANFILES = $(BUILT_SOURCES)$/;"	m
MAKEINFO	Makefile	/^MAKEINFO = ${SHELL} \/home\/sammar\/new-xapian-v2\/missing makeinfo$/;"	m
MAKEINFO	docs/Makefile	/^MAKEINFO = ${SHELL} \/home\/sammar\/new-xapian-v2\/missing makeinfo$/;"	m
MAKEINFO	tests/Makefile	/^MAKEINFO = ${SHELL} \/home\/sammar\/new-xapian-v2\/missing makeinfo$/;"	m
MALLOC	languages/compiler/header.h	9;"	d
MANIFEST_TOOL	Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	docs/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	tests/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANS	Makefile	/^MANS = $(dist_man_MANS)$/;"	m
MATH_SYMBOL	include/xapian/unicode.h	/^    MATH_SYMBOL,$/;"	e	enum:Xapian::Unicode::__anon13
MAXRHS	queryparser/lemon.c	51;"	d	file:
MAXRHS	queryparser/lemon.c	53;"	d	file:
MAX_	backends/glass/glass_defs.h	/^	MAX_$/;"	e	enum:Glass::table_type
MAX_DB_COPIES_PER_CONVERSATION	common/replicationprotocol.h	43;"	d
MAX_EXP	common/serialise-double.cc	57;"	d	file:
MAX_FREE	backends/chert/chert_table.h	/^inline int MAX_FREE(const uint8_t * b) { return getint2(b, 5); }$/;"	f
MAX_FREE	backends/glass/glass_table.h	/^inline int MAX_FREE(const uint8_t * b) { return unaligned_read2(b + 5); }$/;"	f	namespace:Glass
MAX_ITEM_SIZE	backends/glass/glass_table.h	/^const size_t MAX_ITEM_SIZE = (ITEM_SIZE_MASK + 3);$/;"	m	namespace:Glass
MAX_MANTISSA	common/serialise-double.cc	58;"	d	file:
MAX_MANTISSA_BYTES	common/serialise-double.cc	56;"	d	file:
MAX_OPEN_RETRIES	backends/chert/chert_database.cc	/^const int MAX_OPEN_RETRIES = 100;$/;"	v
MAX_SAFE_TERM_LENGTH	backends/chert/chert_database.cc	91;"	d	file:
MAX_SAFE_TERM_LENGTH	backends/glass/glass_database.cc	92;"	d	file:
METADATA	tests/harness/testrunner.h	/^	METADATA	= 0x00000040,$/;"	e	enum:TestRunner::__anon35
MIN_WRITE_FD	common/io_utils.cc	/^const int MIN_WRITE_FD = 3;$/;"	v
MISC	api/queryinternal.cc	1124;"	d	file:
MKDIR_P	Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	docs/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	tests/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MODIFIER_LETTER	include/xapian/unicode.h	/^    MODIFIER_LETTER,$/;"	e	enum:Xapian::Unicode::__anon13
MODIFIER_SYMBOL	include/xapian/unicode.h	/^    MODIFIER_SYMBOL,$/;"	e	enum:Xapian::Unicode::__anon13
MOVE_TO_B	languages/compiler/header.h	29;"	d
MSECS_ACTIVE_TIMEOUT_DEFAULT	bin/xapian-tcpsrv.cc	/^const int MSECS_ACTIVE_TIMEOUT_DEFAULT = 15000;$/;"	v
MSECS_IDLE_TIMEOUT_DEFAULT	bin/xapian-tcpsrv.cc	/^const int MSECS_IDLE_TIMEOUT_DEFAULT = 60000;$/;"	v
MSG_ADDDOCUMENT	net/remoteprotocol.h	/^    MSG_ADDDOCUMENT,		\/\/ Add Document$/;"	e	enum:message_type
MSG_ADDSPELLING	net/remoteprotocol.h	/^    MSG_ADDSPELLING,		\/\/ Add a spelling$/;"	e	enum:message_type
MSG_ALLTERMS	net/remoteprotocol.h	/^    MSG_ALLTERMS,		\/\/ All Terms$/;"	e	enum:message_type
MSG_CANCEL	net/remoteprotocol.h	/^    MSG_CANCEL,			\/\/ Cancel$/;"	e	enum:message_type
MSG_COLLFREQ	net/remoteprotocol.h	/^    MSG_COLLFREQ,		\/\/ Get Collection Frequency$/;"	e	enum:message_type
MSG_COMMIT	net/remoteprotocol.h	/^    MSG_COMMIT,			\/\/ Commit$/;"	e	enum:message_type
MSG_DELETEDOCUMENT	net/remoteprotocol.h	/^    MSG_DELETEDOCUMENT,		\/\/ Delete Document$/;"	e	enum:message_type
MSG_DELETEDOCUMENTTERM	net/remoteprotocol.h	/^    MSG_DELETEDOCUMENTTERM,	\/\/ Delete Document by term$/;"	e	enum:message_type
MSG_DOCLENGTH	net/remoteprotocol.h	/^    MSG_DOCLENGTH,		\/\/ Get Doc Length$/;"	e	enum:message_type
MSG_DOCUMENT	net/remoteprotocol.h	/^    MSG_DOCUMENT,		\/\/ Get Document$/;"	e	enum:message_type
MSG_FREQS	net/remoteprotocol.h	/^    MSG_FREQS,			\/\/ Get termfreq and collfreq$/;"	e	enum:message_type
MSG_GETMETADATA	net/remoteprotocol.h	/^    MSG_GETMETADATA,		\/\/ Get metadata$/;"	e	enum:message_type
MSG_GETMSET	net/remoteprotocol.h	/^    MSG_GETMSET,		\/\/ Get MSet$/;"	e	enum:message_type
MSG_KEEPALIVE	net/remoteprotocol.h	/^    MSG_KEEPALIVE,		\/\/ Keep-alive$/;"	e	enum:message_type
MSG_MAX	net/remoteprotocol.h	/^    MSG_MAX$/;"	e	enum:message_type
MSG_METADATAKEYLIST	net/remoteprotocol.h	/^    MSG_METADATAKEYLIST,	\/\/ Iterator for metadata keys$/;"	e	enum:message_type
MSG_POSITIONLIST	net/remoteprotocol.h	/^    MSG_POSITIONLIST,		\/\/ Get PositionList$/;"	e	enum:message_type
MSG_POSTLIST	net/remoteprotocol.h	/^    MSG_POSTLIST,		\/\/ Get PostList$/;"	e	enum:message_type
MSG_QUERY	net/remoteprotocol.h	/^    MSG_QUERY,			\/\/ Run Query$/;"	e	enum:message_type
MSG_REMOVESPELLING	net/remoteprotocol.h	/^    MSG_REMOVESPELLING,		\/\/ Remove a spelling$/;"	e	enum:message_type
MSG_REOPEN	net/remoteprotocol.h	/^    MSG_REOPEN,			\/\/ Reopen$/;"	e	enum:message_type
MSG_REPLACEDOCUMENT	net/remoteprotocol.h	/^    MSG_REPLACEDOCUMENT,	\/\/ Replace Document$/;"	e	enum:message_type
MSG_REPLACEDOCUMENTTERM	net/remoteprotocol.h	/^    MSG_REPLACEDOCUMENTTERM,	\/\/ Replace Document by term$/;"	e	enum:message_type
MSG_SETMETADATA	net/remoteprotocol.h	/^    MSG_SETMETADATA,		\/\/ Set metadata$/;"	e	enum:message_type
MSG_SHUTDOWN	net/remoteprotocol.h	/^    MSG_SHUTDOWN,		\/\/ Shutdown$/;"	e	enum:message_type
MSG_TERMEXISTS	net/remoteprotocol.h	/^    MSG_TERMEXISTS,		\/\/ Term Exists?$/;"	e	enum:message_type
MSG_TERMFREQ	net/remoteprotocol.h	/^    MSG_TERMFREQ,		\/\/ Get Term Frequency$/;"	e	enum:message_type
MSG_TERMLIST	net/remoteprotocol.h	/^    MSG_TERMLIST,		\/\/ Get TermList$/;"	e	enum:message_type
MSG_UNIQUETERMS	net/remoteprotocol.h	/^    MSG_UNIQUETERMS,		\/\/ Get number of unique terms in doc$/;"	e	enum:message_type
MSG_UPDATE	net/remoteprotocol.h	/^    MSG_UPDATE,			\/\/ Get Updated DocCount and AvLength$/;"	e	enum:message_type
MSG_VALUESTATS	net/remoteprotocol.h	/^    MSG_VALUESTATS,		\/\/ Get value statistics$/;"	e	enum:message_type
MSG_WRITEACCESS	net/remoteprotocol.h	/^    MSG_WRITEACCESS,		\/\/ Upgrade to WritableDatabase$/;"	e	enum:message_type
MSVCIgnoreInvalidParameter	common/msvcignoreinvalidparam.h	/^    MSVCIgnoreInvalidParameter() { }$/;"	f	struct:MSVCIgnoreInvalidParameter
MSVCIgnoreInvalidParameter	common/msvcignoreinvalidparam.h	/^    MSVCIgnoreInvalidParameter() {$/;"	f	class:MSVCIgnoreInvalidParameter
MSVCIgnoreInvalidParameter	common/msvcignoreinvalidparam.h	/^class MSVCIgnoreInvalidParameter {$/;"	c
MSVCIgnoreInvalidParameter	common/msvcignoreinvalidparam.h	/^struct MSVCIgnoreInvalidParameter {$/;"	s
MSet	api/omenquire.cc	/^MSet::MSet() : internal(new MSet::Internal)$/;"	f	class:Xapian::MSet
MSet	api/omenquire.cc	/^MSet::MSet(const MSet & other) : internal(other.internal)$/;"	f	class:Xapian::MSet
MSet	include/xapian/mset.h	/^class XAPIAN_VISIBILITY_DEFAULT MSet {$/;"	c	namespace:Xapian
MSetCmp	matcher/msetcmp.h	/^typedef bool (* MSetCmp)(const Xapian::Internal::MSetItem &,$/;"	t
MSetItem	api/omenquireinternal.h	/^	MSetItem(double wt_, Xapian::docid did_)$/;"	f	class:Xapian::Internal::MSetItem
MSetItem	api/omenquireinternal.h	/^	MSetItem(double wt_, Xapian::docid did_, const string &key_)$/;"	f	class:Xapian::Internal::MSetItem
MSetItem	api/omenquireinternal.h	/^	MSetItem(double wt_, Xapian::docid did_, const string &key_,$/;"	f	class:Xapian::Internal::MSetItem
MSetItem	api/omenquireinternal.h	/^class MSetItem {$/;"	c	namespace:Xapian::Internal
MSetIterator	include/xapian/mset.h	/^    MSetIterator() : off_from_end(0) { }$/;"	f	class:Xapian::MSetIterator
MSetIterator	include/xapian/mset.h	/^    MSetIterator(const Xapian::MSet & mset_, Xapian::doccount off_from_end_)$/;"	f	class:Xapian::MSetIterator
MSetIterator	include/xapian/mset.h	/^class XAPIAN_VISIBILITY_DEFAULT MSetIterator {$/;"	c	namespace:Xapian
MSetPostList	matcher/msetpostlist.h	/^    MSetPostList(const Xapian::MSet mset, bool decreasing_relevance_)$/;"	f	class:MSetPostList
MSetPostList	matcher/msetpostlist.h	/^class MSetPostList : public PostList {$/;"	c
MULTI	tests/harness/testrunner.h	/^	MULTI		= 0x00000800,$/;"	e	enum:TestRunner::__anon35
MULTITERMINAL	queryparser/lemon.c	/^  MULTITERMINAL$/;"	e	enum:symbol_type	file:
MULTIWAY	api/queryinternal.cc	1123;"	d	file:
MapTermList	api/maptermlist.h	/^	MapTermList(const Xapian::Document::Internal::document_terms::const_iterator &it_,$/;"	f	class:MapTermList
MapTermList	api/maptermlist.h	/^class MapTermList : public TermList {$/;"	c
MatchAll	include/xapian/query.h	/^    static const Xapian::Query MatchAll;$/;"	m	class:Xapian::Query
MatchDecider	include/xapian/enquire.h	/^	MatchDecider() { }$/;"	f	class:Xapian::MatchDecider
MatchDecider	include/xapian/enquire.h	/^class XAPIAN_VISIBILITY_DEFAULT MatchDecider {$/;"	c	namespace:Xapian
MatchNothing	api/query.cc	/^const Query Query::MatchNothing;$/;"	m	class:Xapian::Query	file:
MatchNothing	include/xapian/query.h	/^    static const Xapian::Query MatchNothing;$/;"	m	class:Xapian::Query
MatchSpy	include/xapian/matchspy.h	/^    XAPIAN_NOTHROW(MatchSpy()) {}$/;"	f	class:Xapian::MatchSpy
MatchSpy	include/xapian/matchspy.h	/^class XAPIAN_VISIBILITY_DEFAULT MatchSpy$/;"	c	namespace:Xapian
MaxPostList	matcher/maxpostlist.h	/^    MaxPostList(RandomItor pl_begin, RandomItor pl_end,$/;"	f	class:MaxPostList
MaxPostList	matcher/maxpostlist.h	/^class MaxPostList : public PostList {$/;"	c
MemoryCheck	queryparser/lemon.c	430;"	d	file:
MergeCursor	backends/chert/chert_compact.cc	/^    explicit MergeCursor(ChertTable *in) : ChertCursor(in) {$/;"	f	struct:ChertCompact::MergeCursor
MergeCursor	backends/chert/chert_compact.cc	/^struct MergeCursor : public ChertCursor {$/;"	s	namespace:ChertCompact	file:
MergeCursor	backends/glass/glass_compact.cc	/^    explicit MergeCursor(GlassTable *in) : GlassCursor(in) {$/;"	f	struct:GlassCompact::MergeCursor
MergeCursor	backends/glass/glass_compact.cc	/^struct MergeCursor : public GlassCursor {$/;"	s	namespace:GlassCompact	file:
MergePostList	matcher/mergepostlist.h	/^	MergePostList(const std::vector<PostList *> & plists_,$/;"	f	class:MergePostList
MergePostList	matcher/mergepostlist.h	/^class MergePostList : public PostList {$/;"	c
MultiAllTermsList	backends/multi/multi_alltermslist.cc	/^MultiAllTermsList::MultiAllTermsList(const vector<intrusive_ptr<Xapian::Database::Internal> > & dbs,$/;"	f	class:MultiAllTermsList
MultiAllTermsList	backends/multi/multi_alltermslist.h	/^class MultiAllTermsList : public AllTermsList {$/;"	c
MultiAndPostList	matcher/multiandpostlist.h	/^    MultiAndPostList(PostList *l, PostList *r,$/;"	f	class:MultiAndPostList
MultiAndPostList	matcher/multiandpostlist.h	/^    MultiAndPostList(RandomItor pl_begin, RandomItor pl_end,$/;"	f	class:MultiAndPostList
MultiAndPostList	matcher/multiandpostlist.h	/^class MultiAndPostList : public PostList {$/;"	c
MultiMatch	matcher/multimatch.cc	/^MultiMatch::MultiMatch(const Xapian::Database &db_,$/;"	f	class:MultiMatch
MultiMatch	matcher/multimatch.h	/^class MultiMatch$/;"	c
MultiPostList	backends/multi/multi_postlist.cc	/^MultiPostList::MultiPostList(std::vector<LeafPostList *> & pls,$/;"	f	class:MultiPostList
MultiPostList	backends/multi/multi_postlist.h	/^class MultiPostList : public PostList {$/;"	c
MultiTermList	backends/multi/multi_termlist.cc	/^MultiTermList::MultiTermList(TermList * tl_,$/;"	f	class:MultiTermList
MultiTermList	backends/multi/multi_termlist.h	/^class MultiTermList : public TermList {$/;"	c
MultiValueKeyMaker	include/xapian/keymaker.h	/^    MultiValueKeyMaker() { }$/;"	f	class:Xapian::MultiValueKeyMaker
MultiValueKeyMaker	include/xapian/keymaker.h	/^    MultiValueKeyMaker(Iterator begin, Iterator end) {$/;"	f	class:Xapian::MultiValueKeyMaker
MultiValueKeyMaker	include/xapian/keymaker.h	/^class XAPIAN_VISIBILITY_DEFAULT MultiValueKeyMaker : public KeyMaker {$/;"	c	namespace:Xapian
MultiValueList	backends/multi/multi_valuelist.cc	/^MultiValueList::MultiValueList(const vector<intrusive_ptr<Xapian::Database::Internal> > & dbs,$/;"	f	class:MultiValueList
MultiValueList	backends/multivaluelist.h	/^class MultiValueList : public ValueList {$/;"	c
MultiXorPostList	matcher/multixorpostlist.h	/^    MultiXorPostList(RandomItor pl_begin, RandomItor pl_end,$/;"	f	class:MultiXorPostList
MultiXorPostList	matcher/multixorpostlist.h	/^class MultiXorPostList : public PostList {$/;"	c
MultipleMatchSpy	matcher/multimatch.cc	/^    MultipleMatchSpy(const std::vector<Xapian::Internal::opt_intrusive_ptr<Xapian::MatchSpy>> & spies_)$/;"	f	class:MultipleMatchSpy
MultipleMatchSpy	matcher/multimatch.cc	/^class MultipleMatchSpy : public Xapian::MatchSpy {$/;"	c	file:
MutableChertCursor	backends/chert/chert_cursor.h	/^    explicit MutableChertCursor(ChertTable *B_) : ChertCursor(B_) { }$/;"	f	class:MutableChertCursor
MutableChertCursor	backends/chert/chert_cursor.h	/^class MutableChertCursor : public ChertCursor {$/;"	c
MutableGlassCursor	backends/glass/glass_cursor.h	/^    explicit MutableGlassCursor(GlassTable *B_) : GlassCursor(B_) { }$/;"	f	class:MutableGlassCursor
MutableGlassCursor	backends/glass/glass_cursor.h	/^class MutableGlassCursor : public GlassCursor {$/;"	c
MyCompactor	bin/xapian-compact.cc	/^    MyCompactor() : quiet(false) { }$/;"	f	class:MyCompactor
MyCompactor	bin/xapian-compact.cc	/^class MyCompactor : public Xapian::Compactor {$/;"	c	file:
MyDontAskWeightPostingSource	tests/api_postingsource.cc	/^    MyDontAskWeightPostingSource() : Xapian::PostingSource() {}$/;"	f	class:MyDontAskWeightPostingSource
MyDontAskWeightPostingSource	tests/api_postingsource.cc	/^    MyDontAskWeightPostingSource(Xapian::doccount num_docs_,$/;"	f	class:MyDontAskWeightPostingSource	file:
MyDontAskWeightPostingSource	tests/api_postingsource.cc	/^class MyDontAskWeightPostingSource : public Xapian::PostingSource {$/;"	c	file:
MyOddPostingSource	tests/api_postingsource.cc	/^    MyOddPostingSource(Xapian::doccount num_docs_,$/;"	f	class:MyOddPostingSource	file:
MyOddPostingSource	tests/api_postingsource.cc	/^    MyOddPostingSource(const Xapian::Database &db)$/;"	f	class:MyOddPostingSource
MyOddPostingSource	tests/api_postingsource.cc	/^class MyOddPostingSource : public Xapian::PostingSource {$/;"	c	file:
MyOddWeightingPostingSource	tests/api_postingsource.cc	/^    MyOddWeightingPostingSource(Xapian::doccount num_docs_,$/;"	f	class:MyOddWeightingPostingSource	file:
MyOddWeightingPostingSource	tests/api_postingsource.cc	/^    MyOddWeightingPostingSource(const Xapian::Database &db)$/;"	f	class:MyOddWeightingPostingSource
MyOddWeightingPostingSource	tests/api_postingsource.cc	/^class MyOddWeightingPostingSource : public Xapian::PostingSource {$/;"	c	file:
MyPostingSource	tests/api_percentages.cc	/^    MyPostingSource() : started(false) { }$/;"	f	class:MyPostingSource
MyPostingSource	tests/api_percentages.cc	/^    MyPostingSource(const vector<pair<Xapian::docid, double>>& weights_,$/;"	f	class:MyPostingSource	file:
MyPostingSource	tests/api_percentages.cc	/^class MyPostingSource : public Xapian::PostingSource {$/;"	c	file:
MyPostingSource2	tests/api_serialise.cc	/^    MyPostingSource2(const std::string & desc_)$/;"	f	class:MyPostingSource2
MyPostingSource2	tests/api_serialise.cc	/^class MyPostingSource2 : public Xapian::ValuePostingSource {$/;"	c	file:
MySpy	tests/api_matchspy.cc	/^class MySpy : public Xapian::MatchSpy {$/;"	c	file:
MyStemImpl	tests/api_stem.cc	/^class MyStemImpl : public Xapian::StemImplementation {$/;"	c	file:
MyWeight	tests/api_db.cc	/^    MyWeight() { }$/;"	f	class:MyWeight
MyWeight	tests/api_db.cc	/^class MyWeight : public Xapian::Weight {$/;"	c	file:
NEAR	queryparser/queryparser_token.h	6;"	d
NEPALI	languages/sbl-dispatch.h	/^    NEPALI = 20,$/;"	e	enum:sbl_code
NEW	languages/compiler/header.h	12;"	d
NEWVEC	languages/compiler/header.h	13;"	d
NEXT	queryparser/lemon.c	1838;"	d	file:
NGRAM_SIZE	queryparser/cjk-tokenizer.cc	/^static unsigned NGRAM_SIZE = 2;$/;"	v	file:
NM	Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	docs/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	tests/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NMEDIT	Makefile	/^NMEDIT = $/;"	m
NMEDIT	docs/Makefile	/^NMEDIT = $/;"	m
NMEDIT	tests/Makefile	/^NMEDIT = $/;"	m
NOGDI	common/safewindows.h	38;"	d
NOMINMAX	common/safewindows.h	31;"	d
NOMINMAX	config.h	412;"	d
NONE	languages/sbl-dispatch.h	/^    NONE = 0,$/;"	e	enum:sbl_code
NONE	queryparser/lemon.c	/^    NONE,$/;"	e	enum:e_assoc	file:
NONE	tests/api_serialise.cc	/^    typedef enum { NONE, CLONE } failmode;$/;"	e	enum:ExceptionalMatchSpy::__anon38	file:
NONE	tests/api_serialise.cc	/^    typedef enum { NONE, CLONE } failmode;$/;"	e	enum:ExceptionalPostingSource::__anon36	file:
NONE	tests/api_serialise.cc	/^    typedef enum { NONE, CLONE } failmode;$/;"	e	enum:ExceptionalWeight::__anon37	file:
NONOPTION_P	common/getopt.cc	360;"	d	file:
NONTERMINAL	queryparser/lemon.c	/^  NONTERMINAL,$/;"	e	enum:symbol_type	file:
NON_BOOLEAN	queryparser/queryparser_internal.h	/^typedef enum { NON_BOOLEAN, BOOLEAN, BOOLEAN_EXCLUSIVE } filter_type;$/;"	e	enum:__anon30
NON_SPACING_MARK	include/xapian/unicode.h	/^    NON_SPACING_MARK,$/;"	e	enum:Xapian::Unicode::__anon13
NOQ	tests/api_opsynonym.cc	57;"	d	file:
NORMAL_INSTALL	Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	docs/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	tests/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	docs/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	tests/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORWEGIAN	languages/sbl-dispatch.h	/^    NORWEGIAN = 21,$/;"	e	enum:sbl_code
NOT	queryparser/queryparser_token.h	5;"	d
NOT_USED	queryparser/lemon.c	/^  NOT_USED,                \/* Deleted by compression *\/$/;"	e	enum:e_action	file:
NO_ARGS	common/debuglog.h	/^    typedef enum { NO_ARGS } NoArguments_;$/;"	e	enum:Xapian::__anon10
NO_INSTALL	Makefile	/^NO_INSTALL = -no-install$/;"	m
NO_INSTALL	docs/Makefile	/^NO_INSTALL = -no-install$/;"	m
NO_INSTALL	tests/Makefile	/^NO_INSTALL = -no-install$/;"	m
NO_LIBXAPIAN	tests/harness/utestsuite.cc	21;"	d	file:
NO_OFFSET	queryparser/lemon.c	370;"	d	file:
NO_UNDEFINED	Makefile	/^NO_UNDEFINED = $/;"	m
NO_UNDEFINED	docs/Makefile	/^NO_UNDEFINED = $/;"	m
NO_UNDEFINED	tests/Makefile	/^NO_UNDEFINED = $/;"	m
NROFF	Makefile	/^NROFF = nroff$/;"	m
NUMBER_OF_SUB_DBS	tests/harness/backendmanager_multi.cc	54;"	d	file:
NUM_TOKEN_CODES	languages/compiler/header.h	/^    NUM_TOKEN_CODES$/;"	e	enum:token_codes
NearPostList	matcher/nearpostlist.cc	/^NearPostList::NearPostList(PostList *source_,$/;"	f	class:NearPostList
NearPostList	matcher/nearpostlist.h	/^class NearPostList : public SelectPostList {$/;"	c
NetworkError	include/xapian/error.h	/^    NetworkError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::NetworkError
NetworkError	include/xapian/error.h	/^    NetworkError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::NetworkError
NetworkError	include/xapian/error.h	/^    NetworkError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::NetworkError
NetworkError	include/xapian/error.h	/^    NetworkError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::NetworkError
NetworkError	include/xapian/error.h	/^    explicit NetworkError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::NetworkError
NetworkError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT NetworkError : public RuntimeError {$/;"	c	namespace:Xapian
NetworkPostList	backends/remote/net_postlist.h	/^    NetworkPostList(Xapian::Internal::intrusive_ptr<const RemoteDatabase> db_,$/;"	f	class:NetworkPostList
NetworkPostList	backends/remote/net_postlist.h	/^class NetworkPostList : public LeafPostList {$/;"	c
NetworkTermList	backends/remote/net_termlist.cc	/^NetworkTermList::NetworkTermList(Xapian::termcount document_length_,$/;"	f	class:NetworkTermList
NetworkTermList	backends/remote/net_termlist.h	/^class NetworkTermList : public TermList {$/;"	c
NetworkTermListItem	backends/remote/net_termlist.h	/^class NetworkTermListItem {$/;"	c
NetworkTimeoutError	include/xapian/error.h	/^    NetworkTimeoutError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::NetworkTimeoutError
NetworkTimeoutError	include/xapian/error.h	/^    NetworkTimeoutError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::NetworkTimeoutError
NetworkTimeoutError	include/xapian/error.h	/^    NetworkTimeoutError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::NetworkTimeoutError
NetworkTimeoutError	include/xapian/error.h	/^    NetworkTimeoutError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::NetworkTimeoutError
NetworkTimeoutError	include/xapian/error.h	/^    explicit NetworkTimeoutError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::NetworkTimeoutError
NetworkTimeoutError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT NetworkTimeoutError : public NetworkError {$/;"	c	namespace:Xapian
NeverUseMeKeyMaker	tests/api_sorting.cc	/^class NeverUseMeKeyMaker : public Xapian::KeyMaker {$/;"	c	file:
NoArguments_	common/debuglog.h	/^    typedef enum { NO_ARGS } NoArguments_;$/;"	t	namespace:Xapian	typeref:enum:Xapian::__anon10
NoSuchProgram	tests/perftest/runprocess.h	/^struct NoSuchProgram {};$/;"	s
NumberRangeProcessor	include/xapian/queryparser.h	/^    NumberRangeProcessor(Xapian::valueno slot_,$/;"	f	class:Xapian::NumberRangeProcessor
NumberRangeProcessor	include/xapian/queryparser.h	/^class XAPIAN_VISIBILITY_DEFAULT NumberRangeProcessor : public RangeProcessor {$/;"	c	namespace:Xapian
NumberValueRangeProcessor	include/xapian/queryparser.h	/^    NumberValueRangeProcessor(Xapian::valueno slot_, const std::string &str_,$/;"	f	class:Xapian::NumberValueRangeProcessor
NumberValueRangeProcessor	include/xapian/queryparser.h	/^    explicit NumberValueRangeProcessor(Xapian::valueno slot_)$/;"	f	class:Xapian::NumberValueRangeProcessor
NumberValueRangeProcessor	include/xapian/queryparser.h	/^class XAPIAN_DEPRECATED_CLASS_EX XAPIAN_VISIBILITY_DEFAULT NumberValueRangeProcessor : public StringValueRangeProcessor {$/;"	c	namespace:Xapian
OBJDUMP	Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	docs/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	tests/Makefile	/^OBJDUMP = objdump$/;"	m
OBJEXT	Makefile	/^OBJEXT = o$/;"	m
OBJEXT	docs/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	tests/Makefile	/^OBJEXT = o$/;"	m
OFFSET_BITS	unicode/unicode-data.cc	24;"	d	file:
OM_HGUARD_ANDMAYBEPOSTLIST_H	matcher/andmaybepostlist.h	30;"	d
OM_HGUARD_ANDNOTPOSTLIST_H	matcher/andnotpostlist.h	26;"	d
OM_HGUARD_BACKENDMANAGER_H	tests/harness/backendmanager.h	24;"	d
OM_HGUARD_BRANCHPOSTLIST_H	matcher/branchpostlist.h	25;"	d
OM_HGUARD_CHERT_BTREEBASE_H	backends/chert/chert_btreebase.h	24;"	d
OM_HGUARD_CHERT_CHECK_H	backends/chert/chert_check.h	26;"	d
OM_HGUARD_CHERT_CURSOR_H	backends/chert/chert_cursor.h	24;"	d
OM_HGUARD_CHERT_DATABASE_H	backends/chert/chert_database.h	26;"	d
OM_HGUARD_CHERT_POSTLIST_H	backends/chert/chert_postlist.h	26;"	d
OM_HGUARD_CHERT_RECORD_H	backends/chert/chert_record.h	25;"	d
OM_HGUARD_CHERT_TABLE_H	backends/chert/chert_table.h	25;"	d
OM_HGUARD_CHERT_TYPES_H	backends/chert/chert_types.h	24;"	d
OM_HGUARD_CHERT_VERSION_H	backends/chert/chert_version.h	22;"	d
OM_HGUARD_DATABASE_H	backends/database.h	26;"	d
OM_HGUARD_DOCUMENTTERM_H	api/documentterm.h	25;"	d
OM_HGUARD_DOCUMENT_H	backends/document.h	25;"	d
OM_HGUARD_EXTRAWEIGHTPOSTLIST_H	matcher/extraweightpostlist.h	25;"	d
OM_HGUARD_GLASS_CHECK_H	backends/glass/glass_check.h	26;"	d
OM_HGUARD_GLASS_CURSOR_H	backends/glass/glass_cursor.h	24;"	d
OM_HGUARD_GLASS_DATABASE_H	backends/glass/glass_database.h	26;"	d
OM_HGUARD_GLASS_POSTLIST_H	backends/glass/glass_postlist.h	26;"	d
OM_HGUARD_GLASS_TABLE_H	backends/glass/glass_table.h	25;"	d
OM_HGUARD_INMEMORY_ALLTERMSLIST_H	backends/inmemory/inmemory_alltermslist.h	23;"	d
OM_HGUARD_INMEMORY_DATABASE_H	backends/inmemory/inmemory_database.h	25;"	d
OM_HGUARD_INMEMORY_POSITIONLIST_H	backends/inmemory/inmemory_positionlist.h	24;"	d
OM_HGUARD_MAPTERMLIST_H	api/maptermlist.h	24;"	d
OM_HGUARD_MERGEPOSTLIST_H	matcher/mergepostlist.h	26;"	d
OM_HGUARD_MULTIMATCH_H	matcher/multimatch.h	25;"	d
OM_HGUARD_MULTI_POSTLIST_H	backends/multi/multi_postlist.h	24;"	d
OM_HGUARD_MULTI_TERMLIST_H	backends/multi/multi_termlist.h	24;"	d
OM_HGUARD_NET_TERMLIST_H	backends/remote/net_termlist.h	24;"	d
OM_HGUARD_OMENQUIREINTERNAL_H	api/omenquireinternal.h	27;"	d
OM_HGUARD_ORPOSTLIST_H	matcher/orpostlist.h	27;"	d
OM_HGUARD_SELECTPOSTLIST_H	matcher/selectpostlist.h	24;"	d
OM_HGUARD_TESTSUITE_H	tests/harness/testsuite.h	25;"	d
OM_HGUARD_TESTUTILS_H	tests/harness/testutils.h	24;"	d
OPEN_PUNCTUATION	include/xapian/unicode.h	/^    OPEN_PUNCTUATION,$/;"	e	enum:Xapian::Unicode::__anon13
OPT_DBL	queryparser/lemon.c	/^enum option_type { OPT_FLAG=1,  OPT_INT,  OPT_DBL,  OPT_STR,$/;"	e	enum:option_type	file:
OPT_FDBL	queryparser/lemon.c	/^         OPT_FFLAG, OPT_FINT, OPT_FDBL, OPT_FSTR};$/;"	e	enum:option_type	file:
OPT_FFLAG	queryparser/lemon.c	/^         OPT_FFLAG, OPT_FINT, OPT_FDBL, OPT_FSTR};$/;"	e	enum:option_type	file:
OPT_FINT	queryparser/lemon.c	/^         OPT_FFLAG, OPT_FINT, OPT_FDBL, OPT_FSTR};$/;"	e	enum:option_type	file:
OPT_FLAG	queryparser/lemon.c	/^enum option_type { OPT_FLAG=1,  OPT_INT,  OPT_DBL,  OPT_STR,$/;"	e	enum:option_type	file:
OPT_FSTR	queryparser/lemon.c	/^         OPT_FFLAG, OPT_FINT, OPT_FDBL, OPT_FSTR};$/;"	e	enum:option_type	file:
OPT_HELP	bin/xapian-compact.cc	37;"	d	file:
OPT_HELP	bin/xapian-inspect.cc	43;"	d	file:
OPT_HELP	bin/xapian-progsrv.cc	36;"	d	file:
OPT_HELP	bin/xapian-replicate-server.cc	38;"	d	file:
OPT_HELP	bin/xapian-replicate.cc	39;"	d	file:
OPT_HELP	bin/xapian-tcpsrv.cc	55;"	d	file:
OPT_HELP	examples/xapian-pos.cc	41;"	d	file:
OPT_INT	queryparser/lemon.c	/^enum option_type { OPT_FLAG=1,  OPT_INT,  OPT_DBL,  OPT_STR,$/;"	e	enum:option_type	file:
OPT_NO_RENUMBER	bin/xapian-compact.cc	39;"	d	file:
OPT_STR	queryparser/lemon.c	/^enum option_type { OPT_FLAG=1,  OPT_INT,  OPT_DBL,  OPT_STR,$/;"	e	enum:option_type	file:
OPT_VERSION	bin/xapian-compact.cc	38;"	d	file:
OPT_VERSION	bin/xapian-inspect.cc	44;"	d	file:
OPT_VERSION	bin/xapian-progsrv.cc	37;"	d	file:
OPT_VERSION	bin/xapian-replicate-server.cc	39;"	d	file:
OPT_VERSION	bin/xapian-replicate.cc	40;"	d	file:
OPT_VERSION	bin/xapian-tcpsrv.cc	56;"	d	file:
OPT_VERSION	examples/xapian-pos.cc	42;"	d	file:
OP_AND	include/xapian/query.h	/^	OP_AND = 0,$/;"	e	enum:Xapian::Query::op
OP_AND_MAYBE	include/xapian/query.h	/^	OP_AND_MAYBE = 4,$/;"	e	enum:Xapian::Query::op
OP_AND_NOT	include/xapian/query.h	/^	OP_AND_NOT = 2,$/;"	e	enum:Xapian::Query::op
OP_ELITE_SET	include/xapian/query.h	/^	OP_ELITE_SET = 10,$/;"	e	enum:Xapian::Query::op
OP_FILTER	include/xapian/query.h	/^	OP_FILTER = 5,$/;"	e	enum:Xapian::Query::op
OP_INVALID	include/xapian/query.h	/^	OP_INVALID = 99,$/;"	e	enum:Xapian::Query::op
OP_MAX	include/xapian/query.h	/^	OP_MAX = 14,$/;"	e	enum:Xapian::Query::op
OP_NEAR	include/xapian/query.h	/^	OP_NEAR = 6,$/;"	e	enum:Xapian::Query::op
OP_OR	include/xapian/query.h	/^	OP_OR = 1,$/;"	e	enum:Xapian::Query::op
OP_PHRASE	include/xapian/query.h	/^	OP_PHRASE = 7,$/;"	e	enum:Xapian::Query::op
OP_SCALE_WEIGHT	include/xapian/query.h	/^	OP_SCALE_WEIGHT = 9,$/;"	e	enum:Xapian::Query::op
OP_SYNONYM	include/xapian/query.h	/^	OP_SYNONYM = 13,$/;"	e	enum:Xapian::Query::op
OP_VALUE_GE	include/xapian/query.h	/^	OP_VALUE_GE = 11,$/;"	e	enum:Xapian::Query::op
OP_VALUE_LE	include/xapian/query.h	/^	OP_VALUE_LE = 12,$/;"	e	enum:Xapian::Query::op
OP_VALUE_RANGE	include/xapian/query.h	/^	OP_VALUE_RANGE = 8,$/;"	e	enum:Xapian::Query::op
OP_WILDCARD	include/xapian/query.h	/^	OP_WILDCARD = 15,$/;"	e	enum:Xapian::Query::op
OP_XOR	include/xapian/query.h	/^	OP_XOR = 3,$/;"	e	enum:Xapian::Query::op
OR	queryparser/queryparser_token.h	2;"	d
OTHER_LETTER	include/xapian/unicode.h	/^    OTHER_LETTER,$/;"	e	enum:Xapian::Unicode::__anon13
OTHER_NUMBER	include/xapian/unicode.h	/^    OTHER_NUMBER,$/;"	e	enum:Xapian::Unicode::__anon13
OTHER_PUNCTUATION	include/xapian/unicode.h	/^    OTHER_PUNCTUATION,$/;"	e	enum:Xapian::Unicode::__anon13
OTHER_SYMBOL	include/xapian/unicode.h	/^    OTHER_SYMBOL$/;"	e	enum:Xapian::Unicode::__anon13
OTOOL	Makefile	/^OTOOL = $/;"	m
OTOOL	docs/Makefile	/^OTOOL = $/;"	m
OTOOL	tests/Makefile	/^OTOOL = $/;"	m
OTOOL64	Makefile	/^OTOOL64 = $/;"	m
OTOOL64	docs/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	tests/Makefile	/^OTOOL64 = $/;"	m
O_BINARY	common/safefcntl.h	81;"	d
O_CLOEXEC	common/safefcntl.h	87;"	d
O_CLOEXEC	common/safefcntl.h	90;"	d
O_N	tests/harness/scalability.h	32;"	d
O_N_LOG_N	tests/harness/scalability.h	33;"	d
O_SYNC	common/debuglog.cc	47;"	d	file:
OmDocumentTerm	api/documentterm.h	/^    explicit OmDocumentTerm(Xapian::termcount wdf_)$/;"	f	class:OmDocumentTerm
OmDocumentTerm	api/documentterm.h	/^class OmDocumentTerm {$/;"	c
OptArg	queryparser/lemon.c	/^char *OptArg(int n)$/;"	f
OptErr	queryparser/lemon.c	/^void OptErr(int n)$/;"	f
OptInit	queryparser/lemon.c	/^int OptInit(char **a, const struct s_options *o, FILE *err)$/;"	f
OptNArgs	queryparser/lemon.c	/^int OptNArgs(void){$/;"	f
OptPrint	queryparser/lemon.c	/^void OptPrint(void){$/;"	f
OrContext	api/queryinternal.cc	/^    OrContext(QueryOptimiser* qopt_, size_t reserve)$/;"	f	class:Xapian::Internal::OrContext
OrContext	api/queryinternal.cc	/^class OrContext : public Context {$/;"	c	namespace:Xapian::Internal	file:
OrPosPostList	matcher/orpospostlist.h	/^    OrPosPostList(PostList* pl_)$/;"	f	class:OrPosPostList
OrPosPostList	matcher/orpospostlist.h	/^class OrPosPostList : public PostList {$/;"	c
OrPositionList	matcher/orpositionlist.h	/^    OrPositionList() { }$/;"	f	class:OrPositionList
OrPositionList	matcher/orpositionlist.h	/^class OrPositionList : public PositionList {$/;"	c
OrPostList	matcher/orpostlist.cc	/^OrPostList::OrPostList(PostList *left_,$/;"	f	class:OrPostList
OrPostList	matcher/orpostlist.h	/^class OrPostList : public BranchPostList {$/;"	c
OrTermList	expand/ortermlist.h	/^    OrTermList(TermList * left_, TermList * right_)$/;"	f	class:OrTermList
OrTermList	expand/ortermlist.h	/^class OrTermList : public TermList {$/;"	c
P1	include/xapian/weight.h	/^    double P1, P2;$/;"	m	class:Xapian::PL2PlusWeight
P1	include/xapian/weight.h	/^    double P1, P2;$/;"	m	class:Xapian::PL2Weight
P2	include/xapian/weight.h	/^    double P1, P2;$/;"	m	class:Xapian::PL2PlusWeight
P2	include/xapian/weight.h	/^    double P1, P2;$/;"	m	class:Xapian::PL2Weight
PACKAGE	Makefile	/^PACKAGE = xapian-core$/;"	m
PACKAGE	config.h	284;"	d
PACKAGE	docs/Makefile	/^PACKAGE = xapian-core$/;"	m
PACKAGE	tests/Makefile	/^PACKAGE = xapian-core$/;"	m
PACKAGE_BUGREPORT	Makefile	/^PACKAGE_BUGREPORT = https:\/\/xapian.org\/bugs$/;"	m
PACKAGE_BUGREPORT	config.h	287;"	d
PACKAGE_BUGREPORT	docs/Makefile	/^PACKAGE_BUGREPORT = https:\/\/xapian.org\/bugs$/;"	m
PACKAGE_BUGREPORT	tests/Makefile	/^PACKAGE_BUGREPORT = https:\/\/xapian.org\/bugs$/;"	m
PACKAGE_NAME	Makefile	/^PACKAGE_NAME = xapian-core$/;"	m
PACKAGE_NAME	config.h	290;"	d
PACKAGE_NAME	docs/Makefile	/^PACKAGE_NAME = xapian-core$/;"	m
PACKAGE_NAME	tests/Makefile	/^PACKAGE_NAME = xapian-core$/;"	m
PACKAGE_STRING	Makefile	/^PACKAGE_STRING = xapian-core 1.4.9$/;"	m
PACKAGE_STRING	config.h	293;"	d
PACKAGE_STRING	docs/Makefile	/^PACKAGE_STRING = xapian-core 1.4.9$/;"	m
PACKAGE_STRING	tests/Makefile	/^PACKAGE_STRING = xapian-core 1.4.9$/;"	m
PACKAGE_TARNAME	Makefile	/^PACKAGE_TARNAME = xapian-core$/;"	m
PACKAGE_TARNAME	config.h	296;"	d
PACKAGE_TARNAME	docs/Makefile	/^PACKAGE_TARNAME = xapian-core$/;"	m
PACKAGE_TARNAME	tests/Makefile	/^PACKAGE_TARNAME = xapian-core$/;"	m
PACKAGE_URL	Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	config.h	299;"	d
PACKAGE_URL	docs/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	tests/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_VERSION	Makefile	/^PACKAGE_VERSION = 1.4.9$/;"	m
PACKAGE_VERSION	config.h	302;"	d
PACKAGE_VERSION	docs/Makefile	/^PACKAGE_VERSION = 1.4.9$/;"	m
PACKAGE_VERSION	tests/Makefile	/^PACKAGE_VERSION = 1.4.9$/;"	m
PARAGRAPH_SEPARATOR	include/xapian/unicode.h	/^    PARAGRAPH_SEPARATOR,$/;"	e	enum:Xapian::Unicode::__anon13
PARTIAL_TERM	queryparser/queryparser_token.h	16;"	d
PASS	tests/harness/testsuite.h	/^	    XPASS = 3, XFAIL = 2, PASS = 1, FAIL = 0, SKIP = -1$/;"	e	enum:test_driver::test_result
PATH_SEPARATOR	Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	docs/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	tests/Makefile	/^PATH_SEPARATOR = :$/;"	m
PERCENT	Makefile	/^PERCENT = %$/;"	m
PERCENT	docs/Makefile	/^PERCENT = %$/;"	m
PERCENT	tests/Makefile	/^PERCENT = %$/;"	m
PERL	Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	docs/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	tests/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERMUTE	common/getopt.cc	/^  REQUIRE_ORDER, PERMUTE, RETURN_IN_ORDER$/;"	e	enum:__anon11	file:
PHR_TERM	queryparser/queryparser_token.h	14;"	d
PL2PlusWeight	include/xapian/weight.h	/^    PL2PlusWeight()$/;"	f	class:Xapian::PL2PlusWeight
PL2PlusWeight	include/xapian/weight.h	/^class XAPIAN_VISIBILITY_DEFAULT PL2PlusWeight : public Weight {$/;"	c	namespace:Xapian
PL2PlusWeight	weight/pl2plusweight.cc	/^PL2PlusWeight::PL2PlusWeight(double c, double delta)$/;"	f	class:Xapian::PL2PlusWeight
PL2Weight	include/xapian/weight.h	/^    PL2Weight() : param_c(1.0) {$/;"	f	class:Xapian::PL2Weight
PL2Weight	include/xapian/weight.h	/^class XAPIAN_VISIBILITY_DEFAULT PL2Weight : public Weight {$/;"	c	namespace:Xapian
PL2Weight	weight/pl2weight.cc	/^PL2Weight::PL2Weight(double c) : param_c(c)$/;"	f	class:Xapian::PL2Weight
PNGCRUSH	Makefile	/^PNGCRUSH = $/;"	m
PNGCRUSH	docs/Makefile	/^PNGCRUSH = $/;"	m
PNGCRUSH	tests/Makefile	/^PNGCRUSH = $/;"	m
PORTER	languages/sbl-dispatch.h	/^    PORTER = 22,$/;"	e	enum:sbl_code
PORTUGUESE	languages/sbl-dispatch.h	/^    PORTUGUESE = 23,$/;"	e	enum:sbl_code
POSITION	backends/glass/glass_defs.h	/^	POSITION,$/;"	e	enum:Glass::table_type
POSITIONAL	tests/harness/testrunner.h	/^	POSITIONAL	= 0x00000008,$/;"	e	enum:TestRunner::__anon35
POSTLIST	backends/glass/glass_defs.h	/^	POSTLIST,$/;"	e	enum:Glass::table_type
POST_INSTALL	Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	docs/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	tests/Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	docs/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	tests/Makefile	/^POST_UNINSTALL = :$/;"	m
PRECEDENCE_MARK_1	queryparser/lemon.c	/^  PRECEDENCE_MARK_1,$/;"	e	enum:e_state	file:
PRECEDENCE_MARK_2	queryparser/lemon.c	/^  PRECEDENCE_MARK_2,$/;"	e	enum:e_state	file:
PRE_INSTALL	Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	docs/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	tests/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	docs/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	tests/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRIVATE	queryparser/lemon.c	48;"	d	file:
PRIVATE_USE	include/xapian/unicode.h	/^    PRIVATE_USE,$/;"	e	enum:Xapian::Unicode::__anon13
PROGRAMS	Makefile	/^PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)$/;"	m
PROG_DESC	bin/xapian-check.cc	35;"	d	file:
PROG_DESC	bin/xapian-compact.cc	35;"	d	file:
PROG_DESC	bin/xapian-delve.cc	60;"	d	file:
PROG_DESC	bin/xapian-inspect.cc	41;"	d	file:
PROG_DESC	bin/xapian-progsrv.cc	34;"	d	file:
PROG_DESC	bin/xapian-replicate-server.cc	36;"	d	file:
PROG_DESC	bin/xapian-replicate.cc	37;"	d	file:
PROG_DESC	bin/xapian-tcpsrv.cc	53;"	d	file:
PROG_DESC	examples/copydatabase.cc	36;"	d	file:
PROG_DESC	examples/quest.cc	36;"	d	file:
PROG_DESC	examples/xapian-metadata.cc	34;"	d	file:
PROG_DESC	examples/xapian-pos.cc	39;"	d	file:
PROG_NAME	bin/xapian-check.cc	34;"	d	file:
PROG_NAME	bin/xapian-compact.cc	34;"	d	file:
PROG_NAME	bin/xapian-delve.cc	59;"	d	file:
PROG_NAME	bin/xapian-inspect.cc	40;"	d	file:
PROG_NAME	bin/xapian-progsrv.cc	33;"	d	file:
PROG_NAME	bin/xapian-replicate-server.cc	35;"	d	file:
PROG_NAME	bin/xapian-replicate.cc	36;"	d	file:
PROG_NAME	bin/xapian-tcpsrv.cc	52;"	d	file:
PROG_NAME	examples/copydatabase.cc	35;"	d	file:
PROG_NAME	examples/quest.cc	35;"	d	file:
PROG_NAME	examples/xapian-metadata.cc	33;"	d	file:
PROG_NAME	examples/xapian-pos.cc	38;"	d	file:
PTR_NULL_CHECK	languages/compiler/analyser.c	531;"	d	file:
Parse	queryparser/lemon.c	/^void Parse(struct lemon *gp)$/;"	f
Parse	queryparser/queryparser_internal.cc	/^void Parse($/;"	f	file:
ParseARG_FETCH	queryparser/queryparser_internal.cc	1262;"	d	file:
ParseARG_PDECL	queryparser/queryparser_internal.cc	1261;"	d	file:
ParseARG_SDECL	queryparser/queryparser_internal.cc	1260;"	d	file:
ParseARG_STORE	queryparser/queryparser_internal.cc	1263;"	d	file:
ParseAlloc	queryparser/queryparser_internal.cc	/^static yyParser *ParseAlloc(void){$/;"	f	file:
ParseCoverage	queryparser/queryparser_internal.cc	/^int ParseCoverage(FILE *out){$/;"	f
ParseFinalize	queryparser/queryparser_internal.cc	/^void ParseFinalize(yyParser *pParser){$/;"	f	file:
ParseFree	queryparser/queryparser_internal.cc	/^void ParseFree($/;"	f	file:
ParseInit	queryparser/queryparser_internal.cc	/^void ParseInit(yyParser *pParser){$/;"	f	file:
ParseRuleName	queryparser/queryparser_internal.cc	/^static const char *ParseRuleName(int ruleNum){$/;"	f	file:
ParseStackPeak	queryparser/queryparser_internal.cc	/^int ParseStackPeak(yyParser *pParser){$/;"	f
ParseTOKENTYPE	queryparser/queryparser_internal.cc	1247;"	d	file:
ParseTokenName	queryparser/queryparser_internal.cc	/^static const char *ParseTokenName(int tokenType){$/;"	f	file:
Parse_ENGINEALWAYSONSTACK	queryparser/queryparser_internal.cc	77;"	d	file:
PerfTestLogger	tests/perftest/perftest.cc	/^PerfTestLogger::PerfTestLogger()$/;"	f	class:PerfTestLogger
PerfTestLogger	tests/perftest/perftest.h	/^class PerfTestLogger {$/;"	c
PerfTestRunner	tests/perftest/perftest.cc	/^    PerfTestRunner()$/;"	f	class:PerfTestRunner
PerfTestRunner	tests/perftest/perftest.cc	/^class PerfTestRunner : public TestRunner$/;"	c	file:
PhrasePostList	matcher/phrasepostlist.cc	/^PhrasePostList::PhrasePostList(PostList *source_,$/;"	f	class:PhrasePostList
PhrasePostList	matcher/phrasepostlist.h	/^class PhrasePostList : public SelectPostList {$/;"	c
Plink_add	queryparser/lemon.c	/^void Plink_add(struct plink **plpp, struct config *cfp)$/;"	f
Plink_copy	queryparser/lemon.c	/^void Plink_copy(struct plink **to, struct plink *from)$/;"	f
Plink_delete	queryparser/lemon.c	/^void Plink_delete(struct plink *plp)$/;"	f
Plink_new	queryparser/lemon.c	/^struct plink *Plink_new(void){$/;"	f
Pos	examples/xapian-pos.cc	/^    Pos(const string& term_, const Xapian::PositionIterator& p_)$/;"	f	class:Pos
Pos	examples/xapian-pos.cc	/^class Pos {$/;"	c	file:
PosCmp	examples/xapian-pos.cc	/^struct PosCmp {$/;"	s	file:
PosFilter	api/queryinternal.cc	/^	PosFilter(Xapian::Query::op op__, size_t begin_, size_t end_,$/;"	f	class:Xapian::Internal::AndContext::PosFilter
PosFilter	api/queryinternal.cc	/^    class PosFilter {$/;"	c	class:Xapian::Internal::AndContext	file:
PositionCursor	backends/glass/glass_compact.cc	/^    PositionCursor(GlassTable *in, Xapian::docid offset_)$/;"	f	class:GlassCompact::PositionCursor
PositionCursor	backends/glass/glass_compact.cc	/^class PositionCursor : private GlassCursor {$/;"	c	namespace:GlassCompact	file:
PositionCursorGt	backends/glass/glass_compact.cc	/^class PositionCursorGt {$/;"	c	namespace:GlassCompact	file:
PositionIterator	api/positioniterator.cc	/^PositionIterator::PositionIterator(Internal *internal_) : internal(internal_)$/;"	f	class:Xapian::PositionIterator
PositionIterator	api/positioniterator.cc	/^PositionIterator::PositionIterator(const PositionIterator & o)$/;"	f	class:Xapian::PositionIterator
PositionIterator	include/xapian/positioniterator.h	/^    PositionIterator(PositionIterator && o)$/;"	f	class:Xapian::PositionIterator
PositionIterator	include/xapian/positioniterator.h	/^    XAPIAN_NOTHROW(PositionIterator())$/;"	f	class:Xapian::PositionIterator
PositionIterator	include/xapian/positioniterator.h	/^class XAPIAN_VISIBILITY_DEFAULT PositionIterator {$/;"	c	namespace:Xapian
PositionList	backends/database.h	/^typedef Xapian::PositionIterator::Internal PositionList;$/;"	t
PositionList	backends/positionlist.h	/^typedef Xapian::PositionIterator::Internal PositionList;$/;"	t
PostList	api/postlist.h	/^typedef Xapian::PostingIterator::Internal PostList;$/;"	t
PostingChanges	backends/glass/glass_inverter.h	/^	PostingChanges(Xapian::docid did, Xapian::termcount old_wdf,$/;"	f	class:Inverter::PostingChanges
PostingChanges	backends/glass/glass_inverter.h	/^	PostingChanges(Xapian::docid did, Xapian::termcount wdf)$/;"	f	class:Inverter::PostingChanges
PostingChanges	backends/glass/glass_inverter.h	/^	PostingChanges(Xapian::docid did, Xapian::termcount wdf, bool)$/;"	f	class:Inverter::PostingChanges
PostingChanges	backends/glass/glass_inverter.h	/^    class PostingChanges {$/;"	c	class:Inverter
PostingIterator	api/postingiterator.cc	/^PostingIterator::PostingIterator(Internal *internal_) : internal(internal_)$/;"	f	class:Xapian::PostingIterator
PostingIterator	api/postingiterator.cc	/^PostingIterator::PostingIterator(const PostingIterator & o)$/;"	f	class:Xapian::PostingIterator
PostingIterator	include/xapian/postingiterator.h	/^    PostingIterator(PostingIterator && o)$/;"	f	class:Xapian::PostingIterator
PostingIterator	include/xapian/postingiterator.h	/^    XAPIAN_NOTHROW(PostingIterator())$/;"	f	class:Xapian::PostingIterator
PostingIterator	include/xapian/postingiterator.h	/^class XAPIAN_VISIBILITY_DEFAULT PostingIterator {$/;"	c	namespace:Xapian
PostingSource	include/xapian/postingsource.h	/^    XAPIAN_NOTHROW(PostingSource())$/;"	f	class:Xapian::PostingSource
PostingSource	include/xapian/postingsource.h	/^class XAPIAN_VISIBILITY_DEFAULT PostingSource$/;"	c	namespace:Xapian
PostlistChunkReader	backends/chert/chert_postlist.cc	/^    PostlistChunkReader(Xapian::docid first_did, const string & data_)$/;"	f	class:Chert::PostlistChunkReader
PostlistChunkReader	backends/chert/chert_postlist.cc	/^class Chert::PostlistChunkReader {$/;"	c	class:Chert	file:
PostlistChunkReader	backends/glass/glass_postlist.cc	/^    PostlistChunkReader(Xapian::docid first_did, const string & data_)$/;"	f	class:Glass::PostlistChunkReader
PostlistChunkReader	backends/glass/glass_postlist.cc	/^class Glass::PostlistChunkReader {$/;"	c	class:Glass	file:
PostlistChunkWriter	backends/chert/chert_postlist.cc	/^PostlistChunkWriter::PostlistChunkWriter(const string &orig_key_,$/;"	f	class:PostlistChunkWriter
PostlistChunkWriter	backends/chert/chert_postlist.cc	/^class Chert::PostlistChunkWriter {$/;"	c	class:Chert	file:
PostlistChunkWriter	backends/glass/glass_postlist.cc	/^PostlistChunkWriter::PostlistChunkWriter(const string &orig_key_,$/;"	f	class:PostlistChunkWriter
PostlistChunkWriter	backends/glass/glass_postlist.cc	/^class Glass::PostlistChunkWriter {$/;"	c	class:Glass	file:
PostlistCursor	backends/chert/chert_compact.cc	/^    PostlistCursor(ChertTable *in, Xapian::docid offset_)$/;"	f	class:ChertCompact::PostlistCursor
PostlistCursor	backends/chert/chert_compact.cc	/^class PostlistCursor : private ChertCursor {$/;"	c	namespace:ChertCompact	file:
PostlistCursor	backends/glass/glass_compact.cc	/^    PostlistCursor(GlassTable *in, Xapian::docid offset_)$/;"	f	class:GlassCompact::PostlistCursor
PostlistCursor	backends/glass/glass_compact.cc	/^class PostlistCursor : private GlassCursor {$/;"	c	namespace:GlassCompact	file:
PostlistCursorGt	backends/chert/chert_compact.cc	/^class PostlistCursorGt {$/;"	c	namespace:ChertCompact	file:
PostlistCursorGt	backends/glass/glass_compact.cc	/^class PostlistCursorGt {$/;"	c	namespace:GlassCompact	file:
PrefixCompressedStringItor	backends/prefix_compressed_strings.h	/^    PrefixCompressedStringItor(const unsigned char * p_, size_t left_,$/;"	f	class:PrefixCompressedStringItor
PrefixCompressedStringItor	backends/prefix_compressed_strings.h	/^    explicit PrefixCompressedStringItor(const std::string & s)$/;"	f	class:PrefixCompressedStringItor
PrefixCompressedStringItor	backends/prefix_compressed_strings.h	/^class PrefixCompressedStringItor {$/;"	c
PrefixCompressedStringItorGt	backends/prefix_compressed_strings.h	/^struct PrefixCompressedStringItorGt {$/;"	s
PrefixCompressedStringWriter	backends/prefix_compressed_strings.h	/^    explicit PrefixCompressedStringWriter(std::string & out_) : out(out_) { }$/;"	f	class:PrefixCompressedStringWriter
PrefixCompressedStringWriter	backends/prefix_compressed_strings.h	/^class PrefixCompressedStringWriter {$/;"	c
PrettyOStream	common/pretty.h	/^    PrettyOStream(S & os_) : os(os_) { }$/;"	f	struct:PrettyOStream
PrettyOStream	common/pretty.h	/^struct PrettyOStream {$/;"	s
PrintAction	queryparser/lemon.c	/^int PrintAction($/;"	f
ProbQuery	queryparser/queryparser_internal.cc	/^    ProbQuery() {}$/;"	f	struct:ProbQuery
ProbQuery	queryparser/queryparser_internal.cc	/^    ProbQuery(Query* query_) : query(query_) {}$/;"	f	struct:ProbQuery
ProbQuery	queryparser/queryparser_internal.cc	/^struct ProbQuery {$/;"	s	file:
ProgClient	net/progclient.cc	/^ProgClient::ProgClient(const string &progname, const string &args,$/;"	f	class:ProgClient
ProgClient	net/progclient.h	/^class ProgClient : public RemoteDatabase {$/;"	c
QUAD_EARTH_RADIUS_METRES	geospatial/latlong_metrics.cc	36;"	d	file:
QUERY_LENGTH	include/xapian/weight.h	/^	QUERY_LENGTH = 32,$/;"	e	enum:Xapian::Weight::__anon14
QUOTE	queryparser/queryparser_token.h	19;"	d
Query	api/query.cc	/^Query::Query(Xapian::PostingSource * source)$/;"	f	class:Xapian::Query
Query	api/query.cc	/^Query::Query(const string & term, Xapian::termcount wqf, Xapian::termpos pos)$/;"	f	class:Xapian::Query
Query	api/query.cc	/^Query::Query(double factor, const Xapian::Query & subquery)$/;"	f	class:Xapian::Query
Query	api/query.cc	/^Query::Query(op op_, Xapian::valueno slot, const std::string & limit)$/;"	f	class:Xapian::Query
Query	api/query.cc	/^Query::Query(op op_, Xapian::valueno slot,$/;"	f	class:Xapian::Query
Query	api/query.cc	/^Query::Query(op op_, const Xapian::Query & subquery, double factor)$/;"	f	class:Xapian::Query
Query	api/query.cc	/^Query::Query(op op_,$/;"	f	class:Xapian::Query
Query	include/xapian/query.h	/^    Query(const Query & o) : internal(o.internal) { }$/;"	f	class:Xapian::Query
Query	include/xapian/query.h	/^    Query(op op_, I begin, I end, Xapian::termcount window = 0)$/;"	f	class:Xapian::Query
Query	include/xapian/query.h	/^    Query(op op_, const Xapian::Query & a, const Xapian::Query & b)$/;"	f	class:Xapian::Query
Query	include/xapian/query.h	/^    Query(op op_, const std::string & a, const std::string & b)$/;"	f	class:Xapian::Query
Query	include/xapian/query.h	/^    XAPIAN_NOTHROW(Query()) { }$/;"	f	class:Xapian::Query
Query	include/xapian/query.h	/^    explicit Query(Internal * internal_) : internal(internal_) { }$/;"	f	class:Xapian::Query
Query	include/xapian/query.h	/^    explicit Query(Query::op op_) {$/;"	f	class:Xapian::Query
Query	include/xapian/query.h	/^class XAPIAN_VISIBILITY_DEFAULT Query {$/;"	c	namespace:Xapian
QueryAnd	api/queryinternal.h	/^    explicit QueryAnd(size_t n_subqueries) : QueryAndLike(n_subqueries) { }$/;"	f	class:Xapian::Internal::QueryAnd
QueryAnd	api/queryinternal.h	/^class QueryAnd : public QueryAndLike {$/;"	c	namespace:Xapian::Internal
QueryAndLike	api/queryinternal.h	/^    explicit QueryAndLike(size_t num_subqueries_)$/;"	f	class:Xapian::Internal::QueryAndLike
QueryAndLike	api/queryinternal.h	/^class QueryAndLike : public QueryBranch {$/;"	c	namespace:Xapian::Internal
QueryAndMaybe	api/queryinternal.h	/^    explicit QueryAndMaybe(size_t n_subqueries) : QueryBranch(n_subqueries) { }$/;"	f	class:Xapian::Internal::QueryAndMaybe
QueryAndMaybe	api/queryinternal.h	/^class QueryAndMaybe : public QueryBranch {$/;"	c	namespace:Xapian::Internal
QueryAndNot	api/queryinternal.h	/^    explicit QueryAndNot(size_t n_subqueries) : QueryBranch(n_subqueries) { }$/;"	f	class:Xapian::Internal::QueryAndNot
QueryAndNot	api/queryinternal.h	/^class QueryAndNot : public QueryBranch {$/;"	c	namespace:Xapian::Internal
QueryBranch	api/queryinternal.h	/^    explicit QueryBranch(size_t n_subqueries) : subqueries(n_subqueries) { }$/;"	f	class:Xapian::Internal::QueryBranch
QueryBranch	api/queryinternal.h	/^class QueryBranch : public Query::Internal {$/;"	c	namespace:Xapian::Internal
QueryBuilder	tests/soaktest/soaktest_queries.cc	/^    QueryBuilder(unsigned int maxtermsperfield_,$/;"	f	class:QueryBuilder
QueryBuilder	tests/soaktest/soaktest_queries.cc	/^class QueryBuilder {$/;"	c	file:
QueryBuilderEnv	tests/soaktest/soaktest_queries.cc	/^    QueryBuilderEnv(unsigned int maxtermsperfield_,$/;"	f	struct:QueryBuilderEnv
QueryBuilderEnv	tests/soaktest/soaktest_queries.cc	/^struct QueryBuilderEnv {$/;"	s	file:
QueryEliteSet	api/queryinternal.h	/^    QueryEliteSet(size_t n_subqueries, Xapian::termcount set_size_)$/;"	f	class:Xapian::Internal::QueryEliteSet
QueryEliteSet	api/queryinternal.h	/^class QueryEliteSet : public QueryOrLike {$/;"	c	namespace:Xapian::Internal
QueryFilter	api/queryinternal.h	/^    explicit QueryFilter(size_t n_subqueries) : QueryAndLike(n_subqueries) { }$/;"	f	class:Xapian::Internal::QueryFilter
QueryFilter	api/queryinternal.h	/^class QueryFilter : public QueryAndLike {$/;"	c	namespace:Xapian::Internal
QueryInvalid	api/queryinternal.h	/^    QueryInvalid() { }$/;"	f	class:Xapian::Internal::QueryInvalid
QueryInvalid	api/queryinternal.h	/^class QueryInvalid : public Query::Internal {$/;"	c	namespace:Xapian::Internal
QueryMax	api/queryinternal.h	/^    explicit QueryMax(size_t n_subqueries) : QueryOrLike(n_subqueries) { }$/;"	f	class:Xapian::Internal::QueryMax
QueryMax	api/queryinternal.h	/^class QueryMax : public QueryOrLike {$/;"	c	namespace:Xapian::Internal
QueryNear	api/queryinternal.h	/^    QueryNear(size_t n_subqueries, Xapian::termcount window_)$/;"	f	class:Xapian::Internal::QueryNear
QueryNear	api/queryinternal.h	/^class QueryNear : public QueryWindowed {$/;"	c	namespace:Xapian::Internal
QueryOptimiser	matcher/queryoptimiser.h	/^    QueryOptimiser(const Xapian::Database::Internal & db_,$/;"	f	class:QueryOptimiser
QueryOptimiser	matcher/queryoptimiser.h	/^class QueryOptimiser {$/;"	c
QueryOr	api/queryinternal.h	/^    explicit QueryOr(size_t n_subqueries) : QueryOrLike(n_subqueries) { }$/;"	f	class:Xapian::Internal::QueryOr
QueryOr	api/queryinternal.h	/^class QueryOr : public QueryOrLike {$/;"	c	namespace:Xapian::Internal
QueryOrLike	api/queryinternal.h	/^    explicit QueryOrLike(size_t num_subqueries_)$/;"	f	class:Xapian::Internal::QueryOrLike
QueryOrLike	api/queryinternal.h	/^class QueryOrLike : public QueryBranch {$/;"	c	namespace:Xapian::Internal
QueryParser	include/xapian/queryparser.h	/^class XAPIAN_VISIBILITY_DEFAULT QueryParser {$/;"	c	namespace:Xapian
QueryParser	queryparser/queryparser.cc	/^QueryParser::QueryParser() : internal(new QueryParser::Internal) { }$/;"	f	class:QueryParser
QueryParser	queryparser/queryparser.cc	/^QueryParser::QueryParser(const QueryParser & o) : internal(o.internal) { }$/;"	f	class:QueryParser
QueryParserError	include/xapian/error.h	/^    QueryParserError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::QueryParserError
QueryParserError	include/xapian/error.h	/^    QueryParserError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::QueryParserError
QueryParserError	include/xapian/error.h	/^    QueryParserError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::QueryParserError
QueryParserError	include/xapian/error.h	/^    QueryParserError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::QueryParserError
QueryParserError	include/xapian/error.h	/^    explicit QueryParserError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::QueryParserError
QueryParserError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT QueryParserError : public RuntimeError {$/;"	c	namespace:Xapian
QueryPhrase	api/queryinternal.h	/^    QueryPhrase(size_t n_subqueries, Xapian::termcount window_)$/;"	f	class:Xapian::Internal::QueryPhrase
QueryPhrase	api/queryinternal.h	/^class QueryPhrase : public QueryWindowed {$/;"	c	namespace:Xapian::Internal
QueryPostingSource	api/queryinternal.cc	/^QueryPostingSource::QueryPostingSource(PostingSource * source_)$/;"	f	class:Xapian::Internal::QueryPostingSource
QueryPostingSource	api/queryinternal.h	/^class QueryPostingSource : public Query::Internal {$/;"	c	namespace:Xapian::Internal
QueryScaleWeight	api/queryinternal.cc	/^QueryScaleWeight::QueryScaleWeight(double factor, const Query & subquery_)$/;"	f	class:Xapian::Internal::QueryScaleWeight
QueryScaleWeight	api/queryinternal.h	/^class QueryScaleWeight : public Query::Internal {$/;"	c	namespace:Xapian::Internal
QueryStep	tests/soaktest/soaktest_queries.cc	/^typedef void (*QueryStep)(QueryBuilderEnv &);$/;"	t	file:
QuerySynonym	api/queryinternal.h	/^    explicit QuerySynonym(size_t n_subqueries) : QueryOrLike(n_subqueries) { }$/;"	f	class:Xapian::Internal::QuerySynonym
QuerySynonym	api/queryinternal.h	/^class QuerySynonym : public QueryOrLike {$/;"	c	namespace:Xapian::Internal
QueryTerm	api/queryinternal.h	/^    QueryTerm() : term(), wqf(1), pos(0) { }$/;"	f	class:Xapian::Internal::QueryTerm
QueryTerm	api/queryinternal.h	/^    QueryTerm(const std::string & term_,$/;"	f	class:Xapian::Internal::QueryTerm
QueryTerm	api/queryinternal.h	/^class QueryTerm : public Query::Internal {$/;"	c	namespace:Xapian::Internal
QueryValueBase	api/queryinternal.h	/^    explicit QueryValueBase(Xapian::valueno slot_)$/;"	f	class:Xapian::Internal::QueryValueBase
QueryValueBase	api/queryinternal.h	/^class QueryValueBase : public Query::Internal {$/;"	c	namespace:Xapian::Internal
QueryValueGE	api/queryinternal.h	/^    QueryValueGE(Xapian::valueno slot_, const std::string &limit_)$/;"	f	class:Xapian::Internal::QueryValueGE
QueryValueGE	api/queryinternal.h	/^class QueryValueGE : public QueryValueBase {$/;"	c	namespace:Xapian::Internal
QueryValueLE	api/queryinternal.h	/^    QueryValueLE(Xapian::valueno slot_, const std::string &limit_)$/;"	f	class:Xapian::Internal::QueryValueLE
QueryValueLE	api/queryinternal.h	/^class QueryValueLE : public QueryValueBase {$/;"	c	namespace:Xapian::Internal
QueryValueRange	api/queryinternal.h	/^    QueryValueRange(Xapian::valueno slot_,$/;"	f	class:Xapian::Internal::QueryValueRange
QueryValueRange	api/queryinternal.h	/^class QueryValueRange : public QueryValueBase {$/;"	c	namespace:Xapian::Internal
QueryVector	api/queryvector.h	/^typedef SmallVector<Query> QueryVector;$/;"	t	namespace:Xapian
QueryWildcard	api/queryinternal.h	/^    QueryWildcard(const std::string &pattern_,$/;"	f	class:Xapian::Internal::QueryWildcard
QueryWildcard	api/queryinternal.h	/^class QueryWildcard : public Query::Internal {$/;"	c	namespace:Xapian::Internal
QueryWindowed	api/queryinternal.h	/^    QueryWindowed(size_t n_subqueries, Xapian::termcount window_)$/;"	f	class:Xapian::Internal::QueryWindowed
QueryWindowed	api/queryinternal.h	/^class QueryWindowed : public QueryAndLike {$/;"	c	namespace:Xapian::Internal
QueryXor	api/queryinternal.h	/^    explicit QueryXor(size_t n_subqueries) : QueryOrLike(n_subqueries) { }$/;"	f	class:Xapian::Internal::QueryXor
QueryXor	api/queryinternal.h	/^class QueryXor : public QueryOrLike {$/;"	c	namespace:Xapian::Internal
RANGE	queryparser/queryparser_token.h	18;"	d
RANLIB	Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	docs/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	tests/Makefile	/^RANLIB = ranlib$/;"	m
RD_RESOLVED	queryparser/lemon.c	/^  RD_RESOLVED,             \/* Was reduce.  Precedence resolved conflict *\/$/;"	e	enum:e_action	file:
READER_CLOSE_TIME	bin/xapian-replicate.cc	46;"	d	file:
REASONABLE_BASE_SIZE	backends/chert/chert_btreebase.cc	163;"	d	file:
REASONABLE_CHANGESET_SIZE	backends/chert/chert_replicate_internal.h	34;"	d
REASONABLE_CHANGESET_SIZE	backends/glass/glass_replicate_internal.h	38;"	d
RECURSIVE_CLEAN_TARGETS	Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_TARGETS	Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
REDUCE	queryparser/lemon.c	/^  REDUCE,$/;"	e	enum:e_action	file:
REJECTED	matcher/collapser.h	/^    REJECTED,$/;"	e	enum:__anon29
REL	api/omenquireinternal.h	/^	typedef enum { REL, VAL, VAL_REL, REL_VAL } sort_setting;$/;"	e	enum:Xapian::Enquire::Internal::__anon1
REL	matcher/multimatch.cc	/^const Xapian::Enquire::Internal::sort_setting REL =$/;"	v
RELTERMFREQ	include/xapian/weight.h	/^	RELTERMFREQ = 16,$/;"	e	enum:Xapian::Weight::__anon14
REL_VAL	api/omenquireinternal.h	/^	typedef enum { REL, VAL, VAL_REL, REL_VAL } sort_setting;$/;"	e	enum:Xapian::Enquire::Internal::__anon1
REL_VAL	matcher/multimatch.cc	/^const Xapian::Enquire::Internal::sort_setting REL_VAL =$/;"	v
REMOTE	tests/harness/testrunner.h	/^	REMOTE		= 0x00000002,$/;"	e	enum:TestRunner::__anon35
REPLACED	matcher/collapser.h	/^    REPLACED$/;"	e	enum:__anon29
REPLICAS	tests/harness/testrunner.h	/^	REPLICAS	= 0x00000100,$/;"	e	enum:TestRunner::__anon35
REPLICA_STUB_BANNER	api/replication.cc	58;"	d	file:
REPLY_ADDDOCUMENT	net/remoteprotocol.h	/^    REPLY_ADDDOCUMENT,		\/\/ Add Document$/;"	e	enum:reply_type
REPLY_ALLTERMS	net/remoteprotocol.h	/^    REPLY_ALLTERMS,		\/\/ All Terms$/;"	e	enum:reply_type
REPLY_COLLFREQ	net/remoteprotocol.h	/^    REPLY_COLLFREQ,		\/\/ Get Collection Frequency$/;"	e	enum:reply_type
REPLY_DOCDATA	net/remoteprotocol.h	/^    REPLY_DOCDATA,		\/\/ Get Document$/;"	e	enum:reply_type
REPLY_DOCLENGTH	net/remoteprotocol.h	/^    REPLY_DOCLENGTH,		\/\/ Get Doc Length$/;"	e	enum:reply_type
REPLY_DONE	net/remoteprotocol.h	/^    REPLY_DONE,			\/\/ Done sending list$/;"	e	enum:reply_type
REPLY_EXCEPTION	net/remoteprotocol.h	/^    REPLY_EXCEPTION,		\/\/ Exception$/;"	e	enum:reply_type
REPLY_FREQS	net/remoteprotocol.h	/^    REPLY_FREQS,		\/\/ Get termfreq and collfreq$/;"	e	enum:reply_type
REPLY_MAX	net/remoteprotocol.h	/^    REPLY_MAX$/;"	e	enum:reply_type
REPLY_METADATA	net/remoteprotocol.h	/^    REPLY_METADATA,		\/\/ Metadata$/;"	e	enum:reply_type
REPLY_METADATAKEYLIST	net/remoteprotocol.h	/^    REPLY_METADATAKEYLIST,	\/\/ Iterator for metadata keys$/;"	e	enum:reply_type
REPLY_POSITIONLIST	net/remoteprotocol.h	/^    REPLY_POSITIONLIST,		\/\/ Get PositionList$/;"	e	enum:reply_type
REPLY_POSTLISTITEM	net/remoteprotocol.h	/^    REPLY_POSTLISTITEM,		\/\/ Item in body of a postlist$/;"	e	enum:reply_type
REPLY_POSTLISTSTART	net/remoteprotocol.h	/^    REPLY_POSTLISTSTART,	\/\/ Start of a postlist$/;"	e	enum:reply_type
REPLY_RESULTS	net/remoteprotocol.h	/^    REPLY_RESULTS,		\/\/ Results (MSet)$/;"	e	enum:reply_type
REPLY_STATS	net/remoteprotocol.h	/^    REPLY_STATS,		\/\/ Stats$/;"	e	enum:reply_type
REPLY_TERMDOESNTEXIST	net/remoteprotocol.h	/^    REPLY_TERMDOESNTEXIST,	\/\/ Term Doesn't Exist$/;"	e	enum:reply_type
REPLY_TERMEXISTS	net/remoteprotocol.h	/^    REPLY_TERMEXISTS,		\/\/ Term Exists$/;"	e	enum:reply_type
REPLY_TERMFREQ	net/remoteprotocol.h	/^    REPLY_TERMFREQ,		\/\/ Get Term Frequency$/;"	e	enum:reply_type
REPLY_TERMLIST	net/remoteprotocol.h	/^    REPLY_TERMLIST,		\/\/ Get Termlist$/;"	e	enum:reply_type
REPLY_UNIQUETERMS	net/remoteprotocol.h	/^    REPLY_UNIQUETERMS,		\/\/ Get number of unique terms in doc$/;"	e	enum:reply_type
REPLY_UPDATE	net/remoteprotocol.h	/^    REPLY_UPDATE,		\/\/ Updated database stats$/;"	e	enum:reply_type
REPLY_VALUE	net/remoteprotocol.h	/^    REPLY_VALUE,		\/\/ Document Value$/;"	e	enum:reply_type
REPLY_VALUESTATS	net/remoteprotocol.h	/^    REPLY_VALUESTATS,		\/\/ Value statistics$/;"	e	enum:reply_type
REPL_REPLY_CHANGESET	common/replicationprotocol.h	/^    REPL_REPLY_CHANGESET	\/\/ A changeset file is being sent.$/;"	e	enum:replicate_reply_type
REPL_REPLY_DB_FILEDATA	common/replicationprotocol.h	/^    REPL_REPLY_DB_FILEDATA,	\/\/ Contents of a file in a DB copy.$/;"	e	enum:replicate_reply_type
REPL_REPLY_DB_FILENAME	common/replicationprotocol.h	/^    REPL_REPLY_DB_FILENAME,	\/\/ The name of a file in a DB copy.$/;"	e	enum:replicate_reply_type
REPL_REPLY_DB_FOOTER	common/replicationprotocol.h	/^    REPL_REPLY_DB_FOOTER,	\/\/ End of a whole DB copy.$/;"	e	enum:replicate_reply_type
REPL_REPLY_DB_HEADER	common/replicationprotocol.h	/^    REPL_REPLY_DB_HEADER,	\/\/ The start of a whole DB copy.$/;"	e	enum:replicate_reply_type
REPL_REPLY_END_OF_CHANGES	common/replicationprotocol.h	/^    REPL_REPLY_END_OF_CHANGES,	\/\/ No more changes to transfer.$/;"	e	enum:replicate_reply_type
REPL_REPLY_FAIL	common/replicationprotocol.h	/^    REPL_REPLY_FAIL,		\/\/ Couldn't generate full set of changes.$/;"	e	enum:replicate_reply_type
REPORT_FAIL_VG	tests/harness/testsuite.cc	359;"	d	file:
REQUIRE_ORDER	common/getopt.cc	/^  REQUIRE_ORDER, PERMUTE, RETURN_IN_ORDER$/;"	e	enum:__anon11	file:
RESYNC_AFTER_DECL_ERROR	queryparser/lemon.c	/^  RESYNC_AFTER_DECL_ERROR,$/;"	e	enum:e_state	file:
RESYNC_AFTER_RULE_ERROR	queryparser/lemon.c	/^  RESYNC_AFTER_RULE_ERROR,$/;"	e	enum:e_state	file:
RETURN	common/debuglog.h	430;"	d
RETURN	common/debuglog.h	459;"	d
RETURN_IN_ORDER	common/getopt.cc	/^  REQUIRE_ORDER, PERMUTE, RETURN_IN_ORDER$/;"	e	enum:__anon11	file:
REVISION	backends/chert/chert_table.h	/^inline unsigned REVISION(const uint8_t * b) { return aligned_read4(b); }$/;"	f
REVISION	backends/glass/glass_table.h	/^inline uint4 REVISION(const uint8_t * b) { return aligned_read4(b); }$/;"	f	namespace:Glass
RHS_ALIAS_1	queryparser/lemon.c	/^  RHS_ALIAS_1,$/;"	e	enum:e_state	file:
RHS_ALIAS_2	queryparser/lemon.c	/^  RHS_ALIAS_2,$/;"	e	enum:e_state	file:
RIGHT	queryparser/lemon.c	/^    RIGHT,$/;"	e	enum:e_assoc	file:
ROMANIAN	languages/sbl-dispatch.h	/^    ROMANIAN = 24,$/;"	e	enum:sbl_code
RP_DATE_PREFER_MDY	include/xapian/queryparser.h	/^    RP_DATE_PREFER_MDY = 4$/;"	e	enum:Xapian::__anon23
RP_REPEATED	include/xapian/queryparser.h	/^    RP_REPEATED = 2,$/;"	e	enum:Xapian::__anon23
RP_SUFFIX	include/xapian/queryparser.h	/^    RP_SUFFIX = 1,$/;"	e	enum:Xapian::__anon23
RRCONFLICT	queryparser/lemon.c	/^  RRCONFLICT,              \/* Was a reduce, but part of a conflict *\/$/;"	e	enum:e_action	file:
RSET_SIZE	include/xapian/weight.h	/^	RSET_SIZE = 2,$/;"	e	enum:Xapian::Weight::__anon14
RST2HTML	Makefile	/^RST2HTML = $/;"	m
RST2HTML	docs/Makefile	/^RST2HTML = $/;"	m
RST2HTML	tests/Makefile	/^RST2HTML = $/;"	m
RSTDOCS	docs/Makefile	/^RSTDOCS = \\$/;"	m
RSTHTML	docs/Makefile	/^RSTHTML = $(RSTDOCS:.rst=.html)$/;"	m
RSet	api/omenquire.cc	/^RSet::RSet() : internal(new RSet::Internal)$/;"	f	class:Xapian::RSet
RSet	api/omenquire.cc	/^RSet::RSet(const RSet &other) : internal(other.internal)$/;"	f	class:Xapian::RSet
RSet	include/xapian/enquire.h	/^class XAPIAN_VISIBILITY_DEFAULT RSet {$/;"	c	namespace:Xapian
RUSSIAN	languages/sbl-dispatch.h	/^    RUSSIAN = 25,$/;"	e	enum:sbl_code
RangeError	include/xapian/error.h	/^    RangeError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::RangeError
RangeError	include/xapian/error.h	/^    RangeError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::RangeError
RangeError	include/xapian/error.h	/^    RangeError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::RangeError
RangeError	include/xapian/error.h	/^    RangeError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::RangeError
RangeError	include/xapian/error.h	/^    explicit RangeError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::RangeError
RangeError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT RangeError : public RuntimeError {$/;"	c	namespace:Xapian
RangeProc	queryparser/queryparser_internal.h	/^    RangeProc(RangeProcessor * range_proc, const std::string* grouping_)$/;"	f	struct:Xapian::RangeProc
RangeProc	queryparser/queryparser_internal.h	/^struct RangeProc {$/;"	s	namespace:Xapian
RangeProcessor	include/xapian/queryparser.h	/^    RangeProcessor() : slot(Xapian::BAD_VALUENO), flags(0) { }$/;"	f	class:Xapian::RangeProcessor
RangeProcessor	include/xapian/queryparser.h	/^    explicit RangeProcessor(Xapian::valueno slot_,$/;"	f	class:Xapian::RangeProcessor
RangeProcessor	include/xapian/queryparser.h	/^class XAPIAN_VISIBILITY_DEFAULT RangeProcessor$/;"	c	namespace:Xapian
ReadError	tests/perftest/runprocess.h	/^struct ReadError {};$/;"	s
RealTime	common/realtime.h	/^namespace RealTime {$/;"	n
Registry	api/registry.cc	/^Registry::Registry()$/;"	f	class:Xapian::Registry
Registry	api/registry.cc	/^Registry::Registry(const Registry & other)$/;"	f	class:Xapian::Registry
Registry	include/xapian/registry.h	/^class XAPIAN_VISIBILITY_DEFAULT Registry {$/;"	c	namespace:Xapian
Remote	include/xapian/dbfactory.h	/^namespace Remote {$/;"	n	namespace:Xapian
RemoteConnection	net/remoteconnection.cc	/^RemoteConnection::RemoteConnection(int fdin_, int fdout_,$/;"	f	class:RemoteConnection
RemoteConnection	net/remoteconnection.h	/^class RemoteConnection {$/;"	c
RemoteDatabase	backends/remote/remote-database.cc	/^RemoteDatabase::RemoteDatabase(int fd, double timeout_,$/;"	f	class:RemoteDatabase
RemoteDatabase	backends/remote/remote-database.h	/^class RemoteDatabase : public Xapian::Database::Internal {$/;"	c
RemoteDocument	backends/remote/remote-document.h	/^    RemoteDocument(const Xapian::Database::Internal *db, Xapian::docid did_,$/;"	f	class:RemoteDocument
RemoteDocument	backends/remote/remote-document.h	/^class RemoteDocument : public Xapian::Document::Internal {$/;"	c
RemoteServer	net/remoteserver.cc	/^RemoteServer::RemoteServer(const std::vector<std::string> &dbpaths,$/;"	f	class:RemoteServer
RemoteServer	net/remoteserver.h	/^class XAPIAN_VISIBILITY_DEFAULT RemoteServer : private RemoteConnection {$/;"	c
RemoteSubMatch	matcher/remotesubmatch.cc	/^RemoteSubMatch::RemoteSubMatch(RemoteDatabase *db_,$/;"	f	class:RemoteSubMatch
RemoteSubMatch	matcher/remotesubmatch.h	/^class RemoteSubMatch : public SubMatch {$/;"	c
RemoteTcpClient	net/remotetcpclient.h	/^    RemoteTcpClient(const std::string & hostname, int port,$/;"	f	class:RemoteTcpClient
RemoteTcpClient	net/remotetcpclient.h	/^class RemoteTcpClient : SOCKET_INITIALIZER_MIXIN public RemoteDatabase {$/;"	c
RemoteTcpServer	net/remotetcpserver.cc	/^RemoteTcpServer::RemoteTcpServer(const vector<std::string> &dbpaths_,$/;"	f	class:RemoteTcpServer
RemoteTcpServer	net/remotetcpserver.h	/^class XAPIAN_VISIBILITY_DEFAULT RemoteTcpServer : public TcpServer {$/;"	c
ReplicateTcpClient	net/replicatetcpclient.cc	/^ReplicateTcpClient::ReplicateTcpClient(const string & hostname, int port,$/;"	f	class:ReplicateTcpClient
ReplicateTcpServer	net/replicatetcpserver.cc	/^ReplicateTcpServer::ReplicateTcpServer(const string & host, int port,$/;"	f	class:ReplicateTcpServer
ReplicateTcpServer	net/replicatetcpserver.h	/^class XAPIAN_VISIBILITY_DEFAULT ReplicateTcpServer : public TcpServer {$/;"	c
ReplicationInfo	api/replication.h	/^    ReplicationInfo()$/;"	f	struct:Xapian::ReplicationInfo
ReplicationInfo	api/replication.h	/^struct ReplicationInfo {$/;"	s	namespace:Xapian
ReportHeader	queryparser/lemon.c	/^void ReportHeader(struct lemon *lemp)$/;"	f
ReportOutput	queryparser/lemon.c	/^void ReportOutput(struct lemon *lemp)$/;"	f
ReportTable	queryparser/lemon.c	/^void ReportTable($/;"	f
Reprint	queryparser/lemon.c	/^void Reprint(struct lemon *lemp)$/;"	f
Resolver	net/resolver.h	/^    Resolver(const std::string& host, int port, int flags = 0) {$/;"	f	class:Resolver
Resolver	net/resolver.h	/^class Resolver {$/;"	c
ResortStates	queryparser/lemon.c	/^void ResortStates(struct lemon *lemp)$/;"	f
RootInfo	backends/glass/glass_version.h	/^class RootInfo {$/;"	c	namespace:Glass
RulePrint	queryparser/lemon.c	/^void RulePrint(FILE *fp, struct rule *rp, int iCursor){$/;"	f
Rule_merge	queryparser/lemon.c	/^static struct rule *Rule_merge(struct rule *pA, struct rule *pB){$/;"	f	file:
Rule_sort	queryparser/lemon.c	/^static struct rule *Rule_sort(struct rule *rp){$/;"	f	file:
RuntimeError	include/xapian/error.h	/^    RuntimeError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::RuntimeError
RuntimeError	include/xapian/error.h	/^    RuntimeError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::RuntimeError
RuntimeError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT RuntimeError : public Error {$/;"	c	namespace:Xapian
S	languages/compiler/header.h	/^    const char * S[10];  \/* strings *\/$/;"	m	struct:generator
SCRIPTS	Makefile	/^SCRIPTS = $(bin_SCRIPTS) $(noinst_SCRIPTS)$/;"	m
SED	Makefile	/^SED = \/bin\/sed$/;"	m
SED	docs/Makefile	/^SED = \/bin\/sed$/;"	m
SED	tests/Makefile	/^SED = \/bin\/sed$/;"	m
SEQ_START_POINT	backends/chert/chert_table.cc	151;"	d	file:
SEQ_START_POINT	backends/glass/glass_table.cc	145;"	d	file:
SET_CAPACITY	languages/steminternal.h	/^    SET_CAPACITY(symbol* p, int n)$/;"	f	class:Xapian::SnowballStemImplementation
SET_DIR_END	backends/chert/chert_table.h	/^inline void SET_DIR_END(uint8_t * b, int x) { setint2(b, 9, x); }$/;"	f
SET_DIR_END	backends/glass/glass_table.h	/^inline void SET_DIR_END(uint8_t * b, int x) { unaligned_write2(b + 9, x); }$/;"	f	namespace:Glass
SET_LEVEL	backends/chert/chert_table.h	/^inline void SET_LEVEL(uint8_t * b, int x) { setint1(b, 4, x); }$/;"	f
SET_LEVEL	backends/glass/glass_table.h	/^inline void SET_LEVEL(uint8_t * b, int x) { AssertRel(x,<,256); b[4] = x; }$/;"	f	namespace:Glass
SET_MAKE	Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	docs/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	tests/Makefile	/^SET_MAKE = $/;"	m
SET_MAX_FREE	backends/chert/chert_table.h	/^inline void SET_MAX_FREE(uint8_t * b, int x) { setint2(b, 5, x); }$/;"	f
SET_MAX_FREE	backends/glass/glass_table.h	/^inline void SET_MAX_FREE(uint8_t * b, int x) { unaligned_write2(b + 5, x); }$/;"	f	namespace:Glass
SET_REVISION	backends/chert/chert_table.h	/^inline void SET_REVISION(uint8_t * b, uint4 rev) { aligned_write4(b, rev); }$/;"	f
SET_REVISION	backends/glass/glass_table.h	/^inline void SET_REVISION(uint8_t * b, uint4 rev) { aligned_write4(b, rev); }$/;"	f	namespace:Glass
SET_SIZE	languages/steminternal.h	/^    SET_SIZE(symbol* p, int n)$/;"	f	class:Xapian::SnowballStemImplementation
SET_TOTAL_FREE	backends/chert/chert_table.h	/^inline void SET_TOTAL_FREE(uint8_t * b, int x) { setint2(b, 7, x); }$/;"	f
SET_TOTAL_FREE	backends/glass/glass_table.h	/^inline void SET_TOTAL_FREE(uint8_t * b, int x) { unaligned_write2(b + 7, x); }$/;"	f	namespace:Glass
SHELL	Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	api/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	backends/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	backends/chert/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	backends/glass/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	backends/inmemory/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	backends/multi/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	backends/remote/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	bin/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	common/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	docs/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	examples/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	expand/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	geospatial/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	include/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	include/xapian/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	languages/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	matcher/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	net/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	queryparser/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	tests/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	tests/harness/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	unicode/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	weight/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHIFT	queryparser/lemon.c	/^  SHIFT,$/;"	e	enum:e_action	file:
SHIFTREDUCE	queryparser/lemon.c	/^  SHIFTREDUCE              \/* Shift first, then reduce *\/$/;"	e	enum:e_action	file:
SHLIBEXT	Makefile	/^SHLIBEXT = .so$/;"	m
SHLIBEXT	docs/Makefile	/^SHLIBEXT = .so$/;"	m
SHLIBEXT	tests/Makefile	/^SHLIBEXT = .so$/;"	m
SH_RESOLVED	queryparser/lemon.c	/^  SH_RESOLVED,             \/* Was a shift.  Precedence resolved conflict *\/$/;"	e	enum:e_action	file:
SIGCHLD	net/tcpserver.cc	61;"	d	file:
SIGCHLD	tests/harness/backendmanager_remotetcp.cc	40;"	d	file:
SIGJMP_BUF	tests/harness/testsuite.cc	85;"	d	file:
SIGJMP_BUF	tests/harness/testsuite.cc	89;"	d	file:
SIGLONGJMP	tests/harness/testsuite.cc	84;"	d	file:
SIGLONGJMP	tests/harness/testsuite.cc	88;"	d	file:
SIGSETJMP	tests/harness/testsuite.cc	83;"	d	file:
SIGSETJMP	tests/harness/testsuite.cc	87;"	d	file:
SINGLEFILE	tests/harness/testrunner.h	/^	SINGLEFILE	= 0x00001000,$/;"	e	enum:TestRunner::__anon35
SIZE	languages/compiler/header.h	16;"	d
SIZE	languages/steminternal.h	/^    SIZE(const symbol* p)$/;"	f	class:Xapian::SnowballStemImplementation
SIZEOF_INT	config.h	311;"	d
SIZEOF_LONG	config.h	314;"	d
SIZEOF_LONG_LONG	config.h	317;"	d
SIZEOF_SHORT	config.h	320;"	d
SIZE_128BIT	backends/inmemory/KeyDomet.h	/^        SIZE_128BIT = 16$/;"	m	class:kdmt::KeyDometSize
SIZE_16BIT	backends/inmemory/KeyDomet.h	/^        SIZE_16BIT  = 2,$/;"	m	class:kdmt::KeyDometSize
SIZE_32BIT	backends/inmemory/KeyDomet.h	/^        SIZE_32BIT  = 4,$/;"	m	class:kdmt::KeyDometSize
SIZE_64BIT	backends/inmemory/KeyDomet.h	/^        SIZE_64BIT  = 8,$/;"	m	class:kdmt::KeyDometSize
SKIP	tests/harness/testsuite.h	/^	    XPASS = 3, XFAIL = 2, PASS = 1, FAIL = 0, SKIP = -1$/;"	e	enum:test_driver::test_result
SKIP_TEST	tests/harness/testsuite.h	64;"	d
SKIP_TEST_FOR_BACKEND	tests/apitest.h	73;"	d
SKIP_TEST_UNLESS_BACKEND	tests/apitest.h	72;"	d
SNIPPET_BACKGROUND_MODEL	include/xapian/mset.h	/^	SNIPPET_BACKGROUND_MODEL = 1,$/;"	e	enum:Xapian::MSet::__anon18
SNIPPET_EMPTY_WITHOUT_MATCH	include/xapian/mset.h	/^	SNIPPET_EMPTY_WITHOUT_MATCH = 4$/;"	e	enum:Xapian::MSet::__anon18
SNIPPET_EXHAUSTIVE	include/xapian/mset.h	/^	SNIPPET_EXHAUSTIVE = 2,$/;"	e	enum:Xapian::MSet::__anon18
SNPRINTF	config.h	324;"	d
SNPRINTF_ISO	config.h	328;"	d
SOCKET_INITIALIZER_MIXIN	net/remotetcpclient.h	27;"	d
SOCKET_INITIALIZER_MIXIN	net/remotetcpclient.h	29;"	d
SOCKET_INITIALIZER_MIXIN	net/replicatetcpclient.h	/^class XAPIAN_VISIBILITY_DEFAULT ReplicateTcpClient SOCKET_INITIALIZER_MIXIN {$/;"	c
SOCKET_INITIALIZER_MIXIN	net/replicatetcpclient.h	30;"	d
SOCKET_INITIALIZER_MIXIN	net/replicatetcpclient.h	32;"	d
SOCKET_INITIALIZER_MIXIN	net/tcpserver.h	/^class XAPIAN_VISIBILITY_DEFAULT TcpServer SOCKET_INITIALIZER_MIXIN {$/;"	c
SOCKET_INITIALIZER_MIXIN	net/tcpserver.h	26;"	d
SOCKET_INITIALIZER_MIXIN	net/tcpserver.h	28;"	d
SOCKLEN_T	config.h	331;"	d
SOCK_CLOEXEC	common/safesyssocket.h	38;"	d
SOCK_CLOEXEC	common/safesyssocket.h	68;"	d
SORTABLE_UINT_1ST_BYTE_MASK	common/pack.h	/^const unsigned int SORTABLE_UINT_1ST_BYTE_MASK =$/;"	v
SORTABLE_UINT_LOG2_MAX_BYTES	common/pack.h	/^const unsigned int SORTABLE_UINT_LOG2_MAX_BYTES = 2;$/;"	v
SORTABLE_UINT_MAX_BYTES	common/pack.h	/^const unsigned int SORTABLE_UINT_MAX_BYTES = 1 << SORTABLE_UINT_LOG2_MAX_BYTES;$/;"	v
SOURCEDOC_SRC	docs/docsource.mk	/^SOURCEDOC_SRC=\\$/;"	m
SOURCES	Makefile	/^SOURCES = $(libgetopt_la_SOURCES) $(libxapian_la_SOURCES) \\$/;"	m
SOURCES	docs/Makefile	/^SOURCES =$/;"	m
SOURCES	tests/Makefile	/^SOURCES = $(apitest_SOURCES) $(internaltest_SOURCES) \\$/;"	m
SPACE_SEPARATOR	include/xapian/unicode.h	/^    SPACE_SEPARATOR,$/;"	e	enum:Xapian::Unicode::__anon13
SPANISH	languages/sbl-dispatch.h	/^    SPANISH = 26,$/;"	e	enum:sbl_code
SPELLING	backends/glass/glass_defs.h	/^	SPELLING,$/;"	e	enum:Glass::table_type
SPELLING	tests/harness/testrunner.h	/^	SPELLING	= 0x00000020,$/;"	e	enum:TestRunner::__anon35
SRCONFLICT	queryparser/lemon.c	/^  SRCONFLICT,              \/* Was a reduce, but part of a conflict *\/$/;"	e	enum:e_action	file:
SSCONFLICT	queryparser/lemon.c	/^  SSCONFLICT,              \/* A shift\/shift conflict *\/$/;"	e	enum:e_action	file:
STANDARD	include/xapian/compactor.h	/^	STANDARD = 0,$/;"	e	enum:Xapian::Compactor::__anon17
STARTSIZE	languages/compiler/header.h	15;"	d
STDC_HEADERS	config.h	334;"	d
STEM_ALL	include/xapian/queryparser.h	/^	STEM_NONE, STEM_SOME, STEM_ALL, STEM_ALL_Z, STEM_SOME_FULL_POS$/;"	e	enum:Xapian::QueryParser::__anon25
STEM_ALL	include/xapian/termgenerator.h	/^	STEM_NONE, STEM_SOME, STEM_ALL, STEM_ALL_Z, STEM_SOME_FULL_POS$/;"	e	enum:Xapian::TermGenerator::__anon21
STEM_ALL_Z	include/xapian/queryparser.h	/^	STEM_NONE, STEM_SOME, STEM_ALL, STEM_ALL_Z, STEM_SOME_FULL_POS$/;"	e	enum:Xapian::QueryParser::__anon25
STEM_ALL_Z	include/xapian/termgenerator.h	/^	STEM_NONE, STEM_SOME, STEM_ALL, STEM_ALL_Z, STEM_SOME_FULL_POS$/;"	e	enum:Xapian::TermGenerator::__anon21
STEM_NONE	include/xapian/queryparser.h	/^	STEM_NONE, STEM_SOME, STEM_ALL, STEM_ALL_Z, STEM_SOME_FULL_POS$/;"	e	enum:Xapian::QueryParser::__anon25
STEM_NONE	include/xapian/termgenerator.h	/^	STEM_NONE, STEM_SOME, STEM_ALL, STEM_ALL_Z, STEM_SOME_FULL_POS$/;"	e	enum:Xapian::TermGenerator::__anon21
STEM_SOME	include/xapian/queryparser.h	/^	STEM_NONE, STEM_SOME, STEM_ALL, STEM_ALL_Z, STEM_SOME_FULL_POS$/;"	e	enum:Xapian::QueryParser::__anon25
STEM_SOME	include/xapian/termgenerator.h	/^	STEM_NONE, STEM_SOME, STEM_ALL, STEM_ALL_Z, STEM_SOME_FULL_POS$/;"	e	enum:Xapian::TermGenerator::__anon21
STEM_SOME_FULL_POS	include/xapian/queryparser.h	/^	STEM_NONE, STEM_SOME, STEM_ALL, STEM_ALL_Z, STEM_SOME_FULL_POS$/;"	e	enum:Xapian::QueryParser::__anon25
STEM_SOME_FULL_POS	include/xapian/termgenerator.h	/^	STEM_NONE, STEM_SOME, STEM_ALL, STEM_ALL_Z, STEM_SOME_FULL_POS$/;"	e	enum:Xapian::TermGenerator::__anon21
STOP_ALL	include/xapian/termgenerator.h	/^    typedef enum { STOP_NONE, STOP_ALL, STOP_STEMMED } stop_strategy;$/;"	e	enum:Xapian::TermGenerator::__anon22
STOP_NONE	include/xapian/termgenerator.h	/^    typedef enum { STOP_NONE, STOP_ALL, STOP_STEMMED } stop_strategy;$/;"	e	enum:Xapian::TermGenerator::__anon22
STOP_STEMMED	include/xapian/termgenerator.h	/^    typedef enum { STOP_NONE, STOP_ALL, STOP_STEMMED } stop_strategy;$/;"	e	enum:Xapian::TermGenerator::__anon22
STRERROR_R_CHAR_P	config.h	337;"	d
STRINGIZE	common/stringutils.h	36;"	d
STRINGIZE_	common/stringutils.h	33;"	d
STRING_SIZE	backends/uuids.h	/^    static constexpr unsigned STRING_SIZE = 36;$/;"	m	class:Uuid
STRIP	Makefile	/^STRIP = strip$/;"	m
STRIP	docs/Makefile	/^STRIP = strip$/;"	m
STRIP	tests/Makefile	/^STRIP = strip$/;"	m
SUBDIRS	Makefile	/^SUBDIRS = . docs tests$/;"	m
SUCCESS	backends/flint_lock.h	/^	SUCCESS, \/\/ We got the lock!$/;"	e	enum:FlintLock::__anon2
SURROGATE	include/xapian/unicode.h	/^    SURROGATE,$/;"	e	enum:Xapian::Unicode::__anon13
SWEDISH	languages/sbl-dispatch.h	/^    SWEDISH = 27,$/;"	e	enum:sbl_code
SYNONYM	backends/glass/glass_defs.h	/^	SYNONYM,$/;"	e	enum:Glass::table_type
SYNONYM	queryparser/queryparser_token.h	11;"	d
SYNONYMS	tests/harness/testrunner.h	/^	SYNONYMS	= 0x00000080,$/;"	e	enum:TestRunner::__anon35
S_ISDIR	common/safesysstat.h	32;"	d
S_ISDIR	common/safesysstat.h	57;"	d
S_ISREG	common/safesysstat.h	35;"	d
S_ISREG	common/safesysstat.h	60;"	d
S_ch	languages/danish.h	/^    symbol * S_ch;$/;"	m	class:Xapian::InternalStemDanish
S_ch	languages/kraaij_pohlmann.h	/^    symbol * S_ch;$/;"	m	class:Xapian::InternalStemKraaij_pohlmann
S_x	languages/finnish.h	/^    symbol * S_x;$/;"	m	class:Xapian::InternalStemFinnish
SelectPostList	matcher/selectpostlist.h	/^	explicit SelectPostList(PostList *source_) : source(source_), wt(-1) { }$/;"	f	class:SelectPostList
SelectPostList	matcher/selectpostlist.h	/^class SelectPostList : public PostList {$/;"	c
SerialisationError	include/xapian/error.h	/^    SerialisationError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::SerialisationError
SerialisationError	include/xapian/error.h	/^    SerialisationError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::SerialisationError
SerialisationError	include/xapian/error.h	/^    SerialisationError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::SerialisationError
SerialisationError	include/xapian/error.h	/^    SerialisationError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::SerialisationError
SerialisationError	include/xapian/error.h	/^    explicit SerialisationError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::SerialisationError
SerialisationError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT SerialisationError : public RuntimeError {$/;"	c	namespace:Xapian
SetAdd	queryparser/lemon.c	/^int SetAdd(char *s, int e)$/;"	f
SetFind	queryparser/lemon.c	237;"	d	file:
SetFree	queryparser/lemon.c	/^void SetFree(char *s)$/;"	f
SetNew	queryparser/lemon.c	/^char *SetNew(void){$/;"	f
SetSize	queryparser/lemon.c	/^void SetSize(int n)$/;"	f
SetUnion	queryparser/lemon.c	/^int SetUnion(char *s1, char *s2)$/;"	f
SignalRedirector	tests/harness/testsuite.cc	/^    SignalRedirector() : active(false) { }$/;"	f	class:SignalRedirector
SignalRedirector	tests/harness/testsuite.cc	/^class SignalRedirector {$/;"	c	file:
SimpleMatchSpy	tests/api_matchspy.cc	/^class SimpleMatchSpy : public Xapian::MatchSpy {$/;"	c	file:
SimpleStopper	include/xapian/queryparser.h	/^    SimpleStopper() { }$/;"	f	class:Xapian::SimpleStopper
SimpleStopper	include/xapian/queryparser.h	/^    SimpleStopper(Iterator begin, Iterator end) : stop_words(begin, end) { }$/;"	f	class:Xapian::SimpleStopper
SimpleStopper	include/xapian/queryparser.h	/^class XAPIAN_VISIBILITY_DEFAULT SimpleStopper : public Stopper {$/;"	c	namespace:Xapian
Size	backends/inmemory/KeyDomet.h	/^        static constexpr KeyDometSize Size = Size_;$/;"	m	class:kdmt::KeyDometSize::KeyDometStr
SlowDecreasingValueWeightPostingSource	tests/api_postingsource.cc	/^    SlowDecreasingValueWeightPostingSource(int & count_)$/;"	f	class:SlowDecreasingValueWeightPostingSource
SlowDecreasingValueWeightPostingSource	tests/api_postingsource.cc	/^class SlowDecreasingValueWeightPostingSource$/;"	c	file:
SlowValueList	backends/slowvaluelist.h	/^    SlowValueList(const Xapian::Database::Internal * db_, Xapian::valueno slot_)$/;"	f	class:SlowValueList
SlowValueList	backends/slowvaluelist.h	/^class SlowValueList : public ValueList {$/;"	c
SmallVector	api/smallvector.h	/^    SmallVector() : SmallVector_() { }$/;"	f	class:Xapian::SmallVector
SmallVector	api/smallvector.h	/^    explicit SmallVector(size_type n) : SmallVector_() {$/;"	f	class:Xapian::SmallVector
SmallVector	api/smallvector.h	/^class SmallVector : private SmallVector_ {$/;"	c	namespace:Xapian
SmallVector_	api/smallvector.h	/^    SmallVector_() : c(0) { }$/;"	f	class:Xapian::SmallVector_
SmallVector_	api/smallvector.h	/^class SmallVector_ {$/;"	c	namespace:Xapian
SnipPipe	queryparser/termgenerator_internal.cc	/^    explicit SnipPipe(size_t length_) : length(length_ + 1) { }$/;"	f	class:Xapian::SnipPipe
SnipPipe	queryparser/termgenerator_internal.cc	/^class SnipPipe {$/;"	c	namespace:Xapian	file:
Sniplet	queryparser/termgenerator_internal.cc	/^    Sniplet(double* r, size_t t, size_t h)$/;"	f	struct:Xapian::Sniplet
Sniplet	queryparser/termgenerator_internal.cc	/^struct Sniplet {$/;"	s	namespace:Xapian	file:
SnowballStemImplementation	languages/steminternal.h	/^    SnowballStemImplementation()$/;"	f	class:Xapian::SnowballStemImplementation
SnowballStemImplementation	languages/steminternal.h	/^class SnowballStemImplementation : public StemImplementation {$/;"	c	namespace:Xapian
SoakTestRunner	tests/soaktest/soaktest.cc	/^    SoakTestRunner() : seed_str("42") {$/;"	f	class:SoakTestRunner
SoakTestRunner	tests/soaktest/soaktest.cc	/^class SoakTestRunner : public TestRunner$/;"	c	file:
State	queryparser/queryparser_internal.cc	/^    State(QueryParser::Internal * qpi_, unsigned flags_)$/;"	f	class:State
State	queryparser/queryparser_internal.cc	/^class State {$/;"	c	file:
State_arrayof	queryparser/lemon.c	/^struct state **State_arrayof(void)$/;"	f
State_find	queryparser/lemon.c	/^struct state *State_find(struct config *key)$/;"	f
State_init	queryparser/lemon.c	/^void State_init(void){$/;"	f
State_insert	queryparser/lemon.c	/^int State_insert(struct state *data, struct config *key)$/;"	f
State_new	queryparser/lemon.c	/^struct state *State_new()$/;"	f
Stem	include/xapian/stem.h	/^class XAPIAN_VISIBILITY_DEFAULT Stem {$/;"	c	namespace:Xapian
Stem	languages/stem.cc	/^Stem::Stem() { }$/;"	f	class:Xapian::Stem
Stem	languages/stem.cc	/^Stem::Stem(StemImplementation * p) : internal(p) { }$/;"	f	class:Xapian::Stem
Stem	languages/stem.cc	/^Stem::Stem(const Stem & o) : internal(o.internal) { }$/;"	f	class:Xapian::Stem
Stem	languages/stem.cc	/^Stem::Stem(const std::string &language) {$/;"	f	class:Xapian::Stem
StemImplementation	include/xapian/stem.h	/^    StemImplementation() { }$/;"	f	class:Xapian::StemImplementation
StemImplementation	include/xapian/stem.h	/^class XAPIAN_VISIBILITY_DEFAULT StemImplementation$/;"	c	namespace:Xapian
Stopper	include/xapian/queryparser.h	/^    Stopper() { }$/;"	f	class:Xapian::Stopper
Stopper	include/xapian/queryparser.h	/^class XAPIAN_VISIBILITY_DEFAULT Stopper$/;"	c	namespace:Xapian
StringAndFreqCmpByFreq	api/matchspy.cc	/^    StringAndFreqCmpByFreq() {}$/;"	f	class:StringAndFreqCmpByFreq
StringAndFreqCmpByFreq	api/matchspy.cc	/^class StringAndFreqCmpByFreq {$/;"	c	file:
StringAndFreqTermList	api/matchspy.cc	/^class StringAndFreqTermList : public TermList {$/;"	c	file:
StringAndFrequency	api/matchspy.cc	/^    StringAndFrequency(const std::string & str_, Xapian::doccount frequency_)$/;"	f	class:StringAndFrequency
StringAndFrequency	api/matchspy.cc	/^class StringAndFrequency {$/;"	c	file:
StringValueRangeProcessor	include/xapian/queryparser.h	/^    StringValueRangeProcessor(Xapian::valueno slot_, const std::string &str_,$/;"	f	class:Xapian::StringValueRangeProcessor
StringValueRangeProcessor	include/xapian/queryparser.h	/^    explicit StringValueRangeProcessor(Xapian::valueno slot_)$/;"	f	class:Xapian::StringValueRangeProcessor
StringValueRangeProcessor	include/xapian/queryparser.h	/^class XAPIAN_DEPRECATED_CLASS_EX XAPIAN_VISIBILITY_DEFAULT StringValueRangeProcessor : public ValueRangeProcessor {$/;"	c	namespace:Xapian
Strsafe	queryparser/lemon.c	/^const char *Strsafe(const char *y)$/;"	f
Strsafe_find	queryparser/lemon.c	/^const char *Strsafe_find(const char *key)$/;"	f
Strsafe_init	queryparser/lemon.c	/^void Strsafe_init(void){$/;"	f
Strsafe_insert	queryparser/lemon.c	/^int Strsafe_insert(const char *data)$/;"	f
SubMatch	common/submatch.h	/^class SubMatch : public Xapian::Internal::intrusive_base {$/;"	c
SubValueList	backends/multi/multi_valuelist.cc	/^    SubValueList(ValueList * vl, unsigned db_idx_)$/;"	f	struct:SubValueList
SubValueList	backends/multi/multi_valuelist.cc	/^struct SubValueList {$/;"	s	file:
Symbol_Nth	queryparser/lemon.c	/^struct symbol *Symbol_Nth(int n)$/;"	f
Symbol_arrayof	queryparser/lemon.c	/^struct symbol **Symbol_arrayof()$/;"	f
Symbol_count	queryparser/lemon.c	/^int Symbol_count()$/;"	f
Symbol_find	queryparser/lemon.c	/^struct symbol *Symbol_find(const char *key)$/;"	f
Symbol_init	queryparser/lemon.c	/^void Symbol_init(void){$/;"	f
Symbol_insert	queryparser/lemon.c	/^int Symbol_insert(struct symbol *data, const char *key)$/;"	f
Symbol_new	queryparser/lemon.c	/^struct symbol *Symbol_new(const char *x)$/;"	f
Symbolcmpp	queryparser/lemon.c	/^int Symbolcmpp(const void *_a, const void *_b)$/;"	f
SynonymIterator	queryparser/queryparser_internal.cc	/^    SynonymIterator(const Xapian::TermIterator & i_,$/;"	f	class:SynonymIterator
SynonymIterator	queryparser/queryparser_internal.cc	/^class SynonymIterator {$/;"	c	file:
SynonymPostList	matcher/synonympostlist.h	/^    SynonymPostList(PostList * subtree_, MultiMatch * matcher_,$/;"	f	class:SynonymPostList
SynonymPostList	matcher/synonympostlist.h	/^class SynonymPostList : public PostList {$/;"	c
TAMIL	languages/sbl-dispatch.h	/^    TAMIL = 28,$/;"	e	enum:sbl_code
TERM	queryparser/queryparser_token.h	12;"	d
TERMFREQ	include/xapian/weight.h	/^	TERMFREQ = 8,$/;"	e	enum:Xapian::Weight::__anon14
TERMINAL	queryparser/lemon.c	/^  TERMINAL,$/;"	e	enum:symbol_type	file:
TERMLIST	backends/glass/glass_defs.h	/^	TERMLIST,$/;"	e	enum:Glass::table_type
TEST	tests/harness/testsuite.h	271;"	d
TESTCASE	tests/harness/testmacros.h	28;"	d
TESTCASE_LOCN	tests/harness/testsuite.h	258;"	d
TESTS	tests/Makefile	/^TESTS = apitest$(EXEEXT) internaltest$(EXEEXT) stemtest$(EXEEXT) \\$/;"	m
TESTS_ENVIRONMENT	tests/Makefile	/^TESTS_ENVIRONMENT = .\/runtest$/;"	m
TEST_AND_EXPLAIN	tests/harness/testsuite.h	264;"	d
TEST_EQUAL	tests/harness/testsuite.h	274;"	d
TEST_EQUAL_DOUBLE	tests/harness/testsuite.h	291;"	d
TEST_EQUAL_DOUBLE_	tests/harness/testsuite.cc	/^TEST_EQUAL_DOUBLE_(double a, double b)$/;"	f
TEST_EXCEPTION	tests/harness/testutils.h	78;"	d
TEST_EXCEPTION	tests/unittest.cc	63;"	d	file:
TEST_MSET_SIZE	tests/harness/testutils.h	72;"	d
TEST_NOT_EQUAL	tests/harness/testsuite.h	301;"	d
TEST_NOT_EQUAL_DOUBLE	tests/harness/testsuite.h	296;"	d
TEST_REL	tests/harness/testmacros.h	32;"	d
TEST_STRINGS_EQUAL	tests/harness/testsuite.h	283;"	d
TIMEOUT_CLOCK	matcher/multimatch.cc	/^const clockid_t TIMEOUT_CLOCK = CLOCK_MONOTONIC;$/;"	v
TIMEOUT_CLOCK	matcher/multimatch.cc	/^const clockid_t TIMEOUT_CLOCK = CLOCK_REALTIME;$/;"	v
TITLECASE_LETTER	include/xapian/unicode.h	/^    TITLECASE_LETTER,$/;"	e	enum:Xapian::Unicode::__anon13
TOKEN	queryparser/queryparser_internal.cc	2719;"	d	file:
TOTAL_FREE	backends/chert/chert_table.h	/^inline int TOTAL_FREE(const uint8_t * b) { return getint2(b, 7); }$/;"	f
TOTAL_FREE	backends/glass/glass_table.h	/^inline int TOTAL_FREE(const uint8_t * b) { return unaligned_read2(b + 7); }$/;"	f	namespace:Glass
TRANSACTIONS	tests/harness/testrunner.h	/^	TRANSACTIONS	= 0x00000004,$/;"	e	enum:TestRunner::__anon35
TRANSACTION_FLUSHED	backends/database.h	/^	    TRANSACTION_FLUSHED = 2$/;"	e	enum:Xapian::Database::Internal::__anon7
TRANSACTION_NONE	backends/database.h	/^	    TRANSACTION_NONE = 0,$/;"	e	enum:Xapian::Database::Internal::__anon7
TRANSACTION_UNFLUSHED	backends/database.h	/^	    TRANSACTION_UNFLUSHED = 1,$/;"	e	enum:Xapian::Database::Internal::__anon7
TRANSACTION_UNIMPLEMENTED	backends/database.h	/^	    TRANSACTION_UNIMPLEMENTED = -1, \/\/ Used by InMemory.$/;"	e	enum:Xapian::Database::Internal::__anon7
TRIGRAM_SCORE_THRESHOLD	api/omdatabase.cc	591;"	d	file:
TURKISH	languages/sbl-dispatch.h	/^    TURKISH = 29$/;"	e	enum:sbl_code
TWO_STAGE_SMOOTHING	include/xapian/weight.h	/^	TWO_STAGE_SMOOTHING = 1,$/;"	e	enum:Xapian::Weight::__anon15
TcpClient	net/tcpclient.h	/^namespace TcpClient {$/;"	n
TcpServer	net/tcpserver.cc	/^TcpServer::TcpServer(const std::string & host, int port, bool tcp_nodelay,$/;"	f	class:TcpServer
TempDtorTest	tests/internaltest.cc	/^    TempDtorTest() { ++count; }$/;"	f	struct:TempDtorTest
TempDtorTest	tests/internaltest.cc	/^struct TempDtorTest {$/;"	s	file:
Term	queryparser/queryparser_internal.cc	/^    Term(State * state_, const string &name_, const FieldInfo * field_info_,$/;"	f	class:Term
Term	queryparser/queryparser_internal.cc	/^    Term(const Xapian::Query & q, const string & grouping)$/;"	f	class:Term
Term	queryparser/queryparser_internal.cc	/^    Term(const string &name_, const FieldInfo * field_info_)$/;"	f	class:Term
Term	queryparser/queryparser_internal.cc	/^    Term(const string &name_, termpos pos_)$/;"	f	class:Term
Term	queryparser/queryparser_internal.cc	/^    explicit Term(const string &name_)$/;"	f	class:Term
Term	queryparser/queryparser_internal.cc	/^    explicit Term(termpos pos_) : stem(QueryParser::STEM_NONE), pos(pos_) { }$/;"	f	class:Term
Term	queryparser/queryparser_internal.cc	/^class Term {$/;"	c	file:
TermCmp	matcher/nearpostlist.cc	/^struct TermCmp {$/;"	s	file:
TermCompare	matcher/exactphrasepostlist.cc	/^    explicit TermCompare(vector<PostList *> & terms_) : terms(terms_) { }$/;"	f	class:TermCompare
TermCompare	matcher/exactphrasepostlist.cc	/^class TermCompare {$/;"	c	file:
TermFreqs	weight/weightinternal.h	/^    TermFreqs() : termfreq(0), reltermfreq(0), collfreq(0), max_part(0.0) {}$/;"	f	struct:TermFreqs
TermFreqs	weight/weightinternal.h	/^    TermFreqs(Xapian::doccount termfreq_,$/;"	f	struct:TermFreqs
TermFreqs	weight/weightinternal.h	/^struct TermFreqs {$/;"	s
TermGenerator	include/xapian/termgenerator.h	/^class XAPIAN_VISIBILITY_DEFAULT TermGenerator {$/;"	c	namespace:Xapian
TermGenerator	queryparser/termgenerator.cc	/^TermGenerator::TermGenerator() : internal(new TermGenerator::Internal) { }$/;"	f	class:TermGenerator
TermGenerator	queryparser/termgenerator.cc	/^TermGenerator::TermGenerator(const TermGenerator & o) : internal(o.internal) { }$/;"	f	class:TermGenerator
TermGroup	queryparser/queryparser_internal.cc	/^    TermGroup(Term* t1, Term* t2) : empty_ok(false) {$/;"	f	class:TermGroup	file:
TermGroup	queryparser/queryparser_internal.cc	/^class TermGroup {$/;"	c	file:
TermIterator	api/termiterator.cc	/^TermIterator::TermIterator(Internal *internal_) : internal(internal_)$/;"	f	class:Xapian::TermIterator
TermIterator	api/termiterator.cc	/^TermIterator::TermIterator(const TermIterator & o)$/;"	f	class:Xapian::TermIterator
TermIterator	include/xapian/termiterator.h	/^    TermIterator(TermIterator && o)$/;"	f	class:Xapian::TermIterator
TermIterator	include/xapian/termiterator.h	/^    XAPIAN_NOTHROW(TermIterator())$/;"	f	class:Xapian::TermIterator
TermIterator	include/xapian/termiterator.h	/^class XAPIAN_VISIBILITY_DEFAULT TermIterator {$/;"	c	namespace:Xapian
TermList	api/termlist.h	/^typedef Xapian::TermIterator::Internal TermList;$/;"	t
TermList	backends/database.h	/^typedef Xapian::TermIterator::Internal TermList;$/;"	t
TermListGreaterApproxSize	backends/chert/chert_spelling.cc	/^struct TermListGreaterApproxSize {$/;"	s	file:
TermListGreaterApproxSize	backends/glass/glass_spelling.cc	/^struct TermListGreaterApproxSize {$/;"	s	file:
Terms	queryparser/queryparser_internal.cc	/^    Terms() : window(0), uniform_prefixes(true), prefixes(NULL) { }$/;"	f	class:Terms	file:
Terms	queryparser/queryparser_internal.cc	/^class Terms {$/;"	c	file:
TestException	tests/unittest.cc	/^class TestException { };$/;"	c	file:
TestExpandDecider	tests/api_none.cc	/^    TestExpandDecider(bool & destroyed_) : destroyed(destroyed_) { }$/;"	f	class:TestExpandDecider
TestExpandDecider	tests/api_none.cc	/^class TestExpandDecider : public Xapian::ExpandDecider {$/;"	c	file:
TestFail	tests/harness/testsuite.h	/^class TestFail { };$/;"	c
TestFieldProcessor	tests/api_none.cc	/^    TestFieldProcessor(bool & destroyed_) : destroyed(destroyed_) { }$/;"	f	class:TestFieldProcessor
TestFieldProcessor	tests/api_none.cc	/^class TestFieldProcessor : public Xapian::FieldProcessor {$/;"	c	file:
TestKeyMaker	tests/api_none.cc	/^    TestKeyMaker(bool & destroyed_) : destroyed(destroyed_) { }$/;"	f	class:TestKeyMaker
TestKeyMaker	tests/api_none.cc	/^class TestKeyMaker : public Xapian::KeyMaker {$/;"	c	file:
TestMatchSpy	tests/api_none.cc	/^    TestMatchSpy(bool & destroyed_) : destroyed(destroyed_) { }$/;"	f	class:TestMatchSpy
TestMatchSpy	tests/api_none.cc	/^class TestMatchSpy : public Xapian::MatchSpy {$/;"	c	file:
TestRangeProcessor	tests/api_none.cc	/^    TestRangeProcessor(bool & destroyed_)$/;"	f	class:TestRangeProcessor
TestRangeProcessor	tests/api_none.cc	/^class TestRangeProcessor : public Xapian::RangeProcessor {$/;"	c	file:
TestRunner	tests/harness/testrunner.h	/^class TestRunner {$/;"	c
TestSkip	tests/harness/testsuite.h	/^class TestSkip { };$/;"	c
TestStopper	tests/api_none.cc	/^    TestStopper(bool & destroyed_) : destroyed(destroyed_) { }$/;"	f	class:TestStopper
TestStopper	tests/api_none.cc	/^class TestStopper : public Xapian::Stopper {$/;"	c	file:
TestValueRangeProcessor	tests/api_none.cc	/^    TestValueRangeProcessor(bool & destroyed_) : destroyed(destroyed_) { }$/;"	f	class:TestValueRangeProcessor
TestValueRangeProcessor	tests/api_none.cc	/^class TestValueRangeProcessor : public Xapian::ValueRangeProcessor {$/;"	c	file:
Test_Exception	tests/internaltest.cc	/^	Test_Exception(int value_) : value(value_) {}$/;"	f	class:Test_Exception
Test_Exception	tests/internaltest.cc	/^class Test_Exception {$/;"	c	file:
TfIdfWeight	include/xapian/weight.h	/^    TfIdfWeight()$/;"	f	class:Xapian::TfIdfWeight
TfIdfWeight	include/xapian/weight.h	/^class XAPIAN_VISIBILITY_DEFAULT TfIdfWeight : public Weight {$/;"	c	namespace:Xapian
TfIdfWeight	weight/tfidfweight.cc	/^TfIdfWeight::TfIdfWeight(const std::string &normals)$/;"	f	class:Xapian::TfIdfWeight
TimeOut	matcher/multimatch.cc	/^    explicit TimeOut(double limit) : expired(false) {$/;"	f	class:TimeOut
TimeOut	matcher/multimatch.cc	/^    explicit TimeOut(double) { }$/;"	f	class:TimeOut
TimeOut	matcher/multimatch.cc	/^class TimeOut {$/;"	c	file:
TitleFieldProcessor	tests/api_queryparser.cc	/^class TitleFieldProcessor : public Xapian::FieldProcessor {$/;"	c	file:
Tokeniseise	common/Tokeniseise.pm	/^package Tokeniseise;$/;"	p
TradEWeight	expand/expandweight.h	/^    TradEWeight(const Xapian::Database &db_,$/;"	f	class:Xapian::Internal::TradEWeight
TradEWeight	expand/expandweight.h	/^class TradEWeight : public ExpandWeight {$/;"	c	namespace:Xapian::Internal
TradWeight	include/xapian/weight.h	/^    explicit TradWeight(double k = 1.0) : param_k(k) {$/;"	f	class:Xapian::TradWeight
TradWeight	include/xapian/weight.h	/^class XAPIAN_VISIBILITY_DEFAULT TradWeight : public Weight {$/;"	c	namespace:Xapian
UNASSIGNED	include/xapian/unicode.h	/^    UNASSIGNED,$/;"	e	enum:Xapian::Unicode::__anon13
UNCOMPRESSED	backends/chert/chert_cursor.h	/^	enum { UNREAD, UNCOMPRESSED, COMPRESSED } tag_status;$/;"	e	enum:ChertCursor::__anon8
UNCOMPRESSED	backends/glass/glass_cursor.h	/^	enum { UNREAD, UNREAD_ON_LAST_CHUNK, UNCOMPRESSED, COMPRESSED } tag_status;$/;"	e	enum:GlassCursor::__anon6
UNICODE_IGNORE	queryparser/queryparser_internal.cc	/^const unsigned UNICODE_IGNORE = numeric_limits<unsigned>::max();$/;"	v
UNICODE_IGNORE	queryparser/termgenerator_internal.cc	/^static const unsigned UNICODE_IGNORE = numeric_limits<unsigned>::max();$/;"	m	namespace:Xapian	file:
UNIQUE_TERMS	include/xapian/weight.h	/^	UNIQUE_TERMS = 8192$/;"	e	enum:Xapian::Weight::__anon14
UNITTEST_ASSERT_LOCATION	tests/unittest.cc	49;"	d	file:
UNITTEST_ASSERT_LOCATION_	tests/unittest.cc	48;"	d	file:
UNITTEST_ASSERT_LOCATION__	tests/unittest.cc	47;"	d	file:
UNITTEST_ASSERT_NOTHROW	api/sortable-serialise.cc	30;"	d	file:
UNITTEST_ASSERT_NOTHROW	tests/unittest.cc	50;"	d	file:
UNITTEST_CHECK_EXCEPTION	tests/harness/testsuite.h	31;"	d
UNITTEST_CHECK_EXCEPTION	tests/unittest.cc	36;"	d	file:
UNK	queryparser/lemon.c	/^    UNK$/;"	e	enum:e_assoc	file:
UNKNOWN	backends/dbcheck.cc	/^typedef enum { UNKNOWN, CHERT, GLASS } backend_type;$/;"	e	enum:__anon5	file:
UNKNOWN	backends/flint_lock.h	/^	UNKNOWN \/\/ The attempt failed for some unspecified reason.$/;"	e	enum:FlintLock::__anon2
UNREAD	backends/chert/chert_cursor.h	/^	enum { UNREAD, UNCOMPRESSED, COMPRESSED } tag_status;$/;"	e	enum:ChertCursor::__anon8
UNREAD	backends/glass/glass_cursor.h	/^	enum { UNREAD, UNREAD_ON_LAST_CHUNK, UNCOMPRESSED, COMPRESSED } tag_status;$/;"	e	enum:GlassCursor::__anon6
UNREAD_ON_LAST_CHUNK	backends/glass/glass_cursor.h	/^	enum { UNREAD, UNREAD_ON_LAST_CHUNK, UNCOMPRESSED, COMPRESSED } tag_status;$/;"	e	enum:GlassCursor::__anon6
UNSET_MAX_CHANGESETS_AFTERWARDS	tests/api_replicate.cc	268;"	d	file:
UNSUPPORTED	backends/flint_lock.h	/^	UNSUPPORTED, \/\/ Locking probably not supported (e.g. NFS without lockd).$/;"	e	enum:FlintLock::__anon2
UNUSED	backends/glass/glass_freelist.cc	/^const uint4 UNUSED = static_cast<uint4>(-1);$/;"	v
UPLUS_DEFINED	languages/compiler/header.h	/^    UPLUS_DEFINED,$/;"	e	enum:uplus_modes
UPLUS_NONE	languages/compiler/header.h	/^    UPLUS_NONE,$/;"	e	enum:uplus_modes
UPLUS_UNICODE	languages/compiler/header.h	/^    UPLUS_UNICODE$/;"	e	enum:uplus_modes
UPPERCASE_LETTER	include/xapian/unicode.h	/^    UPPERCASE_LETTER,$/;"	e	enum:Xapian::Unicode::__anon13
USE_EXACT_TERMFREQ	include/xapian/enquire.h	/^	static const int USE_EXACT_TERMFREQ = 2;$/;"	m	class:Xapian::Enquire
USE_GLIBC_GNUGETOPT	common/gnu_getopt.h	33;"	d
USE_PROC_FOR_UUID	config.h	340;"	d
USE_RTTI	config.h	343;"	d
UUID_GAP_MASK	backends/uuids.cc	/^static constexpr unsigned UUID_GAP_MASK = 0x2a8;$/;"	v	file:
U_isalpha	queryparser/queryparser_internal.cc	/^U_isalpha(unsigned ch) {$/;"	f
U_isdigit	queryparser/queryparser_internal.cc	/^U_isdigit(unsigned ch) {$/;"	f
U_isupper	queryparser/queryparser_internal.cc	/^U_isupper(unsigned ch) {$/;"	f
U_isupper	queryparser/termgenerator_internal.cc	/^U_isupper(unsigned ch)$/;"	f	namespace:Xapian
Unicode	include/xapian/unicode.h	/^namespace Unicode {$/;"	n	namespace:Xapian
Unicode	unicode/utf8itor.cc	/^namespace Unicode {$/;"	n	namespace:Xapian	file:
UnimplementedError	include/xapian/error.h	/^    UnimplementedError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::UnimplementedError
UnimplementedError	include/xapian/error.h	/^    UnimplementedError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::UnimplementedError
UnimplementedError	include/xapian/error.h	/^    UnimplementedError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::UnimplementedError
UnimplementedError	include/xapian/error.h	/^    UnimplementedError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::UnimplementedError
UnimplementedError	include/xapian/error.h	/^    explicit UnimplementedError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::UnimplementedError
UnimplementedError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT UnimplementedError : public LogicError {$/;"	c	namespace:Xapian
Utf8Iterator	include/xapian/unicode.h	/^    Utf8Iterator(const char *p_, size_t len) { assign(p_, len); }$/;"	f	class:Xapian::Utf8Iterator
Utf8Iterator	include/xapian/unicode.h	/^    Utf8Iterator(const std::string &s) { assign(s.data(), s.size()); }$/;"	f	class:Xapian::Utf8Iterator
Utf8Iterator	include/xapian/unicode.h	/^    Utf8Iterator(const unsigned char *p_, const unsigned char *end_, unsigned seqlen_)$/;"	f	class:Xapian::Utf8Iterator
Utf8Iterator	include/xapian/unicode.h	/^    XAPIAN_NOTHROW(Utf8Iterator())$/;"	f	class:Xapian::Utf8Iterator
Utf8Iterator	include/xapian/unicode.h	/^class XAPIAN_VISIBILITY_DEFAULT Utf8Iterator {$/;"	c	namespace:Xapian
Utf8Iterator	unicode/utf8itor.cc	/^Utf8Iterator::Utf8Iterator(const char *p_)$/;"	f	class:Xapian::Utf8Iterator
Uuid	backends/uuids.h	/^    Uuid() {}$/;"	f	class:Uuid
Uuid	backends/uuids.h	/^class Uuid {$/;"	c
V	languages/compiler/header.h	/^    struct name * V[5];  \/* variables *\/$/;"	m	struct:generator	typeref:struct:generator::name
V2	include/xapian/version_h.cc	57;"	d	file:
V3	include/xapian/version_h.cc	59;"	d	file:
VAL	api/omenquireinternal.h	/^	typedef enum { REL, VAL, VAL_REL, REL_VAL } sort_setting;$/;"	e	enum:Xapian::Enquire::Internal::__anon1
VAL	matcher/multimatch.cc	/^const Xapian::Enquire::Internal::sort_setting VAL =$/;"	v
VALGRIND	Makefile	/^VALGRIND = $/;"	m
VALGRIND	docs/Makefile	/^VALGRIND = $/;"	m
VALGRIND	tests/Makefile	/^	VALGRIND= XAPIAN_TESTSUITE_LD_PRELOAD= $(TESTS_ENVIRONMENT) .\/perftest\/perftest$(EXEEXT)$/;"	m
VALGRIND	tests/Makefile	/^VALGRIND = $/;"	m
VALGRIND	tests/perftest/Makefile.mk	/^	VALGRIND= XAPIAN_TESTSUITE_LD_PRELOAD= $(TESTS_ENVIRONMENT) .\/perftest\/perftest$(EXEEXT)$/;"	m
VALUESTATS	tests/harness/testrunner.h	/^	VALUESTATS	= 0x00000200,$/;"	e	enum:TestRunner::__anon35
VALUE_ESCAPE	bin/xapian-delve.cc	/^    VALUE_ESCAPE,$/;"	e	enum:__anon9	file:
VALUE_PACKED_INT	bin/xapian-delve.cc	/^    VALUE_PACKED_INT,$/;"	e	enum:__anon9	file:
VALUE_RAW	bin/xapian-delve.cc	/^    VALUE_RAW$/;"	e	enum:__anon9	file:
VALUE_SORTABLE_SERIALISE	bin/xapian-delve.cc	/^    VALUE_SORTABLE_SERIALISE,$/;"	e	enum:__anon9	file:
VAL_REL	api/omenquireinternal.h	/^	typedef enum { REL, VAL, VAL_REL, REL_VAL } sort_setting;$/;"	e	enum:Xapian::Enquire::Internal::__anon1
VEC_SIZE	api/omdatabase.cc	564;"	d	file:
VERSION	Makefile	/^VERSION = 1.4.9$/;"	m
VERSION	config.h	349;"	d
VERSION	docs/Makefile	/^VERSION = 1.4.9$/;"	m
VERSION	tests/Makefile	/^VERSION = 1.4.9$/;"	m
VERSIONFILE_SIZE	backends/chert/chert_version.cc	49;"	d	file:
VERSIONFILE_SIZE_LITERAL	backends/chert/chert_version.cc	54;"	d	file:
VERSION_TO_DAY	backends/glass/glass_version.cc	62;"	d	file:
VERSION_TO_MONTH	backends/glass/glass_version.cc	61;"	d	file:
VERSION_TO_YEAR	backends/glass/glass_version.cc	60;"	d	file:
VStats	backends/chert/chert_dbcheck.cc	/^    VStats() : ValueStats(), freq_real(0) {}$/;"	f	struct:VStats
VStats	backends/chert/chert_dbcheck.cc	/^struct VStats : public ValueStats {$/;"	s	file:
VStats	backends/glass/glass_dbcheck.cc	/^    VStats() : ValueStats(), freq_real(0) {}$/;"	f	struct:VStats
VStats	backends/glass/glass_dbcheck.cc	/^struct VStats : public ValueStats {$/;"	s	file:
ValueChunkReader	backends/chert/chert_values.h	/^    ValueChunkReader() : p(NULL) { }$/;"	f	class:ValueChunkReader
ValueChunkReader	backends/chert/chert_values.h	/^    ValueChunkReader(const char * p_, size_t len, Xapian::docid did_) {$/;"	f	class:ValueChunkReader
ValueChunkReader	backends/chert/chert_values.h	/^class ValueChunkReader {$/;"	c
ValueChunkReader	backends/glass/glass_values.h	/^    ValueChunkReader() : p(NULL) { }$/;"	f	class:Glass::ValueChunkReader
ValueChunkReader	backends/glass/glass_values.h	/^    ValueChunkReader(const char * p_, size_t len, Xapian::docid did_) {$/;"	f	class:Glass::ValueChunkReader
ValueChunkReader	backends/glass/glass_values.h	/^class ValueChunkReader {$/;"	c	namespace:Glass
ValueCountMatchSpy	include/xapian/matchspy.h	/^    ValueCountMatchSpy() {}$/;"	f	class:Xapian::ValueCountMatchSpy
ValueCountMatchSpy	include/xapian/matchspy.h	/^    explicit ValueCountMatchSpy(Xapian::valueno slot_)$/;"	f	class:Xapian::ValueCountMatchSpy
ValueCountMatchSpy	include/xapian/matchspy.h	/^class XAPIAN_VISIBILITY_DEFAULT ValueCountMatchSpy : public MatchSpy {$/;"	c	namespace:Xapian
ValueCountTermList	api/matchspy.cc	/^    explicit ValueCountTermList(ValueCountMatchSpy::Internal * spy_)$/;"	f	class:ValueCountTermList
ValueCountTermList	api/matchspy.cc	/^class ValueCountTermList : public TermList {$/;"	c	file:
ValueGePostList	matcher/valuegepostlist.h	/^    ValueGePostList(const Xapian::Database::Internal *db_,$/;"	f	class:ValueGePostList
ValueGePostList	matcher/valuegepostlist.h	/^class ValueGePostList: public ValueRangePostList {$/;"	c
ValueIterator	api/valueiterator.cc	/^ValueIterator::ValueIterator(Internal *internal_) : internal(internal_)$/;"	f	class:Xapian::ValueIterator
ValueIterator	api/valueiterator.cc	/^ValueIterator::ValueIterator(const ValueIterator & o)$/;"	f	class:Xapian::ValueIterator
ValueIterator	include/xapian/valueiterator.h	/^    ValueIterator(ValueIterator && o)$/;"	f	class:Xapian::ValueIterator
ValueIterator	include/xapian/valueiterator.h	/^    XAPIAN_NOTHROW(ValueIterator())$/;"	f	class:Xapian::ValueIterator
ValueIterator	include/xapian/valueiterator.h	/^class XAPIAN_VISIBILITY_DEFAULT ValueIterator {$/;"	c	namespace:Xapian
ValueList	backends/database.h	/^typedef Xapian::ValueIterator::Internal ValueList;$/;"	t
ValueList	backends/valuelist.h	/^typedef Xapian::ValueIterator::Internal ValueList;$/;"	t
ValueMapPostingSource	api/postingsource.cc	/^ValueMapPostingSource::ValueMapPostingSource(Xapian::valueno slot_)$/;"	f	class:Xapian::ValueMapPostingSource
ValueMapPostingSource	include/xapian/postingsource.h	/^class XAPIAN_VISIBILITY_DEFAULT ValueMapPostingSource$/;"	c	namespace:Xapian
ValuePostingSource	api/postingsource.cc	/^ValuePostingSource::ValuePostingSource(Xapian::valueno slot_)$/;"	f	class:Xapian::ValuePostingSource
ValuePostingSource	include/xapian/postingsource.h	/^class XAPIAN_VISIBILITY_DEFAULT ValuePostingSource : public PostingSource {$/;"	c	namespace:Xapian
ValueRangePostList	matcher/valuerangepostlist.h	/^    ValueRangePostList(const Xapian::Database::Internal *db_,$/;"	f	class:ValueRangePostList
ValueRangePostList	matcher/valuerangepostlist.h	/^class ValueRangePostList : public PostList {$/;"	c
ValueRangeProcessor	include/xapian/queryparser.h	/^    ValueRangeProcessor() { }$/;"	f	class:Xapian::ValueRangeProcessor
ValueRangeProcessor	include/xapian/queryparser.h	/^class XAPIAN_VISIBILITY_DEFAULT ValueRangeProcessor$/;"	c	namespace:Xapian
ValueSetMatchDecider	include/xapian/valuesetmatchdecider.h	/^    ValueSetMatchDecider(Xapian::valueno slot, bool inclusive_)$/;"	f	class:Xapian::ValueSetMatchDecider
ValueSetMatchDecider	include/xapian/valuesetmatchdecider.h	/^class XAPIAN_VISIBILITY_DEFAULT ValueSetMatchDecider : public MatchDecider {$/;"	c	namespace:Xapian
ValueStats	backends/valuestats.h	/^    ValueStats() : freq(0), lower_bound(), upper_bound() {}$/;"	f	struct:ValueStats
ValueStats	backends/valuestats.h	/^struct ValueStats {$/;"	s
ValueStreamDocument	matcher/valuestreamdocument.h	/^    explicit ValueStreamDocument(const Xapian::Database & db_)$/;"	f	class:ValueStreamDocument
ValueStreamDocument	matcher/valuestreamdocument.h	/^class ValueStreamDocument : public Xapian::Document::Internal {$/;"	c
ValueUpdater	backends/chert/chert_values.cc	/^    ValueUpdater(ChertPostListTable * table_, Xapian::valueno slot_)$/;"	f	class:ValueUpdater
ValueUpdater	backends/chert/chert_values.cc	/^class ValueUpdater {$/;"	c	file:
ValueUpdater	backends/glass/glass_values.cc	/^    ValueUpdater(GlassPostListTable * table_, Xapian::valueno slot_)$/;"	f	class:Glass::ValueUpdater
ValueUpdater	backends/glass/glass_values.cc	/^class ValueUpdater {$/;"	c	namespace:Glass	file:
ValueWeightPostingSource	api/postingsource.cc	/^ValueWeightPostingSource::ValueWeightPostingSource(Xapian::valueno slot_)$/;"	f	class:Xapian::ValueWeightPostingSource
ValueWeightPostingSource	include/xapian/postingsource.h	/^class XAPIAN_VISIBILITY_DEFAULT ValueWeightPostingSource$/;"	c	namespace:Xapian
VectorTermList	api/vectortermlist.h	/^    VectorTermList(I begin, I end) : num_terms(0)$/;"	f	class:VectorTermList
VectorTermList	api/vectortermlist.h	/^class VectorTermList : public TermList {$/;"	c
WAITING_FOR_ARROW	queryparser/lemon.c	/^  WAITING_FOR_ARROW,$/;"	e	enum:e_state	file:
WAITING_FOR_CLASS_ID	queryparser/lemon.c	/^  WAITING_FOR_CLASS_ID,$/;"	e	enum:e_state	file:
WAITING_FOR_CLASS_TOKEN	queryparser/lemon.c	/^  WAITING_FOR_CLASS_TOKEN,$/;"	e	enum:e_state	file:
WAITING_FOR_DATATYPE_SYMBOL	queryparser/lemon.c	/^  WAITING_FOR_DATATYPE_SYMBOL,$/;"	e	enum:e_state	file:
WAITING_FOR_DECL_ARG	queryparser/lemon.c	/^  WAITING_FOR_DECL_ARG,$/;"	e	enum:e_state	file:
WAITING_FOR_DECL_KEYWORD	queryparser/lemon.c	/^  WAITING_FOR_DECL_KEYWORD,$/;"	e	enum:e_state	file:
WAITING_FOR_DECL_OR_RULE	queryparser/lemon.c	/^  WAITING_FOR_DECL_OR_RULE,$/;"	e	enum:e_state	file:
WAITING_FOR_DESTRUCTOR_SYMBOL	queryparser/lemon.c	/^  WAITING_FOR_DESTRUCTOR_SYMBOL,$/;"	e	enum:e_state	file:
WAITING_FOR_FALLBACK_ID	queryparser/lemon.c	/^  WAITING_FOR_FALLBACK_ID,$/;"	e	enum:e_state	file:
WAITING_FOR_PRECEDENCE_SYMBOL	queryparser/lemon.c	/^  WAITING_FOR_PRECEDENCE_SYMBOL,$/;"	e	enum:e_state	file:
WAITING_FOR_TOKEN_NAME	queryparser/lemon.c	/^  WAITING_FOR_TOKEN_NAME$/;"	e	enum:e_state	file:
WAITING_FOR_WILDCARD_ID	queryparser/lemon.c	/^  WAITING_FOR_WILDCARD_ID,$/;"	e	enum:e_state	file:
WDF	include/xapian/weight.h	/^	WDF = 128,$/;"	e	enum:Xapian::Weight::__anon14
WDF_MAX	include/xapian/weight.h	/^	WDF_MAX = 2048,$/;"	e	enum:Xapian::Weight::__anon14
WEIGHT_BB2	examples/quest.cc	/^    WEIGHT_BB2,$/;"	e	enum:__anon12	file:
WEIGHT_BM25	examples/quest.cc	/^    WEIGHT_BM25,$/;"	e	enum:__anon12	file:
WEIGHT_BM25PLUS	examples/quest.cc	/^    WEIGHT_BM25PLUS,$/;"	e	enum:__anon12	file:
WEIGHT_BOOL	examples/quest.cc	/^    WEIGHT_BOOL,$/;"	e	enum:__anon12	file:
WEIGHT_COORD	examples/quest.cc	/^    WEIGHT_COORD,$/;"	e	enum:__anon12	file:
WEIGHT_DLH	examples/quest.cc	/^    WEIGHT_DLH,$/;"	e	enum:__anon12	file:
WEIGHT_DPH	examples/quest.cc	/^    WEIGHT_DPH,$/;"	e	enum:__anon12	file:
WEIGHT_IFB2	examples/quest.cc	/^    WEIGHT_IFB2,$/;"	e	enum:__anon12	file:
WEIGHT_INEB2	examples/quest.cc	/^    WEIGHT_INEB2,$/;"	e	enum:__anon12	file:
WEIGHT_INL2	examples/quest.cc	/^    WEIGHT_INL2,$/;"	e	enum:__anon12	file:
WEIGHT_LM	examples/quest.cc	/^    WEIGHT_LM,$/;"	e	enum:__anon12	file:
WEIGHT_PL2	examples/quest.cc	/^    WEIGHT_PL2,$/;"	e	enum:__anon12	file:
WEIGHT_PL2PLUS	examples/quest.cc	/^    WEIGHT_PL2PLUS,$/;"	e	enum:__anon12	file:
WEIGHT_TFIDF	examples/quest.cc	/^    WEIGHT_TFIDF,$/;"	e	enum:__anon12	file:
WEIGHT_TRAD	examples/quest.cc	/^    WEIGHT_TRAD$/;"	e	enum:__anon12	file:
WEXITSTATUS	common/safesyswait.h	35;"	d
WIFEXITED	common/safesyswait.h	32;"	d
WILDCARD_EXCEPTION	tests/api_query.cc	295;"	d	file:
WILDCARD_LIMIT_ERROR	include/xapian/query.h	/^	WILDCARD_LIMIT_ERROR,$/;"	e	enum:Xapian::Query::__anon19
WILDCARD_LIMIT_FIRST	include/xapian/query.h	/^	WILDCARD_LIMIT_FIRST,$/;"	e	enum:Xapian::Query::__anon19
WILDCARD_LIMIT_MOST_FREQUENT	include/xapian/query.h	/^	WILDCARD_LIMIT_MOST_FREQUENT$/;"	e	enum:Xapian::Query::__anon19
WILD_TERM	queryparser/queryparser_token.h	15;"	d
WIN32_LEAN_AND_MEAN	common/safewindows.h	37;"	d
WORDS_BIGENDIAN	config.h	358;"	d
WQF	include/xapian/weight.h	/^	WQF = 64,$/;"	e	enum:Xapian::Weight::__anon14
WRITABLE	tests/harness/testrunner.h	/^	WRITABLE	= 0x00000010,$/;"	e	enum:TestRunner::__anon35
Weight	include/xapian/weight.h	/^    Weight() : stats_needed() { }$/;"	f	class:Xapian::Weight
Weight	include/xapian/weight.h	/^class XAPIAN_VISIBILITY_DEFAULT Weight {$/;"	c	namespace:Xapian
WildcardError	include/xapian/error.h	/^    WildcardError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::WildcardError
WildcardError	include/xapian/error.h	/^    WildcardError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::WildcardError
WildcardError	include/xapian/error.h	/^    WildcardError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::WildcardError
WildcardError	include/xapian/error.h	/^    WildcardError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::WildcardError
WildcardError	include/xapian/error.h	/^    explicit WildcardError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::WildcardError
WildcardError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT WildcardError : public RuntimeError {$/;"	c	namespace:Xapian
WinsockInitializer	net/remoteconnection.h	/^    WinsockInitializer() {$/;"	f	struct:WinsockInitializer
WinsockInitializer	net/remoteconnection.h	/^struct WinsockInitializer {$/;"	s
WritableDatabase	api/omdatabase.cc	/^WritableDatabase::WritableDatabase() : Database()$/;"	f	class:Xapian::WritableDatabase
WritableDatabase	api/omdatabase.cc	/^WritableDatabase::WritableDatabase(Database::Internal *internal_)$/;"	f	class:Xapian::WritableDatabase
WritableDatabase	api/omdatabase.cc	/^WritableDatabase::WritableDatabase(const WritableDatabase &other)$/;"	f	class:Xapian::WritableDatabase
WritableDatabase	backends/dbfactory.cc	/^WritableDatabase::WritableDatabase(const std::string &path, int flags, int block_size)$/;"	f	class:Xapian::WritableDatabase
WritableDatabase	include/xapian/database.h	/^	WritableDatabase(WritableDatabase&& o) : Database(std::move(o)) {}$/;"	f	class:Xapian::WritableDatabase
WritableDatabase	include/xapian/database.h	/^class XAPIAN_VISIBILITY_DEFAULT WritableDatabase : public Database {$/;"	c	namespace:Xapian
X2	backends/glass/glass_table.h	/^const int X2 = 2;$/;"	m	namespace:Glass
XAPIAN_ASSERT_LOCATION	common/omassert.h	43;"	d
XAPIAN_ASSERT_LOCATION_	common/omassert.h	42;"	d
XAPIAN_ASSERT_LOCATION__	common/omassert.h	41;"	d
XAPIAN_AT_LEAST	include/xapian/version.h	106;"	d
XAPIAN_BIN_PATH	tests/harness/backendmanager.h	33;"	d
XAPIAN_BIN_PATH	tests/harness/backendmanager.h	36;"	d
XAPIAN_CONST_FUNCTION	include/xapian/attributes.h	45;"	d
XAPIAN_CONST_FUNCTION	include/xapian/attributes.h	62;"	d
XAPIAN_CONST_FUNCTION	include/xapian/constinfo.h	/^const struct constinfo * XAPIAN_NOTHROW(get_constinfo_()) XAPIAN_CONST_FUNCTION;$/;"	m	namespace:Xapian::Internal
XAPIAN_CONST_FUNCTION	include/xapian/geospatial.h	/^XAPIAN_NOTHROW(metres_to_miles(double metres)) XAPIAN_CONST_FUNCTION;$/;"	m	namespace:Xapian
XAPIAN_CONST_FUNCTION	include/xapian/geospatial.h	/^XAPIAN_NOTHROW(miles_to_metres(double miles)) XAPIAN_CONST_FUNCTION;$/;"	m	namespace:Xapian
XAPIAN_CONST_FUNCTION	include/xapian/unicode.h	/^    int XAPIAN_NOTHROW(get_character_info(unsigned ch)) XAPIAN_CONST_FUNCTION;$/;"	m	namespace:Xapian::Unicode::Internal
XAPIAN_DEBUG_LOG	common/debuglog.h	29;"	d
XAPIAN_DEPRECATED	api/postingsource.cc	26;"	d	file:
XAPIAN_DEPRECATED	include/xapian/compactor.h	/^    XAPIAN_DEPRECATED(void set_compaction_level(compaction_level compaction)) {$/;"	f	class:Xapian::Compactor
XAPIAN_DEPRECATED	include/xapian/compactor.h	/^    XAPIAN_DEPRECATED(void set_multipass(bool multipass)) {$/;"	f	class:Xapian::Compactor
XAPIAN_DEPRECATED	include/xapian/compactor.h	/^    XAPIAN_DEPRECATED(void set_renumber(bool renumber)) {$/;"	f	class:Xapian::Compactor
XAPIAN_DEPRECATED	include/xapian/database.h	/^	XAPIAN_DEPRECATED(void flush()) { commit(); }$/;"	f	class:Xapian::WritableDatabase
XAPIAN_DEPRECATED	include/xapian/deprecated.h	50;"	d
XAPIAN_DEPRECATED	include/xapian/deprecated.h	54;"	d
XAPIAN_DEPRECATED	include/xapian/deprecated.h	57;"	d
XAPIAN_DEPRECATED	include/xapian/queryparser.h	/^    XAPIAN_DEPRECATED(void add_valuerangeprocessor(Xapian::ValueRangeProcessor * vrproc)) {$/;"	f	class:Xapian::QueryParser
XAPIAN_DEPRECATED	tests/api_anydb.cc	32;"	d	file:
XAPIAN_DEPRECATED	tests/api_backend.cc	27;"	d	file:
XAPIAN_DEPRECATED	tests/api_compactold.cc	27;"	d	file:
XAPIAN_DEPRECATED	tests/api_generated.cc	26;"	d	file:
XAPIAN_DEPRECATED	tests/api_none.cc	27;"	d	file:
XAPIAN_DEPRECATED	tests/api_queryparser.cc	27;"	d	file:
XAPIAN_DEPRECATED_CLASS	include/xapian/deprecated.h	51;"	d
XAPIAN_DEPRECATED_CLASS	include/xapian/deprecated.h	55;"	d
XAPIAN_DEPRECATED_CLASS	include/xapian/deprecated.h	62;"	d
XAPIAN_DEPRECATED_CLASS_EX	include/xapian/deprecated.h	36;"	d
XAPIAN_DEPRECATED_CLASS_EX	include/xapian/deprecated.h	39;"	d
XAPIAN_DEPRECATED_EX	include/xapian/deprecated.h	35;"	d
XAPIAN_DEPRECATED_EX	include/xapian/deprecated.h	38;"	d
XAPIAN_DOCID_BASE_TYPE	include/xapian/version.h	71;"	d
XAPIAN_ENABLE_VISIBILITY	include/xapian/version.h	50;"	d
XAPIAN_HAS_CHERT_BACKEND	include/xapian/version.h	86;"	d
XAPIAN_HAS_GLASS_BACKEND	include/xapian/version.h	89;"	d
XAPIAN_HAS_INMEMORY_BACKEND	include/xapian/version.h	92;"	d
XAPIAN_HAS_REMOTE_BACKEND	include/xapian/version.h	95;"	d
XAPIAN_HGUARD_CHERT_POSITIONLIST_H	backends/chert/chert_positionlist.h	23;"	d
XAPIAN_HGUARD_CHERT_SPELLINGWORDSLIST_H	backends/chert/chert_spellingwordslist.h	23;"	d
XAPIAN_HGUARD_GLASS_POSITIONLIST_H	backends/glass/glass_positionlist.h	23;"	d
XAPIAN_HGUARD_GLASS_SPELLINGWORDSLIST_H	backends/glass/glass_spellingwordslist.h	23;"	d
XAPIAN_HGUARD_INDEX_UTILS_H	tests/harness/index_utils.h	22;"	d
XAPIAN_INCLUDED_ALIGNMENT_CAST_H	common/alignment_cast.h	26;"	d
XAPIAN_INCLUDED_ALLSNOWBALLHEADERS_H	languages/allsnowballheaders.h	23;"	d
XAPIAN_INCLUDED_ALLTERMSLIST_H	backends/alltermslist.h	22;"	d
XAPIAN_INCLUDED_APITEST_H	tests/apitest.h	22;"	d
XAPIAN_INCLUDED_APPEND_FILENAME_ARG_H	common/append_filename_arg.h	22;"	d
XAPIAN_INCLUDED_ATTRIBUTES_H	include/xapian/attributes.h	21;"	d
XAPIAN_INCLUDED_BACKENDMANAGER_CHERT_H	tests/harness/backendmanager_chert.h	22;"	d
XAPIAN_INCLUDED_BACKENDMANAGER_GLASS_H	tests/harness/backendmanager_glass.h	22;"	d
XAPIAN_INCLUDED_BACKENDMANAGER_INMEMORY_H	tests/harness/backendmanager_inmemory.h	22;"	d
XAPIAN_INCLUDED_BACKENDMANAGER_LOCAL_H	tests/harness/backendmanager_local.h	22;"	d
XAPIAN_INCLUDED_BACKENDMANAGER_MULTI_H	tests/harness/backendmanager_multi.h	23;"	d
XAPIAN_INCLUDED_BACKENDMANAGER_REMOTEPROG_H	tests/harness/backendmanager_remoteprog.h	23;"	d
XAPIAN_INCLUDED_BACKENDMANAGER_REMOTETCP_H	tests/harness/backendmanager_remotetcp.h	23;"	d
XAPIAN_INCLUDED_BACKENDMANAGER_REMOTE_H	tests/harness/backendmanager_remote.h	22;"	d
XAPIAN_INCLUDED_BACKENDMANAGER_SINGLEFILE_H	tests/harness/backendmanager_singlefile.h	23;"	d
XAPIAN_INCLUDED_BACKENDS_H	backends/backends.h	22;"	d
XAPIAN_INCLUDED_BITSTREAM_H	common/bitstream.h	23;"	d
XAPIAN_INCLUDED_BYTE_LENGTH_STRINGS_H	backends/byte_length_strings.h	23;"	d
XAPIAN_INCLUDED_CHERT_ALLDOCSMODIFIEDPOSTLIST_H	backends/chert/chert_alldocsmodifiedpostlist.h	23;"	d
XAPIAN_INCLUDED_CHERT_ALLDOCSPOSTLIST_H	backends/chert/chert_alldocspostlist.h	23;"	d
XAPIAN_INCLUDED_CHERT_ALLTERMSLIST_H	backends/chert/chert_alltermslist.h	23;"	d
XAPIAN_INCLUDED_CHERT_DATABASEREPLICATOR_H	backends/chert/chert_databasereplicator.h	25;"	d
XAPIAN_INCLUDED_CHERT_DBCHECK_H	backends/chert/chert_dbcheck.h	23;"	d
XAPIAN_INCLUDED_CHERT_DBSTATS_H	backends/chert/chert_dbstats.h	22;"	d
XAPIAN_INCLUDED_CHERT_DOCUMENT_H	backends/chert/chert_document.h	22;"	d
XAPIAN_INCLUDED_CHERT_LAZYTABLE_H	backends/chert/chert_lazytable.h	22;"	d
XAPIAN_INCLUDED_CHERT_METADATA_H	backends/chert/chert_metadata.h	23;"	d
XAPIAN_INCLUDED_CHERT_MODIFIEDPOSTLIST_H	backends/chert/chert_modifiedpostlist.h	22;"	d
XAPIAN_INCLUDED_CHERT_REPLICATE_INTERNAL_H	backends/chert/chert_replicate_internal.h	23;"	d
XAPIAN_INCLUDED_CHERT_SPELLING_H	backends/chert/chert_spelling.h	22;"	d
XAPIAN_INCLUDED_CHERT_SYNONYM_H	backends/chert/chert_synonym.h	22;"	d
XAPIAN_INCLUDED_CHERT_TERMLISTTABLE_H	backends/chert/chert_termlisttable.h	22;"	d
XAPIAN_INCLUDED_CHERT_TERMLIST_H	backends/chert/chert_termlist.h	22;"	d
XAPIAN_INCLUDED_CHERT_VALUELIST_H	backends/chert/chert_valuelist.h	22;"	d
XAPIAN_INCLUDED_CHERT_VALUES_H	backends/chert/chert_values.h	23;"	d
XAPIAN_INCLUDED_CJK_TOKENIZER_H	queryparser/cjk-tokenizer.h	29;"	d
XAPIAN_INCLUDED_CLOSEFROM_H	common/closefrom.h	22;"	d
XAPIAN_INCLUDED_COLLAPSER_H	matcher/collapser.h	22;"	d
XAPIAN_INCLUDED_COMPACTOR_H	include/xapian/compactor.h	24;"	d
XAPIAN_INCLUDED_COMPRESSION_STREAM_H	common/compression_stream.h	23;"	d
XAPIAN_INCLUDED_CONSTANTS_H	include/xapian/constants.h	23;"	d
XAPIAN_INCLUDED_CONTIGUOUSALLDOCSPOSTLIST_H	backends/contiguousalldocspostlist.h	23;"	d
XAPIAN_INCLUDED_CPUTIMER_H	tests/harness/cputimer.h	22;"	d
XAPIAN_INCLUDED_DATABASEREPLICATOR_H	backends/databasereplicator.h	24;"	d
XAPIAN_INCLUDED_DATABASE_H	include/xapian/database.h	26;"	d
XAPIAN_INCLUDED_DBCHECK_H	tests/dbcheck.h	22;"	d
XAPIAN_INCLUDED_DBFACTORY_H	include/xapian/dbfactory.h	23;"	d
XAPIAN_INCLUDED_DEBUGLOG_H	common/debuglog.h	22;"	d
XAPIAN_INCLUDED_DEPRECATED_H	include/xapian/deprecated.h	21;"	d
XAPIAN_INCLUDED_DEREFWRAPPER_H	include/xapian/derefwrapper.h	23;"	d
XAPIAN_INCLUDED_DESCRIPTION_APPEND_H	unicode/description_append.h	22;"	d
XAPIAN_INCLUDED_DOCUMENTVALUELIST_H	api/documentvaluelist.h	22;"	d
XAPIAN_INCLUDED_DOCUMENT_H	include/xapian/document.h	26;"	d
XAPIAN_INCLUDED_EDITDISTANCE_H	api/editdistance.h	23;"	d
XAPIAN_INCLUDED_EMPTYPOSTLIST_H	api/emptypostlist.h	22;"	d
XAPIAN_INCLUDED_ENQUIRE_H	include/xapian/enquire.h	27;"	d
XAPIAN_INCLUDED_ERRNO_TO_STRING_H	common/errno_to_string.h	26;"	d
XAPIAN_INCLUDED_ERRORHANDLER_H	include/xapian/errorhandler.h	22;"	d
XAPIAN_INCLUDED_ERROR_H	include/xapian/error.h	24;"	d
XAPIAN_INCLUDED_ESETINTERNAL_H	expand/esetinternal.h	23;"	d
XAPIAN_INCLUDED_ESET_H	include/xapian/eset.h	23;"	d
XAPIAN_INCLUDED_EXACTPHRASEPOSTLIST_H	matcher/exactphrasepostlist.h	23;"	d
XAPIAN_INCLUDED_EXP10_H	common/exp10.h	22;"	d
XAPIAN_INCLUDED_EXPANDDECIDER_H	include/xapian/expanddecider.h	22;"	d
XAPIAN_INCLUDED_EXPANDWEIGHT_H	expand/expandweight.h	23;"	d
XAPIAN_INCLUDED_EXTERNALPOSTLIST_H	matcher/externalpostlist.h	23;"	d
XAPIAN_INCLUDED_FDTRACKER_H	tests/harness/fdtracker.h	22;"	d
XAPIAN_INCLUDED_FD_H	common/fd.h	26;"	d
XAPIAN_INCLUDED_FILETESTS_H	common/filetests.h	26;"	d
XAPIAN_INCLUDED_FILEUTILS_H	common/fileutils.h	23;"	d
XAPIAN_INCLUDED_FLINT_LOCK_H	backends/flint_lock.h	23;"	d
XAPIAN_INCLUDED_FREEMEM_H	tests/perftest/freemem.h	23;"	d
XAPIAN_INCLUDED_GEOENCODE_H	geospatial/geoencode.h	27;"	d
XAPIAN_INCLUDED_GEOSPATIAL_H	include/xapian/geospatial.h	25;"	d
XAPIAN_INCLUDED_GLASS_ALLDOCSPOSTLIST_H	backends/glass/glass_alldocspostlist.h	23;"	d
XAPIAN_INCLUDED_GLASS_ALLTERMSLIST_H	backends/glass/glass_alltermslist.h	23;"	d
XAPIAN_INCLUDED_GLASS_CHANGES_H	backends/glass/glass_changes.h	23;"	d
XAPIAN_INCLUDED_GLASS_DATABASEREPLICATOR_H	backends/glass/glass_databasereplicator.h	24;"	d
XAPIAN_INCLUDED_GLASS_DBCHECK_H	backends/glass/glass_dbcheck.h	23;"	d
XAPIAN_INCLUDED_GLASS_DEFS_H	backends/glass/glass_defs.h	22;"	d
XAPIAN_INCLUDED_GLASS_DOCDATA_H	backends/glass/glass_docdata.h	22;"	d
XAPIAN_INCLUDED_GLASS_DOCUMENT_H	backends/glass/glass_document.h	22;"	d
XAPIAN_INCLUDED_GLASS_FREELIST_H	backends/glass/glass_freelist.h	23;"	d
XAPIAN_INCLUDED_GLASS_INVERTER_H	backends/glass/glass_inverter.h	22;"	d
XAPIAN_INCLUDED_GLASS_LAZYTABLE_H	backends/glass/glass_lazytable.h	22;"	d
XAPIAN_INCLUDED_GLASS_METADATA_H	backends/glass/glass_metadata.h	23;"	d
XAPIAN_INCLUDED_GLASS_REPLICATE_INTERNAL_H	backends/glass/glass_replicate_internal.h	24;"	d
XAPIAN_INCLUDED_GLASS_SPELLING_H	backends/glass/glass_spelling.h	22;"	d
XAPIAN_INCLUDED_GLASS_SYNONYM_H	backends/glass/glass_synonym.h	22;"	d
XAPIAN_INCLUDED_GLASS_TERMLISTTABLE_H	backends/glass/glass_termlisttable.h	22;"	d
XAPIAN_INCLUDED_GLASS_TERMLIST_H	backends/glass/glass_termlist.h	22;"	d
XAPIAN_INCLUDED_GLASS_VALUELIST_H	backends/glass/glass_valuelist.h	22;"	d
XAPIAN_INCLUDED_GLASS_VALUES_H	backends/glass/glass_values.h	23;"	d
XAPIAN_INCLUDED_GLASS_VERSION_H	backends/glass/glass_version.h	23;"	d
XAPIAN_INCLUDED_GNU_GETOPT_H	common/gnu_getopt.h	23;"	d
XAPIAN_INCLUDED_INMEMORY_DOCUMENT_H	backends/inmemory/inmemory_document.h	22;"	d
XAPIAN_INCLUDED_INTERNALTYPES_H	common/internaltypes.h	23;"	d
XAPIAN_INCLUDED_INTRUSIVE_PTR_H	include/xapian/intrusive_ptr.h	2;"	d
XAPIAN_INCLUDED_IO_UTILS_H	common/io_utils.h	23;"	d
XAPIAN_INCLUDED_ITERATOR_H	include/xapian/iterator.h	23;"	d
XAPIAN_INCLUDED_KEYMAKER_H	include/xapian/keymaker.h	23;"	d
XAPIAN_INCLUDED_KEYWORD_H	common/keyword.h	26;"	d
XAPIAN_INCLUDED_LEAFPOSTLIST_H	api/leafpostlist.h	23;"	d
XAPIAN_INCLUDED_LENGTH_H	net/length.h	22;"	d
XAPIAN_INCLUDED_LOCALSUBMATCH_H	matcher/localsubmatch.h	23;"	d
XAPIAN_INCLUDED_LOG2_H	common/log2.h	23;"	d
XAPIAN_INCLUDED_MATCHSPY_H	include/xapian/matchspy.h	24;"	d
XAPIAN_INCLUDED_MAXPOSTLIST_H	matcher/maxpostlist.h	23;"	d
XAPIAN_INCLUDED_MSETCMP_H	matcher/msetcmp.h	23;"	d
XAPIAN_INCLUDED_MSETPOSTLIST_H	matcher/msetpostlist.h	22;"	d
XAPIAN_INCLUDED_MSET_H	include/xapian/mset.h	23;"	d
XAPIAN_INCLUDED_MSVCIGNOREINVALIDPARAM_H	common/msvcignoreinvalidparam.h	22;"	d
XAPIAN_INCLUDED_MSVC_DIRENT_H	common/msvc_dirent.h	25;"	d
XAPIAN_INCLUDED_MULTIANDPOSTLIST_H	matcher/multiandpostlist.h	23;"	d
XAPIAN_INCLUDED_MULTIVALUELIST_H	backends/multivaluelist.h	22;"	d
XAPIAN_INCLUDED_MULTIXORPOSTLIST_H	matcher/multixorpostlist.h	23;"	d
XAPIAN_INCLUDED_MULTI_ALLTERMSLIST_H	backends/multi/multi_alltermslist.h	22;"	d
XAPIAN_INCLUDED_NEARPOSTLIST_H	matcher/nearpostlist.h	23;"	d
XAPIAN_INCLUDED_NET_POSTLIST_H	backends/remote/net_postlist.h	24;"	d
XAPIAN_INCLUDED_NORETURN_H	common/noreturn.h	22;"	d
XAPIAN_INCLUDED_OMASSERT_H	common/omassert.h	27;"	d
XAPIAN_INCLUDED_ORPOSITIONLIST_H	matcher/orpositionlist.h	22;"	d
XAPIAN_INCLUDED_ORPOSPOSTLIST_H	matcher/orpospostlist.h	22;"	d
XAPIAN_INCLUDED_ORTERMLIST_H	expand/ortermlist.h	22;"	d
XAPIAN_INCLUDED_OUTPUT_H	common/output.h	28;"	d
XAPIAN_INCLUDED_OUTPUT_INTERNAL_H	common/output-internal.h	27;"	d
XAPIAN_INCLUDED_OVERFLOW_H	common/overflow.h	26;"	d
XAPIAN_INCLUDED_PACK_H	common/pack.h	22;"	d
XAPIAN_INCLUDED_PERFTEST_H	tests/perftest/perftest.h	24;"	d
XAPIAN_INCLUDED_PHRASEPOSTLIST_H	matcher/phrasepostlist.h	23;"	d
XAPIAN_INCLUDED_POSITIONITERATOR_H	include/xapian/positioniterator.h	23;"	d
XAPIAN_INCLUDED_POSITIONLIST_H	backends/positionlist.h	22;"	d
XAPIAN_INCLUDED_POSIXY_WRAPPER_H	common/posixy_wrapper.h	24;"	d
XAPIAN_INCLUDED_POSTINGITERATOR_H	include/xapian/postingiterator.h	23;"	d
XAPIAN_INCLUDED_POSTINGSOURCE_H	include/xapian/postingsource.h	23;"	d
XAPIAN_INCLUDED_POSTLIST_H	api/postlist.h	23;"	d
XAPIAN_INCLUDED_PREFIX_COMPRESSED_STRINGS_H	backends/prefix_compressed_strings.h	23;"	d
XAPIAN_INCLUDED_PRETTY_H	common/pretty.h	22;"	d
XAPIAN_INCLUDED_PROGCLIENT_H	net/progclient.h	22;"	d
XAPIAN_INCLUDED_QUERYINTERNAL_H	api/queryinternal.h	22;"	d
XAPIAN_INCLUDED_QUERYOPTIMISER_H	matcher/queryoptimiser.h	23;"	d
XAPIAN_INCLUDED_QUERYPARSER_H	include/xapian/queryparser.h	24;"	d
XAPIAN_INCLUDED_QUERYPARSER_INTERNAL_H	queryparser/queryparser_internal.h	24;"	d
XAPIAN_INCLUDED_QUERYVECTOR_H	api/queryvector.h	26;"	d
XAPIAN_INCLUDED_QUERY_H	include/xapian/query.h	23;"	d
XAPIAN_INCLUDED_REALTIME_H	common/realtime.h	22;"	d
XAPIAN_INCLUDED_REGISTRY_H	include/xapian/registry.h	24;"	d
XAPIAN_INCLUDED_REMOTECONNECTION_H	net/remoteconnection.h	22;"	d
XAPIAN_INCLUDED_REMOTEPROTOCOL_H	net/remoteprotocol.h	23;"	d
XAPIAN_INCLUDED_REMOTESERVER_H	net/remoteserver.h	23;"	d
XAPIAN_INCLUDED_REMOTESUBMATCH_H	matcher/remotesubmatch.h	23;"	d
XAPIAN_INCLUDED_REMOTETCPCLIENT_H	net/remotetcpclient.h	22;"	d
XAPIAN_INCLUDED_REMOTETCPSERVER_H	net/remotetcpserver.h	22;"	d
XAPIAN_INCLUDED_REMOTE_DATABASE_H	backends/remote/remote-database.h	23;"	d
XAPIAN_INCLUDED_REMOTE_DOCUMENT_H	backends/remote/remote-document.h	22;"	d
XAPIAN_INCLUDED_REPLICATETCPCLIENT_H	net/replicatetcpclient.h	22;"	d
XAPIAN_INCLUDED_REPLICATETCPSERVER_H	net/replicatetcpserver.h	22;"	d
XAPIAN_INCLUDED_REPLICATE_UTILS_H	common/replicate_utils.h	22;"	d
XAPIAN_INCLUDED_REPLICATIONPROTOCOL_H	common/replicationprotocol.h	22;"	d
XAPIAN_INCLUDED_REPLICATION_H	api/replication.h	24;"	d
XAPIAN_INCLUDED_RESOLVER_H	net/resolver.h	22;"	d
XAPIAN_INCLUDED_RUNPROCESS_H	tests/perftest/runprocess.h	22;"	d
XAPIAN_INCLUDED_SAFEDIRENT_H	common/safedirent.h	23;"	d
XAPIAN_INCLUDED_SAFEFCNTL_H	common/safefcntl.h	23;"	d
XAPIAN_INCLUDED_SAFENETDB_H	common/safenetdb.h	23;"	d
XAPIAN_INCLUDED_SAFESYSSELECT_H	common/safesysselect.h	22;"	d
XAPIAN_INCLUDED_SAFESYSSOCKET_H	common/safesyssocket.h	22;"	d
XAPIAN_INCLUDED_SAFESYSSTAT_H	common/safesysstat.h	23;"	d
XAPIAN_INCLUDED_SAFESYSWAIT_H	common/safesyswait.h	23;"	d
XAPIAN_INCLUDED_SAFEUNISTD_H	common/safeunistd.h	23;"	d
XAPIAN_INCLUDED_SAFEWINDOWS_H	common/safewindows.h	23;"	d
XAPIAN_INCLUDED_SAFEWINSOCK2_H	common/safewinsock2.h	23;"	d
XAPIAN_INCLUDED_SBL_DISPATCH_H	languages/sbl-dispatch.h	23;"	d
XAPIAN_INCLUDED_SCALABILITY_H	tests/harness/scalability.h	22;"	d
XAPIAN_INCLUDED_SERIALISE_DOUBLE_H	common/serialise-double.h	26;"	d
XAPIAN_INCLUDED_SERIALISE_ERROR_H	net/serialise-error.h	22;"	d
XAPIAN_INCLUDED_SERIALISE_H	net/serialise.h	22;"	d
XAPIAN_INCLUDED_SLOWVALUELIST_H	backends/slowvaluelist.h	22;"	d
XAPIAN_INCLUDED_SMALLVECTOR_H	api/smallvector.h	26;"	d
XAPIAN_INCLUDED_SOAKTEST_H	tests/soaktest/soaktest.h	22;"	d
XAPIAN_INCLUDED_SOCKET_UTILS_H	common/socket_utils.h	23;"	d
XAPIAN_INCLUDED_STEMINTERNAL_H	languages/steminternal.h	23;"	d
XAPIAN_INCLUDED_STEM_H	include/xapian/stem.h	23;"	d
XAPIAN_INCLUDED_STRINGUTILS_H	common/stringutils.h	22;"	d
XAPIAN_INCLUDED_STR_H	common/str.h	22;"	d
XAPIAN_INCLUDED_SUBMATCH_H	common/submatch.h	22;"	d
XAPIAN_INCLUDED_SYNONYMPOSTLIST_H	matcher/synonympostlist.h	23;"	d
XAPIAN_INCLUDED_TCPCLIENT_H	net/tcpclient.h	22;"	d
XAPIAN_INCLUDED_TCPSERVER_H	net/tcpserver.h	22;"	d
XAPIAN_INCLUDED_TERMGENERATOR_H	include/xapian/termgenerator.h	22;"	d
XAPIAN_INCLUDED_TERMGENERATOR_INTERNAL_H	queryparser/termgenerator_internal.h	22;"	d
XAPIAN_INCLUDED_TERMITERATOR_H	include/xapian/termiterator.h	23;"	d
XAPIAN_INCLUDED_TERMLIST_H	api/termlist.h	22;"	d
XAPIAN_INCLUDED_TESTMACROS_H	tests/harness/testmacros.h	23;"	d
XAPIAN_INCLUDED_TESTRUNNER_H	tests/harness/testrunner.h	24;"	d
XAPIAN_INCLUDED_TYPES_H	include/xapian/types.h	22;"	d
XAPIAN_INCLUDED_UNICODE_H	include/xapian/unicode.h	22;"	d
XAPIAN_INCLUDED_UNIXCMDS_H	tests/harness/unixcmds.h	22;"	d
XAPIAN_INCLUDED_UUIDS_H	backends/uuids.h	23;"	d
XAPIAN_INCLUDED_VALUEGEPOSTLIST_H	matcher/valuegepostlist.h	23;"	d
XAPIAN_INCLUDED_VALUEITERATOR_H	include/xapian/valueiterator.h	23;"	d
XAPIAN_INCLUDED_VALUELIST_H	backends/valuelist.h	22;"	d
XAPIAN_INCLUDED_VALUERANGEPOSTLIST_H	matcher/valuerangepostlist.h	24;"	d
XAPIAN_INCLUDED_VALUESETMATCHDECIDER_H	include/xapian/valuesetmatchdecider.h	24;"	d
XAPIAN_INCLUDED_VALUESTATS_H	backends/valuestats.h	23;"	d
XAPIAN_INCLUDED_VALUESTREAMDOCUMENT_H	matcher/valuestreamdocument.h	22;"	d
XAPIAN_INCLUDED_VECTORTERMLIST_H	api/vectortermlist.h	22;"	d
XAPIAN_INCLUDED_VERSION_H	include/xapian/version.h	21;"	d
XAPIAN_INCLUDED_VISIBILITY_H	include/xapian/visibility.h	21;"	d
XAPIAN_INCLUDED_WEIGHTINTERNAL_H	weight/weightinternal.h	23;"	d
XAPIAN_INCLUDED_WEIGHT_H	include/xapian/weight.h	25;"	d
XAPIAN_INCLUDED_WORDACCESS_H	common/wordaccess.h	26;"	d
XAPIAN_INCLUDED_XAPIAN_CONSTINFO_H	include/xapian/constinfo.h	21;"	d
XAPIAN_INCLUDED_XAPIAN_H	include/xapian.h	21;"	d
XAPIAN_IN_XAPIAN_H	include/xapian.h	148;"	d
XAPIAN_IN_XAPIAN_H	include/xapian.h	41;"	d
XAPIAN_LDFLAGS	Makefile	/^XAPIAN_LDFLAGS =  -Bsymbolic-functions$/;"	m
XAPIAN_LDFLAGS	docs/Makefile	/^XAPIAN_LDFLAGS =  -Bsymbolic-functions$/;"	m
XAPIAN_LDFLAGS	tests/Makefile	/^XAPIAN_LDFLAGS =  -Bsymbolic-functions$/;"	m
XAPIAN_LIBS	Makefile	/^XAPIAN_LIBS =  -lrt   -lz  $/;"	m
XAPIAN_LIBS	docs/Makefile	/^XAPIAN_LIBS =  -lrt   -lz  $/;"	m
XAPIAN_LIBS	tests/Makefile	/^XAPIAN_LIBS =  -lrt   -lz  $/;"	m
XAPIAN_LIB_BUILD	config.h	517;"	d
XAPIAN_MAJOR_VERSION	include/xapian/version.h	58;"	d
XAPIAN_MINOR_VERSION	include/xapian/version.h	63;"	d
XAPIAN_MOVE_SEMANTICS	include/xapian/version.h	125;"	d
XAPIAN_NOEXCEPT	include/xapian/attributes.h	37;"	d
XAPIAN_NOEXCEPT	include/xapian/attributes.h	39;"	d
XAPIAN_NORETURN	common/noreturn.h	38;"	d
XAPIAN_NORETURN	common/noreturn.h	41;"	d
XAPIAN_NORETURN	common/noreturn.h	43;"	d
XAPIAN_NOTHROW	include/xapian/attributes.h	50;"	d
XAPIAN_NOTHROW	include/xapian/attributes.h	73;"	d
XAPIAN_NOTHROW	include/xapian/geospatial.h	/^    bool XAPIAN_NOTHROW(operator<(const LatLongCoord & other) const)$/;"	f	struct:Xapian::LatLongCoord
XAPIAN_NOTHROW	include/xapian/unicode.h	/^    bool XAPIAN_NOTHROW(operator!=(const Utf8Iterator &other) const) {$/;"	f	class:Xapian::Utf8Iterator
XAPIAN_NOTHROW	include/xapian/unicode.h	/^    bool XAPIAN_NOTHROW(operator==(const Utf8Iterator &other) const) {$/;"	f	class:Xapian::Utf8Iterator
XAPIAN_OUTPUT_FUNCTION	common/output.h	33;"	d
XAPIAN_PRETTY_AS_CLASSNAME	common/pretty.h	288;"	d
XAPIAN_PROGSRV	tests/harness/backendmanager.h	40;"	d
XAPIAN_PURE_FUNCTION	api/queryinternal.h	/^    Xapian::Query::op get_type() const XAPIAN_NOEXCEPT XAPIAN_PURE_FUNCTION;$/;"	m	class:Xapian::Internal::QueryBranch
XAPIAN_PURE_FUNCTION	api/queryinternal.h	/^    Xapian::Query::op get_type() const XAPIAN_NOEXCEPT XAPIAN_PURE_FUNCTION;$/;"	m	class:Xapian::Internal::QueryInvalid
XAPIAN_PURE_FUNCTION	api/queryinternal.h	/^    Xapian::Query::op get_type() const XAPIAN_NOEXCEPT XAPIAN_PURE_FUNCTION;$/;"	m	class:Xapian::Internal::QueryPostingSource
XAPIAN_PURE_FUNCTION	api/queryinternal.h	/^    Xapian::Query::op get_type() const XAPIAN_NOEXCEPT XAPIAN_PURE_FUNCTION;$/;"	m	class:Xapian::Internal::QueryScaleWeight
XAPIAN_PURE_FUNCTION	api/queryinternal.h	/^    Xapian::Query::op get_type() const XAPIAN_NOEXCEPT XAPIAN_PURE_FUNCTION;$/;"	m	class:Xapian::Internal::QueryTerm
XAPIAN_PURE_FUNCTION	api/queryinternal.h	/^    Xapian::Query::op get_type() const XAPIAN_NOEXCEPT XAPIAN_PURE_FUNCTION;$/;"	m	class:Xapian::Internal::QueryValueGE
XAPIAN_PURE_FUNCTION	api/queryinternal.h	/^    Xapian::Query::op get_type() const XAPIAN_NOEXCEPT XAPIAN_PURE_FUNCTION;$/;"	m	class:Xapian::Internal::QueryValueLE
XAPIAN_PURE_FUNCTION	api/queryinternal.h	/^    Xapian::Query::op get_type() const XAPIAN_NOEXCEPT XAPIAN_PURE_FUNCTION;$/;"	m	class:Xapian::Internal::QueryValueRange
XAPIAN_PURE_FUNCTION	api/queryinternal.h	/^    Xapian::Query::op get_type() const XAPIAN_NOEXCEPT XAPIAN_PURE_FUNCTION;$/;"	m	class:Xapian::Internal::QueryWildcard
XAPIAN_PURE_FUNCTION	api/queryinternal.h	/^    size_t get_num_subqueries() const XAPIAN_NOEXCEPT XAPIAN_PURE_FUNCTION;$/;"	m	class:Xapian::Internal::QueryBranch
XAPIAN_PURE_FUNCTION	api/queryinternal.h	/^    size_t get_num_subqueries() const XAPIAN_NOEXCEPT XAPIAN_PURE_FUNCTION;$/;"	m	class:Xapian::Internal::QueryScaleWeight
XAPIAN_PURE_FUNCTION	api/queryinternal.h	/^    termcount get_length() const XAPIAN_NOEXCEPT XAPIAN_PURE_FUNCTION;$/;"	m	class:Xapian::Internal::QueryBranch
XAPIAN_PURE_FUNCTION	api/queryinternal.h	/^    termcount get_length() const XAPIAN_NOEXCEPT XAPIAN_PURE_FUNCTION;$/;"	m	class:Xapian::Internal::QueryWildcard
XAPIAN_PURE_FUNCTION	include/xapian/attributes.h	47;"	d
XAPIAN_PURE_FUNCTION	include/xapian/attributes.h	67;"	d
XAPIAN_PURE_FUNCTION	include/xapian/query.h	/^    Xapian::termcount XAPIAN_NOTHROW(get_length() const) XAPIAN_PURE_FUNCTION;$/;"	m	class:Xapian::Query
XAPIAN_PURE_FUNCTION	include/xapian/query.h	/^    op XAPIAN_NOTHROW(get_type() const) XAPIAN_PURE_FUNCTION;$/;"	m	class:Xapian::Query
XAPIAN_PURE_FUNCTION	include/xapian/query.h	/^    size_t XAPIAN_NOTHROW(get_num_subqueries() const) XAPIAN_PURE_FUNCTION;$/;"	m	class:Xapian::Query
XAPIAN_PURE_FUNCTION	include/xapian/query.h	/^    virtual Query::op XAPIAN_NOTHROW(get_type() const) XAPIAN_PURE_FUNCTION = 0;$/;"	m	class:Xapian::Query::Internal
XAPIAN_PURE_FUNCTION	include/xapian/query.h	/^    virtual size_t XAPIAN_NOTHROW(get_num_subqueries() const) XAPIAN_PURE_FUNCTION;$/;"	m	class:Xapian::Query::Internal
XAPIAN_PURE_FUNCTION	include/xapian/query.h	/^    virtual termcount XAPIAN_NOTHROW(get_length() const) XAPIAN_PURE_FUNCTION;$/;"	m	class:Xapian::Query::Internal
XAPIAN_PURE_FUNCTION	include/xapian/unicode.h	/^    unsigned XAPIAN_NOTHROW(operator*() const) XAPIAN_PURE_FUNCTION;$/;"	m	class:Xapian::Utf8Iterator
XAPIAN_PURE_FUNCTION	include/xapian/unicode.h	/^    unsigned XAPIAN_NOTHROW(strict_deref() const) XAPIAN_PURE_FUNCTION;$/;"	m	class:Xapian::Utf8Iterator
XAPIAN_REMOTE_PROTOCOL_MAJOR_VERSION	net/remoteprotocol.h	52;"	d
XAPIAN_REMOTE_PROTOCOL_MINOR_VERSION	net/remoteprotocol.h	53;"	d
XAPIAN_REPLICATION_PROTOCOL_MAJOR_VERSION	common/replicationprotocol.h	26;"	d
XAPIAN_REPLICATION_PROTOCOL_MINOR_VERSION	common/replicationprotocol.h	27;"	d
XAPIAN_REVISION	include/xapian/version.h	68;"	d
XAPIAN_REVISION_TYPE	include/xapian/version.h	83;"	d
XAPIAN_TCPSRV	tests/harness/backendmanager.h	39;"	d
XAPIAN_TERMCOUNT_BASE_TYPE	include/xapian/version.h	74;"	d
XAPIAN_TERMPOS_BASE_TYPE	include/xapian/version.h	77;"	d
XAPIAN_TESTSUITE_TRACK_FDS	tests/harness/fdtracker.h	29;"	d
XAPIAN_TOTALLENGTH_TYPE	include/xapian/version.h	80;"	d
XAPIAN_UNITTEST	tests/unittest.cc	34;"	d	file:
XAPIAN_UNUSED	common/debuglog.h	363;"	d
XAPIAN_UNUSED	common/debuglog.h	365;"	d
XAPIAN_VERSION	include/xapian/version.h	53;"	d
XAPIAN_VISIBILITY_DEFAULT	include/xapian/visibility.h	29;"	d
XAPIAN_VISIBILITY_DEFAULT	include/xapian/visibility.h	31;"	d
XFAIL	tests/harness/testsuite.h	/^	    XPASS = 3, XFAIL = 2, PASS = 1, FAIL = 0, SKIP = -1$/;"	e	enum:test_driver::test_result
XFAIL	tests/harness/testsuite.h	/^inline void XFAIL(const char* msg) {$/;"	f
XFAIL_FOR_BACKEND	tests/apitest.cc	/^XFAIL_FOR_BACKEND(const std::string& backend_prefix,$/;"	f
XOR	queryparser/queryparser_token.h	3;"	d
XPASS	tests/harness/testsuite.h	/^	    XPASS = 3, XFAIL = 2, PASS = 1, FAIL = 0, SKIP = -1$/;"	e	enum:test_driver::test_result
Xapian	api/compactor.cc	/^namespace Xapian {$/;"	n	file:
Xapian	api/constinfo.cc	/^namespace Xapian {$/;"	n	file:
Xapian	api/expanddecider.cc	/^namespace Xapian {$/;"	n	file:
Xapian	api/keymaker.cc	/^namespace Xapian {$/;"	n	file:
Xapian	api/leafpostlist.h	/^namespace Xapian {$/;"	n
Xapian	api/omdatabase.cc	/^namespace Xapian {$/;"	n	file:
Xapian	api/omdocument.cc	/^namespace Xapian {$/;"	n	file:
Xapian	api/omenquire.cc	/^namespace Xapian {$/;"	n	file:
Xapian	api/omenquireinternal.h	/^namespace Xapian {$/;"	n
Xapian	api/positioniterator.cc	/^namespace Xapian {$/;"	n	file:
Xapian	api/postingiterator.cc	/^namespace Xapian {$/;"	n	file:
Xapian	api/postingsource.cc	/^namespace Xapian {$/;"	n	file:
Xapian	api/postlist.cc	/^namespace Xapian {$/;"	n	file:
Xapian	api/query.cc	/^namespace Xapian {$/;"	n	file:
Xapian	api/queryinternal.cc	/^namespace Xapian {$/;"	n	file:
Xapian	api/queryinternal.h	/^namespace Xapian {$/;"	n
Xapian	api/queryvector.h	/^namespace Xapian {$/;"	n
Xapian	api/registry.cc	/^namespace Xapian {$/;"	n	file:
Xapian	api/replication.h	/^namespace Xapian {$/;"	n
Xapian	api/smallvector.h	/^namespace Xapian {$/;"	n
Xapian	api/termiterator.cc	/^namespace Xapian {$/;"	n	file:
Xapian	api/termlist.cc	/^namespace Xapian {$/;"	n	file:
Xapian	api/termlist.h	/^namespace Xapian {$/;"	n
Xapian	api/valueiterator.cc	/^namespace Xapian {$/;"	n	file:
Xapian	api/valuerangeproc.cc	/^namespace Xapian {$/;"	n	file:
Xapian	api/valuesetmatchdecider.cc	/^namespace Xapian {$/;"	n	file:
Xapian	backends/chert/chert_termlist.h	/^namespace Xapian {$/;"	n
Xapian	backends/chert/chert_termlisttable.h	/^namespace Xapian {$/;"	n
Xapian	backends/chert/chert_values.h	/^namespace Xapian {$/;"	n
Xapian	backends/database.cc	/^namespace Xapian {$/;"	n	file:
Xapian	backends/database.h	/^namespace Xapian {$/;"	n
Xapian	backends/databasereplicator.cc	/^namespace Xapian {$/;"	n	file:
Xapian	backends/databasereplicator.h	/^namespace Xapian {$/;"	n
Xapian	backends/dbcheck.cc	/^namespace Xapian {$/;"	n	file:
Xapian	backends/dbfactory.cc	/^namespace Xapian {$/;"	n	file:
Xapian	backends/dbfactory_remote.cc	/^namespace Xapian {$/;"	n	file:
Xapian	backends/glass/glass_inverter.h	/^namespace Xapian {$/;"	n
Xapian	backends/glass/glass_termlist.h	/^namespace Xapian {$/;"	n
Xapian	backends/glass/glass_termlisttable.h	/^namespace Xapian {$/;"	n
Xapian	backends/glass/glass_values.h	/^namespace Xapian {$/;"	n
Xapian	backends/positionlist.h	/^namespace Xapian {$/;"	n
Xapian	backends/remote/remote-database.h	/^namespace Xapian {$/;"	n
Xapian	backends/valuelist.cc	/^namespace Xapian {$/;"	n	file:
Xapian	common/bitstream.cc	/^namespace Xapian {$/;"	n	file:
Xapian	common/bitstream.h	/^namespace Xapian {$/;"	n
Xapian	common/closefrom.h	/^namespace Xapian {$/;"	n
Xapian	common/debuglog.h	/^namespace Xapian {$/;"	n
Xapian	common/omassert.cc	/^namespace Xapian {$/;"	n	file:
Xapian	common/omassert.h	/^namespace Xapian {$/;"	n
Xapian	common/pretty.h	/^namespace Xapian {$/;"	n
Xapian	common/str.cc	/^namespace Xapian {$/;"	n	file:
Xapian	common/str.h	/^namespace Xapian {$/;"	n
Xapian	common/stringutils.h	/^namespace Xapian {$/;"	n
Xapian	expand/bo1eweight.cc	/^namespace Xapian {$/;"	n	file:
Xapian	expand/esetinternal.cc	/^namespace Xapian {$/;"	n	file:
Xapian	expand/esetinternal.h	/^namespace Xapian {$/;"	n
Xapian	expand/expandweight.cc	/^namespace Xapian {$/;"	n	file:
Xapian	expand/expandweight.h	/^namespace Xapian {$/;"	n
Xapian	expand/ortermlist.h	/^namespace Xapian {$/;"	n
Xapian	expand/tradeweight.cc	/^namespace Xapian {$/;"	n	file:
Xapian	include/xapian.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/compactor.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/constants.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/constinfo.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/database.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/dbfactory.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/derefwrapper.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/document.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/enquire.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/error.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/errorhandler.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/eset.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/expanddecider.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/geospatial.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/intrusive_ptr.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/iterator.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/keymaker.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/matchspy.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/mset.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/positioniterator.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/postingiterator.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/postingsource.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/query.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/queryparser.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/registry.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/stem.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/termgenerator.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/termiterator.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/types.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/unicode.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/valueiterator.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/valuesetmatchdecider.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/weight.h	/^namespace Xapian {$/;"	n
Xapian	languages/arabic.h	/^namespace Xapian {$/;"	n
Xapian	languages/armenian.h	/^namespace Xapian {$/;"	n
Xapian	languages/basque.h	/^namespace Xapian {$/;"	n
Xapian	languages/catalan.h	/^namespace Xapian {$/;"	n
Xapian	languages/danish.h	/^namespace Xapian {$/;"	n
Xapian	languages/dutch.h	/^namespace Xapian {$/;"	n
Xapian	languages/earlyenglish.h	/^namespace Xapian {$/;"	n
Xapian	languages/english.h	/^namespace Xapian {$/;"	n
Xapian	languages/finnish.h	/^namespace Xapian {$/;"	n
Xapian	languages/french.h	/^namespace Xapian {$/;"	n
Xapian	languages/german.h	/^namespace Xapian {$/;"	n
Xapian	languages/german2.h	/^namespace Xapian {$/;"	n
Xapian	languages/hungarian.h	/^namespace Xapian {$/;"	n
Xapian	languages/indonesian.h	/^namespace Xapian {$/;"	n
Xapian	languages/irish.h	/^namespace Xapian {$/;"	n
Xapian	languages/italian.h	/^namespace Xapian {$/;"	n
Xapian	languages/kraaij_pohlmann.h	/^namespace Xapian {$/;"	n
Xapian	languages/lithuanian.h	/^namespace Xapian {$/;"	n
Xapian	languages/lovins.h	/^namespace Xapian {$/;"	n
Xapian	languages/nepali.h	/^namespace Xapian {$/;"	n
Xapian	languages/norwegian.h	/^namespace Xapian {$/;"	n
Xapian	languages/porter.h	/^namespace Xapian {$/;"	n
Xapian	languages/portuguese.h	/^namespace Xapian {$/;"	n
Xapian	languages/romanian.h	/^namespace Xapian {$/;"	n
Xapian	languages/russian.h	/^namespace Xapian {$/;"	n
Xapian	languages/spanish.h	/^namespace Xapian {$/;"	n
Xapian	languages/stem.cc	/^namespace Xapian {$/;"	n	file:
Xapian	languages/steminternal.cc	/^namespace Xapian {$/;"	n	file:
Xapian	languages/steminternal.h	/^namespace Xapian {$/;"	n
Xapian	languages/swedish.h	/^namespace Xapian {$/;"	n
Xapian	languages/tamil.h	/^namespace Xapian {$/;"	n
Xapian	languages/turkish.h	/^namespace Xapian {$/;"	n
Xapian	matcher/externalpostlist.h	/^namespace Xapian {$/;"	n
Xapian	matcher/extraweightpostlist.h	/^namespace Xapian {$/;"	n
Xapian	matcher/remotesubmatch.h	/^namespace Xapian {$/;"	n
Xapian	net/serialise-error.h	/^namespace Xapian {$/;"	n
Xapian	net/serialise.h	/^namespace Xapian {$/;"	n
Xapian	queryparser/queryparser_internal.h	/^namespace Xapian {$/;"	n
Xapian	queryparser/termgenerator_internal.cc	/^namespace Xapian {$/;"	n	file:
Xapian	queryparser/termgenerator_internal.h	/^namespace Xapian {$/;"	n
Xapian	unicode/utf8itor.cc	/^namespace Xapian {$/;"	n	file:
Xapian	weight/bb2weight.cc	/^namespace Xapian {$/;"	n	file:
Xapian	weight/bm25plusweight.cc	/^namespace Xapian {$/;"	n	file:
Xapian	weight/bm25weight.cc	/^namespace Xapian {$/;"	n	file:
Xapian	weight/boolweight.cc	/^namespace Xapian {$/;"	n	file:
Xapian	weight/coordweight.cc	/^namespace Xapian {$/;"	n	file:
Xapian	weight/dlhweight.cc	/^namespace Xapian {$/;"	n	file:
Xapian	weight/dphweight.cc	/^namespace Xapian {$/;"	n	file:
Xapian	weight/ifb2weight.cc	/^namespace Xapian {$/;"	n	file:
Xapian	weight/ineb2weight.cc	/^namespace Xapian {$/;"	n	file:
Xapian	weight/inl2weight.cc	/^namespace Xapian {$/;"	n	file:
Xapian	weight/lmweight.cc	/^namespace Xapian {$/;"	n	file:
Xapian	weight/pl2plusweight.cc	/^namespace Xapian {$/;"	n	file:
Xapian	weight/pl2weight.cc	/^namespace Xapian {$/;"	n	file:
Xapian	weight/tfidfweight.cc	/^namespace Xapian {$/;"	n	file:
Xapian	weight/tradweight.cc	/^namespace Xapian {$/;"	n	file:
Xapian	weight/weight.cc	/^namespace Xapian {$/;"	n	file:
Xapian	weight/weightinternal.cc	/^namespace Xapian {$/;"	n	file:
Xapian	weight/weightinternal.h	/^namespace Xapian {$/;"	n
Xapian_NetworkError	net/length.cc	/^    explicit Xapian_NetworkError(const char * msg_) : msg(msg_) { }$/;"	f	class:Xapian_NetworkError
Xapian_NetworkError	net/length.cc	/^class Xapian_NetworkError {$/;"	c	file:
XorContext	api/queryinternal.cc	/^    XorContext(QueryOptimiser* qopt_, size_t reserve)$/;"	f	class:Xapian::Internal::XorContext
XorContext	api/queryinternal.cc	/^class XorContext : public Context {$/;"	c	namespace:Xapian::Internal	file:
YYACTIONTYPE	queryparser/queryparser_internal.cc	1246;"	d	file:
YYCODETYPE	queryparser/queryparser_internal.cc	1244;"	d	file:
YYMALLOCARGTYPE	queryparser/queryparser_internal.cc	1649;"	d	file:
YYMINORTYPE	queryparser/queryparser_internal.cc	/^} YYMINORTYPE;$/;"	t	typeref:union:__anon33	file:
YYNOCODE	queryparser/queryparser_internal.cc	1245;"	d	file:
YYNRULE	queryparser/queryparser_internal.cc	1265;"	d	file:
YYNSTATE	queryparser/queryparser_internal.cc	1264;"	d	file:
YYNTOKEN	queryparser/queryparser_internal.cc	1266;"	d	file:
YYSTACKDEPTH	queryparser/queryparser_internal.cc	1258;"	d	file:
YY_ACCEPT_ACTION	queryparser/queryparser_internal.cc	1271;"	d	file:
YY_ACTTAB_COUNT	queryparser/queryparser_internal.cc	1340;"	d	file:
YY_ERROR_ACTION	queryparser/queryparser_internal.cc	1270;"	d	file:
YY_MAX_REDUCE	queryparser/queryparser_internal.cc	1274;"	d	file:
YY_MAX_SHIFT	queryparser/queryparser_internal.cc	1267;"	d	file:
YY_MAX_SHIFTREDUCE	queryparser/queryparser_internal.cc	1269;"	d	file:
YY_MIN_REDUCE	queryparser/queryparser_internal.cc	1273;"	d	file:
YY_MIN_SHIFTREDUCE	queryparser/queryparser_internal.cc	1268;"	d	file:
YY_NO_ACTION	queryparser/queryparser_internal.cc	1272;"	d	file:
YY_REDUCE_COUNT	queryparser/queryparser_internal.cc	1421;"	d	file:
YY_REDUCE_MAX	queryparser/queryparser_internal.cc	1423;"	d	file:
YY_REDUCE_MIN	queryparser/queryparser_internal.cc	1422;"	d	file:
YY_SHIFT_COUNT	queryparser/queryparser_internal.cc	1412;"	d	file:
YY_SHIFT_MAX	queryparser/queryparser_internal.cc	1414;"	d	file:
YY_SHIFT_MIN	queryparser/queryparser_internal.cc	1413;"	d	file:
ZWeight	tests/api_percentages.cc	/^    ZWeight() { }$/;"	f	class:ZWeight
ZWeight	tests/api_percentages.cc	/^class ZWeight : public Xapian::Weight {$/;"	c	file:
_	common/getopt.cc	54;"	d	file:
_DARWIN_USE_64_BIT_INODE	config.h	377;"	d
_FORTIFY_SOURCE	config.h	495;"	d
_GNU_SOURCE	tests/zlib-vg.c	29;"	d	file:
_USE_MATH_DEFINES	config.h	409;"	d
__MATHERR_RENAME_EXCEPTION	config.h	526;"	d
__WIN32__	config.h	478;"	d
__WIN32__	queryparser/lemon.c	32;"	d	file:
__WIN64__	config.h	483;"	d
__getattr__	tests/submitperftest	/^    def __getattr__(self, attr):$/;"	m	class:fdwrapper	file:
__getattr__	tests/submitperftest.in	/^    def __getattr__(self, attr):$/;"	m	class:fdwrapper	file:
__init__	tests/submitperftest	/^    def __init__(self, fd, callback):$/;"	m	class:fdwrapper
__init__	tests/submitperftest.in	/^    def __init__(self, fd, callback):$/;"	m	class:fdwrapper
_lit	common/pretty.h	/^    const char * _lit;$/;"	m	struct:Literal
_refs	include/xapian/intrusive_ptr.h	/^    mutable unsigned _refs;$/;"	m	class:Xapian::Internal::intrusive_base
_refs	include/xapian/intrusive_ptr.h	/^    mutable unsigned _refs;$/;"	m	class:Xapian::Internal::opt_intrusive_base
a	tests/api_unicode.cc	/^    const char * a, * b;$/;"	m	struct:testcase	file:
a	tests/api_unicode.cc	/^    const char * a;$/;"	m	struct:testcase2	file:
aAction	queryparser/lemon.c	/^    *aAction,                  \/* The yy_action[] table under construction *\/$/;"	m	struct:acttab	typeref:struct:acttab::lookahead_action	file:
aLookahead	queryparser/lemon.c	/^    *aLookahead;               \/* A single new transaction set *\/$/;"	m	struct:acttab	typeref:struct:acttab::	file:
a_0	languages/arabic.cc	/^static const struct among a_0[161] =$/;"	v	typeref:struct:among	file:
a_0	languages/armenian.cc	/^static const struct among a_0[23] =$/;"	v	typeref:struct:among	file:
a_0	languages/basque.cc	/^static const struct among a_0[109] =$/;"	v	typeref:struct:among	file:
a_0	languages/catalan.cc	/^static const struct among a_0[13] =$/;"	v	typeref:struct:among	file:
a_0	languages/danish.cc	/^static const struct among a_0[32] =$/;"	v	typeref:struct:among	file:
a_0	languages/dutch.cc	/^static const struct among a_0[11] =$/;"	v	typeref:struct:among	file:
a_0	languages/earlyenglish.cc	/^static const struct among a_0[4] =$/;"	v	typeref:struct:among	file:
a_0	languages/english.cc	/^static const struct among a_0[3] =$/;"	v	typeref:struct:among	file:
a_0	languages/finnish.cc	/^static const struct among a_0[10] =$/;"	v	typeref:struct:among	file:
a_0	languages/french.cc	/^static const struct among a_0[3] =$/;"	v	typeref:struct:among	file:
a_0	languages/german.cc	/^static const struct among a_0[6] =$/;"	v	typeref:struct:among	file:
a_0	languages/german2.cc	/^static const struct among a_0[6] =$/;"	v	typeref:struct:among	file:
a_0	languages/hungarian.cc	/^static const struct among a_0[8] =$/;"	v	typeref:struct:among	file:
a_0	languages/indonesian.cc	/^static const struct among a_0[3] =$/;"	v	typeref:struct:among	file:
a_0	languages/irish.cc	/^static const struct among a_0[24] =$/;"	v	typeref:struct:among	file:
a_0	languages/italian.cc	/^static const struct among a_0[7] =$/;"	v	typeref:struct:among	file:
a_0	languages/kraaij_pohlmann.cc	/^static const struct among a_0[7] =$/;"	v	typeref:struct:among	file:
a_0	languages/lithuanian.cc	/^static const struct among a_0[204] =$/;"	v	typeref:struct:among	file:
a_0	languages/lovins.cc	/^static const struct among a_0[9] =$/;"	v	typeref:struct:among	file:
a_0	languages/nepali.cc	/^static const struct among a_0[17] =$/;"	v	typeref:struct:among	file:
a_0	languages/norwegian.cc	/^static const struct among a_0[29] =$/;"	v	typeref:struct:among	file:
a_0	languages/porter.cc	/^static const struct among a_0[4] =$/;"	v	typeref:struct:among	file:
a_0	languages/portuguese.cc	/^static const struct among a_0[3] =$/;"	v	typeref:struct:among	file:
a_0	languages/romanian.cc	/^static const struct among a_0[3] =$/;"	v	typeref:struct:among	file:
a_0	languages/russian.cc	/^static const struct among a_0[9] =$/;"	v	typeref:struct:among	file:
a_0	languages/spanish.cc	/^static const struct among a_0[6] =$/;"	v	typeref:struct:among	file:
a_0	languages/swedish.cc	/^static const struct among a_0[37] =$/;"	v	typeref:struct:among	file:
a_0	languages/tamil.cc	/^static const struct among a_0[10] =$/;"	v	typeref:struct:among	file:
a_0	languages/turkish.cc	/^static const struct among a_0[10] =$/;"	v	typeref:struct:among	file:
a_1	languages/arabic.cc	/^static const struct among a_1[5] =$/;"	v	typeref:struct:among	file:
a_1	languages/armenian.cc	/^static const struct among a_1[71] =$/;"	v	typeref:struct:among	file:
a_1	languages/basque.cc	/^static const struct among a_1[295] =$/;"	v	typeref:struct:among	file:
a_1	languages/catalan.cc	/^static const struct among a_1[39] =$/;"	v	typeref:struct:among	file:
a_1	languages/danish.cc	/^static const struct among a_1[4] =$/;"	v	typeref:struct:among	file:
a_1	languages/dutch.cc	/^static const struct among a_1[3] =$/;"	v	typeref:struct:among	file:
a_1	languages/earlyenglish.cc	/^static const struct among a_1[13] =$/;"	v	typeref:struct:among	file:
a_1	languages/english.cc	/^static const struct among a_1[3] =$/;"	v	typeref:struct:among	file:
a_1	languages/finnish.cc	/^static const struct among a_1[6] =$/;"	v	typeref:struct:among	file:
a_1	languages/french.cc	/^static const struct among a_1[4] =$/;"	v	typeref:struct:among	file:
a_1	languages/german.cc	/^static const struct among a_1[7] =$/;"	v	typeref:struct:among	file:
a_1	languages/german2.cc	/^static const struct among a_1[6] =$/;"	v	typeref:struct:among	file:
a_1	languages/hungarian.cc	/^static const struct among a_1[2] =$/;"	v	typeref:struct:among	file:
a_1	languages/indonesian.cc	/^static const struct among a_1[3] =$/;"	v	typeref:struct:among	file:
a_1	languages/irish.cc	/^static const struct among a_1[16] =$/;"	v	typeref:struct:among	file:
a_1	languages/italian.cc	/^static const struct among a_1[3] =$/;"	v	typeref:struct:among	file:
a_1	languages/kraaij_pohlmann.cc	/^static const struct among a_1[11] =$/;"	v	typeref:struct:among	file:
a_1	languages/lithuanian.cc	/^static const struct among a_1[62] =$/;"	v	typeref:struct:among	file:
a_1	languages/lovins.cc	/^static const struct among a_1[294] =$/;"	v	typeref:struct:among	file:
a_1	languages/nepali.cc	/^static const struct among a_1[3] =$/;"	v	typeref:struct:among	file:
a_1	languages/norwegian.cc	/^static const struct among a_1[2] =$/;"	v	typeref:struct:among	file:
a_1	languages/porter.cc	/^static const struct among a_1[13] =$/;"	v	typeref:struct:among	file:
a_1	languages/portuguese.cc	/^static const struct among a_1[3] =$/;"	v	typeref:struct:among	file:
a_1	languages/romanian.cc	/^static const struct among a_1[16] =$/;"	v	typeref:struct:among	file:
a_1	languages/russian.cc	/^static const struct among a_1[26] =$/;"	v	typeref:struct:among	file:
a_1	languages/spanish.cc	/^static const struct among a_1[13] =$/;"	v	typeref:struct:among	file:
a_1	languages/swedish.cc	/^static const struct among a_1[7] =$/;"	v	typeref:struct:among	file:
a_1	languages/tamil.cc	/^static const struct among a_1[3] =$/;"	v	typeref:struct:among	file:
a_1	languages/turkish.cc	/^static const struct among a_1[2] =$/;"	v	typeref:struct:among	file:
a_10	languages/arabic.cc	/^static const struct among a_10[10] =$/;"	v	typeref:struct:among	file:
a_10	languages/english.cc	/^static const struct among a_10[18] =$/;"	v	typeref:struct:among	file:
a_10	languages/hungarian.cc	/^static const struct among a_10[31] =$/;"	v	typeref:struct:among	file:
a_10	languages/tamil.cc	/^static const struct among a_10[8] =$/;"	v	typeref:struct:among	file:
a_10	languages/turkish.cc	/^static const struct among a_10[2] =$/;"	v	typeref:struct:among	file:
a_11	languages/arabic.cc	/^static const struct among a_11[1] =$/;"	v	typeref:struct:among	file:
a_11	languages/hungarian.cc	/^static const struct among a_11[42] =$/;"	v	typeref:struct:among	file:
a_11	languages/tamil.cc	/^static const struct among a_11[3] =$/;"	v	typeref:struct:among	file:
a_11	languages/turkish.cc	/^static const struct among a_11[2] =$/;"	v	typeref:struct:among	file:
a_12	languages/arabic.cc	/^static const struct among a_12[3] =$/;"	v	typeref:struct:among	file:
a_12	languages/tamil.cc	/^static const struct among a_12[10] =$/;"	v	typeref:struct:among	file:
a_12	languages/turkish.cc	/^static const struct among a_12[4] =$/;"	v	typeref:struct:among	file:
a_13	languages/arabic.cc	/^static const struct among a_13[1] =$/;"	v	typeref:struct:among	file:
a_13	languages/tamil.cc	/^static const struct among a_13[6] =$/;"	v	typeref:struct:among	file:
a_13	languages/turkish.cc	/^static const struct among a_13[4] =$/;"	v	typeref:struct:among	file:
a_14	languages/arabic.cc	/^static const struct among a_14[1] =$/;"	v	typeref:struct:among	file:
a_14	languages/tamil.cc	/^static const struct among a_14[3] =$/;"	v	typeref:struct:among	file:
a_14	languages/turkish.cc	/^static const struct among a_14[4] =$/;"	v	typeref:struct:among	file:
a_15	languages/arabic.cc	/^static const struct among a_15[1] =$/;"	v	typeref:struct:among	file:
a_15	languages/tamil.cc	/^static const struct among a_15[2] =$/;"	v	typeref:struct:among	file:
a_15	languages/turkish.cc	/^static const struct among a_15[4] =$/;"	v	typeref:struct:among	file:
a_16	languages/arabic.cc	/^static const struct among a_16[1] =$/;"	v	typeref:struct:among	file:
a_16	languages/tamil.cc	/^static const struct among a_16[8] =$/;"	v	typeref:struct:among	file:
a_16	languages/turkish.cc	/^static const struct among a_16[2] =$/;"	v	typeref:struct:among	file:
a_17	languages/arabic.cc	/^static const struct among a_17[12] =$/;"	v	typeref:struct:among	file:
a_17	languages/tamil.cc	/^static const struct among a_17[13] =$/;"	v	typeref:struct:among	file:
a_17	languages/turkish.cc	/^static const struct among a_17[4] =$/;"	v	typeref:struct:among	file:
a_18	languages/arabic.cc	/^static const struct among a_18[11] =$/;"	v	typeref:struct:among	file:
a_18	languages/tamil.cc	/^static const struct among a_18[6] =$/;"	v	typeref:struct:among	file:
a_18	languages/turkish.cc	/^static const struct among a_18[8] =$/;"	v	typeref:struct:among	file:
a_19	languages/arabic.cc	/^static const struct among a_19[2] =$/;"	v	typeref:struct:among	file:
a_19	languages/tamil.cc	/^static const struct among a_19[6] =$/;"	v	typeref:struct:among	file:
a_19	languages/turkish.cc	/^static const struct among a_19[2] =$/;"	v	typeref:struct:among	file:
a_2	languages/arabic.cc	/^static const struct among a_2[5] =$/;"	v	typeref:struct:among	file:
a_2	languages/armenian.cc	/^static const struct among a_2[40] =$/;"	v	typeref:struct:among	file:
a_2	languages/basque.cc	/^static const struct among a_2[19] =$/;"	v	typeref:struct:among	file:
a_2	languages/catalan.cc	/^static const struct among a_2[200] =$/;"	v	typeref:struct:among	file:
a_2	languages/danish.cc	/^static const struct among a_2[5] =$/;"	v	typeref:struct:among	file:
a_2	languages/dutch.cc	/^static const struct among a_2[3] =$/;"	v	typeref:struct:among	file:
a_2	languages/earlyenglish.cc	/^static const struct among a_2[5] =$/;"	v	typeref:struct:among	file:
a_2	languages/english.cc	/^static const struct among a_2[6] =$/;"	v	typeref:struct:among	file:
a_2	languages/finnish.cc	/^static const struct among a_2[6] =$/;"	v	typeref:struct:among	file:
a_2	languages/french.cc	/^static const struct among a_2[6] =$/;"	v	typeref:struct:among	file:
a_2	languages/german.cc	/^static const struct among a_2[4] =$/;"	v	typeref:struct:among	file:
a_2	languages/german2.cc	/^static const struct among a_2[7] =$/;"	v	typeref:struct:among	file:
a_2	languages/hungarian.cc	/^static const struct among a_2[23] =$/;"	v	typeref:struct:among	file:
a_2	languages/indonesian.cc	/^static const struct among a_2[3] =$/;"	v	typeref:struct:among	file:
a_2	languages/irish.cc	/^static const struct among a_2[25] =$/;"	v	typeref:struct:among	file:
a_2	languages/italian.cc	/^static const struct among a_2[37] =$/;"	v	typeref:struct:among	file:
a_2	languages/kraaij_pohlmann.cc	/^static const struct among a_2[14] =$/;"	v	typeref:struct:among	file:
a_2	languages/lithuanian.cc	/^static const struct among a_2[11] =$/;"	v	typeref:struct:among	file:
a_2	languages/lovins.cc	/^static const struct among a_2[10] =$/;"	v	typeref:struct:among	file:
a_2	languages/nepali.cc	/^static const struct among a_2[3] =$/;"	v	typeref:struct:among	file:
a_2	languages/norwegian.cc	/^static const struct among a_2[11] =$/;"	v	typeref:struct:among	file:
a_2	languages/porter.cc	/^static const struct among a_2[3] =$/;"	v	typeref:struct:among	file:
a_2	languages/portuguese.cc	/^static const struct among a_2[4] =$/;"	v	typeref:struct:among	file:
a_2	languages/romanian.cc	/^static const struct among a_2[46] =$/;"	v	typeref:struct:among	file:
a_2	languages/russian.cc	/^static const struct among a_2[8] =$/;"	v	typeref:struct:among	file:
a_2	languages/spanish.cc	/^static const struct among a_2[11] =$/;"	v	typeref:struct:among	file:
a_2	languages/swedish.cc	/^static const struct among a_2[5] =$/;"	v	typeref:struct:among	file:
a_2	languages/tamil.cc	/^static const struct among a_2[3] =$/;"	v	typeref:struct:among	file:
a_2	languages/turkish.cc	/^static const struct among a_2[4] =$/;"	v	typeref:struct:among	file:
a_20	languages/arabic.cc	/^static const struct among a_20[2] =$/;"	v	typeref:struct:among	file:
a_20	languages/tamil.cc	/^static const struct among a_20[8] =$/;"	v	typeref:struct:among	file:
a_20	languages/turkish.cc	/^static const struct among a_20[32] =$/;"	v	typeref:struct:among	file:
a_21	languages/arabic.cc	/^static const struct among a_21[1] =$/;"	v	typeref:struct:among	file:
a_21	languages/tamil.cc	/^static const struct among a_21[8] =$/;"	v	typeref:struct:among	file:
a_21	languages/turkish.cc	/^static const struct among a_21[8] =$/;"	v	typeref:struct:among	file:
a_22	languages/tamil.cc	/^static const struct among a_22[2] =$/;"	v	typeref:struct:among	file:
a_22	languages/turkish.cc	/^static const struct among a_22[4] =$/;"	v	typeref:struct:among	file:
a_23	languages/tamil.cc	/^static const struct among a_23[12] =$/;"	v	typeref:struct:among	file:
a_23	languages/turkish.cc	/^static const struct among a_23[4] =$/;"	v	typeref:struct:among	file:
a_24	languages/tamil.cc	/^static const struct among a_24[8] =$/;"	v	typeref:struct:among	file:
a_25	languages/tamil.cc	/^static const struct among a_25[6] =$/;"	v	typeref:struct:among	file:
a_3	languages/arabic.cc	/^static const struct among a_3[4] =$/;"	v	typeref:struct:among	file:
a_3	languages/armenian.cc	/^static const struct among a_3[57] =$/;"	v	typeref:struct:among	file:
a_3	languages/catalan.cc	/^static const struct among a_3[283] =$/;"	v	typeref:struct:among	file:
a_3	languages/dutch.cc	/^static const struct among a_3[5] =$/;"	v	typeref:struct:among	file:
a_3	languages/earlyenglish.cc	/^static const struct among a_3[20] =$/;"	v	typeref:struct:among	file:
a_3	languages/english.cc	/^static const struct among a_3[13] =$/;"	v	typeref:struct:among	file:
a_3	languages/finnish.cc	/^static const struct among a_3[2] =$/;"	v	typeref:struct:among	file:
a_3	languages/french.cc	/^static const struct among a_3[3] =$/;"	v	typeref:struct:among	file:
a_3	languages/german.cc	/^static const struct among a_3[2] =$/;"	v	typeref:struct:among	file:
a_3	languages/german2.cc	/^static const struct among a_3[4] =$/;"	v	typeref:struct:among	file:
a_3	languages/hungarian.cc	/^static const struct among a_3[2] =$/;"	v	typeref:struct:among	file:
a_3	languages/indonesian.cc	/^static const struct among a_3[12] =$/;"	v	typeref:struct:among	file:
a_3	languages/irish.cc	/^static const struct among a_3[12] =$/;"	v	typeref:struct:among	file:
a_3	languages/italian.cc	/^static const struct among a_3[5] =$/;"	v	typeref:struct:among	file:
a_3	languages/kraaij_pohlmann.cc	/^static const struct among a_3[16] =$/;"	v	typeref:struct:among	file:
a_3	languages/lithuanian.cc	/^static const struct among a_3[2] =$/;"	v	typeref:struct:among	file:
a_3	languages/lovins.cc	/^static const struct among a_3[34] =$/;"	v	typeref:struct:among	file:
a_3	languages/nepali.cc	/^static const struct among a_3[91] =$/;"	v	typeref:struct:among	file:
a_3	languages/porter.cc	/^static const struct among a_3[20] =$/;"	v	typeref:struct:among	file:
a_3	languages/portuguese.cc	/^static const struct among a_3[3] =$/;"	v	typeref:struct:among	file:
a_3	languages/romanian.cc	/^static const struct among a_3[62] =$/;"	v	typeref:struct:among	file:
a_3	languages/russian.cc	/^static const struct among a_3[2] =$/;"	v	typeref:struct:among	file:
a_3	languages/spanish.cc	/^static const struct among a_3[4] =$/;"	v	typeref:struct:among	file:
a_3	languages/tamil.cc	/^static const struct among a_3[6] =$/;"	v	typeref:struct:among	file:
a_3	languages/turkish.cc	/^static const struct among a_3[4] =$/;"	v	typeref:struct:among	file:
a_4	languages/arabic.cc	/^static const struct among a_4[5] =$/;"	v	typeref:struct:among	file:
a_4	languages/catalan.cc	/^static const struct among a_4[22] =$/;"	v	typeref:struct:among	file:
a_4	languages/dutch.cc	/^static const struct among a_4[6] =$/;"	v	typeref:struct:among	file:
a_4	languages/earlyenglish.cc	/^static const struct among a_4[7] =$/;"	v	typeref:struct:among	file:
a_4	languages/english.cc	/^static const struct among a_4[6] =$/;"	v	typeref:struct:among	file:
a_4	languages/finnish.cc	/^static const struct among a_4[9] =$/;"	v	typeref:struct:among	file:
a_4	languages/french.cc	/^static const struct among a_4[43] =$/;"	v	typeref:struct:among	file:
a_4	languages/german.cc	/^static const struct among a_4[8] =$/;"	v	typeref:struct:among	file:
a_4	languages/german2.cc	/^static const struct among a_4[2] =$/;"	v	typeref:struct:among	file:
a_4	languages/hungarian.cc	/^static const struct among a_4[44] =$/;"	v	typeref:struct:among	file:
a_4	languages/indonesian.cc	/^static const struct among a_4[6] =$/;"	v	typeref:struct:among	file:
a_4	languages/italian.cc	/^static const struct among a_4[4] =$/;"	v	typeref:struct:among	file:
a_4	languages/kraaij_pohlmann.cc	/^static const struct among a_4[3] =$/;"	v	typeref:struct:among	file:
a_4	languages/lithuanian.cc	/^static const struct among a_4[1] =$/;"	v	typeref:struct:among	file:
a_4	languages/porter.cc	/^static const struct among a_4[7] =$/;"	v	typeref:struct:among	file:
a_4	languages/portuguese.cc	/^static const struct among a_4[3] =$/;"	v	typeref:struct:among	file:
a_4	languages/romanian.cc	/^static const struct among a_4[94] =$/;"	v	typeref:struct:among	file:
a_4	languages/russian.cc	/^static const struct among a_4[46] =$/;"	v	typeref:struct:among	file:
a_4	languages/spanish.cc	/^static const struct among a_4[3] =$/;"	v	typeref:struct:among	file:
a_4	languages/tamil.cc	/^static const struct among a_4[6] =$/;"	v	typeref:struct:among	file:
a_4	languages/turkish.cc	/^static const struct among a_4[2] =$/;"	v	typeref:struct:among	file:
a_5	languages/arabic.cc	/^static const struct among a_5[2] =$/;"	v	typeref:struct:among	file:
a_5	languages/dutch.cc	/^static const struct among a_5[4] =$/;"	v	typeref:struct:among	file:
a_5	languages/earlyenglish.cc	/^static const struct among a_5[19] =$/;"	v	typeref:struct:among	file:
a_5	languages/english.cc	/^static const struct among a_5[24] =$/;"	v	typeref:struct:among	file:
a_5	languages/finnish.cc	/^static const struct among a_5[7] =$/;"	v	typeref:struct:among	file:
a_5	languages/french.cc	/^static const struct among a_5[35] =$/;"	v	typeref:struct:among	file:
a_5	languages/german2.cc	/^static const struct among a_5[8] =$/;"	v	typeref:struct:among	file:
a_5	languages/hungarian.cc	/^static const struct among a_5[3] =$/;"	v	typeref:struct:among	file:
a_5	languages/italian.cc	/^static const struct among a_5[3] =$/;"	v	typeref:struct:among	file:
a_5	languages/kraaij_pohlmann.cc	/^static const struct among a_5[3] =$/;"	v	typeref:struct:among	file:
a_5	languages/porter.cc	/^static const struct among a_5[19] =$/;"	v	typeref:struct:among	file:
a_5	languages/portuguese.cc	/^static const struct among a_5[45] =$/;"	v	typeref:struct:among	file:
a_5	languages/romanian.cc	/^static const struct among a_5[5] =$/;"	v	typeref:struct:among	file:
a_5	languages/russian.cc	/^static const struct among a_5[36] =$/;"	v	typeref:struct:among	file:
a_5	languages/spanish.cc	/^static const struct among a_5[3] =$/;"	v	typeref:struct:among	file:
a_5	languages/tamil.cc	/^static const struct among a_5[6] =$/;"	v	typeref:struct:among	file:
a_5	languages/turkish.cc	/^static const struct among a_5[2] =$/;"	v	typeref:struct:among	file:
a_6	languages/arabic.cc	/^static const struct among a_6[4] =$/;"	v	typeref:struct:among	file:
a_6	languages/english.cc	/^static const struct among a_6[9] =$/;"	v	typeref:struct:among	file:
a_6	languages/finnish.cc	/^static const struct among a_6[30] =$/;"	v	typeref:struct:among	file:
a_6	languages/french.cc	/^static const struct among a_6[38] =$/;"	v	typeref:struct:among	file:
a_6	languages/hungarian.cc	/^static const struct among a_6[6] =$/;"	v	typeref:struct:among	file:
a_6	languages/italian.cc	/^static const struct among a_6[51] =$/;"	v	typeref:struct:among	file:
a_6	languages/kraaij_pohlmann.cc	/^static const struct among a_6[22] =$/;"	v	typeref:struct:among	file:
a_6	languages/portuguese.cc	/^static const struct among a_6[120] =$/;"	v	typeref:struct:among	file:
a_6	languages/russian.cc	/^static const struct among a_6[2] =$/;"	v	typeref:struct:among	file:
a_6	languages/spanish.cc	/^static const struct among a_6[46] =$/;"	v	typeref:struct:among	file:
a_6	languages/tamil.cc	/^static const struct among a_6[6] =$/;"	v	typeref:struct:among	file:
a_6	languages/turkish.cc	/^static const struct among a_6[4] =$/;"	v	typeref:struct:among	file:
a_7	languages/arabic.cc	/^static const struct among a_7[3] =$/;"	v	typeref:struct:among	file:
a_7	languages/english.cc	/^static const struct among a_7[18] =$/;"	v	typeref:struct:among	file:
a_7	languages/finnish.cc	/^static const struct among a_7[14] =$/;"	v	typeref:struct:among	file:
a_7	languages/french.cc	/^static const struct among a_7[7] =$/;"	v	typeref:struct:among	file:
a_7	languages/hungarian.cc	/^static const struct among a_7[2] =$/;"	v	typeref:struct:among	file:
a_7	languages/italian.cc	/^static const struct among a_7[87] =$/;"	v	typeref:struct:among	file:
a_7	languages/kraaij_pohlmann.cc	/^static const struct among a_7[2] =$/;"	v	typeref:struct:among	file:
a_7	languages/portuguese.cc	/^static const struct among a_7[7] =$/;"	v	typeref:struct:among	file:
a_7	languages/russian.cc	/^static const struct among a_7[4] =$/;"	v	typeref:struct:among	file:
a_7	languages/spanish.cc	/^static const struct among a_7[12] =$/;"	v	typeref:struct:among	file:
a_7	languages/tamil.cc	/^static const struct among a_7[6] =$/;"	v	typeref:struct:among	file:
a_7	languages/turkish.cc	/^static const struct among a_7[2] =$/;"	v	typeref:struct:among	file:
a_8	languages/arabic.cc	/^static const struct among a_8[4] =$/;"	v	typeref:struct:among	file:
a_8	languages/english.cc	/^static const struct among a_8[2] =$/;"	v	typeref:struct:among	file:
a_8	languages/finnish.cc	/^static const struct among a_8[2] =$/;"	v	typeref:struct:among	file:
a_8	languages/french.cc	/^static const struct among a_8[5] =$/;"	v	typeref:struct:among	file:
a_8	languages/hungarian.cc	/^static const struct among a_8[7] =$/;"	v	typeref:struct:among	file:
a_8	languages/portuguese.cc	/^static const struct among a_8[4] =$/;"	v	typeref:struct:among	file:
a_8	languages/spanish.cc	/^static const struct among a_8[96] =$/;"	v	typeref:struct:among	file:
a_8	languages/tamil.cc	/^static const struct among a_8[3] =$/;"	v	typeref:struct:among	file:
a_8	languages/turkish.cc	/^static const struct among a_8[4] =$/;"	v	typeref:struct:among	file:
a_9	languages/arabic.cc	/^static const struct among a_9[3] =$/;"	v	typeref:struct:among	file:
a_9	languages/english.cc	/^static const struct among a_9[8] =$/;"	v	typeref:struct:among	file:
a_9	languages/finnish.cc	/^static const struct among a_9[2] =$/;"	v	typeref:struct:among	file:
a_9	languages/hungarian.cc	/^static const struct among a_9[12] =$/;"	v	typeref:struct:among	file:
a_9	languages/spanish.cc	/^static const struct among a_9[8] =$/;"	v	typeref:struct:among	file:
a_9	languages/tamil.cc	/^static const struct among a_9[8] =$/;"	v	typeref:struct:among	file:
a_9	languages/turkish.cc	/^static const struct among a_9[2] =$/;"	v	typeref:struct:among	file:
abi_affecting_cxxflags	Makefile	/^abi_affecting_cxxflags = $/;"	m
abi_affecting_cxxflags	docs/Makefile	/^abi_affecting_cxxflags = $/;"	m
abi_affecting_cxxflags	tests/Makefile	/^abi_affecting_cxxflags = $/;"	m
abort_on_error	tests/harness/testsuite.cc	/^bool test_driver::abort_on_error = false;$/;"	m	class:test_driver	file:
abort_on_error	tests/harness/testsuite.h	/^	static bool abort_on_error;$/;"	m	class:test_driver
abs_builddir	Makefile	/^abs_builddir = \/home\/sammar\/new-xapian-v2$/;"	m
abs_builddir	docs/Makefile	/^abs_builddir = \/home\/sammar\/new-xapian-v2\/docs$/;"	m
abs_builddir	tests/Makefile	/^abs_builddir = \/home\/sammar\/new-xapian-v2\/tests$/;"	m
abs_srcdir	Makefile	/^abs_srcdir = \/home\/sammar\/new-xapian-v2$/;"	m
abs_srcdir	docs/Makefile	/^abs_srcdir = \/home\/sammar\/new-xapian-v2\/docs$/;"	m
abs_srcdir	tests/Makefile	/^abs_srcdir = \/home\/sammar\/new-xapian-v2\/tests$/;"	m
abs_top_builddir	Makefile	/^abs_top_builddir = \/home\/sammar\/new-xapian-v2$/;"	m
abs_top_builddir	docs/Makefile	/^abs_top_builddir = \/home\/sammar\/new-xapian-v2$/;"	m
abs_top_builddir	tests/Makefile	/^abs_top_builddir = \/home\/sammar\/new-xapian-v2$/;"	m
abs_top_srcdir	Makefile	/^abs_top_srcdir = \/home\/sammar\/new-xapian-v2$/;"	m
abs_top_srcdir	docs/Makefile	/^abs_top_srcdir = \/home\/sammar\/new-xapian-v2$/;"	m
abs_top_srcdir	tests/Makefile	/^abs_top_srcdir = \/home\/sammar\/new-xapian-v2$/;"	m
ac_ct_AR	Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	docs/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	tests/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_CC	Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	docs/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	tests/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CXX	Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	docs/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	tests/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_DUMPBIN	Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	docs/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	tests/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_fn_c_check_func	configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_try_compile	configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	configure	/^ac_fn_c_try_run ()$/;"	f
ac_fn_cxx_check_decl	configure	/^ac_fn_cxx_check_decl ()$/;"	f
ac_fn_cxx_check_func	configure	/^ac_fn_cxx_check_func ()$/;"	f
ac_fn_cxx_check_header_compile	configure	/^ac_fn_cxx_check_header_compile ()$/;"	f
ac_fn_cxx_check_header_mongrel	configure	/^ac_fn_cxx_check_header_mongrel ()$/;"	f
ac_fn_cxx_check_type	configure	/^ac_fn_cxx_check_type ()$/;"	f
ac_fn_cxx_compute_int	configure	/^ac_fn_cxx_compute_int ()$/;"	f
ac_fn_cxx_try_compile	configure	/^ac_fn_cxx_try_compile ()$/;"	f
ac_fn_cxx_try_cpp	configure	/^ac_fn_cxx_try_cpp ()$/;"	f
ac_fn_cxx_try_link	configure	/^ac_fn_cxx_try_link ()$/;"	f
ac_fn_cxx_try_run	configure	/^ac_fn_cxx_try_run ()$/;"	f
acc	common/bitstream.h	/^    Xapian::termpos acc;$/;"	m	class:Xapian::BitReader
acc	common/bitstream.h	/^    Xapian::termpos acc;$/;"	m	class:Xapian::BitWriter
accAction	queryparser/lemon.c	/^  int accAction;           \/* Accept action value *\/$/;"	m	struct:lemon	file:
accept	queryparser/lemon.c	/^  char *accept;            \/* Code to execute when the parser excepts *\/$/;"	m	struct:lemon	file:
accept_connection	net/tcpserver.cc	/^TcpServer::accept_connection()$/;"	f	class:TcpServer
accumulate	expand/expandweight.h	/^    void accumulate(Xapian::termcount wdf, Xapian::termcount doclen,$/;"	f	class:Xapian::Internal::ExpandStats
accumulate_stats	api/termlist.cc	/^TermIterator::Internal::accumulate_stats(Xapian::Internal::ExpandStats &) const$/;"	f	class:Xapian::TermIterator::Internal
accumulate_stats	backends/chert/chert_termlist.cc	/^ChertTermList::accumulate_stats(Xapian::Internal::ExpandStats & stats) const$/;"	f	class:ChertTermList
accumulate_stats	backends/glass/glass_termlist.cc	/^GlassTermList::accumulate_stats(Xapian::Internal::ExpandStats & stats) const$/;"	f	class:GlassTermList
accumulate_stats	backends/inmemory/inmemory_database.cc	/^InMemoryTermList::accumulate_stats(Xapian::Internal::ExpandStats & stats) const$/;"	f	class:InMemoryTermList
accumulate_stats	backends/multi/multi_termlist.cc	/^MultiTermList::accumulate_stats(Xapian::Internal::ExpandStats & stats) const$/;"	f	class:MultiTermList
accumulate_stats	backends/remote/net_termlist.cc	/^NetworkTermList::accumulate_stats(Xapian::Internal::ExpandStats & stats) const$/;"	f	class:NetworkTermList
accumulate_stats	expand/ortermlist.cc	/^OrTermList::accumulate_stats(Xapian::Internal::ExpandStats & stats) const$/;"	f	class:OrTermList
accumulate_stats	weight/weightinternal.cc	/^Weight::Internal::accumulate_stats(const Xapian::Database::Internal &subdb,$/;"	f	class:Xapian::Weight::Internal
action	languages/compiler/header.h	/^    struct node * action; \/* the corresponding action *\/$/;"	m	struct:amongvec	typeref:struct:amongvec::node
action	queryparser/lemon.c	/^  int action;                \/* Action to take on the given lookahead *\/$/;"	m	struct:lookahead_action	file:
action	queryparser/lemon.c	/^struct action {$/;"	s	file:
actioncmp	queryparser/lemon.c	/^static int actioncmp($/;"	f	file:
activate	tests/harness/testsuite.cc	/^    void activate() {$/;"	f	class:SignalRedirector
active	tests/harness/testsuite.cc	/^    bool active;$/;"	m	class:SignalRedirector	file:
active_timeout	net/remoteserver.h	/^    double active_timeout;$/;"	m	class:RemoteServer
active_timeout	net/remotetcpserver.h	/^    double active_timeout;$/;"	m	class:RemoteTcpServer
acttab	queryparser/lemon.c	/^struct acttab {$/;"	s	file:
acttab	queryparser/lemon.c	/^typedef struct acttab acttab;$/;"	t	typeref:struct:acttab	file:
acttab_action	queryparser/lemon.c	/^void acttab_action(acttab *p, int lookahead, int action){$/;"	f
acttab_action_size	queryparser/lemon.c	/^int acttab_action_size(acttab *p){$/;"	f
acttab_alloc	queryparser/lemon.c	/^acttab *acttab_alloc(int nsymbol, int nterminal){$/;"	f
acttab_free	queryparser/lemon.c	/^void acttab_free(acttab *p){$/;"	f
acttab_insert	queryparser/lemon.c	/^int acttab_insert(acttab *p, int makeItSafe){$/;"	f
acttab_lookahead_size	queryparser/lemon.c	606;"	d	file:
acttab_yyaction	queryparser/lemon.c	609;"	d	file:
acttab_yylookahead	queryparser/lemon.c	612;"	d	file:
add	backends/chert/chert_table.cc	/^ChertTable::add(const string &key, string tag, bool already_compressed)$/;"	f	class:ChertTable
add	backends/glass/glass_table.cc	/^GlassTable::add(const string &key, string tag, bool already_compressed)$/;"	f	class:GlassTable
add	common/Tokeniseise.pm	/^sub add {$/;"	s
add	include/xapian/queryparser.h	/^    void add(const std::string & word) { stop_words.insert(word); }$/;"	f	class:Xapian::SimpleStopper
add_boolean_prefix	include/xapian/queryparser.h	/^    void add_boolean_prefix(const std::string &field, Xapian::FieldProcessor *proc,$/;"	f	class:Xapian::QueryParser
add_boolean_prefix	include/xapian/queryparser.h	/^    void add_boolean_prefix(const std::string &field, const std::string &prefix,$/;"	f	class:Xapian::QueryParser
add_boolean_prefix	queryparser/queryparser.cc	/^QueryParser::add_boolean_prefix(const string &field, const string &prefix,$/;"	f	class:QueryParser
add_boolean_prefix	queryparser/queryparser.cc	/^QueryParser::add_boolean_prefix(const string &field,$/;"	f	class:QueryParser
add_boolean_prefix	queryparser/queryparser_internal.cc	/^QueryParser::Internal::add_boolean_prefix(const string &field,$/;"	f	class:QueryParser::Internal
add_boolean_term	include/xapian/document.h	/^	void add_boolean_term(const std::string & term) { add_term(term, 0); }$/;"	f	class:Xapian::Document
add_branch_item	backends/glass/glass_table.cc	/^GlassTable::add_branch_item(BItem kt_, int j)$/;"	f	class:GlassTable
add_command_line_option	tests/harness/testsuite.cc	/^test_driver::add_command_line_option(const string &l, char s, string * arg)$/;"	f	class:test_driver
add_database	api/omdatabase.cc	/^Database::add_database(const Database & database)$/;"	f	class:Xapian::Database
add_defaults	api/registry.cc	/^Registry::Internal::add_defaults()$/;"	f	class:Xapian::Registry::Internal
add_document	api/omdatabase.cc	/^WritableDatabase::add_document(const Document & document)$/;"	f	class:Xapian::WritableDatabase
add_document	api/omenquire.cc	/^RSet::add_document(Xapian::docid did)$/;"	f	class:Xapian::RSet
add_document	backends/chert/chert_database.cc	/^ChertWritableDatabase::add_document(const Xapian::Document & document)$/;"	f	class:ChertWritableDatabase
add_document	backends/chert/chert_dbstats.h	/^    void add_document(Xapian::termcount doclen) {$/;"	f	class:ChertDatabaseStats
add_document	backends/chert/chert_values.cc	/^ChertValueManager::add_document(Xapian::docid did, const Xapian::Document &doc,$/;"	f	class:ChertValueManager
add_document	backends/database.cc	/^Database::Internal::add_document(const Xapian::Document &)$/;"	f	class:Xapian::Database::Internal
add_document	backends/glass/glass_database.cc	/^GlassWritableDatabase::add_document(const Xapian::Document & document)$/;"	f	class:GlassWritableDatabase
add_document	backends/glass/glass_values.cc	/^GlassValueManager::add_document(Xapian::docid did, const Xapian::Document &doc,$/;"	f	class:GlassValueManager
add_document	backends/glass/glass_version.h	/^    void add_document(Xapian::termcount doclen) {$/;"	f	class:GlassVersion
add_document	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::add_document(const Xapian::Document & document)$/;"	f	class:InMemoryDatabase
add_document	backends/remote/remote-database.cc	/^RemoteDatabase::add_document(const Xapian::Document & doc)$/;"	f	class:RemoteDatabase
add_document	include/xapian/enquire.h	/^	void add_document(const Xapian::MSetIterator & i) { add_document(*i); }$/;"	f	class:Xapian::RSet
add_document_	backends/chert/chert_database.cc	/^ChertWritableDatabase::add_document_(Xapian::docid did,$/;"	f	class:ChertWritableDatabase
add_document_	backends/glass/glass_database.cc	/^GlassWritableDatabase::add_document_(Xapian::docid did,$/;"	f	class:GlassWritableDatabase
add_document_data	backends/glass/glass_docdata.h	/^    void add_document_data(Xapian::docid did, const std::string & data) {$/;"	f	class:GlassDocDataTable
add_filter	queryparser/queryparser_internal.cc	/^    void add_filter(const string& grouping, const Query & q) {$/;"	f	struct:ProbQuery
add_filter_range	queryparser/queryparser_internal.cc	/^    void add_filter_range(const string& grouping, const Query & range) {$/;"	f	struct:ProbQuery
add_freq_delta	backends/chert/chert_database.cc	/^ChertWritableDatabase::add_freq_delta(const string & tname,$/;"	f	class:ChertWritableDatabase
add_item	backends/chert/chert_table.cc	/^ChertTable::add_item(Item_wr kt_, int j)$/;"	f	class:ChertTable
add_item	matcher/collapser.cc	/^CollapseData::add_item(const Xapian::Internal::MSetItem & item,$/;"	f	class:CollapseData
add_item_to_block	backends/chert/chert_table.cc	/^ChertTable::add_item_to_block(uint8_t * p, Item_wr kt_, int c)$/;"	f	class:ChertTable
add_item_to_branch	backends/glass/glass_table.cc	/^GlassTable::add_item_to_branch(uint8_t * p, BItem kt_, int c)$/;"	f	class:GlassTable
add_item_to_leaf	backends/glass/glass_table.cc	/^GlassTable::add_item_to_leaf(uint8_t * p, LeafItem kt_, int c)$/;"	f	class:GlassTable
add_kt	backends/chert/chert_table.cc	/^ChertTable::add_kt(bool found)$/;"	f	class:ChertTable
add_kt	backends/glass/glass_table.cc	/^GlassTable::add_kt(bool found)$/;"	f	class:GlassTable
add_leaf_item	backends/glass/glass_table.cc	/^GlassTable::add_leaf_item(LeafItem kt_)$/;"	f	class:GlassTable
add_mapping	api/postingsource.cc	/^ValueMapPostingSource::add_mapping(const string & key, double wt)$/;"	f	class:Xapian::ValueMapPostingSource
add_matchspy	api/omenquire.cc	/^Enquire::add_matchspy(MatchSpy * spy) {$/;"	f	class:Xapian::Enquire
add_overflows	common/overflow.h	/^add_overflows(T1 a, T2 b, R& res) {$/;"	f
add_pos_filter	api/queryinternal.cc	/^AndContext::add_pos_filter(Query::op op_,$/;"	f	class:Xapian::Internal::AndContext
add_position	api/omdocument.cc	/^OmDocumentTerm::add_position(Xapian::termcount wdf_inc, Xapian::termpos tpos)$/;"	f	class:OmDocumentTerm
add_positional_term	queryparser/queryparser_internal.cc	/^    void add_positional_term(Term * term) {$/;"	f	class:Terms
add_poslist	matcher/orpositionlist.h	/^    void add_poslist(PositionList* poslist) {$/;"	f	class:OrPositionList
add_posting	api/omdocument.cc	/^Document::add_posting(const string & tname,$/;"	f	class:Xapian::Document
add_posting	api/omdocument.cc	/^Xapian::Document::Internal::add_posting(const string & tname, Xapian::termpos tpos,$/;"	f	class:Xapian::Document::Internal
add_posting	backends/glass/glass_inverter.h	/^	void add_posting(Xapian::docid did, Xapian::termcount wdf) {$/;"	f	class:Inverter::PostingChanges
add_posting	backends/glass/glass_inverter.h	/^    void add_posting(Xapian::docid did, const std::string & term,$/;"	f	class:Inverter
add_posting	backends/inmemory/inmemory_database.cc	/^InMemoryDoc::add_posting(const InMemoryTermEntry & post)$/;"	f	class:InMemoryDoc
add_posting	backends/inmemory/inmemory_database.cc	/^InMemoryTerm::add_posting(const InMemoryPosting & post)$/;"	f	class:InMemoryTerm
add_postlist	api/queryinternal.cc	/^    void add_postlist(PostList * pl) {$/;"	f	class:Xapian::Internal::Context
add_prefix	queryparser/queryparser.cc	/^QueryParser::add_prefix(const string &field, Xapian::FieldProcessor * proc)$/;"	f	class:QueryParser
add_prefix	queryparser/queryparser.cc	/^QueryParser::add_prefix(const string &field, const string &prefix)$/;"	f	class:QueryParser
add_prefix	queryparser/queryparser_internal.cc	/^QueryParser::Internal::add_prefix(const string &field, FieldProcessor *proc)$/;"	f	class:QueryParser::Internal
add_prefix	queryparser/queryparser_internal.cc	/^QueryParser::Internal::add_prefix(const string &field, const string &prefix)$/;"	f	class:QueryParser::Internal
add_rangeprocessor	queryparser/queryparser.cc	/^QueryParser::add_rangeprocessor(Xapian::RangeProcessor * range_proc,$/;"	f	class:QueryParser
add_s_to_b	languages/compiler/space.c	/^extern symbol * add_s_to_b(symbol * p, const char * s) {$/;"	f
add_source	api/compactor.cc	/^Compactor::add_source(const string & srcdir)$/;"	f	class:Xapian::Compactor
add_spelling	api/omdatabase.cc	/^WritableDatabase::add_spelling(const std::string & word,$/;"	f	class:Xapian::WritableDatabase
add_spelling	backends/chert/chert_database.cc	/^ChertWritableDatabase::add_spelling(const string & word,$/;"	f	class:ChertWritableDatabase
add_spelling	backends/database.cc	/^Database::Internal::add_spelling(const string &, Xapian::termcount) const$/;"	f	class:Xapian::Database::Internal
add_spelling	backends/glass/glass_database.cc	/^GlassWritableDatabase::add_spelling(const string & word,$/;"	f	class:GlassWritableDatabase
add_spelling	backends/remote/remote-database.cc	/^RemoteDatabase::add_spelling(const string & word,$/;"	f	class:RemoteDatabase
add_subquery	api/query.cc	/^Query::add_subquery(bool positional, const Xapian::Query & subquery)$/;"	f	class:Xapian::Query
add_subquery	api/queryinternal.cc	/^QueryAndLike::add_subquery(const Xapian::Query & subquery)$/;"	f	class:Xapian::Internal::QueryAndLike
add_subquery	api/queryinternal.cc	/^QueryAndMaybe::add_subquery(const Xapian::Query & subquery)$/;"	f	class:Xapian::Internal::QueryAndMaybe
add_subquery	api/queryinternal.cc	/^QueryAndNot::add_subquery(const Xapian::Query & subquery)$/;"	f	class:Xapian::Internal::QueryAndNot
add_subquery	api/queryinternal.cc	/^QueryOrLike::add_subquery(const Xapian::Query & subquery)$/;"	f	class:Xapian::Internal::QueryOrLike
add_subquery	include/xapian/query.h	/^    void add_subquery(bool positional, const Xapian::Query * subquery) {$/;"	f	class:Xapian::Query
add_subquery	include/xapian/query.h	/^    void add_subquery(bool, const std::string & subquery) {$/;"	f	class:Xapian::Query
add_synonym	api/omdatabase.cc	/^WritableDatabase::add_synonym(const std::string & term,$/;"	f	class:Xapian::WritableDatabase
add_synonym	backends/chert/chert_database.cc	/^ChertWritableDatabase::add_synonym(const string & term,$/;"	f	class:ChertWritableDatabase
add_synonym	backends/chert/chert_synonym.cc	/^ChertSynonymTable::add_synonym(const string & term, const string & synonym)$/;"	f	class:ChertSynonymTable
add_synonym	backends/database.cc	/^Database::Internal::add_synonym(const string &, const string &) const$/;"	f	class:Xapian::Database::Internal
add_synonym	backends/glass/glass_database.cc	/^GlassWritableDatabase::add_synonym(const string & term,$/;"	f	class:GlassWritableDatabase
add_synonym	backends/glass/glass_synonym.cc	/^GlassSynonymTable::add_synonym(const string & term, const string & synonym)$/;"	f	class:GlassSynonymTable
add_term	api/omdocument.cc	/^Document::add_term(const string & tname, Xapian::termcount wdfinc)$/;"	f	class:Xapian::Document
add_term	api/omdocument.cc	/^Xapian::Document::Internal::add_term(const string & tname, Xapian::termcount wdfinc)$/;"	f	class:Xapian::Document::Internal
add_term	queryparser/queryparser_internal.cc	/^    void add_term(Term * term) {$/;"	f	class:TermGroup
add_to_b	languages/compiler/space.c	/^extern symbol * add_to_b(symbol * p, int n, const symbol * q) {$/;"	f
add_to_query	queryparser/queryparser_internal.cc	/^add_to_query(Query *& q, Query::op op, Query * term)$/;"	f	file:
add_to_query	queryparser/queryparser_internal.cc	/^add_to_query(Query *& q, Query::op op, const Query & term)$/;"	f	file:
add_to_stoplist	queryparser/queryparser_internal.cc	/^    void add_to_stoplist(const Term * term) {$/;"	f	class:State
add_to_unstem	queryparser/queryparser_internal.cc	/^    void add_to_unstem(const string & term, const string & unstemmed) {$/;"	f	class:State
add_value	api/omdocument.cc	/^Document::add_value(Xapian::valueno slot, const string &value)$/;"	f	class:Xapian::Document
add_value	api/omdocument.cc	/^Xapian::Document::Internal::add_value(Xapian::valueno slot, const string &value)$/;"	f	class:Xapian::Document::Internal
add_value	backends/chert/chert_values.cc	/^ChertValueManager::add_value(Xapian::docid did, Xapian::valueno slot,$/;"	f	class:ChertValueManager
add_value	backends/glass/glass_values.cc	/^GlassValueManager::add_value(Xapian::docid did, Xapian::valueno slot,$/;"	f	class:GlassValueManager
add_value	include/xapian/keymaker.h	/^    void add_value(Xapian::valueno slot, bool reverse = false,$/;"	f	class:Xapian::MultiValueKeyMaker
add_value	include/xapian/valuesetmatchdecider.h	/^    void add_value(const std::string& value)$/;"	f	class:Xapian::ValueSetMatchDecider
add_values	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::add_values(Xapian::docid did,$/;"	f	class:InMemoryDatabase
add_word	backends/chert/chert_spelling.cc	/^ChertSpellingTable::add_word(const string & word, Xapian::termcount freqinc)$/;"	f	class:ChertSpellingTable
add_word	backends/glass/glass_spelling.cc	/^GlassSpellingTable::add_word(const string & word, Xapian::termcount freqinc)$/;"	f	class:GlassSpellingTable
adjust_window	queryparser/queryparser_internal.cc	/^    void adjust_window(size_t alternative_window) {$/;"	f	class:Terms
advance_to_next_match	matcher/andnotpostlist.cc	/^AndNotPostList::advance_to_next_match(double w_min, PostList *ret)$/;"	f	class:AndNotPostList
af	languages/finnish.cc	/^static const among_function af[2] =$/;"	v	file:
af	languages/indonesian.cc	/^static const among_function af[5] =$/;"	v	file:
af	languages/lovins.cc	/^static const among_function af[29] =$/;"	v	file:
af_1	languages/lovins.cc	/^static const unsigned char af_1[294] =$/;"	v	file:
af_2	languages/indonesian.cc	/^static const unsigned char af_2[3] =$/;"	v	file:
af_3	languages/indonesian.cc	/^static const unsigned char af_3[12] =$/;"	v	file:
af_4	languages/indonesian.cc	/^static const unsigned char af_4[6] =$/;"	v	file:
af_6	languages/finnish.cc	/^static const unsigned char af_6[30] =$/;"	v	file:
after_end	backends/chert/chert_cursor.h	/^	bool after_end() const { return is_after_end; }$/;"	f	class:ChertCursor
after_end	backends/glass/glass_cursor.h	/^	bool after_end() const { return is_after_end; }$/;"	f	class:GlassCursor
aix_post_process_depfile	depcomp	/^aix_post_process_depfile ()$/;"	f
alias	queryparser/lemon.c	/^  const char *alias[MAXRHS]; \/* Aliases for each RHS symbol (or NULL) *\/$/;"	m	struct:pstate	file:
aligned_read2	common/wordaccess.h	/^aligned_read2(const unsigned char *ptr)$/;"	f
aligned_read4	common/wordaccess.h	/^aligned_read4(const unsigned char *ptr)$/;"	f
aligned_write2	common/wordaccess.h	/^aligned_write2(unsigned char *ptr, T value)$/;"	f
aligned_write4	common/wordaccess.h	/^aligned_write4(unsigned char *ptr, T value)$/;"	f
alignment_cast	common/alignment_cast.h	/^alignment_cast(U ptr)$/;"	f
alive	tests/unittest.cc	/^    bool & alive;$/;"	m	class:B	file:
allocate_plist_and_max_wt	matcher/multiandpostlist.cc	/^MultiAndPostList::allocate_plist_and_max_wt()$/;"	f	class:MultiAndPostList
allterms_begin	api/omdatabase.cc	/^Database::allterms_begin(const std::string & prefix) const$/;"	f	class:Xapian::Database
allterms_end	include/xapian/database.h	/^	TermIterator XAPIAN_NOTHROW(allterms_end(const std::string & = std::string()) const) {$/;"	f	class:Xapian::Database
already_handled	include/xapian/error.h	/^    bool already_handled;$/;"	m	class:Xapian::Error
alter	backends/chert/chert_table.cc	/^ChertTable::alter()$/;"	f	class:ChertTable
alter	backends/glass/glass_table.cc	/^GlassTable::alter()$/;"	f	class:GlassTable
alter_grouping	languages/compiler/analyser.c	/^static symbol * alter_grouping(symbol * p, symbol * q, int style, int utf8) {$/;"	f	file:
am__CONFIG_DISTCLEAN_FILES	Makefile	/^am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\$/;"	m
am__DEPENDENCIES_1	Makefile	/^am__DEPENDENCIES_1 =$/;"	m
am__DEPENDENCIES_1	tests/Makefile	/^am__DEPENDENCIES_1 =$/;"	m
am__DIST_COMMON	Makefile	/^am__DIST_COMMON = $(dist_man_MANS) $(srcdir)\/Makefile.in \\$/;"	m
am__DIST_COMMON	docs/Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/docsource.mk \\$/;"	m
am__DIST_COMMON	tests/Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/harness\/Makefile.mk \\$/;"	m
am__EXEEXT_1	Makefile	/^am__EXEEXT_1 =  \\$/;"	m
am__EXEEXT_2	Makefile	/^am__EXEEXT_2 = bin\/xapian-progsrv$(EXEEXT) \\$/;"	m
am__EXEEXT_3	Makefile	/^am__EXEEXT_3 = bin\/xapian-inspect$(EXEEXT)$/;"	m
am__aclocal_m4_deps	Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_cxx_compile_stdcxx_11.m4 \\$/;"	m
am__aclocal_m4_deps	docs/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_cxx_compile_stdcxx_11.m4 \\$/;"	m
am__aclocal_m4_deps	tests/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_cxx_compile_stdcxx_11.m4 \\$/;"	m
am__apitest_SOURCES_DIST	tests/Makefile	/^am__apitest_SOURCES_DIST = apitest.cc dbcheck.cc api_anydb.cc \\$/;"	m
am__append_11	Makefile	/^am__append_11 = \\$/;"	m
am__append_12	Makefile	/^am__append_12 = \\$/;"	m
am__append_13	Makefile	/^am__append_13 = \\$/;"	m
am__append_14	Makefile	/^am__append_14 = \\$/;"	m
am__append_15	Makefile	/^am__append_15 = \\$/;"	m
am__append_16	Makefile	/^am__append_16 = \\$/;"	m
am__append_17	Makefile	/^am__append_17 = \\$/;"	m
am__append_18	Makefile	/^am__append_18 = \\$/;"	m
am__append_2	Makefile	/^am__append_2 = \\$/;"	m
am__append_2	tests/Makefile	/^am__append_2 = harness\/backendmanager_chert.cc$/;"	m
am__append_20	Makefile	/^am__append_20 = \\$/;"	m
am__append_21	Makefile	/^am__append_21 = \\$/;"	m
am__append_22	Makefile	/^am__append_22 = \\$/;"	m
am__append_25	Makefile	/^am__append_25 = \\$/;"	m
am__append_26	Makefile	/^am__append_26 = \\$/;"	m
am__append_28	Makefile	/^am__append_28 = $(dist_man_MANS)$/;"	m
am__append_3	Makefile	/^am__append_3 = \\$/;"	m
am__append_3	tests/Makefile	/^am__append_3 = \\$/;"	m
am__append_4	Makefile	/^am__append_4 = \\$/;"	m
am__append_4	tests/Makefile	/^am__append_4 = harness\/backendmanager_inmemory.cc$/;"	m
am__append_5	Makefile	/^am__append_5 = \\$/;"	m
am__append_5	tests/Makefile	/^am__append_5 = \\$/;"	m
am__append_6	Makefile	/^am__append_6 = \\$/;"	m
am__append_7	Makefile	/^am__append_7 = \\$/;"	m
am__append_8	Makefile	/^am__append_8 = \\$/;"	m
am__append_9	Makefile	/^am__append_9 = \\$/;"	m
am__base_list	Makefile	/^am__base_list = \\$/;"	m
am__base_list	docs/Makefile	/^am__base_list = \\$/;"	m
am__can_run_installinfo	Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	docs/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	tests/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__cd	Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	docs/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	tests/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__configure_deps	Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	docs/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	tests/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__define_uniq_tagged_files	Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	tests/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__depfiles_maybe	Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	tests/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__dirstamp	Makefile	/^am__dirstamp = $(am__leading_dot)dirstamp$/;"	m
am__dirstamp	tests/Makefile	/^am__dirstamp = $(am__leading_dot)dirstamp$/;"	m
am__distuninstallcheck_listfiles	Makefile	/^am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \\$/;"	m
am__include	Makefile	/^am__include = include$/;"	m
am__include	docs/Makefile	/^am__include = include$/;"	m
am__include	tests/Makefile	/^am__include = include$/;"	m
am__install_max	Makefile	/^am__install_max = 40$/;"	m
am__install_max	docs/Makefile	/^am__install_max = 40$/;"	m
am__installdirs	Makefile	/^am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \\$/;"	m
am__installdirs	docs/Makefile	/^am__installdirs = "$(DESTDIR)$(docdir)"$/;"	m
am__internaltest_SOURCES_DIST	tests/Makefile	/^am__internaltest_SOURCES_DIST = internaltest.cc \\$/;"	m
am__is_gnu_make	Makefile	/^am__is_gnu_make = { \\$/;"	m
am__is_gnu_make	docs/Makefile	/^am__is_gnu_make = { \\$/;"	m
am__is_gnu_make	tests/Makefile	/^am__is_gnu_make = { \\$/;"	m
am__leading_dot	Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	docs/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	tests/Makefile	/^am__leading_dot = .$/;"	m
am__libxapian_la_SOURCES_DIST	Makefile	/^am__libxapian_la_SOURCES_DIST = api\/compactor.cc api\/constinfo.cc \\$/;"	m
am__make_dryrun	Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	docs/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	tests/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	docs/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	tests/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_running_with_option	Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	docs/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	tests/Makefile	/^am__make_running_with_option = \\$/;"	m
am__mv	Makefile	/^am__mv = mv -f$/;"	m
am__mv	tests/Makefile	/^am__mv = mv -f$/;"	m
am__nobase_list	Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	docs/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_strip	Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	docs/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip_setup	Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	docs/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__noinst_HEADERS_DIST	Makefile	/^am__noinst_HEADERS_DIST = api\/documentterm.h api\/documentvaluelist.h \\$/;"	m
am__objects_1	Makefile	/^am__objects_1 = api\/replication.lo$/;"	m
am__objects_1	tests/Makefile	/^am__objects_1 = api_anydb.$(OBJEXT) api_backend.$(OBJEXT) \\$/;"	m
am__objects_11	Makefile	/^am__objects_11 =  \\$/;"	m
am__objects_12	Makefile	/^am__objects_12 = common\/compression_stream.lo$/;"	m
am__objects_13	Makefile	/^am__objects_13 = languages\/arabic.lo languages\/armenian.lo \\$/;"	m
am__objects_14	Makefile	/^am__objects_14 =$/;"	m
am__objects_15	Makefile	/^am__objects_15 = $(am__objects_13) $(am__objects_14)$/;"	m
am__objects_16	Makefile	/^am__objects_16 = matcher\/remotesubmatch.lo$/;"	m
am__objects_17	Makefile	/^am__objects_17 = net\/progclient.lo \\$/;"	m
am__objects_18	Makefile	/^am__objects_18 = api\/compactor.lo api\/constinfo.lo \\$/;"	m
am__objects_2	Makefile	/^am__objects_2 =  \\$/;"	m
am__objects_2	tests/Makefile	/^am__objects_2 = harness\/backendmanager_chert.$(OBJEXT)$/;"	m
am__objects_3	Makefile	/^am__objects_3 = backends\/contiguousalldocspostlist.lo \\$/;"	m
am__objects_3	tests/Makefile	/^am__objects_3 = harness\/backendmanager_glass.$(OBJEXT) \\$/;"	m
am__objects_4	tests/Makefile	/^am__objects_4 = harness\/backendmanager_inmemory.$(OBJEXT)$/;"	m
am__objects_5	Makefile	/^am__objects_5 = backends\/chert\/chert_alldocsmodifiedpostlist.lo \\$/;"	m
am__objects_5	tests/Makefile	/^am__objects_5 = harness\/backendmanager_remote.$(OBJEXT) \\$/;"	m
am__objects_6	Makefile	/^am__objects_6 = backends\/chert\/chert_databasereplicator.lo$/;"	m
am__objects_6	tests/Makefile	/^am__objects_6 = ..\/common\/errno_to_string.$(OBJEXT) \\$/;"	m
am__objects_7	Makefile	/^am__objects_7 = backends\/glass\/glass_alldocspostlist.lo \\$/;"	m
am__objects_7	tests/Makefile	/^am__objects_7 = perftest\/perftest_matchdecider.$(OBJEXT) \\$/;"	m
am__objects_8	Makefile	/^am__objects_8 = backends\/glass\/glass_databasereplicator.lo$/;"	m
am__objects_8	tests/Makefile	/^am__objects_8 = soaktest\/soaktest_queries.$(OBJEXT)$/;"	m
am__objects_9	Makefile	/^am__objects_9 = backends\/inmemory\/inmemory_alltermslist.lo \\$/;"	m
am__objects_9	tests/Makefile	/^am__objects_9 = harness\/fdtracker.$(OBJEXT) \\$/;"	m
am__perftest_perftest_SOURCES_DIST	tests/Makefile	/^am__perftest_perftest_SOURCES_DIST = perftest\/perftest.cc \\$/;"	m
am__post_remove_distdir	Makefile	/^am__post_remove_distdir = $(am__remove_distdir)$/;"	m
am__quote	Makefile	/^am__quote = $/;"	m
am__quote	docs/Makefile	/^am__quote = $/;"	m
am__quote	tests/Makefile	/^am__quote = $/;"	m
am__recursive_targets	Makefile	/^am__recursive_targets = \\$/;"	m
am__relativize	Makefile	/^am__relativize = \\$/;"	m
am__remove_distdir	Makefile	/^am__remove_distdir = \\$/;"	m
am__soaktest_soaktest_SOURCES_DIST	tests/Makefile	/^am__soaktest_soaktest_SOURCES_DIST = soaktest\/soaktest.cc \\$/;"	m
am__stemtest_SOURCES_DIST	tests/Makefile	/^am__stemtest_SOURCES_DIST = stemtest.cc ..\/common\/errno_to_string.cc \\$/;"	m
am__strip_dir	Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	docs/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__tagged_files	Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \\$/;"	m
am__tagged_files	docs/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	tests/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tar	Makefile	/^am__tar = tar --format=ustar -chf - "$$tardir"$/;"	m
am__tar	docs/Makefile	/^am__tar = tar --format=ustar -chf - "$$tardir"$/;"	m
am__tar	tests/Makefile	/^am__tar = tar --format=ustar -chf - "$$tardir"$/;"	m
am__tty_colors	tests/Makefile	/^am__tty_colors = { \\$/;"	m
am__tty_colors_dummy	tests/Makefile	/^am__tty_colors_dummy = \\$/;"	m
am__uninstall_files_from_dir	Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	docs/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uniquify_input	Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	tests/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__untar	Makefile	/^am__untar = tar -xf -$/;"	m
am__untar	docs/Makefile	/^am__untar = tar -xf -$/;"	m
am__untar	tests/Makefile	/^am__untar = tar -xf -$/;"	m
am__v_CCLD_	Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_	tests/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_0	Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_0	tests/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_1	Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CCLD_1	tests/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CC_	Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_	tests/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_0	Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_0	tests/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_1	Makefile	/^am__v_CC_1 = $/;"	m
am__v_CC_1	tests/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CXXLD_	Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	tests/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_0	Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_0	tests/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_1	Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXXLD_1	tests/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXX_	Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	tests/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_0	Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_0	tests/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_1	Makefile	/^am__v_CXX_1 = $/;"	m
am__v_CXX_1	tests/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_GEN_	Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	docs/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	tests/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_0	Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	docs/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	tests/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_1	Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	docs/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	tests/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_P_	Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	docs/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	tests/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_0	Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	docs/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	tests/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_1	Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	docs/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	tests/Makefile	/^am__v_P_1 = :$/;"	m
am__v_at_	Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	docs/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	tests/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_0	Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	docs/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	tests/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_1	Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	docs/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	tests/Makefile	/^am__v_at_1 = $/;"	m
am__v_lt_	Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_	tests/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_0	Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_0	tests/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_1	Makefile	/^am__v_lt_1 = $/;"	m
am__v_lt_1	tests/Makefile	/^am__v_lt_1 = $/;"	m
am__vpath_adj	Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	docs/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj_setup	Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	docs/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am_apitest_OBJECTS	tests/Makefile	/^am_apitest_OBJECTS = apitest.$(OBJEXT) dbcheck.$(OBJEXT) \\$/;"	m
am_bin_xapian_check_OBJECTS	Makefile	/^am_bin_xapian_check_OBJECTS = bin\/xapian-check.$(OBJEXT)$/;"	m
am_bin_xapian_compact_OBJECTS	Makefile	/^am_bin_xapian_compact_OBJECTS = bin\/xapian-compact.$(OBJEXT)$/;"	m
am_bin_xapian_delve_OBJECTS	Makefile	/^am_bin_xapian_delve_OBJECTS = bin\/xapian-delve.$(OBJEXT)$/;"	m
am_bin_xapian_inspect_OBJECTS	Makefile	/^am_bin_xapian_inspect_OBJECTS =  \\$/;"	m
am_bin_xapian_progsrv_OBJECTS	Makefile	/^am_bin_xapian_progsrv_OBJECTS = bin\/xapian-progsrv.$(OBJEXT)$/;"	m
am_bin_xapian_replicate_OBJECTS	Makefile	/^am_bin_xapian_replicate_OBJECTS = bin\/xapian-replicate.$(OBJEXT)$/;"	m
am_bin_xapian_replicate_server_OBJECTS	Makefile	/^am_bin_xapian_replicate_server_OBJECTS =  \\$/;"	m
am_bin_xapian_tcpsrv_OBJECTS	Makefile	/^am_bin_xapian_tcpsrv_OBJECTS = bin\/xapian-tcpsrv.$(OBJEXT)$/;"	m
am_examples_copydatabase_OBJECTS	Makefile	/^am_examples_copydatabase_OBJECTS = examples\/copydatabase.$(OBJEXT)$/;"	m
am_examples_quest_OBJECTS	Makefile	/^am_examples_quest_OBJECTS = examples\/quest.$(OBJEXT)$/;"	m
am_examples_simpleexpand_OBJECTS	Makefile	/^am_examples_simpleexpand_OBJECTS = examples\/simpleexpand.$(OBJEXT)$/;"	m
am_examples_simpleindex_OBJECTS	Makefile	/^am_examples_simpleindex_OBJECTS = examples\/simpleindex.$(OBJEXT)$/;"	m
am_examples_simplesearch_OBJECTS	Makefile	/^am_examples_simplesearch_OBJECTS = examples\/simplesearch.$(OBJEXT)$/;"	m
am_examples_xapian_metadata_OBJECTS	Makefile	/^am_examples_xapian_metadata_OBJECTS =  \\$/;"	m
am_examples_xapian_pos_OBJECTS	Makefile	/^am_examples_xapian_pos_OBJECTS = examples\/xapian-pos.$(OBJEXT)$/;"	m
am_internaltest_OBJECTS	tests/Makefile	/^am_internaltest_OBJECTS = internaltest.$(OBJEXT) $(am__objects_6)$/;"	m
am_libgetopt_la_OBJECTS	Makefile	/^am_libgetopt_la_OBJECTS = common\/getopt.lo$/;"	m
am_libxapian_la_OBJECTS	Makefile	/^am_libxapian_la_OBJECTS = $(am__objects_18)$/;"	m
am_perftest_perftest_OBJECTS	tests/Makefile	/^am_perftest_perftest_OBJECTS = perftest\/perftest.$(OBJEXT) \\$/;"	m
am_soaktest_soaktest_OBJECTS	tests/Makefile	/^am_soaktest_soaktest_OBJECTS = soaktest\/soaktest.$(OBJEXT) \\$/;"	m
am_stemtest_OBJECTS	tests/Makefile	/^am_stemtest_OBJECTS = stemtest.$(OBJEXT) $(am__objects_6)$/;"	m
am_unittest_OBJECTS	tests/Makefile	/^am_unittest_OBJECTS = unittest.$(OBJEXT) $(am__objects_9)$/;"	m
among	languages/compiler/header.h	/^    struct among * among;  \/* used in among *\/$/;"	m	struct:node	typeref:struct:node::among
among	languages/compiler/header.h	/^struct among {$/;"	s
among	languages/steminternal.h	/^struct among {$/;"	s
among_class	languages/compiler/header.h	/^    const char * among_class;$/;"	m	struct:options
among_count	languages/compiler/header.h	/^    int among_count;$/;"	m	struct:analyser
among_func_count	languages/compiler/header.h	/^    int among_func_count;       \/* 1, 2, 3 for routines called by among *\/$/;"	m	struct:name
among_function	languages/steminternal.h	/^typedef int (*among_function)(Xapian::StemImplementation *);$/;"	t
amongs	languages/compiler/header.h	/^    struct among * amongs;$/;"	m	struct:analyser	typeref:struct:analyser::among
amongs_end	languages/compiler/header.h	/^    struct among * amongs_end;$/;"	m	struct:analyser	typeref:struct:analyser::among
amongvar_needed	languages/compiler/header.h	/^    int amongvar_needed;      \/* do we need to set among_var? *\/$/;"	m	struct:among
amongvar_needed	languages/compiler/header.h	/^    int amongvar_needed;      \/* used in reading routine definitions *\/$/;"	m	struct:analyser
amongvar_needed	languages/compiler/header.h	/^    int amongvar_needed;   \/* used in routine definitions *\/$/;"	m	struct:node
amongvec	languages/compiler/header.h	/^struct amongvec {$/;"	s
analyser	languages/compiler/header.h	/^    struct analyser * analyser;$/;"	m	struct:generator	typeref:struct:generator::analyser
analyser	languages/compiler/header.h	/^struct analyser {$/;"	s
analyser_modes	languages/compiler/header.h	/^enum analyser_modes {$/;"	g
ap	queryparser/lemon.c	/^  struct action *ap;       \/* List of actions for this state *\/$/;"	m	struct:state	typeref:struct:state::action	file:
apitest_DEPENDENCIES	tests/Makefile	/^apitest_DEPENDENCIES = ..\/libgetopt.la ..\/$(libxapian_la)$/;"	m
apitest_LDADD	tests/Makefile	/^apitest_LDADD = ..\/libgetopt.la ..\/$(libxapian_la)$/;"	m
apitest_LDFLAGS	tests/Makefile	/^apitest_LDFLAGS = $(NO_INSTALL) $(ldflags)$/;"	m
apitest_LINK	tests/Makefile	/^apitest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
apitest_OBJECTS	tests/Makefile	/^apitest_OBJECTS = $(am_apitest_OBJECTS)$/;"	m
apitest_SOURCES	tests/Makefile	/^apitest_SOURCES = apitest.cc dbcheck.cc $(collated_apitest_sources) \\$/;"	m
append	backends/chert/chert_postlist.cc	/^PostlistChunkWriter::append(ChertTable * table, Xapian::docid did,$/;"	f	class:PostlistChunkWriter
append	backends/glass/glass_postlist.cc	/^PostlistChunkWriter::append(GlassTable * table, Xapian::docid did,$/;"	f	class:PostlistChunkWriter
append	backends/prefix_compressed_strings.h	/^    void append(const std::string & word) {$/;"	f	class:PrefixCompressedStringWriter
append	common/Tokeniseise.pm	/^sub append {$/;"	s
append	include/xapian/geospatial.h	/^    void append(const LatLongCoord & coord)$/;"	f	class:Xapian::LatLongCoords
append_chunk	backends/chert/chert_table.h	/^    void append_chunk(std::string * tag) const {$/;"	f	class:Item_base
append_chunk	backends/glass/glass_table.h	/^    void append_chunk(std::string * tag) const {$/;"	f	class:Glass::LeafItem_base
append_docweight	tests/api_percentages.cc	/^    void append_docweight(Xapian::docid did, double wt) {$/;"	f	class:MyPostingSource
append_escaping_xml	queryparser/termgenerator_internal.cc	/^append_escaping_xml(const char* p, const char* end, string& output)$/;"	f	namespace:Xapian
append_filename_argument	common/append_filename_arg.h	/^append_filename_argument(std::string & cmd, const std::string & arg) {$/;"	f
append_filter	queryparser/queryparser_internal.cc	/^    void append_filter(const string& grouping, const Query & qnew) {$/;"	f	struct:ProbQuery
append_filter_range	queryparser/queryparser_internal.cc	/^    void append_filter_range(const string& grouping, const Query & range) {$/;"	f	struct:ProbQuery
append_position	api/documentterm.h	/^    void append_position(Xapian::termpos termpos) {$/;"	f	class:OmDocumentTerm
append_posting	backends/remote/net_postlist.h	/^    void append_posting(const string & serialised) {$/;"	f	class:NetworkPostList
append_str	queryparser/lemon.c	/^PRIVATE char *append_str(const char *zText, int n, int p1, int p2){$/;"	f
append_to_stream	backends/chert/chert_values.cc	/^    void append_to_stream(Xapian::docid did, const string & value) {$/;"	f	class:ValueUpdater	file:
append_to_stream	backends/glass/glass_values.cc	/^    void append_to_stream(Xapian::docid did, const string & value) {$/;"	f	class:Glass::ValueUpdater	file:
append_utf8	include/xapian/unicode.h	/^inline void append_utf8(std::string &s, unsigned ch) {$/;"	f	namespace:Xapian::Unicode
apply	backends/chert/chert_database.cc	/^ChertDatabase::apply()$/;"	f	class:ChertDatabase
apply	backends/chert/chert_database.cc	/^ChertWritableDatabase::apply()$/;"	f	class:ChertWritableDatabase
apply	backends/glass/glass_database.cc	/^GlassDatabase::apply()$/;"	f	class:GlassDatabase
apply	backends/glass/glass_database.cc	/^GlassWritableDatabase::apply()$/;"	f	class:GlassWritableDatabase
apply_changeset	tests/api_replicate.cc	/^apply_changeset(const string & changesetpath,$/;"	f	file:
apply_changeset_from_conn	backends/chert/chert_databasereplicator.cc	/^ChertDatabaseReplicator::apply_changeset_from_conn(RemoteConnection & conn,$/;"	f	class:ChertDatabaseReplicator
apply_changeset_from_conn	backends/glass/glass_databasereplicator.cc	/^GlassDatabaseReplicator::apply_changeset_from_conn(RemoteConnection & conn,$/;"	f	class:GlassDatabaseReplicator
apply_db_copy	api/replication.cc	/^DatabaseReplica::Internal::apply_db_copy(double end_time)$/;"	f	class:DatabaseReplica::Internal
apply_next_changeset	api/replication.cc	/^DatabaseReplica::Internal::apply_next_changeset(ReplicationInfo * info,$/;"	f	class:DatabaseReplica::Internal
apply_next_changeset	api/replication.cc	/^DatabaseReplica::apply_next_changeset(ReplicationInfo * info,$/;"	f	class:DatabaseReplica
arg	queryparser/lemon.c	/^  char *arg;               \/* Declaration of the 3th argument to parser *\/$/;"	m	struct:lemon	file:
arg	queryparser/lemon.c	/^  void *arg;$/;"	m	struct:s_options	file:
argindex	queryparser/lemon.c	/^static int argindex(int n)$/;"	f	file:
argv	queryparser/lemon.c	/^static char **argv;$/;"	v	file:
argv0	queryparser/lemon.c	/^  char *argv0;             \/* Name of the program *\/$/;"	m	struct:lemon	file:
argv0	tests/harness/testsuite.cc	/^string test_driver::argv0;$/;"	m	class:test_driver	file:
argv0	tests/harness/testsuite.h	/^	static std::string argv0;$/;"	m	class:test_driver
as_adj_query	queryparser/queryparser_internal.cc	/^    Query * as_adj_query() const {$/;"	f	class:Terms
as_cjk_query	queryparser/queryparser_internal.cc	/^Term::as_cjk_query() const$/;"	f	class:Term
as_fn_append	config.status	/^  as_fn_append ()$/;"	f
as_fn_append	configure	/^  as_fn_append ()$/;"	f
as_fn_arith	config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	configure	/^  as_fn_arith ()$/;"	f
as_fn_error	config.status	/^as_fn_error ()$/;"	f
as_fn_error	configure	/^as_fn_error ()$/;"	f
as_fn_executable_p	config.status	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	configure	/^as_fn_executable_p ()$/;"	f
as_fn_exit	config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	configure	/^as_fn_exit ()$/;"	f
as_fn_failure	configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	configure	/^as_fn_set_status ()$/;"	f
as_fn_success	configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	configure	/^as_fn_unset ()$/;"	f
as_group	queryparser/queryparser_internal.cc	/^TermGroup::as_group(State *state) const$/;"	f	class:TermGroup
as_near_query	queryparser/queryparser_internal.cc	/^    Query * as_near_query() const {$/;"	f	class:Terms
as_opwindow_query	queryparser/queryparser_internal.cc	/^    Query * as_opwindow_query(Query::op op, Xapian::termcount w_delta) const {$/;"	f	class:Terms	file:
as_partial_query	queryparser/queryparser_internal.cc	/^Term::as_partial_query(State * state_) const$/;"	f	class:Term
as_phrase_query	queryparser/queryparser_internal.cc	/^    Query * as_phrase_query() const {$/;"	f	class:Terms
as_positional_cjk_term	queryparser/queryparser_internal.cc	/^Term::as_positional_cjk_term(Terms * terms) const$/;"	f	class:Term
as_range_query	queryparser/queryparser_internal.cc	/^Term::as_range_query() const$/;"	f	class:Term
as_wildcarded_query	queryparser/queryparser_internal.cc	/^Term::as_wildcarded_query(State * state_) const$/;"	f	class:Term
assign	backends/chert/chert_values.cc	/^ValueChunkReader::assign(const char * p_, size_t len, Xapian::docid did_)$/;"	f	class:ValueChunkReader
assign	backends/glass/glass_values.cc	/^ValueChunkReader::assign(const char * p_, size_t len, Xapian::docid did_)$/;"	f	class:ValueChunkReader
assign	backends/uuids.h	/^    void assign(const char* p) { std::memcpy(uuid_data, p, BINARY_SIZE); }$/;"	f	class:Uuid
assign	include/xapian/unicode.h	/^    void assign(const char *p_, size_t len) {$/;"	f	class:Xapian::Utf8Iterator
assign	include/xapian/unicode.h	/^    void assign(const std::string &s) { assign(s.data(), s.size()); }$/;"	f	class:Xapian::Utf8Iterator
assign_to	languages/steminternal.cc	/^symbol * SnowballStemImplementation::assign_to(symbol * v) {$/;"	f	class:Xapian::SnowballStemImplementation
assoc	queryparser/lemon.c	/^  enum e_assoc assoc;      \/* Associativity if precedence is defined *\/$/;"	m	struct:symbol	typeref:enum:symbol::e_assoc	file:
at_end	api/documentvaluelist.cc	/^DocumentValueList::at_end() const$/;"	f	class:DocumentValueList
at_end	api/emptypostlist.cc	/^EmptyPostList::at_end() const$/;"	f	class:EmptyPostList
at_end	api/maptermlist.h	/^	bool at_end() const {$/;"	f	class:MapTermList
at_end	api/matchspy.cc	/^    bool at_end() const {$/;"	f	class:StringAndFreqTermList
at_end	api/matchspy.cc	/^    bool at_end() const {$/;"	f	class:ValueCountTermList
at_end	api/postingsource.cc	/^FixedWeightPostingSource::at_end() const$/;"	f	class:Xapian::FixedWeightPostingSource
at_end	api/postingsource.cc	/^ValuePostingSource::at_end() const$/;"	f	class:Xapian::ValuePostingSource
at_end	api/vectortermlist.cc	/^VectorTermList::at_end() const$/;"	f	class:VectorTermList
at_end	backends/byte_length_strings.h	/^    bool at_end() const {$/;"	f	class:ByteLengthPrefixedStringItor
at_end	backends/chert/chert_alldocsmodifiedpostlist.cc	/^ChertAllDocsModifiedPostList::at_end() const$/;"	f	class:ChertAllDocsModifiedPostList
at_end	backends/chert/chert_alltermslist.cc	/^ChertAllTermsList::at_end() const$/;"	f	class:ChertAllTermsList
at_end	backends/chert/chert_metadata.cc	/^ChertMetadataTermList::at_end() const$/;"	f	class:ChertMetadataTermList
at_end	backends/chert/chert_modifiedpostlist.cc	/^ChertModifiedPostList::at_end() const {$/;"	f	class:ChertModifiedPostList
at_end	backends/chert/chert_postlist.cc	/^    bool at_end;$/;"	m	class:Chert::PostlistChunkReader	file:
at_end	backends/chert/chert_postlist.h	/^	bool at_end() const { return is_at_end; }$/;"	f	class:ChertPostList
at_end	backends/chert/chert_spelling.cc	/^ChertSpellingTermList::at_end() const$/;"	f	class:ChertSpellingTermList
at_end	backends/chert/chert_spellingwordslist.cc	/^ChertSpellingWordsList::at_end() const$/;"	f	class:ChertSpellingWordsList
at_end	backends/chert/chert_synonym.cc	/^ChertSynonymTermList::at_end() const$/;"	f	class:ChertSynonymTermList
at_end	backends/chert/chert_termlist.cc	/^ChertTermList::at_end() const$/;"	f	class:ChertTermList
at_end	backends/chert/chert_valuelist.cc	/^ChertValueList::at_end() const$/;"	f	class:ChertValueList
at_end	backends/chert/chert_values.h	/^    bool at_end() const { return p == NULL; }$/;"	f	class:ValueChunkReader
at_end	backends/contiguousalldocspostlist.cc	/^ContiguousAllDocsPostList::at_end() const$/;"	f	class:ContiguousAllDocsPostList
at_end	backends/glass/glass_alltermslist.cc	/^GlassAllTermsList::at_end() const$/;"	f	class:GlassAllTermsList
at_end	backends/glass/glass_metadata.cc	/^GlassMetadataTermList::at_end() const$/;"	f	class:GlassMetadataTermList
at_end	backends/glass/glass_postlist.cc	/^    bool at_end;$/;"	m	class:Glass::PostlistChunkReader	file:
at_end	backends/glass/glass_postlist.h	/^	bool at_end() const { return is_at_end; }$/;"	f	class:GlassPostList
at_end	backends/glass/glass_spelling.cc	/^GlassSpellingTermList::at_end() const$/;"	f	class:GlassSpellingTermList
at_end	backends/glass/glass_spellingwordslist.cc	/^GlassSpellingWordsList::at_end() const$/;"	f	class:GlassSpellingWordsList
at_end	backends/glass/glass_synonym.cc	/^GlassSynonymTermList::at_end() const$/;"	f	class:GlassSynonymTermList
at_end	backends/glass/glass_termlist.cc	/^GlassTermList::at_end() const$/;"	f	class:GlassTermList
at_end	backends/glass/glass_valuelist.cc	/^GlassValueList::at_end() const$/;"	f	class:GlassValueList
at_end	backends/glass/glass_values.h	/^    bool at_end() const { return p == NULL; }$/;"	f	class:Glass::ValueChunkReader
at_end	backends/inmemory/inmemory_alltermslist.cc	/^bool InMemoryAllTermsList::at_end() const {$/;"	f	class:InMemoryAllTermsList
at_end	backends/inmemory/inmemory_database.cc	/^InMemoryAllDocsPostList::at_end() const$/;"	f	class:InMemoryAllDocsPostList
at_end	backends/inmemory/inmemory_database.cc	/^InMemoryPostList::at_end() const$/;"	f	class:InMemoryPostList
at_end	backends/inmemory/inmemory_database.cc	/^InMemoryTermList::at_end() const$/;"	f	class:InMemoryTermList
at_end	backends/multi/multi_alltermslist.cc	/^MultiAllTermsList::at_end() const$/;"	f	class:MultiAllTermsList
at_end	backends/multi/multi_postlist.cc	/^MultiPostList::at_end() const$/;"	f	class:MultiPostList
at_end	backends/multi/multi_termlist.cc	/^bool MultiTermList::at_end() const$/;"	f	class:MultiTermList
at_end	backends/multi/multi_valuelist.cc	/^    bool at_end() const { return valuelist->at_end(); }$/;"	f	struct:SubValueList
at_end	backends/multi/multi_valuelist.cc	/^MultiValueList::at_end() const$/;"	f	class:MultiValueList
at_end	backends/prefix_compressed_strings.h	/^    bool at_end() const {$/;"	f	class:PrefixCompressedStringItor
at_end	backends/remote/net_postlist.cc	/^NetworkPostList::at_end() const$/;"	f	class:NetworkPostList
at_end	backends/remote/net_termlist.cc	/^NetworkTermList::at_end() const$/;"	f	class:NetworkTermList
at_end	backends/slowvaluelist.cc	/^SlowValueList::at_end() const$/;"	f	class:SlowValueList
at_end	expand/ortermlist.cc	/^OrTermList::at_end() const$/;"	f	class:OrTermList
at_end	matcher/andmaybepostlist.cc	/^AndMaybePostList::at_end() const$/;"	f	class:AndMaybePostList
at_end	matcher/andnotpostlist.cc	/^AndNotPostList::at_end() const$/;"	f	class:AndNotPostList
at_end	matcher/externalpostlist.cc	/^ExternalPostList::at_end() const$/;"	f	class:ExternalPostList
at_end	matcher/extraweightpostlist.h	/^	bool at_end() const { return pl->at_end(); }$/;"	f	class:ExtraWeightPostList
at_end	matcher/maxpostlist.cc	/^MaxPostList::at_end() const$/;"	f	class:MaxPostList
at_end	matcher/mergepostlist.cc	/^MergePostList::at_end() const$/;"	f	class:MergePostList
at_end	matcher/msetpostlist.cc	/^MSetPostList::at_end() const$/;"	f	class:MSetPostList
at_end	matcher/multiandpostlist.cc	/^MultiAndPostList::at_end() const$/;"	f	class:MultiAndPostList
at_end	matcher/multixorpostlist.cc	/^MultiXorPostList::at_end() const$/;"	f	class:MultiXorPostList
at_end	matcher/orpospostlist.cc	/^OrPosPostList::at_end() const$/;"	f	class:OrPosPostList
at_end	matcher/orpostlist.cc	/^OrPostList::at_end() const$/;"	f	class:OrPostList
at_end	matcher/selectpostlist.h	/^	bool at_end() const { return source->at_end(); }$/;"	f	class:SelectPostList
at_end	matcher/synonympostlist.cc	/^SynonymPostList::at_end() const {$/;"	f	class:SynonymPostList
at_end	matcher/valuerangepostlist.cc	/^ValueRangePostList::at_end() const$/;"	f	class:ValueRangePostList
at_end	tests/api_percentages.cc	/^    bool at_end() const {$/;"	f	class:MyPostingSource
at_end	tests/api_postingsource.cc	/^    bool at_end() const { return did >= 5; }$/;"	f	class:ChangeMaxweightPostingSource
at_end	tests/api_postingsource.cc	/^    bool at_end() const {$/;"	f	class:CloneTestPostingSource
at_end	tests/api_postingsource.cc	/^    bool at_end() const {$/;"	f	class:MyDontAskWeightPostingSource
at_end	tests/api_postingsource.cc	/^    bool at_end() const {$/;"	f	class:MyOddPostingSource
at_end	tests/api_postingsource.cc	/^    bool at_end() const {$/;"	f	class:MyOddWeightingPostingSource
at_end	tests/api_serialise.cc	/^    bool at_end() const { return true; }$/;"	f	class:ExceptionalPostingSource
atl1	tests/api_closedb.cc	/^    Xapian::TermIterator atl1;$/;"	m	struct:closedb1_iterators	file:
atlend	tests/api_closedb.cc	/^    Xapian::TermIterator atlend;$/;"	m	struct:closedb1_iterators	file:
autoReduce	queryparser/lemon.c	/^  int autoReduce;          \/* True if this is an auto-reduce state *\/$/;"	m	struct:state	file:
aux	languages/compiler/header.h	/^    struct node * aux;     \/* used in setlimit *\/$/;"	m	struct:node	typeref:struct:node::node
average_length_	include/xapian/weight.h	/^    Xapian::doclength average_length_;$/;"	m	class:Xapian::Weight
avlen	expand/expandweight.h	/^    Xapian::doclength avlen;$/;"	m	class:Xapian::Internal::ExpandStats
avlen	expand/expandweight.h	/^    Xapian::doclength avlen;$/;"	m	class:Xapian::Internal::ExpandWeight
axset	queryparser/lemon.c	/^struct axset {$/;"	s	file:
axset_compare	queryparser/lemon.c	/^static int axset_compare(const void *a, const void *b){$/;"	f	file:
azDefine	queryparser/lemon.c	/^static char **azDefine = 0;  \/* Name of the -D macros *\/$/;"	v	file:
b	languages/compiler/header.h	/^    struct amongvec * b;      \/* pointer to the amongvec *\/$/;"	m	struct:among	typeref:struct:among::amongvec
b	languages/compiler/header.h	/^    symbol * b;               \/* the characters of this group *\/$/;"	m	struct:grouping
b	languages/compiler/header.h	/^    symbol * b;      \/* the string giving the case *\/$/;"	m	struct:amongvec
b	languages/compiler/header.h	/^    symbol * b;$/;"	m	struct:include
b	languages/compiler/header.h	/^    symbol * b;$/;"	m	struct:literalstring
b	languages/compiler/header.h	/^    symbol * b;$/;"	m	struct:name
b	languages/compiler/header.h	/^    symbol * b;$/;"	m	struct:tokeniser
b	tests/api_unicode.cc	/^    const char * a, * b;$/;"	m	struct:testcase	file:
b2	languages/compiler/header.h	/^    symbol * b2;$/;"	m	struct:tokeniser
b_to_s	languages/compiler/space.c	/^extern char * b_to_s(const symbol * p) {$/;"	f
back	include/xapian/eset.h	/^ESet::back() const {$/;"	f	class:Xapian::ESet
back	include/xapian/mset.h	/^MSet::back() const {$/;"	f	class:Xapian::MSet
backend_mismatch	api/compactor.cc	/^backend_mismatch(const Xapian::Database & db, int backend1,$/;"	f	file:
backend_name	backends/backends.h	/^inline const char * backend_name(int code) {$/;"	f
backend_type	backends/dbcheck.cc	/^typedef enum { UNKNOWN, CHERT, GLASS } backend_type;$/;"	t	typeref:enum:__anon5	file:
bad_cont	unicode/utf8itor.cc	/^static inline bool bad_cont(unsigned char ch) { return (ch & 0xc0) != 0x80; }$/;"	f	file:
base	backends/chert/chert_table.h	/^	ChertTable_base base;$/;"	m	class:ChertTable
base256ify_double	common/serialise-double.cc	/^static int base256ify_double(double &v) {$/;"	f	file:
base_letter	backends/chert/chert_table.h	/^	char base_letter;$/;"	m	class:ChertTable
basic_doc	tests/api_replacedoc.cc	/^basic_doc() {$/;"	f	file:
basic_docterms	tests/api_replacedoc.cc	/^basic_docterms() {$/;"	f	file:
basic_open	backends/chert/chert_table.cc	/^ChertTable::basic_open(bool revision_supplied, chert_revision_number_t revision_)$/;"	f	class:ChertTable
basic_open	backends/glass/glass_table.cc	/^GlassTable::basic_open(const RootInfo * root_info, glass_revision_number_t rev)$/;"	f	class:GlassTable
basis	queryparser/lemon.c	/^static struct config *basis = 0;         \/* Top of list of basis configs *\/$/;"	v	typeref:struct:config	file:
basisend	queryparser/lemon.c	/^static struct config **basisend = 0;     \/* End of list of basis configs *\/$/;"	v	typeref:struct:config	file:
basisflag	queryparser/lemon.c	/^  int basisflag;           \/* Print only basis configurations *\/$/;"	m	struct:lemon	file:
begin	api/queryinternal.cc	/^	size_t begin, end;$/;"	m	class:Xapian::Internal::AndContext::PosFilter	file:
begin	api/queryinternal.h	/^    std::string begin, end;$/;"	m	class:Xapian::Internal::QueryValueRange
begin	api/smallvector.h	/^    const_iterator begin() const {$/;"	f	class:Xapian::SmallVector
begin	include/xapian/eset.h	/^ESet::begin() const {$/;"	f	class:Xapian::ESet
begin	include/xapian/geospatial.h	/^    LatLongCoordsIterator begin() const {$/;"	f	class:Xapian::LatLongCoords
begin	include/xapian/mset.h	/^MSet::begin() const {$/;"	f	class:Xapian::MSet
begin	matcher/valuerangepostlist.h	/^    const std::string begin, end;$/;"	m	class:ValueRangePostList
begin	net/resolver.h	/^    const_iterator begin() const {$/;"	f	class:Resolver
begin	queryparser/termgenerator_internal.cc	/^    size_t begin = 0;$/;"	m	class:Xapian::SnipPipe	file:
begin_transaction	api/omdatabase.cc	/^WritableDatabase::begin_transaction(bool flushed)$/;"	f	class:Xapian::WritableDatabase
begin_transaction	backends/database.cc	/^Database::Internal::begin_transaction(bool flushed)$/;"	f	class:Xapian::Database::Internal
best_begin	queryparser/termgenerator_internal.cc	/^    size_t best_begin = 0;$/;"	m	class:Xapian::SnipPipe	file:
best_end	queryparser/termgenerator_internal.cc	/^    size_t best_end = 0;$/;"	m	class:Xapian::SnipPipe	file:
best_pipe	queryparser/termgenerator_internal.cc	/^    deque<Sniplet> best_pipe;$/;"	m	class:Xapian::SnipPipe	file:
best_sum	queryparser/termgenerator_internal.cc	/^    double best_sum = 0;$/;"	m	class:Xapian::SnipPipe	file:
bigoaddvalue1_helper	tests/api_scalability.cc	/^bigoaddvalue1_helper(unsigned num_values)$/;"	f	file:
bin_PROGRAMS	Makefile	/^bin_PROGRAMS = bin\/xapian-delve$(EXEEXT) $(am__EXEEXT_1) \\$/;"	m
bin_SCRIPTS	Makefile	/^bin_SCRIPTS = installable\/xapian-config$/;"	m
bin_xapian_check_DEPENDENCIES	Makefile	/^bin_xapian_check_DEPENDENCIES = $(am__DEPENDENCIES_1) $(libxapian_la)$/;"	m
bin_xapian_check_LDADD	Makefile	/^bin_xapian_check_LDADD = $(ldflags) $(libxapian_la)$/;"	m
bin_xapian_check_LDADD	bin/Makefile.mk	/^bin_xapian_check_LDADD = $(ldflags) $(libxapian_la)$/;"	m
bin_xapian_check_OBJECTS	Makefile	/^bin_xapian_check_OBJECTS = $(am_bin_xapian_check_OBJECTS)$/;"	m
bin_xapian_check_SOURCES	Makefile	/^bin_xapian_check_SOURCES = bin\/xapian-check.cc$/;"	m
bin_xapian_check_SOURCES	bin/Makefile.mk	/^bin_xapian_check_SOURCES = bin\/xapian-check.cc$/;"	m
bin_xapian_compact_DEPENDENCIES	Makefile	/^bin_xapian_compact_DEPENDENCIES = $(am__DEPENDENCIES_1) libgetopt.la \\$/;"	m
bin_xapian_compact_LDADD	Makefile	/^bin_xapian_compact_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
bin_xapian_compact_LDADD	bin/Makefile.mk	/^bin_xapian_compact_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
bin_xapian_compact_OBJECTS	Makefile	/^bin_xapian_compact_OBJECTS = $(am_bin_xapian_compact_OBJECTS)$/;"	m
bin_xapian_compact_SOURCES	Makefile	/^bin_xapian_compact_SOURCES = bin\/xapian-compact.cc$/;"	m
bin_xapian_compact_SOURCES	bin/Makefile.mk	/^bin_xapian_compact_SOURCES = bin\/xapian-compact.cc$/;"	m
bin_xapian_delve_DEPENDENCIES	Makefile	/^bin_xapian_delve_DEPENDENCIES = $(am__DEPENDENCIES_1) libgetopt.la \\$/;"	m
bin_xapian_delve_LDADD	Makefile	/^bin_xapian_delve_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
bin_xapian_delve_LDADD	bin/Makefile.mk	/^bin_xapian_delve_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
bin_xapian_delve_OBJECTS	Makefile	/^bin_xapian_delve_OBJECTS = $(am_bin_xapian_delve_OBJECTS)$/;"	m
bin_xapian_delve_SOURCES	Makefile	/^bin_xapian_delve_SOURCES = bin\/xapian-delve.cc$/;"	m
bin_xapian_delve_SOURCES	bin/Makefile.mk	/^bin_xapian_delve_SOURCES = bin\/xapian-delve.cc$/;"	m
bin_xapian_inspect_CPPFLAGS	Makefile	/^bin_xapian_inspect_CPPFLAGS = \\$/;"	m
bin_xapian_inspect_CPPFLAGS	bin/Makefile.mk	/^bin_xapian_inspect_CPPFLAGS =\\$/;"	m
bin_xapian_inspect_DEPENDENCIES	Makefile	/^bin_xapian_inspect_DEPENDENCIES = $(am__DEPENDENCIES_1) libgetopt.la \\$/;"	m
bin_xapian_inspect_LDADD	Makefile	/^bin_xapian_inspect_LDADD = $(ldflags) libgetopt.la $(XAPIAN_LIBS)$/;"	m
bin_xapian_inspect_LDADD	bin/Makefile.mk	/^bin_xapian_inspect_LDADD = $(ldflags) libgetopt.la $(XAPIAN_LIBS)$/;"	m
bin_xapian_inspect_OBJECTS	Makefile	/^bin_xapian_inspect_OBJECTS = $(am_bin_xapian_inspect_OBJECTS)$/;"	m
bin_xapian_inspect_SOURCES	Makefile	/^bin_xapian_inspect_SOURCES = bin\/xapian-inspect.cc\\$/;"	m
bin_xapian_inspect_SOURCES	bin/Makefile.mk	/^bin_xapian_inspect_SOURCES = bin\/xapian-inspect.cc\\$/;"	m
bin_xapian_progsrv_DEPENDENCIES	Makefile	/^bin_xapian_progsrv_DEPENDENCIES = $(am__DEPENDENCIES_1) libgetopt.la \\$/;"	m
bin_xapian_progsrv_LDADD	Makefile	/^bin_xapian_progsrv_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
bin_xapian_progsrv_LDADD	bin/Makefile.mk	/^bin_xapian_progsrv_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
bin_xapian_progsrv_OBJECTS	Makefile	/^bin_xapian_progsrv_OBJECTS = $(am_bin_xapian_progsrv_OBJECTS)$/;"	m
bin_xapian_progsrv_SOURCES	Makefile	/^bin_xapian_progsrv_SOURCES = bin\/xapian-progsrv.cc$/;"	m
bin_xapian_progsrv_SOURCES	bin/Makefile.mk	/^bin_xapian_progsrv_SOURCES = bin\/xapian-progsrv.cc$/;"	m
bin_xapian_replicate_DEPENDENCIES	Makefile	/^bin_xapian_replicate_DEPENDENCIES = $(am__DEPENDENCIES_1) libgetopt.la \\$/;"	m
bin_xapian_replicate_LDADD	Makefile	/^bin_xapian_replicate_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
bin_xapian_replicate_LDADD	bin/Makefile.mk	/^bin_xapian_replicate_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
bin_xapian_replicate_OBJECTS	Makefile	/^bin_xapian_replicate_OBJECTS = $(am_bin_xapian_replicate_OBJECTS)$/;"	m
bin_xapian_replicate_SOURCES	Makefile	/^bin_xapian_replicate_SOURCES = bin\/xapian-replicate.cc$/;"	m
bin_xapian_replicate_SOURCES	bin/Makefile.mk	/^bin_xapian_replicate_SOURCES = bin\/xapian-replicate.cc$/;"	m
bin_xapian_replicate_server_DEPENDENCIES	Makefile	/^bin_xapian_replicate_server_DEPENDENCIES = $(am__DEPENDENCIES_1) \\$/;"	m
bin_xapian_replicate_server_LDADD	Makefile	/^bin_xapian_replicate_server_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
bin_xapian_replicate_server_LDADD	bin/Makefile.mk	/^bin_xapian_replicate_server_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
bin_xapian_replicate_server_OBJECTS	Makefile	/^bin_xapian_replicate_server_OBJECTS =  \\$/;"	m
bin_xapian_replicate_server_SOURCES	Makefile	/^bin_xapian_replicate_server_SOURCES = bin\/xapian-replicate-server.cc$/;"	m
bin_xapian_replicate_server_SOURCES	bin/Makefile.mk	/^bin_xapian_replicate_server_SOURCES = bin\/xapian-replicate-server.cc$/;"	m
bin_xapian_tcpsrv_DEPENDENCIES	Makefile	/^bin_xapian_tcpsrv_DEPENDENCIES = $(am__DEPENDENCIES_1) libgetopt.la \\$/;"	m
bin_xapian_tcpsrv_LDADD	Makefile	/^bin_xapian_tcpsrv_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
bin_xapian_tcpsrv_LDADD	bin/Makefile.mk	/^bin_xapian_tcpsrv_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
bin_xapian_tcpsrv_OBJECTS	Makefile	/^bin_xapian_tcpsrv_OBJECTS = $(am_bin_xapian_tcpsrv_OBJECTS)$/;"	m
bin_xapian_tcpsrv_SOURCES	Makefile	/^bin_xapian_tcpsrv_SOURCES = bin\/xapian-tcpsrv.cc$/;"	m
bin_xapian_tcpsrv_SOURCES	bin/Makefile.mk	/^bin_xapian_tcpsrv_SOURCES = bin\/xapian-tcpsrv.cc$/;"	m
binding	languages/compiler/analyser.c	/^static int binding(int t) {$/;"	f	file:
bindir	Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	docs/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	tests/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bit_map	backends/chert/chert_btreebase.h	/^	uint8_t *bit_map;$/;"	m	class:ChertTable_base
bit_map0	backends/chert/chert_btreebase.h	/^	uint8_t *bit_map0;$/;"	m	class:ChertTable_base
bit_map_low	backends/chert/chert_btreebase.h	/^	uint4 bit_map_low;$/;"	m	class:ChertTable_base
bit_map_size	backends/chert/chert_btreebase.h	/^	uint4 bit_map_size;$/;"	m	class:ChertTable_base
bitmap	backends/glass/glass_freelist.h	/^    elt_type * bitmap;$/;"	m	class:GlassFreeListChecker
bitmap_size	backends/glass/glass_freelist.h	/^    uint4 bitmap_size;$/;"	m	class:GlassFreeListChecker
block_check	backends/chert/chert_check.cc	/^ChertTableCheck::block_check(Cursor * C_, int j, int opts)$/;"	f	class:ChertTableCheck
block_check	backends/glass/glass_check.cc	/^GlassTableCheck::block_check(Glass::Cursor * C_, int j, int opts,$/;"	f	class:GlassTableCheck
block_free_at_start	backends/chert/chert_btreebase.cc	/^ChertTable_base::block_free_at_start(uint4 n) const$/;"	f	class:ChertTable_base
block_free_now	backends/chert/chert_btreebase.cc	/^ChertTable_base::block_free_now(uint4 n) const$/;"	f	class:ChertTable_base
block_given_by	backends/chert/chert_table.h	/^    uint4 block_given_by() const {$/;"	f	class:Item_base
block_given_by	backends/glass/glass_table.h	/^    uint4 block_given_by() const {$/;"	f	class:Glass::BItem_base
block_size	api/compactor.cc	/^    size_t block_size;$/;"	m	class:Xapian::Compactor::Internal	file:
block_size	backends/chert/chert_btreebase.h	/^	uint4 block_size;$/;"	m	class:ChertTable_base
block_size	backends/chert/chert_table.h	/^	unsigned int block_size;$/;"	m	class:ChertTable
block_size	backends/glass/glass_table.h	/^	unsigned int block_size;$/;"	m	class:GlassTable
block_to_cursor	backends/chert/chert_table.cc	/^ChertTable::block_to_cursor(Cursor * C_, int j, uint4 n) const$/;"	f	class:ChertTable
block_to_cursor	backends/glass/glass_table.cc	/^GlassTable::block_to_cursor(Glass::Cursor * C_, int j, uint4 n) const$/;"	f	class:GlassTable
block_usage	backends/chert/chert_check.cc	/^int ChertTableCheck::block_usage(const uint8_t * p) const$/;"	f	class:ChertTableCheck
block_usage	backends/glass/glass_check.cc	/^int GlassTableCheck::block_usage(const uint8_t * p) const$/;"	f	class:GlassTableCheck
blocksize	backends/glass/glass_version.h	/^    unsigned blocksize;$/;"	m	class:Glass::RootInfo
both_bases	backends/chert/chert_table.h	/^	mutable bool both_bases;$/;"	m	class:ChertTable
bp	queryparser/lemon.c	/^  struct config *bp;       \/* The basis configurations for this state *\/$/;"	m	struct:state	typeref:struct:state::config	file:
bp	queryparser/lemon.c	/^  struct config *bp;       \/* The next basis configuration *\/$/;"	m	struct:config	typeref:struct:config::config	file:
bplp	queryparser/lemon.c	/^  struct plink *bplp;      \/* Follow-set backwards propagation links *\/$/;"	m	struct:config	typeref:struct:config::plink	file:
bra	languages/steminternal.h	/^    int c, l, lb, bra, ket;$/;"	m	class:Xapian::SnowballStemImplementation
buf	common/bitstream.h	/^    std::string buf;$/;"	m	class:Xapian::BitReader
buf	common/bitstream.h	/^    std::string buf;$/;"	m	class:Xapian::BitWriter
buffer	backends/chert/chert_table.h	/^	uint8_t * buffer;$/;"	m	class:ChertTable
buffer	backends/glass/glass_table.h	/^	uint8_t * buffer;$/;"	m	class:GlassTable
buffer	net/remoteconnection.h	/^    std::string buffer;$/;"	m	class:RemoteConnection
build	Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build	docs/Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build	tests/Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build_alias	Makefile	/^build_alias = $/;"	m
build_alias	docs/Makefile	/^build_alias = $/;"	m
build_alias	tests/Makefile	/^build_alias = $/;"	m
build_cpu	Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	docs/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	tests/Makefile	/^build_cpu = x86_64$/;"	m
build_os	Makefile	/^build_os = linux-gnu$/;"	m
build_os	docs/Makefile	/^build_os = linux-gnu$/;"	m
build_os	tests/Makefile	/^build_os = linux-gnu$/;"	m
build_termlist_tree	expand/esetinternal.cc	/^build_termlist_tree(const Xapian::Database &db, const RSet & rset)$/;"	f	namespace:Xapian
build_triplet	Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_triplet	docs/Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_triplet	tests/Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_vendor	Makefile	/^build_vendor = pc$/;"	m
build_vendor	docs/Makefile	/^build_vendor = pc$/;"	m
build_vendor	tests/Makefile	/^build_vendor = pc$/;"	m
builddb_coords1	tests/api_geospatial.cc	/^builddb_coords1(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
builddb_queries1	tests/soaktest/soaktest_queries.cc	/^builddb_queries1(Xapian::WritableDatabase &db, const string &arg)$/;"	f	file:
builddb_valuestest1	tests/perftest/perftest_matchdecider.cc	/^builddb_valuestest1(Xapian::WritableDatabase &db, const string & dbname)$/;"	f	file:
builddir	Makefile	/^builddir = .$/;"	m
builddir	docs/Makefile	/^builddir = .$/;"	m
builddir	tests/Makefile	/^builddir = .$/;"	m
buildshifts	queryparser/lemon.c	/^PRIVATE void buildshifts(struct lemon *lemp, struct state *stp)$/;"	f
byte	languages/compiler/header.h	/^typedef unsigned char byte;$/;"	t
c	api/smallvector.h	/^    std::size_t c;$/;"	m	class:Xapian::SmallVector_
c	backends/chert/chert_cursor.h	/^	int c;$/;"	m	class:Cursor
c	backends/glass/glass_cursor.h	/^	int c;$/;"	m	class:Glass::Cursor
c	backends/glass/glass_freelist.h	/^    unsigned c;$/;"	m	class:GlassFLCursor
c	languages/compiler/header.h	/^    int c;$/;"	m	struct:input
c	languages/compiler/header.h	/^    int c;$/;"	m	struct:tokeniser
c	languages/steminternal.h	/^    int c, l, lb, bra, ket;$/;"	m	class:Xapian::SnowballStemImplementation
c_booltest	languages/compiler/header.h	/^    c_booltest,$/;"	e	enum:token_codes
c_call	languages/compiler/header.h	/^    c_call,$/;"	e	enum:token_codes
c_grouping	languages/compiler/header.h	/^    c_grouping,$/;"	e	enum:token_codes
c_literalstring	languages/compiler/header.h	/^    c_literalstring,$/;"	e	enum:token_codes
c_mathassign	languages/compiler/header.h	/^    c_mathassign,$/;"	e	enum:token_codes
c_name	languages/compiler/header.h	/^    c_name,$/;"	e	enum:token_codes
c_neg	languages/compiler/header.h	/^    c_neg,$/;"	e	enum:token_codes
c_number	languages/compiler/header.h	/^    c_number,$/;"	e	enum:token_codes
c_product_avlen	include/xapian/weight.h	/^    double c_product_avlen;$/;"	m	class:Xapian::BB2Weight
c_product_avlen	include/xapian/weight.h	/^    double c_product_avlen;$/;"	m	class:Xapian::IfB2Weight
c_product_avlen	include/xapian/weight.h	/^    double c_product_avlen;$/;"	m	class:Xapian::InL2Weight
c_product_avlen	include/xapian/weight.h	/^    double c_product_avlen;$/;"	m	class:Xapian::IneB2Weight
cached_stats_valid	backends/remote/remote-database.h	/^    mutable bool cached_stats_valid;$/;"	m	class:RemoteDatabase
calc_distance	geospatial/latlong_posting_source.cc	/^LatLongDistancePostingSource::calc_distance()$/;"	f	class:LatLongDistancePostingSource
calc_index	api/editdistance.cc	/^    int calc_index(int k, int p) const {$/;"	f	class:edist_state	file:
calc_latlon_16ths	geospatial/geoencode.cc	/^calc_latlon_16ths(double lat, double lon, int & lat_16ths, int & lon_16ths)$/;"	f	file:
calc_read_wait_msecs	net/remoteconnection.cc	/^RemoteConnection::calc_read_wait_msecs(double end_time)$/;"	f	class:RemoteConnection
calculate_last_block	backends/chert/chert_btreebase.cc	/^ChertTable_base::calculate_last_block()$/;"	f	class:ChertTable_base
called	tests/api_backend.cc	/^    mutable bool called;$/;"	m	class:CheckMatchDecider	file:
canReduce	queryparser/lemon.c	/^  Boolean canReduce;       \/* True if this rule is ever reduced *\/$/;"	m	struct:rule	file:
cancel	backends/chert/chert_database.cc	/^ChertDatabase::cancel()$/;"	f	class:ChertDatabase
cancel	backends/chert/chert_database.cc	/^ChertWritableDatabase::cancel()$/;"	f	class:ChertWritableDatabase
cancel	backends/chert/chert_spelling.h	/^    void cancel() {$/;"	f	class:ChertSpellingTable
cancel	backends/chert/chert_synonym.h	/^    void cancel() {$/;"	f	class:ChertSynonymTable
cancel	backends/chert/chert_table.cc	/^ChertTable::cancel()$/;"	f	class:ChertTable
cancel	backends/chert/chert_values.h	/^    void cancel() {$/;"	f	class:ChertValueManager
cancel	backends/database.cc	/^Database::Internal::cancel()$/;"	f	class:Xapian::Database::Internal
cancel	backends/glass/glass_database.cc	/^GlassDatabase::cancel()$/;"	f	class:GlassDatabase
cancel	backends/glass/glass_database.cc	/^GlassWritableDatabase::cancel()$/;"	f	class:GlassWritableDatabase
cancel	backends/glass/glass_spelling.h	/^    void cancel(const RootInfo & root_info, glass_revision_number_t rev) {$/;"	f	class:GlassSpellingTable
cancel	backends/glass/glass_synonym.h	/^    void cancel(const RootInfo & root_info, glass_revision_number_t rev) {$/;"	f	class:GlassSynonymTable
cancel	backends/glass/glass_table.cc	/^GlassTable::cancel(const RootInfo & root_info, glass_revision_number_t rev)$/;"	f	class:GlassTable
cancel	backends/glass/glass_values.h	/^    void cancel() {$/;"	f	class:GlassValueManager
cancel	backends/glass/glass_version.cc	/^GlassVersion::cancel()$/;"	f	class:GlassVersion
cancel	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::cancel()$/;"	f	class:InMemoryDatabase
cancel	backends/remote/remote-database.cc	/^RemoteDatabase::cancel()$/;"	f	class:RemoteDatabase
cancel_transaction	api/omdatabase.cc	/^WritableDatabase::cancel_transaction()$/;"	f	class:Xapian::WritableDatabase
cancel_transaction	backends/database.cc	/^Database::Internal::cancel_transaction()$/;"	f	class:Xapian::Database::Internal
capacity	api/smallvector.h	/^    size_type capacity() const {$/;"	f	class:Xapian::SmallVector
categories_mask	common/debuglog.h	/^    unsigned int categories_mask;$/;"	m	class:DebugLogger
category	common/debuglog.h	/^    debuglog_categories category;$/;"	m	class:DebugLogFunc
category	common/debuglog.h	/^    debuglog_categories category;$/;"	m	class:DebugLogFuncVoid
category	include/xapian/unicode.h	/^} category;$/;"	t	namespace:Xapian::Unicode	typeref:enum:Xapian::Unicode::__anon13
centre	include/xapian/geospatial.h	/^    LatLongCoords centre;$/;"	m	class:Xapian::LatLongDistanceKeyMaker
centre	include/xapian/geospatial.h	/^    LatLongCoords centre;$/;"	m	class:Xapian::LatLongDistancePostingSource
cf	backends/chert/chert_compact.cc	/^    Xapian::termcount tf, cf;$/;"	m	class:ChertCompact::PostlistCursor	file:
cf	backends/glass/glass_compact.cc	/^    Xapian::termcount tf, cf;$/;"	m	class:GlassCompact::PostlistCursor	file:
cf_delta	backends/glass/glass_inverter.h	/^	Xapian::termcount_diff cf_delta;$/;"	m	class:Inverter::PostingChanges
cfgstatus	queryparser/lemon.c	/^enum cfgstatus {$/;"	g	file:
cfp	queryparser/lemon.c	/^  struct config *cfp;      \/* All configurations in this set *\/$/;"	m	struct:state	typeref:struct:state::config	file:
cfp	queryparser/lemon.c	/^  struct config *cfp;      \/* The configuration to which linked *\/$/;"	m	struct:plink	typeref:struct:plink::config	file:
change_combiner	api/queryinternal.h	/^    QueryWildcard* change_combiner(Xapian::Query::op new_op) {$/;"	f	class:Xapian::Internal::QueryWildcard
change_count	backends/chert/chert_database.h	/^	mutable Xapian::doccount change_count;$/;"	m	class:ChertWritableDatabase
change_count	backends/glass/glass_database.h	/^	mutable Xapian::doccount change_count;$/;"	m	class:GlassWritableDatabase
changed	api/replication.h	/^    bool changed;$/;"	m	struct:Xapian::ReplicationInfo
changed_c	backends/chert/chert_table.h	/^	int changed_c;$/;"	m	class:ChertTable
changed_c	backends/glass/glass_table.h	/^	int changed_c;$/;"	m	class:GlassTable
changed_n	backends/chert/chert_table.h	/^	uint4 changed_n;$/;"	m	class:ChertTable
changed_n	backends/glass/glass_table.h	/^	uint4 changed_n;$/;"	m	class:GlassTable
changes	backends/chert/chert_values.h	/^    std::map<Xapian::valueno, std::map<Xapian::docid, std::string>> changes;$/;"	m	class:ChertValueManager
changes	backends/glass/glass_database.h	/^	GlassChanges changes;$/;"	m	class:GlassDatabase
changes	backends/glass/glass_values.h	/^    std::map<Xapian::valueno, std::map<Xapian::docid, std::string>> changes;$/;"	m	class:GlassValueManager
changes	backends/glass/glass_version.h	/^    GlassChanges * changes;$/;"	m	class:GlassVersion
changes_fd	backends/glass/glass_changes.h	/^    int changes_fd;$/;"	m	class:GlassChanges
changes_obj	backends/glass/glass_table.h	/^	GlassChanges * changes_obj;$/;"	m	class:GlassTable
changes_stem	backends/glass/glass_changes.h	/^    std::string changes_stem;$/;"	m	class:GlassChanges
changeset_count	api/replication.h	/^    int changeset_count;$/;"	m	struct:Xapian::ReplicationInfo
check	api/decvalwtsource.cc	/^DecreasingValueWeightPostingSource::check(Xapian::docid min_docid,$/;"	f	class:DecreasingValueWeightPostingSource
check	api/postingsource.cc	/^FixedWeightPostingSource::check(Xapian::docid min_docid, double)$/;"	f	class:Xapian::FixedWeightPostingSource
check	api/postingsource.cc	/^PostingSource::check(Xapian::docid did, double min_wt)$/;"	f	class:Xapian::PostingSource
check	api/postingsource.cc	/^ValuePostingSource::check(Xapian::docid min_docid, double min_wt)$/;"	f	class:Xapian::ValuePostingSource
check	api/postlist.cc	/^PostList::check(Xapian::docid did, double w_min, bool &valid)$/;"	f	class:Xapian::PostList
check	api/valueiterator.cc	/^ValueIterator::check(Xapian::docid did)$/;"	f	class:Xapian::ValueIterator
check	backends/chert/chert_check.cc	/^ChertTableCheck::check(const char * tablename, const string & path,$/;"	f	class:ChertTableCheck
check	backends/chert/chert_valuelist.cc	/^ChertValueList::check(Xapian::docid did)$/;"	f	class:ChertValueList
check	backends/glass/glass_changes.cc	/^GlassChanges::check(const string & changes_file)$/;"	f	class:GlassChanges
check	backends/glass/glass_check.cc	/^GlassTableCheck::check(const char * tablename, const string & path, int fd,$/;"	f	class:GlassTableCheck
check	backends/glass/glass_valuelist.cc	/^GlassValueList::check(Xapian::docid did)$/;"	f	class:GlassValueList
check	backends/multi/multi_valuelist.cc	/^MultiValueList::check(Xapian::docid did)$/;"	f	class:MultiValueList
check	backends/slowvaluelist.cc	/^SlowValueList::check(Xapian::docid did)$/;"	f	class:SlowValueList
check	backends/valuelist.cc	/^ValueIterator::Internal::check(Xapian::docid did)$/;"	f	class:Xapian::ValueIterator::Internal
check	geospatial/latlong_posting_source.cc	/^LatLongDistancePostingSource::check(docid min_docid,$/;"	f	class:LatLongDistancePostingSource
check	include/xapian/database.h	/^	static size_t check(const std::string & path, int opts = 0,$/;"	f	class:Xapian::Database
check	include/xapian/database.h	/^	static size_t check(int fd, int opts = 0, std::ostream *out = NULL) {$/;"	f	class:Xapian::Database
check	matcher/externalpostlist.cc	/^ExternalPostList::check(Xapian::docid did, double w_min, bool &valid)$/;"	f	class:ExternalPostList
check	matcher/orpostlist.cc	/^OrPostList::check(Xapian::docid did, double w_min, bool &valid)$/;"	f	class:OrPostList
check	matcher/selectpostlist.cc	/^SelectPostList::check(Xapian::docid did, double w_min, bool &valid)$/;"	f	class:SelectPostList
check	matcher/valuegepostlist.cc	/^ValueGePostList::check(Xapian::docid did, double, bool &valid)$/;"	f	class:ValueGePostList
check	matcher/valuerangepostlist.cc	/^ValueRangePostList::check(Xapian::docid did, double, bool &valid)$/;"	f	class:ValueRangePostList
check	tests/harness/fdtracker.cc	/^FDTracker::check()$/;"	f	class:FDTracker
check_	backends/dbcheck.cc	/^Database::check_(const string * path_ptr, int fd, int opts, std::ostream *out)$/;"	f	class:Xapian::Database
check_PROGRAMS	tests/Makefile	/^check_PROGRAMS = apitest$(EXEEXT) internaltest$(EXEEXT) \\$/;"	m
check_SCRIPTS	tests/Makefile	/^check_SCRIPTS = runtest perftest\/get_machine_info $(am__append_6)$/;"	m
check_all_gone	common/bitstream.h	/^    bool check_all_gone() const {$/;"	f	class:Xapian::BitReader
check_chert_table	backends/chert/chert_dbcheck.cc	/^check_chert_table(const char * tablename, const string& dir,$/;"	f
check_db_dir	backends/dbcheck.cc	/^check_db_dir(const string & path, int opts, std::ostream *out)$/;"	f	file:
check_db_fd	backends/dbcheck.cc	/^check_db_fd(int fd, int opts, std::ostream *out)$/;"	f	file:
check_db_table	backends/dbcheck.cc	/^check_db_table(const string & filename, int opts, std::ostream *out)$/;"	f	file:
check_db_table_	backends/dbcheck.cc	/^check_db_table_(const string & filename, int opts, std::ostream *out,$/;"	f	file:
check_docid	include/xapian/postingsource.h	/^    Xapian::docid check_docid;$/;"	m	class:Xapian::FixedWeightPostingSource
check_double_serialisation	tests/unittest.cc	/^check_double_serialisation(double u)$/;"	f	file:
check_equal_dbs	tests/api_replicate.cc	/^check_equal_dbs(const string & masterpath, const string & replicapath)$/;"	f	file:
check_fd	tests/harness/fdtracker.cc	/^FDTracker::check_fd(int fd) const$/;"	f	class:FDTracker
check_flush_threshold	backends/chert/chert_database.cc	/^ChertWritableDatabase::check_flush_threshold()$/;"	f	class:ChertWritableDatabase
check_flush_threshold	backends/glass/glass_database.cc	/^GlassWritableDatabase::check_flush_threshold()$/;"	f	class:GlassWritableDatabase
check_free	languages/compiler/space.c	/^extern void check_free(void * p) {$/;"	f
check_glass_table	backends/glass/glass_dbcheck.cc	/^check_glass_table(const char * tablename, const string &db_dir, int fd,$/;"	f
check_glass_table	backends/glass/glass_dbcheck.h	/^check_glass_table(const char * tablename, const std::string &db_dir,$/;"	f
check_glass_table	backends/glass/glass_dbcheck.h	/^check_glass_table(const char * tablename, int fd, off_t offset_,$/;"	f
check_handling_prune	matcher/branchpostlist.h	/^check_handling_prune(PostList * & pl, Xapian::docid did, double w_min,$/;"	f
check_helper	matcher/multiandpostlist.h	/^    void check_helper(size_t n, Xapian::docid did_min, double w_min,$/;"	f	class:MultiAndPostList
check_if_single_file_db	backends/dbcheck.cc	/^check_if_single_file_db(const struct stat & sb, const string & path,$/;"	f	file:
check_if_single_file_db	backends/dbfactory.cc	/^check_if_single_file_db(const struct stat & sb, const string & path,$/;"	f	file:
check_infix	queryparser/queryparser_internal.cc	/^inline unsigned check_infix(unsigned ch) {$/;"	f
check_infix	queryparser/termgenerator_internal.cc	/^check_infix(unsigned ch)$/;"	f	namespace:Xapian
check_infix_digit	queryparser/queryparser_internal.cc	/^inline unsigned check_infix_digit(unsigned ch) {$/;"	f
check_infix_digit	queryparser/termgenerator_internal.cc	/^check_infix_digit(unsigned ch)$/;"	f	namespace:Xapian
check_item_count	backends/chert/chert_check.h	/^	chert_tablesize_t check_item_count;$/;"	m	class:ChertTableCheck
check_lim	languages/compiler/driver.c	/^static void check_lim(int i, int argc) {$/;"	f	file:
check_malloc	languages/compiler/space.c	/^extern void * check_malloc(int n) {$/;"	f
check_message_type	api/replication.cc	/^DatabaseReplica::Internal::check_message_type(int type, int expected) const$/;"	f	class:DatabaseReplica::Internal
check_modifyable	languages/compiler/analyser.c	/^static void check_modifyable(struct analyser * a) {$/;"	f	file:
check_msets_contain_same_docs	tests/api_opsynonym.cc	/^check_msets_contain_same_docs(const Xapian::MSet & mset1,$/;"	f	file:
check_name_type	languages/compiler/analyser.c	/^static void check_name_type(struct analyser * a, struct name * p, int type) {$/;"	f	file:
check_query	queryparser/termgenerator_internal.cc	/^check_query(const Xapian::Query & query,$/;"	f	namespace:Xapian
check_range	api/valuerangeproc.cc	/^RangeProcessor::check_range(const string& b, const string& e)$/;"	f	class:Xapian::RangeProcessor
check_revision_at_least	backends/chert/chert_databasereplicator.cc	/^ChertDatabaseReplicator::check_revision_at_least(const string & rev,$/;"	f	class:ChertDatabaseReplicator
check_revision_at_least	backends/glass/glass_databasereplicator.cc	/^GlassDatabaseReplicator::check_revision_at_least(const string & rev,$/;"	f	class:GlassDatabaseReplicator
check_routine_mode	languages/compiler/analyser.c	/^static void check_routine_mode(struct analyser * a, struct name * p, int mode) {$/;"	f	file:
check_sequential	backends/chert/chert_check.h	/^	bool check_sequential;$/;"	m	class:ChertTableCheck
check_sparse_uid_terms	tests/api_compact.cc	/^check_sparse_uid_terms(const string & path)$/;"	f	file:
check_sparse_uid_terms	tests/api_compactold.cc	/^check_sparse_uid_terms(const string & path)$/;"	f	file:
check_started	expand/ortermlist.cc	/^OrTermList::check_started() const$/;"	f	class:OrTermList
check_suffix	queryparser/termgenerator_internal.cc	/^check_suffix(unsigned ch)$/;"	f	namespace:Xapian
check_term	queryparser/termgenerator_internal.cc	/^check_term(unordered_map<string, double> & loose_terms,$/;"	f	namespace:Xapian
check_tname_in_key	backends/chert/chert_postlist.cc	/^check_tname_in_key(const char **keypos, const char *keyend, const string &tname)$/;"	f	file:
check_tname_in_key	backends/glass/glass_postlist.cc	/^check_tname_in_key(const char **keypos, const char *keyend, const string &tname)$/;"	f	file:
check_tname_in_key_lite	backends/chert/chert_postlist.cc	/^check_tname_in_key_lite(const char **keypos, const char *keyend, const string &tname)$/;"	f	file:
check_tname_in_key_lite	backends/glass/glass_postlist.cc	/^check_tname_in_key_lite(const char **keypos, const char *keyend, const string &tname)$/;"	f	file:
check_token	languages/compiler/analyser.c	/^static int check_token(struct analyser * a, int code) {$/;"	f	file:
check_vals	tests/api_wrdb.cc	/^check_vals(const Xapian::Database & db, const map<Xapian::docid, string> & vals)$/;"	f	file:
check_wdf	backends/chert/chert_dbstats.h	/^    void check_wdf(Xapian::termcount wdf) {$/;"	f	class:ChertDatabaseStats
check_wdf	backends/glass/glass_version.h	/^    void check_wdf(Xapian::termcount wdf) {$/;"	f	class:GlassVersion
check_weight	matcher/selectpostlist.h	/^	inline bool check_weight(double w_min) {$/;"	f	class:SelectPostList
check_wordchar	queryparser/termgenerator_internal.cc	/^check_wordchar(unsigned ch)$/;"	f	namespace:Xapian
checked_system	tests/harness/unixcmds.cc	/^checked_system(const string & cmd)$/;"	f	file:
chert_blocksize_t	backends/chert/chert_types.h	/^typedef unsigned int chert_blocksize_t;$/;"	t
chert_doclen_t	backends/chert/chert_types.h	/^typedef unsigned int chert_doclen_t;$/;"	t
chert_revision_number_t	backends/chert/chert_types.h	/^typedef unsigned int chert_revision_number_t;$/;"	t
chert_tablesize_t	backends/chert/chert_types.h	/^typedef unsigned long long chert_tablesize_t;$/;"	t
chunk	backends/chert/chert_postlist.cc	/^	string chunk;$/;"	m	class:Chert::PostlistChunkWriter	file:
chunk	backends/glass/glass_postlist.cc	/^	string chunk;$/;"	m	class:Glass::PostlistChunkWriter	file:
chunked_data_left	net/remoteconnection.h	/^    off_t chunked_data_left;$/;"	m	class:RemoteConnection
cl	include/xapian/weight.h	/^    double cl;$/;"	m	class:Xapian::PL2PlusWeight
cl	include/xapian/weight.h	/^    double cl;$/;"	m	class:Xapian::PL2Weight
clean_up	tests/harness/backendmanager.cc	/^BackendManager::clean_up()$/;"	f	class:BackendManager
clean_up	tests/harness/backendmanager_remotetcp.cc	/^BackendManagerRemoteTcp::clean_up()$/;"	f	class:BackendManagerRemoteTcp
clear	api/replication.h	/^    void clear() {$/;"	f	struct:Xapian::ReplicationInfo
clear	api/smallvector.h	/^    void clear() {$/;"	f	class:Xapian::SmallVector
clear	backends/glass/glass_inverter.h	/^    void clear() {$/;"	f	class:Inverter
clear	backends/uuids.h	/^    void clear() {$/;"	f	class:Uuid
clear	backends/valuestats.h	/^    void clear() {$/;"	f	struct:ValueStats
clear_bit_map	backends/chert/chert_btreebase.cc	/^ChertTable_base::clear_bit_map()$/;"	f	class:ChertTable_base
clear_lat_long_metrics	api/registry.cc	/^Registry::Internal::clear_lat_long_metrics()$/;"	f	class:Xapian::Registry::Internal
clear_mappings	api/postingsource.cc	/^ValueMapPostingSource::clear_mappings()$/;"	f	class:Xapian::ValueMapPostingSource
clear_match_spies	api/registry.cc	/^Registry::Internal::clear_match_spies()$/;"	f	class:Xapian::Registry::Internal
clear_matchspies	api/omenquire.cc	/^Enquire::clear_matchspies() {$/;"	f	class:Xapian::Enquire
clear_posting_sources	api/registry.cc	/^Registry::Internal::clear_posting_sources()$/;"	f	class:Xapian::Registry::Internal
clear_stats	expand/expandweight.h	/^    void clear_stats()$/;"	f	class:Xapian::Internal::ExpandStats
clear_synonyms	api/omdatabase.cc	/^WritableDatabase::clear_synonyms(const std::string & term) const$/;"	f	class:Xapian::WritableDatabase
clear_synonyms	backends/chert/chert_database.cc	/^ChertWritableDatabase::clear_synonyms(const string & term) const$/;"	f	class:ChertWritableDatabase
clear_synonyms	backends/chert/chert_synonym.cc	/^ChertSynonymTable::clear_synonyms(const string & term)$/;"	f	class:ChertSynonymTable
clear_synonyms	backends/database.cc	/^Database::Internal::clear_synonyms(const string &) const$/;"	f	class:Xapian::Database::Internal
clear_synonyms	backends/glass/glass_database.cc	/^GlassWritableDatabase::clear_synonyms(const string & term) const$/;"	f	class:GlassWritableDatabase
clear_synonyms	backends/glass/glass_synonym.cc	/^GlassSynonymTable::clear_synonyms(const string & term)$/;"	f	class:GlassSynonymTable
clear_terms	api/omdocument.cc	/^Document::clear_terms()$/;"	f	class:Xapian::Document
clear_terms	api/omdocument.cc	/^Xapian::Document::Internal::clear_terms()$/;"	f	class:Xapian::Document::Internal
clear_valuelists	matcher/valuestreamdocument.cc	/^clear_valuelists(map<Xapian::valueno, ValueList *> & valuelists)$/;"	f	file:
clear_values	api/omdocument.cc	/^Document::clear_values()$/;"	f	class:Xapian::Document
clear_values	api/omdocument.cc	/^Xapian::Document::Internal::clear_values()$/;"	f	class:Xapian::Document::Internal
clear_weighting_schemes	api/registry.cc	/^Registry::Internal::clear_weighting_schemes()$/;"	f	class:Xapian::Registry::Internal
clone	api/decvalwtsource.cc	/^DecreasingValueWeightPostingSource::clone() const {$/;"	f	class:DecreasingValueWeightPostingSource
clone	api/matchspy.cc	/^MatchSpy::clone() const {$/;"	f	class:MatchSpy
clone	api/matchspy.cc	/^ValueCountMatchSpy::clone() const {$/;"	f	class:ValueCountMatchSpy
clone	api/postingsource.cc	/^FixedWeightPostingSource::clone() const$/;"	f	class:Xapian::FixedWeightPostingSource
clone	api/postingsource.cc	/^PostingSource::clone() const$/;"	f	class:Xapian::PostingSource
clone	api/postingsource.cc	/^ValueMapPostingSource::clone() const$/;"	f	class:Xapian::ValueMapPostingSource
clone	api/postingsource.cc	/^ValueWeightPostingSource::clone() const$/;"	f	class:Xapian::ValueWeightPostingSource
clone	backends/glass/glass_cursor.h	/^	GlassCursor * clone() const {$/;"	f	class:GlassCursor
clone	backends/glass/glass_cursor.h	/^	const uint8_t * clone(const Cursor & o) {$/;"	f	class:Glass::Cursor
clone	geospatial/latlong_metrics.cc	/^GreatCircleMetric::clone() const$/;"	f	class:GreatCircleMetric
clone	geospatial/latlong_posting_source.cc	/^LatLongDistancePostingSource::clone() const$/;"	f	class:LatLongDistancePostingSource
clone	matcher/localsubmatch.cc	/^LazyWeight::clone() const$/;"	f	class:LazyWeight
clone	tests/api_db.cc	/^    MyWeight * clone() const {$/;"	f	class:MyWeight
clone	tests/api_percentages.cc	/^    PostingSource * clone() const$/;"	f	class:MyPostingSource
clone	tests/api_percentages.cc	/^    Weight * clone() const {$/;"	f	class:ZWeight
clone	tests/api_postingsource.cc	/^    CheckBoundsPostingSource * clone() const$/;"	f	class:CheckBoundsPostingSource
clone	tests/api_postingsource.cc	/^    PostingSource * clone() const { return new MyDontAskWeightPostingSource(num_docs, last_docid); }$/;"	f	class:MyDontAskWeightPostingSource
clone	tests/api_postingsource.cc	/^    PostingSource * clone() const { return new MyOddPostingSource(num_docs, last_docid); }$/;"	f	class:MyOddPostingSource
clone	tests/api_postingsource.cc	/^    PostingSource * clone() const {$/;"	f	class:CloneTestPostingSource
clone	tests/api_postingsource.cc	/^    PostingSource * clone() const {$/;"	f	class:MyOddWeightingPostingSource
clone	tests/api_postingsource.cc	/^    SlowDecreasingValueWeightPostingSource * clone() const$/;"	f	class:SlowDecreasingValueWeightPostingSource
clone	tests/api_serialise.cc	/^    MatchSpy * clone() const {$/;"	f	class:ExceptionalMatchSpy
clone	tests/api_serialise.cc	/^    MyPostingSource2 * clone() const$/;"	f	class:MyPostingSource2
clone	tests/api_serialise.cc	/^    PostingSource * clone() const {$/;"	f	class:ExceptionalPostingSource
clone	tests/api_serialise.cc	/^    Weight * clone() const {$/;"	f	class:ExceptionalWeight
clone	tests/api_weight.cc	/^    Weight * clone() const {$/;"	f	class:CheckInitWeight
clone	tests/api_weight.cc	/^    Weight * clone() const {$/;"	f	class:CheckStatsWeight
clone	weight/bb2weight.cc	/^BB2Weight::clone() const$/;"	f	class:Xapian::BB2Weight
clone	weight/bm25plusweight.cc	/^BM25PlusWeight::clone() const$/;"	f	class:Xapian::BM25PlusWeight
clone	weight/bm25weight.cc	/^BM25Weight::clone() const$/;"	f	class:Xapian::BM25Weight
clone	weight/boolweight.cc	/^BoolWeight::clone() const$/;"	f	class:Xapian::BoolWeight
clone	weight/coordweight.cc	/^CoordWeight::clone() const$/;"	f	class:Xapian::CoordWeight
clone	weight/dlhweight.cc	/^DLHWeight::clone() const$/;"	f	class:Xapian::DLHWeight
clone	weight/dphweight.cc	/^DPHWeight::clone() const$/;"	f	class:Xapian::DPHWeight
clone	weight/ifb2weight.cc	/^IfB2Weight::clone() const$/;"	f	class:Xapian::IfB2Weight
clone	weight/ineb2weight.cc	/^IneB2Weight::clone() const$/;"	f	class:Xapian::IneB2Weight
clone	weight/inl2weight.cc	/^InL2Weight::clone() const$/;"	f	class:Xapian::InL2Weight
clone	weight/lmweight.cc	/^LMWeight::clone() const {$/;"	f	class:Xapian::LMWeight
clone	weight/pl2plusweight.cc	/^PL2PlusWeight::clone() const$/;"	f	class:Xapian::PL2PlusWeight
clone	weight/pl2weight.cc	/^PL2Weight::clone() const$/;"	f	class:Xapian::PL2Weight
clone	weight/tfidfweight.cc	/^TfIdfWeight::clone() const$/;"	f	class:Xapian::TfIdfWeight
clone	weight/tradweight.cc	/^TradWeight::clone() const$/;"	f	class:Xapian::TradWeight
clone_count	tests/api_postingsource.cc	/^    int& clone_count;$/;"	m	class:CloneTestPostingSource	file:
close	api/omdatabase.cc	/^Database::close()$/;"	f	class:Xapian::Database
close	backends/chert/chert_database.cc	/^ChertDatabase::close()$/;"	f	class:ChertDatabase
close	backends/chert/chert_database.cc	/^ChertWritableDatabase::close()$/;"	f	class:ChertWritableDatabase
close	backends/chert/chert_table.cc	/^void ChertTable::close(bool permanent) {$/;"	f	class:ChertTable
close	backends/glass/glass_database.cc	/^GlassDatabase::close()$/;"	f	class:GlassDatabase
close	backends/glass/glass_database.cc	/^GlassWritableDatabase::close()$/;"	f	class:GlassWritableDatabase
close	backends/glass/glass_table.cc	/^void GlassTable::close(bool permanent) {$/;"	f	class:GlassTable
close	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::close()$/;"	f	class:InMemoryDatabase
close	backends/remote/remote-database.cc	/^RemoteDatabase::close()$/;"	f	class:RemoteDatabase
close	common/fd.h	/^    int close() {$/;"	f	class:FD
close	common/fd.h	/^inline int close(FD & fd) {$/;"	f
close	tests/perftest/perftest.cc	/^PerfTestLogger::close()$/;"	f	class:PerfTestLogger
close_analyser	languages/compiler/analyser.c	/^extern void close_analyser(struct analyser * a) {$/;"	f
close_fd_or_socket	common/socket_utils.cc	/^extern void close_fd_or_socket(int fd) {$/;"	f
close_fd_or_socket	common/socket_utils.h	/^inline void close_fd_or_socket(int fd) { close(fd); }$/;"	f
close_generator	languages/compiler/generator.c	/^extern void close_generator(struct generator * g) {$/;"	f
close_tokeniser	languages/compiler/tokeniser.c	/^extern void close_tokeniser(struct tokeniser * t) {$/;"	f
closed	backends/inmemory/inmemory_database.h	/^    bool closed;$/;"	m	class:InMemoryDatabase
closedb1_iterators	tests/api_closedb.cc	/^struct closedb1_iterators {$/;"	s	file:
closedir	common/msvc_dirent.cc	/^int closedir(DIR *dir)$/;"	f
closefrom	common/closefrom.cc	/^Xapian::Internal::closefrom(int fd)$/;"	f	class:Xapian::Internal
cmake_DATA	Makefile	/^cmake_DATA = cmake\/xapian-config.cmake cmake\/xapian-config-version.cmake$/;"	m
cmakedir	Makefile	/^cmakedir = $(libdir)\/cmake\/xapian$/;"	m
code	languages/compiler/tokeniser.c	/^    int code;        \/* its internal code *\/$/;"	m	struct:system_word	file:
code	queryparser/lemon.c	/^  const char *code;        \/* The code executed when this rule is reduced *\/$/;"	m	struct:rule	file:
codeEmitted	queryparser/lemon.c	/^  int codeEmitted;         \/* True if the code has been emitted already *\/$/;"	m	struct:rule	file:
codePrefix	queryparser/lemon.c	/^  const char *codePrefix;  \/* Setup code before code[] above *\/$/;"	m	struct:rule	file:
codeSuffix	queryparser/lemon.c	/^  const char *codeSuffix;  \/* Breakdown code after code[] above *\/$/;"	m	struct:rule	file:
codepoint_is_cjk	queryparser/cjk-tokenizer.cc	/^CJK::codepoint_is_cjk(unsigned p)$/;"	f	class:CJK
col_green	tests/harness/testsuite.cc	/^string test_driver::col_red, test_driver::col_green;$/;"	m	class:test_driver	file:
col_green	tests/harness/testsuite.h	/^	static std::string col_red, col_green, col_yellow, col_reset;$/;"	m	class:test_driver
col_red	tests/harness/testsuite.cc	/^string test_driver::col_red, test_driver::col_green;$/;"	m	class:test_driver	file:
col_red	tests/harness/testsuite.h	/^	static std::string col_red, col_green, col_yellow, col_reset;$/;"	m	class:test_driver
col_reset	tests/harness/testsuite.cc	/^string test_driver::col_yellow, test_driver::col_reset;$/;"	m	class:test_driver	file:
col_reset	tests/harness/testsuite.h	/^	static std::string col_red, col_green, col_yellow, col_reset;$/;"	m	class:test_driver
col_yellow	tests/harness/testsuite.cc	/^string test_driver::col_yellow, test_driver::col_reset;$/;"	m	class:test_driver	file:
col_yellow	tests/harness/testsuite.h	/^	static std::string col_red, col_green, col_yellow, col_reset;$/;"	m	class:test_driver
collapse_count	api/omenquireinternal.h	/^	Xapian::doccount collapse_count;$/;"	m	class:Xapian::Internal::MSetItem
collapse_count	matcher/collapser.h	/^    Xapian::doccount collapse_count;$/;"	m	class:CollapseData
collapse_key	api/omenquireinternal.h	/^	Xapian::valueno collapse_key;$/;"	m	class:Xapian::Enquire::Internal
collapse_key	api/omenquireinternal.h	/^	string collapse_key;$/;"	m	class:Xapian::Internal::MSetItem
collapse_key	matcher/multimatch.h	/^	Xapian::valueno collapse_key;$/;"	m	class:MultiMatch
collapse_max	api/omenquireinternal.h	/^	Xapian::doccount collapse_max;$/;"	m	class:Xapian::Enquire::Internal
collapse_max	matcher/collapser.h	/^    Xapian::doccount collapse_max;$/;"	m	class:Collapser
collapse_max	matcher/multimatch.h	/^	Xapian::doccount collapse_max;$/;"	m	class:MultiMatch
collapse_result	matcher/collapser.h	/^} collapse_result;$/;"	t	typeref:enum:__anon29
collated_apitest_sources	tests/Makefile	/^collated_apitest_sources = \\$/;"	m
collated_perftest_sources	tests/Makefile	/^collated_perftest_sources = \\$/;"	m
collated_perftest_sources	tests/perftest/Makefile.mk	/^collated_perftest_sources = \\$/;"	m
collated_soaktest_sources	tests/Makefile	/^collated_soaktest_sources = \\$/;"	m
collated_soaktest_sources	tests/soaktest/Makefile.mk	/^collated_soaktest_sources = \\$/;"	m
collect_document	backends/database.cc	/^Database::Internal::collect_document(Xapian::docid did) const$/;"	f	class:Xapian::Database::Internal
collect_stats	expand/expandweight.cc	/^ExpandWeight::collect_stats(TermList * merger, const std::string & term)$/;"	f	class:Xapian::Internal::ExpandWeight
collection_freq	backends/inmemory/inmemory_database.h	/^	Xapian::termcount collection_freq;$/;"	m	class:InMemoryTerm
collection_freq	expand/expandweight.h	/^    Xapian::termcount collection_freq;$/;"	m	class:Xapian::Internal::ExpandWeight
collection_len	expand/expandweight.h	/^    Xapian::totallength collection_len;$/;"	m	class:Xapian::Internal::ExpandWeight
collection_size	weight/weightinternal.h	/^    Xapian::doccount collection_size;$/;"	m	class:Xapian::Weight::Internal
collection_size_	include/xapian/weight.h	/^    Xapian::doccount collection_size_;$/;"	m	class:Xapian::Weight
collectionfreq_	include/xapian/weight.h	/^    Xapian::termcount collectionfreq_;$/;"	m	class:Xapian::Weight
collfreq	backends/chert/chert_alltermslist.h	/^    mutable Xapian::termcount collfreq;$/;"	m	class:ChertAllTermsList
collfreq	backends/glass/glass_alltermslist.h	/^    mutable Xapian::termcount collfreq;$/;"	m	class:GlassAllTermsList
collfreq	weight/weightinternal.h	/^    Xapian::termcount collfreq;$/;"	m	struct:TermFreqs
collide	queryparser/lemon.c	/^  struct action *collide;  \/* Next action with the same hash *\/$/;"	m	struct:action	typeref:struct:action::action	file:
combine_AND	tests/soaktest/soaktest_queries.cc	/^static void combine_AND(QueryBuilderEnv & env)$/;"	f	file:
combine_NOT	tests/soaktest/soaktest_queries.cc	/^static void combine_NOT(QueryBuilderEnv & env)$/;"	f	file:
combine_OR	tests/soaktest/soaktest_queries.cc	/^static void combine_OR(QueryBuilderEnv & env)$/;"	f	file:
combine_XOR	tests/soaktest/soaktest_queries.cc	/^static void combine_XOR(QueryBuilderEnv & env)$/;"	f	file:
combiner	api/queryinternal.h	/^    Query::op combiner;$/;"	m	class:Xapian::Internal::QueryWildcard
command_count	languages/compiler/header.h	/^    int command_count;        \/* in this among *\/$/;"	m	struct:among
commands	languages/compiler/header.h	/^    struct node ** commands;  \/* array with command_count entries *\/$/;"	m	struct:among	typeref:struct:among::node
commit	api/omdatabase.cc	/^WritableDatabase::commit()$/;"	f	class:Xapian::WritableDatabase
commit	backends/chert/chert_btreebase.cc	/^ChertTable_base::commit()$/;"	f	class:ChertTable_base
commit	backends/chert/chert_database.cc	/^ChertWritableDatabase::commit()$/;"	f	class:ChertWritableDatabase
commit	backends/chert/chert_table.cc	/^ChertTable::commit(chert_revision_number_t revision, int changes_fd,$/;"	f	class:ChertTable
commit	backends/database.cc	/^Database::Internal::commit()$/;"	f	class:Xapian::Database::Internal
commit	backends/glass/glass_changes.cc	/^GlassChanges::commit(glass_revision_number_t new_rev, int flags)$/;"	f	class:GlassChanges
commit	backends/glass/glass_database.cc	/^GlassWritableDatabase::commit()$/;"	f	class:GlassWritableDatabase
commit	backends/glass/glass_databasereplicator.cc	/^GlassDatabaseReplicator::commit() const$/;"	f	class:GlassDatabaseReplicator
commit	backends/glass/glass_freelist.cc	/^GlassFreeList::commit(const GlassTable * B, uint4 block_size)$/;"	f	class:GlassFreeList
commit	backends/glass/glass_table.cc	/^GlassTable::commit(glass_revision_number_t revision, RootInfo * root_info)$/;"	f	class:GlassTable
commit	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::commit()$/;"	f	class:InMemoryDatabase
commit	backends/remote/remote-database.cc	/^RemoteDatabase::commit()$/;"	f	class:RemoteDatabase
commit_transaction	api/omdatabase.cc	/^WritableDatabase::commit_transaction()$/;"	f	class:Xapian::WritableDatabase
commit_transaction	backends/database.cc	/^Database::Internal::commit_transaction()$/;"	f	class:Xapian::Database::Internal
common_prefix_length	common/stringutils.h	/^common_prefix_length(const std::string &a, const std::string &b)$/;"	f
comp_stream	backends/glass/glass_table.h	/^	mutable CompressionStream comp_stream;$/;"	m	class:GlassTable
compact	api/compactor.cc	/^Compactor::compact()$/;"	f	class:Xapian::Compactor
compact	backends/chert/chert_compact.cc	/^ChertDatabase::compact(Xapian::Compactor * compactor,$/;"	f	class:ChertDatabase
compact	backends/chert/chert_table.cc	/^ChertTable::compact(uint8_t * p)$/;"	f	class:ChertTable
compact	backends/glass/glass_compact.cc	/^GlassDatabase::compact(Xapian::Compactor * compactor,$/;"	f	class:GlassDatabase
compact	backends/glass/glass_table.cc	/^GlassTable::compact(uint8_t * p)$/;"	f	class:GlassTable
compact	include/xapian/database.h	/^	void compact(const std::string & output,$/;"	f	class:Xapian::Database
compact	include/xapian/database.h	/^	void compact(int fd,$/;"	f	class:Xapian::Database
compact_	api/compactor.cc	/^Database::compact_(const string * output_ptr, int fd, unsigned flags,$/;"	f	class:Xapian::Database
compaction_level	include/xapian/compactor.h	/^    } compaction_level;$/;"	t	class:Xapian::Compactor	typeref:enum:Xapian::Compactor::__anon17
compare	backends/glass/glass_table.h	/^compare(BItem a, BItem b)$/;"	f	namespace:Glass
compare	backends/glass/glass_table.h	/^int compare(ITEM1 a, ITEM2 b)$/;"	f	namespace:Glass
compare	backends/inmemory/KeyDomet.h	/^        int compare(const KeyDometStr<Imp, Size_>& other) const$/;"	f	class:kdmt::KeyDometSize::KeyDometStr
compare_amongvec	languages/compiler/analyser.c	/^static int compare_amongvec(const void *pv, const void *qv) {$/;"	f	file:
compare_node	languages/compiler/analyser.c	/^static int compare_node(const struct node *p, const struct node *q) {$/;"	f	file:
compare_words	languages/compiler/tokeniser.c	/^static int compare_words(int m, symbol * p, int n, const byte * q) {$/;"	f	file:
component_of	backends/chert/chert_table.h	/^    int component_of() const {$/;"	f	class:Item_base
component_of	backends/glass/glass_table.h	/^    int component_of() const {$/;"	f	class:Glass::BItem_base
component_of	backends/glass/glass_table.h	/^    int component_of() const {$/;"	f	class:Glass::LeafItem_base
components_of	backends/chert/chert_table.h	/^    int components_of() const {$/;"	f	class:Item_base
compress	common/compression_stream.cc	/^CompressionStream::compress(const char* buf, size_t* p_size) {$/;"	f	class:CompressionStream
compress_min	backends/glass/glass_table.h	/^	uint4 compress_min;$/;"	m	class:GlassTable
compress_min	backends/glass/glass_version.h	/^    uint4 compress_min;$/;"	m	class:Glass::RootInfo
compress_min_tab	backends/glass/glass_version.cc	/^static const uint4 compress_min_tab[] = {$/;"	v	file:
compress_strategy	backends/chert/chert_table.h	/^	int compress_strategy;$/;"	m	class:ChertTable
compress_strategy	common/compression_stream.h	/^    int compress_strategy;$/;"	m	class:CompressionStream
compute_action	queryparser/lemon.c	/^PRIVATE int compute_action(struct lemon *lemp, struct action *ap)$/;"	f
config	queryparser/lemon.c	/^struct config {$/;"	s	file:
confighash	queryparser/lemon.c	/^PRIVATE unsigned confighash(struct config *a)$/;"	f
conn	api/replication.cc	/^    RemoteConnection * conn;$/;"	m	class:DatabaseReplica::Internal	file:
connected_socket	net/tcpserver.cc	/^    int connected_socket;$/;"	m	struct:thread_param	file:
const_info	api/constinfo.cc	/^static const struct Xapian::Internal::constinfo const_info = {$/;"	v	typeref:struct:constinfo	file:
const_iterator	api/smallvector.h	/^	const_iterator() { }$/;"	f	class:Xapian::SmallVector::const_iterator
const_iterator	api/smallvector.h	/^	explicit const_iterator(void * const * ptr_) : ptr(ptr_) { }$/;"	f	class:Xapian::SmallVector::const_iterator
const_iterator	api/smallvector.h	/^    class const_iterator {$/;"	c	class:Xapian::SmallVector
const_iterator	include/xapian/eset.h	/^    typedef Xapian::ESetIterator const_iterator;$/;"	t	class:Xapian::ESet
const_iterator	include/xapian/mset.h	/^    typedef Xapian::MSetIterator const_iterator;$/;"	t	class:Xapian::MSet
const_iterator	net/resolver.h	/^	explicit const_iterator(struct addrinfo* p_) : p(p_) { }$/;"	f	class:Resolver::const_iterator
const_iterator	net/resolver.h	/^    class const_iterator {$/;"	c	class:Resolver
const_pointer	include/xapian/eset.h	/^    typedef const value_type * const_pointer;$/;"	t	class:Xapian::ESet
const_pointer	include/xapian/mset.h	/^    typedef const value_type * const_pointer;$/;"	t	class:Xapian::MSet
const_reference	include/xapian/eset.h	/^    typedef const value_type & const_reference;$/;"	t	class:Xapian::ESet
const_reference	include/xapian/mset.h	/^    typedef const value_type & const_reference;$/;"	t	class:Xapian::MSet
constinfo	include/xapian/constinfo.h	/^struct constinfo {$/;"	s	namespace:Xapian::Internal
contains	api/omenquire.cc	/^RSet::contains(Xapian::docid did) const$/;"	f	class:Xapian::RSet
contains	include/xapian/enquire.h	/^	bool contains(const Xapian::MSetIterator & i) const { return contains(*i); }$/;"	f	class:Xapian::RSet
context	backends/remote/remote-database.h	/^    string context;$/;"	m	class:RemoteDatabase
context	include/xapian/error.h	/^    std::string context;$/;"	m	class:Xapian::Error
context	net/remoteconnection.h	/^    std::string context;$/;"	m	class:RemoteConnection
convert_numeric_string	languages/compiler/tokeniser.c	/^static void convert_numeric_string(struct tokeniser * t, symbol * p, int base) {$/;"	f	file:
convert_to_percent	api/omenquire.cc	/^MSet::convert_to_percent(double wt) const$/;"	f	class:Xapian::MSet
convert_to_percent	include/xapian/mset.h	/^MSet::convert_to_percent(const MSetIterator & it) const {$/;"	f	class:Xapian::MSet
convert_to_percent_internal	api/omenquire.cc	/^MSet::Internal::convert_to_percent_internal(double wt) const$/;"	f	class:Xapian::MSet::Internal
coords	include/xapian/geospatial.h	/^    std::vector<LatLongCoord> coords;$/;"	m	class:Xapian::LatLongCoords
copy_b	languages/compiler/space.c	/^extern symbol * copy_b(const symbol * p) {$/;"	f
copy_from_count	languages/compiler/header.h	/^    int copy_from_count; \/* count of calls to copy_from() *\/$/;"	m	struct:generator
corrected_query	queryparser/queryparser_internal.h	/^    string corrected_query;$/;"	m	class:Xapian::QueryParser::Internal
count	languages/compiler/header.h	/^    int count;                  \/* 0, 1, 2 for each type *\/$/;"	m	struct:name
count	queryparser/lemon.c	/^  int count;              \/* Number of currently slots filled *\/$/;"	m	struct:s_x1	file:
count	queryparser/lemon.c	/^  int count;              \/* Number of currently slots filled *\/$/;"	m	struct:s_x2	file:
count	queryparser/lemon.c	/^  int count;              \/* Number of currently slots filled *\/$/;"	m	struct:s_x3	file:
count	queryparser/lemon.c	/^  int count;              \/* Number of currently slots filled *\/$/;"	m	struct:s_x4	file:
count	tests/api_postingsource.cc	/^    int & count;$/;"	m	class:SlowDecreasingValueWeightPostingSource	file:
count	tests/internaltest.cc	/^    static int count;$/;"	m	struct:TempDtorTest	file:
count	tests/internaltest.cc	/^int TempDtorTest::count = 0;$/;"	m	class:TempDtorTest	file:
count_error	languages/compiler/analyser.c	/^static void count_error(struct analyser * a) {$/;"	f	file:
count_matching_subqs	api/leafpostlist.cc	/^LeafPostList::count_matching_subqs() const$/;"	f	class:LeafPostList
count_matching_subqs	api/postlist.cc	/^PostList::count_matching_subqs() const$/;"	f	class:Xapian::PostList
count_matching_subqs	matcher/andmaybepostlist.cc	/^AndMaybePostList::count_matching_subqs() const$/;"	f	class:AndMaybePostList
count_matching_subqs	matcher/andnotpostlist.cc	/^AndNotPostList::count_matching_subqs() const$/;"	f	class:AndNotPostList
count_matching_subqs	matcher/externalpostlist.cc	/^ExternalPostList::count_matching_subqs() const$/;"	f	class:ExternalPostList
count_matching_subqs	matcher/extraweightpostlist.h	/^	Xapian::termcount count_matching_subqs() const {$/;"	f	class:ExtraWeightPostList
count_matching_subqs	matcher/maxpostlist.cc	/^MaxPostList::count_matching_subqs() const$/;"	f	class:MaxPostList
count_matching_subqs	matcher/mergepostlist.cc	/^MergePostList::count_matching_subqs() const$/;"	f	class:MergePostList
count_matching_subqs	matcher/multiandpostlist.cc	/^MultiAndPostList::count_matching_subqs() const$/;"	f	class:MultiAndPostList
count_matching_subqs	matcher/multixorpostlist.cc	/^MultiXorPostList::count_matching_subqs() const$/;"	f	class:MultiXorPostList
count_matching_subqs	matcher/orpospostlist.cc	/^OrPosPostList::count_matching_subqs() const$/;"	f	class:OrPosPostList
count_matching_subqs	matcher/orpostlist.cc	/^OrPostList::count_matching_subqs() const$/;"	f	class:OrPostList
count_matching_subqs	matcher/selectpostlist.h	/^	Xapian::termcount count_matching_subqs() const {$/;"	f	class:SelectPostList
count_matching_subqs	matcher/synonympostlist.cc	/^SynonymPostList::count_matching_subqs() const$/;"	f	class:SynonymPostList
count_matching_subqs	matcher/valuerangepostlist.cc	/^ValueRangePostList::count_matching_subqs() const$/;"	f	class:ValueRangePostList
count_set_bits	backends/glass/glass_freelist.cc	/^GlassFreeListChecker::count_set_bits(uint4 * p_first_bad_blk) const$/;"	f	class:GlassFreeListChecker
count_zero_length_docs	bin/xapian-delve.cc	/^static bool count_zero_length_docs = false;$/;"	v	file:
counting	include/xapian/intrusive_ptr.h	/^    bool counting;$/;"	m	class:Xapian::Internal::opt_intrusive_ptr
cp_R	tests/harness/unixcmds.cc	/^void cp_R(const std::string &src, const std::string &dest) {$/;"	f
create	backends/chert/chert_version.cc	/^ChertVersion::create()$/;"	f	class:ChertVersion
create	backends/glass/glass_version.cc	/^GlassVersion::create(unsigned blocksize)$/;"	f	class:GlassVersion
create	queryparser/queryparser_internal.cc	/^    static TermGroup* create(Term* t1, Term* t2) {$/;"	f	class:TermGroup
create	queryparser/queryparser_internal.cc	/^    static Terms* create() {$/;"	f	class:Terms
create_analyser	languages/compiler/analyser.c	/^extern struct analyser * create_analyser(struct tokeniser * t) {$/;"	f
create_and_open	backends/chert/chert_lazytable.h	/^    void create_and_open(unsigned int blocksize) {$/;"	f	class:ChertLazyTable
create_and_open	backends/chert/chert_table.cc	/^ChertTable::create_and_open(unsigned int block_size_)$/;"	f	class:ChertTable
create_and_open	backends/chert/chert_termlisttable.h	/^    void create_and_open(unsigned int blocksize) {$/;"	f	class:ChertTermListTable
create_and_open	backends/glass/glass_table.cc	/^GlassTable::create_and_open(int flags_, const RootInfo & root_info)$/;"	f	class:GlassTable
create_and_open_tables	backends/chert/chert_database.cc	/^ChertDatabase::create_and_open_tables(unsigned int block_size)$/;"	f	class:ChertDatabase
create_and_open_tables	backends/glass/glass_database.cc	/^GlassDatabase::create_and_open_tables(int flags, unsigned int block_size)$/;"	f	class:GlassDatabase
create_b	languages/compiler/space.c	/^extern symbol * create_b(int n) {$/;"	f
create_changeset_file	common/replicate_utils.cc	/^create_changeset_file(const string & changeset_dir,$/;"	f
create_dir_if_needed	tests/harness/backendmanager.cc	/^BackendManager::create_dir_if_needed(const string &dirname)$/;"	f	class:BackendManager
create_generator	languages/compiler/generator.c	/^extern struct generator * create_generator(struct analyser * a, struct options * o) {$/;"	f
create_s	languages/steminternal.cc	/^SnowballStemImplementation::create_s()$/;"	f	class:Xapian::SnowballStemImplementation
create_tokeniser	languages/compiler/tokeniser.c	/^extern struct tokeniser * create_tokeniser(symbol * p, char * file) {$/;"	f
createdb_chert	tests/harness/backendmanager.cc	/^BackendManager::createdb_chert(const vector<string> &files)$/;"	f	class:BackendManager
createdb_glass	tests/harness/backendmanager.cc	/^BackendManager::createdb_glass(const vector<string> &files)$/;"	f	class:BackendManager
createdb_multi	tests/harness/backendmanager_multi.cc	/^BackendManagerMulti::createdb_multi(const string& name,$/;"	f	class:BackendManagerMulti
createdb_singlefile	tests/harness/backendmanager_singlefile.cc	/^BackendManagerSingleFile::createdb_singlefile(const vector<string> & files)$/;"	f	class:BackendManagerSingleFile
ctag	backends/chert/chert_values.cc	/^    string ctag;$/;"	m	class:ValueUpdater	file:
ctag	backends/glass/glass_values.cc	/^    string ctag;$/;"	m	class:Glass::ValueUpdater	file:
cur_pos	queryparser/termgenerator_internal.h	/^    termpos cur_pos;$/;"	m	class:Xapian::TermGenerator::Internal
curr_weight	include/xapian/postingsource.h	/^    double curr_weight;$/;"	m	class:Xapian::DecreasingValueWeightPostingSource
currdoc	backends/multi/multi_postlist.h	/^	Xapian::docid currdoc;$/;"	m	class:MultiPostList
current	backends/prefix_compressed_strings.h	/^    std::string current;$/;"	m	class:PrefixCompressedStringItor
current	backends/prefix_compressed_strings.h	/^    std::string current;$/;"	m	class:PrefixCompressedStringWriter
current	matcher/externalpostlist.h	/^    Xapian::docid current;$/;"	m	class:ExternalPostList
current	matcher/mergepostlist.h	/^	int current;$/;"	m	class:MergePostList
current	matcher/orpositionlist.h	/^    std::vector<Xapian::termpos> current;$/;"	m	class:OrPositionList
current	matcher/valuestreamdocument.h	/^    size_t current;$/;"	m	class:ValueStreamDocument
current	queryparser/lemon.c	/^static struct config *current = 0;       \/* Top of list of configurations *\/$/;"	v	typeref:struct:config	file:
current_chunk_contains	backends/chert/chert_postlist.cc	/^ChertPostList::current_chunk_contains(Xapian::docid desired_did)$/;"	f	class:ChertPostList
current_chunk_contains	backends/glass/glass_postlist.cc	/^GlassPostList::current_chunk_contains(Xapian::docid desired_did)$/;"	f	class:GlassPostList
current_did	backends/chert/chert_postlist.cc	/^	Xapian::docid current_did;$/;"	m	class:Chert::PostlistChunkWriter	file:
current_did	backends/glass/glass_postlist.cc	/^	Xapian::docid current_did;$/;"	m	class:Glass::PostlistChunkWriter	file:
current_did	backends/slowvaluelist.h	/^    Xapian::docid current_did;$/;"	m	class:SlowValueList
current_docid	backends/multivaluelist.h	/^    Xapian::docid current_docid;$/;"	m	class:MultiValueList
current_key	backends/chert/chert_cursor.h	/^	string current_key;$/;"	m	class:ChertCursor
current_key	backends/glass/glass_cursor.h	/^	string current_key;$/;"	m	class:GlassCursor
current_pos	backends/chert/chert_positionlist.h	/^    Xapian::termpos current_pos;$/;"	m	class:ChertPositionList
current_pos	backends/glass/glass_positionlist.h	/^    Xapian::termpos current_pos;$/;"	m	class:GlassPositionList
current_pos	matcher/orpositionlist.h	/^    Xapian::termpos current_pos;$/;"	m	class:OrPositionList
current_position	backends/remote/net_termlist.h	/^	vector<NetworkTermListItem>::const_iterator current_position;$/;"	m	class:NetworkTermList
current_tag	backends/chert/chert_cursor.h	/^	string current_tag;$/;"	m	class:ChertCursor
current_tag	backends/glass/glass_cursor.h	/^	string current_tag;$/;"	m	class:GlassCursor
current_term	api/vectortermlist.h	/^    std::string current_term;$/;"	m	class:VectorTermList
current_term	backends/chert/chert_alltermslist.h	/^    std::string current_term;$/;"	m	class:ChertAllTermsList
current_term	backends/chert/chert_spelling.h	/^    std::string current_term;$/;"	m	class:ChertSpellingTermList
current_term	backends/chert/chert_termlist.h	/^    std::string current_term;$/;"	m	class:ChertTermList
current_term	backends/glass/glass_alltermslist.h	/^    std::string current_term;$/;"	m	class:GlassAllTermsList
current_term	backends/glass/glass_spelling.h	/^    std::string current_term;$/;"	m	class:GlassSpellingTermList
current_term	backends/glass/glass_termlist.h	/^    std::string current_term;$/;"	m	class:GlassTermList
current_term	backends/multi/multi_alltermslist.h	/^    std::string current_term;$/;"	m	class:MultiAllTermsList
current_termfreq	backends/chert/chert_termlist.h	/^    mutable Xapian::doccount current_termfreq;$/;"	m	class:ChertTermList
current_termfreq	backends/glass/glass_termlist.h	/^    mutable Xapian::doccount current_termfreq;$/;"	m	class:GlassTermList
current_token	queryparser/cjk-tokenizer.h	/^    mutable std::string current_token;$/;"	m	class:CJKTokenIterator
current_value	backends/slowvaluelist.h	/^    std::string current_value;$/;"	m	class:SlowValueList
current_wdf	backends/chert/chert_termlist.h	/^    Xapian::termcount current_wdf;$/;"	m	class:ChertTermList
current_wdf	backends/glass/glass_termlist.h	/^    Xapian::termcount current_wdf;$/;"	m	class:GlassTermList
currentend	queryparser/lemon.c	/^static struct config **currentend = 0;   \/* Last on list of configs *\/$/;"	v	typeref:struct:config	file:
cursor	backends/chert/chert_alltermslist.h	/^    ChertCursor * cursor;$/;"	m	class:ChertAllTermsList
cursor	backends/chert/chert_metadata.h	/^    ChertCursor * cursor;$/;"	m	class:ChertMetadataTermList
cursor	backends/chert/chert_postlist.h	/^	AutoPtr<ChertCursor> cursor;$/;"	m	class:ChertPostList
cursor	backends/chert/chert_spellingwordslist.h	/^    ChertCursor * cursor;$/;"	m	class:ChertSpellingWordsList
cursor	backends/chert/chert_synonym.h	/^    ChertCursor * cursor;$/;"	m	class:ChertSynonymTermList
cursor	backends/chert/chert_valuelist.h	/^    ChertCursor * cursor;$/;"	m	class:ChertValueList
cursor	backends/chert/chert_values.h	/^    mutable AutoPtr<ChertCursor> cursor;$/;"	m	class:ChertValueManager
cursor	backends/glass/glass_alltermslist.h	/^    GlassCursor * cursor;$/;"	m	class:GlassAllTermsList
cursor	backends/glass/glass_metadata.h	/^    GlassCursor * cursor;$/;"	m	class:GlassMetadataTermList
cursor	backends/glass/glass_positionlist.h	/^    AutoPtr<GlassCursor> cursor;$/;"	m	class:GlassPositionList
cursor	backends/glass/glass_postlist.h	/^	AutoPtr<GlassCursor> cursor;$/;"	m	class:GlassPostList
cursor	backends/glass/glass_spellingwordslist.h	/^    GlassCursor * cursor;$/;"	m	class:GlassSpellingWordsList
cursor	backends/glass/glass_synonym.h	/^    GlassCursor * cursor;$/;"	m	class:GlassSynonymTermList
cursor	backends/glass/glass_valuelist.h	/^    GlassCursor * cursor;$/;"	m	class:GlassValueList
cursor	backends/glass/glass_values.h	/^    mutable AutoPtr<GlassCursor> cursor;$/;"	m	class:GlassValueManager
cursor	matcher/msetpostlist.h	/^    int cursor;$/;"	m	class:MSetPostList
cursor_created_since_last_modification	backends/chert/chert_table.h	/^	mutable bool cursor_created_since_last_modification;$/;"	m	class:ChertTable
cursor_created_since_last_modification	backends/glass/glass_table.h	/^	mutable bool cursor_created_since_last_modification;$/;"	m	class:GlassTable
cursor_get	backends/chert/chert_table.cc	/^ChertCursor * ChertTable::cursor_get() const {$/;"	f	class:ChertTable
cursor_get	backends/glass/glass_table.cc	/^GlassCursor * GlassTable::cursor_get() const {$/;"	f	class:GlassTable
cursor_version	backends/chert/chert_table.h	/^	unsigned long cursor_version;$/;"	m	class:ChertTable
cursor_version	backends/glass/glass_table.h	/^	unsigned long cursor_version;$/;"	m	class:GlassTable
d_name	common/msvc_dirent.h	/^    char *d_name;$/;"	m	struct:dirent
data	api/vectortermlist.h	/^    std::string data;$/;"	m	class:VectorTermList
data	backends/chert/chert_postlist.cc	/^    string data;$/;"	m	class:Chert::PostlistChunkReader	file:
data	backends/chert/chert_spelling.h	/^    char data[4];$/;"	m	struct:fragment
data	backends/chert/chert_spelling.h	/^    std::string data;$/;"	m	class:ChertSpellingTermList
data	backends/chert/chert_termlist.h	/^    std::string data;$/;"	m	class:ChertTermList
data	backends/document.h	/^	string data;$/;"	m	class:Xapian::Document::Internal
data	backends/glass/glass_cursor.h	/^	char * data;$/;"	m	class:Glass::Cursor
data	backends/glass/glass_postlist.cc	/^    string data;$/;"	m	class:Glass::PostlistChunkReader	file:
data	backends/glass/glass_spelling.h	/^    char data[4];$/;"	m	struct:Glass::fragment
data	backends/glass/glass_spelling.h	/^    std::string data;$/;"	m	class:GlassSpellingTermList
data	backends/glass/glass_table.h	/^    const uint8_t * data() const { return p + K1; }$/;"	f	class:Glass::Key
data	backends/glass/glass_termlist.h	/^    std::string data;$/;"	m	class:GlassTermList
data	backends/uuids.h	/^    const char* data() const {$/;"	f	class:Uuid
data	languages/compiler/space.c	/^    symbol * data;$/;"	m	struct:str	file:
data	queryparser/lemon.c	/^  const char *data;        \/* The data *\/$/;"	m	struct:s_x1node	file:
data	queryparser/lemon.c	/^  struct config *data;                  \/* The data *\/$/;"	m	struct:s_x4node	typeref:struct:s_x4node::config	file:
data	queryparser/lemon.c	/^  struct state *data;                  \/* The data *\/$/;"	m	struct:s_x3node	typeref:struct:s_x3node::state	file:
data	queryparser/lemon.c	/^  struct symbol *data;     \/* The data *\/$/;"	m	struct:s_x2node	typeref:struct:s_x2node::symbol	file:
data_here	backends/document.h	/^	bool data_here;$/;"	m	class:Xapian::Document::Internal
data_modified	backends/document.h	/^	bool data_modified() const {$/;"	f	class:Xapian::Document::Internal
database	backends/chert/chert_alltermslist.h	/^    Xapian::Internal::intrusive_ptr<const ChertDatabase> database;$/;"	m	class:ChertAllTermsList
database	backends/chert/chert_metadata.h	/^    Xapian::Internal::intrusive_ptr<const Xapian::Database::Internal> database;$/;"	m	class:ChertMetadataTermList
database	backends/chert/chert_spellingwordslist.h	/^    Xapian::Internal::intrusive_ptr<const Xapian::Database::Internal> database;$/;"	m	class:ChertSpellingWordsList
database	backends/chert/chert_synonym.h	/^    Xapian::Internal::intrusive_ptr<const Xapian::Database::Internal> database;$/;"	m	class:ChertSynonymTermList
database	backends/document.h	/^	Xapian::Internal::intrusive_ptr<const Xapian::Database::Internal> database;$/;"	m	class:Xapian::Document::Internal
database	backends/glass/glass_alltermslist.h	/^    Xapian::Internal::intrusive_ptr<const GlassDatabase> database;$/;"	m	class:GlassAllTermsList
database	backends/glass/glass_metadata.h	/^    Xapian::Internal::intrusive_ptr<const Xapian::Database::Internal> database;$/;"	m	class:GlassMetadataTermList
database	backends/glass/glass_spellingwordslist.h	/^    Xapian::Internal::intrusive_ptr<const Xapian::Database::Internal> database;$/;"	m	class:GlassSpellingWordsList
database	backends/glass/glass_synonym.h	/^    Xapian::Internal::intrusive_ptr<const Xapian::Database::Internal> database;$/;"	m	class:GlassSynonymTermList
database	backends/inmemory/inmemory_alltermslist.h	/^	Xapian::Internal::intrusive_ptr<const InMemoryDatabase> database;$/;"	m	class:InMemoryAllTermsList
database_exists	backends/chert/chert_database.cc	/^ChertDatabase::database_exists() {$/;"	f	class:ChertDatabase
database_exists	backends/glass/glass_database.cc	/^GlassDatabase::database_exists() {$/;"	f	class:GlassDatabase
database_size	backends/remote/net_termlist.h	/^	Xapian::doccount database_size;$/;"	m	class:NetworkTermList
datadir	Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	docs/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	tests/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	tests/harness/backendmanager.h	/^    std::string datadir;$/;"	m	class:BackendManager
datadir	tests/harness/index_utils.h	/^    std::string datadir;$/;"	m	class:FileIndexer
datarootdir	Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	docs/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	tests/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datatype	queryparser/lemon.c	/^  char *datatype;          \/* The data type of information held by this$/;"	m	struct:symbol	file:
db	api/omenquireinternal.h	/^	const Xapian::Database db;$/;"	m	class:Xapian::Enquire::Internal
db	backends/chert/chert_termlist.h	/^    Xapian::Internal::intrusive_ptr<const ChertDatabase> db;$/;"	m	class:ChertTermList
db	backends/chert/chert_valuelist.h	/^    Xapian::Internal::intrusive_ptr<const ChertDatabase> db;$/;"	m	class:ChertValueList
db	backends/contiguousalldocspostlist.h	/^    Xapian::Internal::intrusive_ptr<const Xapian::Database::Internal> db;$/;"	m	class:ContiguousAllDocsPostList
db	backends/glass/glass_termlist.h	/^    Xapian::Internal::intrusive_ptr<const GlassDatabase> db;$/;"	m	class:GlassTermList
db	backends/glass/glass_valuelist.h	/^    Xapian::Internal::intrusive_ptr<const GlassDatabase> db;$/;"	m	class:GlassValueList
db	backends/inmemory/inmemory_database.h	/^	Xapian::Internal::intrusive_ptr<const InMemoryDatabase> db;$/;"	m	class:InMemoryAllDocsPostList
db	backends/inmemory/inmemory_database.h	/^	Xapian::Internal::intrusive_ptr<const InMemoryDatabase> db;$/;"	m	class:InMemoryPostList
db	backends/inmemory/inmemory_database.h	/^	Xapian::Internal::intrusive_ptr<const InMemoryDatabase> db;$/;"	m	class:InMemoryTermList
db	backends/multi/multi_termlist.h	/^	const Xapian::Database & db;$/;"	m	class:MultiTermList
db	backends/remote/net_postlist.h	/^    Xapian::Internal::intrusive_ptr<const RemoteDatabase> db;$/;"	m	class:NetworkPostList
db	backends/slowvaluelist.h	/^    Xapian::Internal::intrusive_ptr<const Xapian::Database::Internal> db;$/;"	m	class:SlowValueList
db	expand/expandweight.h	/^    const Xapian::Database db;$/;"	m	class:Xapian::Internal::ExpandWeight
db	include/xapian/postingsource.h	/^    Xapian::Database db;$/;"	m	class:Xapian::FixedWeightPostingSource
db	matcher/localsubmatch.h	/^    const Xapian::Database::Internal *db;$/;"	m	class:LocalSubMatch
db	matcher/multimatch.h	/^	const Xapian::Database db;$/;"	m	class:MultiMatch
db	matcher/queryoptimiser.h	/^    const Xapian::Database::Internal & db;$/;"	m	class:QueryOptimiser
db	matcher/remotesubmatch.h	/^    RemoteDatabase *db;$/;"	m	class:RemoteSubMatch
db	matcher/valuerangepostlist.h	/^    const Xapian::Database::Internal *db;$/;"	m	class:ValueRangePostList
db	matcher/valuestreamdocument.h	/^    Xapian::Database db;$/;"	m	class:ValueStreamDocument
db	net/remoteserver.h	/^    Xapian::Database * db;$/;"	m	class:RemoteServer
db	queryparser/queryparser_internal.h	/^    Database db;$/;"	m	class:Xapian::QueryParser::Internal
db	queryparser/termgenerator_internal.h	/^    WritableDatabase db;$/;"	m	class:Xapian::TermGenerator::Internal
db	tests/api_closedb.cc	/^    Xapian::Database db;$/;"	m	struct:closedb1_iterators	file:
db	tests/api_weight.cc	/^    Xapian::Database db;$/;"	m	class:CheckStatsWeight	file:
db	weight/weightinternal.h	/^    Xapian::Database db;$/;"	m	class:Xapian::Weight::Internal
db_dir	backends/chert/chert_database.h	/^	std::string db_dir;$/;"	m	class:ChertDatabase
db_dir	backends/chert/chert_databasereplicator.h	/^	std::string db_dir;$/;"	m	class:ChertDatabaseReplicator
db_dir	backends/glass/glass_database.h	/^	std::string db_dir;$/;"	m	class:GlassDatabase
db_dir	backends/glass/glass_databasereplicator.h	/^	std::string db_dir;$/;"	m	class:GlassDatabaseReplicator
db_dir	backends/glass/glass_version.h	/^    std::string db_dir;$/;"	m	class:GlassVersion
db_idx	backends/multi/multi_valuelist.cc	/^    unsigned db_idx;$/;"	m	struct:SubValueList	file:
db_index	backends/multi/multi_termlist.h	/^	size_t db_index;$/;"	m	class:MultiTermList
db_index	expand/expandweight.h	/^    size_t db_index;$/;"	m	class:Xapian::Internal::ExpandStats
db_size	matcher/maxpostlist.h	/^    Xapian::doccount db_size;$/;"	m	class:MaxPostList
db_size	matcher/multiandpostlist.h	/^    Xapian::doccount db_size;$/;"	m	class:MultiAndPostList
db_size	matcher/multixorpostlist.h	/^    Xapian::doccount db_size;$/;"	m	class:MultiXorPostList
db_size	matcher/queryoptimiser.h	/^    Xapian::doccount db_size;$/;"	m	class:QueryOptimiser
db_size	matcher/valuerangepostlist.h	/^    Xapian::doccount db_size;$/;"	m	class:ValueRangePostList
dbcheck	tests/dbcheck.cc	/^dbcheck(const Xapian::Database & db,$/;"	f
dbnames	backends/glass/glass_databasereplicator.cc	/^static const char * dbnames =$/;"	v	file:
dbpaths	net/remotetcpserver.h	/^    const std::vector<std::string> dbpaths;$/;"	m	class:RemoteTcpServer
dbs_seen	expand/expandweight.h	/^    std::vector<bool> dbs_seen;$/;"	m	class:Xapian::Internal::ExpandStats
dbsize	expand/expandweight.h	/^    Xapian::doccount dbsize;$/;"	m	class:Xapian::Internal::ExpandStats
dbsize	expand/expandweight.h	/^    Xapian::doccount dbsize;$/;"	m	class:Xapian::Internal::ExpandWeight
dbsize	matcher/andmaybepostlist.h	/^	Xapian::doccount dbsize; \/\/ only need in case we decay to an AndPostList$/;"	m	class:AndMaybePostList
dbsize	matcher/andnotpostlist.h	/^	Xapian::doccount dbsize;$/;"	m	class:AndNotPostList
dbsize	matcher/orpostlist.h	/^	Xapian::doccount dbsize;$/;"	m	class:OrPostList
debug_count	languages/compiler/header.h	/^    int debug_count;$/;"	m	struct:generator
debuglog_categories	common/debuglog.h	/^enum debuglog_categories {$/;"	g
decimal_to_num	languages/compiler/tokeniser.c	/^static int decimal_to_num(int ch) {$/;"	f	file:
declaration_line_number	languages/compiler/header.h	/^    int declaration_line_number;\/* Line number of declaration *\/$/;"	m	struct:name
declarations	languages/compiler/header.h	/^    struct str * declarations; \/* str storing variable declarations *\/$/;"	m	struct:generator	typeref:struct:generator::str
declargslot	queryparser/lemon.c	/^  char **declargslot;        \/* Where the declaration argument should be put *\/$/;"	m	struct:pstate	file:
declassoc	queryparser/lemon.c	/^  enum e_assoc declassoc;    \/* Assign this association to decl arguments *\/$/;"	m	struct:pstate	typeref:enum:pstate::e_assoc	file:
declkeyword	queryparser/lemon.c	/^  const char *declkeyword;   \/* Keyword of a declaration *\/$/;"	m	struct:pstate	file:
decllinenoslot	queryparser/lemon.c	/^  int *decllinenoslot;       \/* Where to write declaration line number *\/$/;"	m	struct:pstate	file:
decode	common/bitstream.cc	/^BitReader::decode(Xapian::termpos outof, bool force)$/;"	f	class:Xapian::BitReader
decode	geospatial/geoencode.cc	/^GeoEncode::DecoderWithBoundingBox::decode(const std::string & value,$/;"	f	class:GeoEncode::DecoderWithBoundingBox
decode	geospatial/geoencode.cc	/^GeoEncode::decode(const char * value, size_t len,$/;"	f	class:GeoEncode
decode	geospatial/geoencode.h	/^decode(const std::string & value, double & lat_ref, double & lon_ref)$/;"	f	namespace:GeoEncode
decode_and_show_value	bin/xapian-delve.cc	/^decode_and_show_value(const string& value)$/;"	f	file:
decode_interpolative	common/bitstream.cc	/^BitReader::decode_interpolative(int j, int k,$/;"	f	class:Xapian::BitReader
decode_interpolative_next	common/bitstream.cc	/^BitReader::decode_interpolative_next()$/;"	f	class:Xapian::BitReader
decode_length	net/length.cc	/^decode_length(const char ** p, const char *end, unsigned & out)$/;"	f
decode_length	net/length.cc	/^decode_length(const char ** p, const char *end, unsigned long & out)$/;"	f
decode_length	net/length.cc	/^decode_length(const char ** p, const char *end, unsigned long long & out)$/;"	f
decode_length_	net/length.cc	/^decode_length_(const char ** p, const char *end, T & out)$/;"	f	file:
decode_length_and_check	net/length.cc	/^decode_length_and_check(const char ** p, const char *end, unsigned & out)$/;"	f
decode_length_and_check	net/length.cc	/^decode_length_and_check(const char ** p, const char *end, unsigned long & out)$/;"	f
decode_length_and_check	net/length.cc	/^decode_length_and_check(const char ** p, const char *end,$/;"	f
decode_length_and_check_	net/length.cc	/^decode_length_and_check_(const char ** p, const char *end, T & out)$/;"	f	file:
decode_qp_flag	examples/quest.cc	/^decode_qp_flag(const char * s)$/;"	f	file:
decode_qp_op	examples/quest.cc	/^decode_qp_op(const char * s)$/;"	f	file:
decode_wt	examples/quest.cc	/^decode_wt(const char * s)$/;"	f	file:
decode_xxy	api/valuerangeproc.cc	/^decode_xxy(const string & s, int & x1, int &x2, int &y)$/;"	f	namespace:Xapian
decompress_chunk	backends/glass/glass_table.h	/^    bool decompress_chunk(CompressionStream& comp_stream, string& tag) const {$/;"	f	class:Glass::LeafItem_base
decompress_chunk	common/compression_stream.cc	/^CompressionStream::decompress_chunk(const char* p, int len, string & buf)$/;"	f	class:CompressionStream
decompress_start	common/compression_stream.h	/^    void decompress_start() { lazy_alloc_inflate_zstream(); }$/;"	f	class:CompressionStream
decrease_wdf	api/documentterm.h	/^    void decrease_wdf(Xapian::termcount delta) {$/;"	f	class:OmDocumentTerm
decreasing_relevance	matcher/msetpostlist.h	/^    bool decreasing_relevance;$/;"	m	class:MSetPostList
decreasing_relevance	matcher/remotesubmatch.h	/^    bool decreasing_relevance;$/;"	m	class:RemoteSubMatch
decref	api/positioniterator.cc	/^PositionIterator::decref()$/;"	f	class:Xapian::PositionIterator
decref	api/postingiterator.cc	/^PostingIterator::decref()$/;"	f	class:Xapian::PostingIterator
decref	api/termiterator.cc	/^TermIterator::decref()$/;"	f	class:Xapian::TermIterator
decref	api/valueiterator.cc	/^ValueIterator::decref()$/;"	f	class:Xapian::ValueIterator
default_grouping	queryparser/queryparser_internal.h	/^    bool default_grouping;$/;"	m	struct:Xapian::RangeProc
default_op	queryparser/queryparser_internal.cc	/^    Query::op default_op() const { return qpi->default_op; }$/;"	f	class:State
default_op	queryparser/queryparser_internal.h	/^    Query::op default_op;$/;"	m	class:Xapian::QueryParser::Internal
default_weight	include/xapian/postingsource.h	/^    double default_weight;$/;"	m	class:Xapian::ValueMapPostingSource
define-members	docs/apidoc/html/version_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
definition	languages/compiler/header.h	/^    struct node * definition;   \/*    )                           *\/$/;"	m	struct:name	typeref:struct:name::node
defkey	include/xapian/geospatial.h	/^    std::string defkey;$/;"	m	class:Xapian::LatLongDistanceKeyMaker
deflate	tests/zlib-vg.c	/^int deflate(z_streamp strm, int flush) {$/;"	f
deflate_zstream	backends/chert/chert_table.h	/^	mutable z_stream *deflate_zstream;$/;"	m	class:ChertTable
deflate_zstream	common/compression_stream.h	/^    z_stream* deflate_zstream;$/;"	m	class:CompressionStream
defvalue	include/xapian/keymaker.h	/^	std::string defvalue;$/;"	m	struct:Xapian::MultiValueKeyMaker::KeySpec
degrees	geospatial/geoencode.cc	/^    int degrees;$/;"	m	struct:DegreesMinutesSeconds	file:
del	backends/chert/chert_cursor.cc	/^MutableChertCursor::del()$/;"	f	class:MutableChertCursor
del	backends/chert/chert_table.cc	/^ChertTable::del(const string &key)$/;"	f	class:ChertTable
del	backends/glass/glass_cursor.cc	/^MutableGlassCursor::del()$/;"	f	class:MutableGlassCursor
del	backends/glass/glass_table.cc	/^GlassTable::del(const string &key)$/;"	f	class:GlassTable
delete_branch_item	backends/glass/glass_table.cc	/^GlassTable::delete_branch_item(int j)$/;"	f	class:GlassTable
delete_doclength	backends/glass/glass_inverter.h	/^    void delete_doclength(Xapian::docid did) {$/;"	f	class:Inverter
delete_document	api/omdatabase.cc	/^WritableDatabase::delete_document(Xapian::docid did)$/;"	f	class:Xapian::WritableDatabase
delete_document	api/omdatabase.cc	/^WritableDatabase::delete_document(const std::string & unique_term)$/;"	f	class:Xapian::WritableDatabase
delete_document	backends/chert/chert_database.cc	/^ChertWritableDatabase::delete_document(Xapian::docid did)$/;"	f	class:ChertWritableDatabase
delete_document	backends/chert/chert_dbstats.h	/^    void delete_document(Xapian::termcount doclen) {$/;"	f	class:ChertDatabaseStats
delete_document	backends/chert/chert_values.cc	/^ChertValueManager::delete_document(Xapian::docid did,$/;"	f	class:ChertValueManager
delete_document	backends/database.cc	/^Database::Internal::delete_document(Xapian::docid)$/;"	f	class:Xapian::Database::Internal
delete_document	backends/database.cc	/^Database::Internal::delete_document(const string & unique_term)$/;"	f	class:Xapian::Database::Internal
delete_document	backends/glass/glass_database.cc	/^GlassWritableDatabase::delete_document(Xapian::docid did)$/;"	f	class:GlassWritableDatabase
delete_document	backends/glass/glass_values.cc	/^GlassValueManager::delete_document(Xapian::docid did,$/;"	f	class:GlassValueManager
delete_document	backends/glass/glass_version.h	/^    void delete_document(Xapian::termcount doclen) {$/;"	f	class:GlassVersion
delete_document	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::delete_document(Xapian::docid did)$/;"	f	class:InMemoryDatabase
delete_document	backends/remote/remote-database.cc	/^RemoteDatabase::delete_document(Xapian::docid did)$/;"	f	class:RemoteDatabase
delete_document	backends/remote/remote-database.cc	/^RemoteDatabase::delete_document(const std::string & unique_term)$/;"	f	class:RemoteDatabase
delete_document_data	backends/glass/glass_docdata.h	/^    bool delete_document_data(Xapian::docid did) { return del(make_key(did)); }$/;"	f	class:GlassDocDataTable
delete_item	backends/chert/chert_table.cc	/^ChertTable::delete_item(int j, bool repeatedly)$/;"	f	class:ChertTable
delete_kt	backends/chert/chert_table.cc	/^ChertTable::delete_kt()$/;"	f	class:ChertTable
delete_kt	backends/glass/glass_table.cc	/^GlassTable::delete_kt()$/;"	f	class:GlassTable
delete_leaf_item	backends/glass/glass_table.cc	/^GlassTable::delete_leaf_item(bool repeatedly)$/;"	f	class:GlassTable
delete_positionlist	backends/chert/chert_positionlist.h	/^    void delete_positionlist(Xapian::docid did, const string & tname) {$/;"	f	class:ChertPositionListTable
delete_positionlist	backends/glass/glass_inverter.cc	/^Inverter::delete_positionlist(Xapian::docid did,$/;"	f	class:Inverter
delete_positionlist	backends/glass/glass_positionlist.h	/^    void delete_positionlist(Xapian::docid did, const string & tname) {$/;"	f	class:GlassPositionListTable
delete_ptr	api/queryinternal.cc	/^template<class CLASS> struct delete_ptr {$/;"	s	file:
delete_ptr	backends/multi/multi_alltermslist.cc	/^template<class CLASS> struct delete_ptr {$/;"	s	file:
delete_ptr	backends/multi/multi_valuelist.cc	/^template<class CLASS> struct delete_ptr {$/;"	s	file:
delete_ptr	expand/esetinternal.cc	/^template<class CLASS> struct delete_ptr {$/;"	s	namespace:Xapian	file:
delete_record	backends/chert/chert_record.cc	/^ChertRecordTable::delete_record(Xapian::docid did)$/;"	f	class:ChertRecordTable
delete_termlist	backends/chert/chert_termlisttable.h	/^    void delete_termlist(Xapian::docid did) { del(make_key(did)); }$/;"	f	class:ChertTermListTable
delete_termlist	backends/glass/glass_termlisttable.h	/^    void delete_termlist(Xapian::docid did) { del(make_key(did)); }$/;"	f	class:GlassTermListTable
deleteconfig	queryparser/lemon.c	/^PRIVATE void deleteconfig(struct config *old)$/;"	f
deleted	tests/internaltest.cc	/^	bool &deleted;$/;"	m	class:test_refcnt	file:
deleted	tests/internaltest.cc	/^    bool &deleted;$/;"	m	class:test_autoptr	file:
depcomp	Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	tests/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
desc	tests/api_serialise.cc	/^    std::string desc;$/;"	m	class:MyPostingSource2	file:
description_append	tests/unittest.cc	/^description_append(std::string & desc, const std::string &s)$/;"	f
description_append	unicode/description_append.cc	/^description_append(std::string & desc, const std::string &s)$/;"	f
destLineno	queryparser/lemon.c	/^  int destLineno;          \/* Line number for start of destructor.  Set to$/;"	m	struct:symbol	file:
destdir_compat	api/compactor.cc	/^    string destdir_compat;$/;"	m	class:Xapian::Compactor::Internal	file:
destroy	backends/glass/glass_cursor.h	/^	void destroy() {$/;"	f	class:Glass::Cursor
destroyed	tests/api_none.cc	/^    DestroyedFlag destroyed;$/;"	m	class:TestExpandDecider	file:
destroyed	tests/api_none.cc	/^    DestroyedFlag destroyed;$/;"	m	class:TestFieldProcessor	file:
destroyed	tests/api_none.cc	/^    DestroyedFlag destroyed;$/;"	m	class:TestKeyMaker	file:
destroyed	tests/api_none.cc	/^    DestroyedFlag destroyed;$/;"	m	class:TestMatchSpy	file:
destroyed	tests/api_none.cc	/^    DestroyedFlag destroyed;$/;"	m	class:TestRangeProcessor	file:
destroyed	tests/api_none.cc	/^    DestroyedFlag destroyed;$/;"	m	class:TestStopper	file:
destroyed	tests/api_none.cc	/^    DestroyedFlag destroyed;$/;"	m	class:TestValueRangeProcessor	file:
destroyed	tests/api_none.cc	/^    bool & destroyed;$/;"	m	class:DestroyedFlag	file:
destructor	queryparser/lemon.c	/^  char *destructor;        \/* Code which executes whenever this symbol is$/;"	m	struct:symbol	file:
details	docs/apidoc/html/classXapian_1_1AssertionError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1BB2Weight.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1BM25PlusWeight.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1BM25Weight.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1BoolWeight.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1Compactor.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1CoordWeight.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1DLHWeight.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1DPHWeight.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1Database.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1DatabaseCorruptError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1DatabaseCreateError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1DatabaseError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1DatabaseLockError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1DatabaseModifiedError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1DatabaseOpeningError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1DatabaseVersionError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1DateRangeProcessor.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1DateValueRangeProcessor.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1DecreasingValueWeightPostingSource.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1DocNotFoundError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1Document.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1ESet.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1ESetIterator.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1Enquire.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1Error.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1ErrorHandler.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1ExpandDecider.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1ExpandDeciderAnd.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1ExpandDeciderFilterPrefix.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1ExpandDeciderFilterTerms.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1FeatureUnavailableError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1FieldProcessor.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1FixedWeightPostingSource.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1GreatCircleMetric.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1IfB2Weight.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1InL2Weight.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1IneB2Weight.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1InternalError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1InvalidArgumentError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1InvalidOperationError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1KeyMaker.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1LMWeight.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1LatLongCoords.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1LatLongCoordsIterator.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1LatLongDistanceKeyMaker.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1LatLongDistancePostingSource.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1LatLongMetric.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1LogicError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1MSet.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1MSetIterator.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1MatchDecider.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1MatchSpy.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1MultiValueKeyMaker.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1NetworkError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1NetworkTimeoutError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1NumberRangeProcessor.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1NumberValueRangeProcessor.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1PL2PlusWeight.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1PL2Weight.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1PositionIterator.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1PostingIterator.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1PostingSource.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1Query.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1QueryParser.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1QueryParserError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1RSet.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1RangeError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1RangeProcessor.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1Registry.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1RuntimeError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1SerialisationError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1SimpleStopper.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1Stem.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1StemImplementation.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1Stopper.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1StringValueRangeProcessor.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1TermGenerator.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1TermIterator.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1TfIdfWeight.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1TradWeight.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1UnimplementedError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1Utf8Iterator.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1ValueCountMatchSpy.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1ValueIterator.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1ValueMapPostingSource.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1ValuePostingSource.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1ValueRangeProcessor.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1ValueSetMatchDecider.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1ValueWeightPostingSource.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1Weight.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1WildcardError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1WritableDatabase.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/compactor_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/constants_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/constinfo_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/database_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/dbfactory_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/document_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/enquire_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/error_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/errorhandler_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/eset_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/expanddecider_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/geospatial_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/keymaker_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/matchspy_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/mset_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/namespaceXapian.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/namespaceXapian_1_1Auto.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/namespaceXapian_1_1Chert.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/namespaceXapian_1_1InMemory.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/namespaceXapian_1_1Remote.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/namespaceXapian_1_1Unicode.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/positioniterator_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/postingiterator_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/postingsource_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/query_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/queryparser_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/registry_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/stem_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/structXapian_1_1LatLongCoord.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/termgenerator_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/termiterator_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/types_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/unicode_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/valueiterator_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/valuesetmatchdecider_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/version_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/weight_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/xapian_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
di_current	common/bitstream.h	/^    DIState di_current;$/;"	m	class:Xapian::BitReader
di_stack	common/bitstream.h	/^    std::vector<DIStack> di_stack;$/;"	m	class:Xapian::BitReader
did	api/omenquireinternal.h	/^	Xapian::docid did;$/;"	m	class:Xapian::Internal::MSetItem
did	backends/chert/chert_postlist.cc	/^    Xapian::docid did;$/;"	m	class:Chert::PostlistChunkReader	file:
did	backends/chert/chert_postlist.h	/^	Xapian::docid did;$/;"	m	class:ChertPostList
did	backends/chert/chert_termlist.h	/^    Xapian::docid did;$/;"	m	class:ChertTermList
did	backends/chert/chert_values.h	/^    Xapian::docid did;$/;"	m	class:ValueChunkReader
did	backends/contiguousalldocspostlist.h	/^    Xapian::docid did;$/;"	m	class:ContiguousAllDocsPostList
did	backends/document.h	/^	Xapian::docid did;$/;"	m	class:Xapian::Document::Internal
did	backends/glass/glass_postlist.cc	/^    Xapian::docid did;$/;"	m	class:Glass::PostlistChunkReader	file:
did	backends/glass/glass_postlist.h	/^	Xapian::docid did;$/;"	m	class:GlassPostList
did	backends/glass/glass_termlist.h	/^    Xapian::docid did;$/;"	m	class:GlassTermList
did	backends/glass/glass_values.h	/^    Xapian::docid did;$/;"	m	class:Glass::ValueChunkReader
did	backends/inmemory/inmemory_database.h	/^	Xapian::docid did;$/;"	m	class:InMemoryAllDocsPostList
did	backends/inmemory/inmemory_database.h	/^	Xapian::docid did;$/;"	m	class:InMemoryPosting
did	backends/inmemory/inmemory_database.h	/^	Xapian::docid did;$/;"	m	class:InMemoryTermList
did	backends/remote/net_termlist.h	/^	Xapian::docid did;$/;"	m	class:NetworkTermList
did	matcher/maxpostlist.h	/^    Xapian::docid did;$/;"	m	class:MaxPostList
did	matcher/multiandpostlist.h	/^    Xapian::docid did;$/;"	m	class:MultiAndPostList
did	matcher/multixorpostlist.h	/^    Xapian::docid did;$/;"	m	class:MultiXorPostList
did	tests/api_postingsource.cc	/^    Xapian::docid did;$/;"	m	class:ChangeMaxweightPostingSource	file:
did	tests/api_postingsource.cc	/^    Xapian::docid did;$/;"	m	class:MyDontAskWeightPostingSource	file:
did	tests/api_postingsource.cc	/^    Xapian::docid did;$/;"	m	class:MyOddPostingSource	file:
did	tests/api_postingsource.cc	/^    Xapian::docid did;$/;"	m	class:MyOddWeightingPostingSource	file:
diffAsOneOrMinusOne	backends/inmemory/KeyDomet.h	/^        static int diffAsOneOrMinusOne(const KeyDomet<Size_>& v1, const KeyDomet<Size_>& v2)$/;"	f	class:kdmt::KeyDometSize::KeyDometStr
difference_type	include/xapian/eset.h	/^    typedef Xapian::termcount_diff difference_type;$/;"	t	class:Xapian::ESet
difference_type	include/xapian/eset.h	/^    typedef Xapian::termcount_diff difference_type;$/;"	t	class:Xapian::ESetIterator
difference_type	include/xapian/geospatial.h	/^    typedef size_t difference_type;$/;"	t	class:Xapian::LatLongCoordsIterator
difference_type	include/xapian/mset.h	/^    typedef Xapian::doccount_diff difference_type;$/;"	t	class:Xapian::MSet
difference_type	include/xapian/mset.h	/^    typedef Xapian::termcount_diff difference_type;$/;"	t	class:Xapian::MSetIterator
difference_type	include/xapian/positioniterator.h	/^    typedef Xapian::termpos_diff difference_type;$/;"	t	class:Xapian::PositionIterator
difference_type	include/xapian/postingiterator.h	/^    typedef Xapian::doccount_diff difference_type;$/;"	t	class:Xapian::PostingIterator
difference_type	include/xapian/termiterator.h	/^    typedef Xapian::termcount_diff difference_type;$/;"	t	class:Xapian::TermIterator
difference_type	include/xapian/unicode.h	/^    typedef size_t difference_type;$/;"	t	class:Xapian::Utf8Iterator
difference_type	include/xapian/valueiterator.h	/^    typedef Xapian::doccount_diff difference_type;$/;"	t	class:Xapian::ValueIterator
difference_type	queryparser/queryparser_internal.cc	/^    typedef Xapian::termcount_diff difference_type;$/;"	t	class:SynonymIterator	file:
different	tests/collate-test	/^different:$/;"	l
diffweight_count	tests/api_opsynonym.cc	/^    int diffweight_count;$/;"	m	struct:synonym1_data_type	file:
dir	common/fileutils.cc	/^    DIR * dir;$/;"	m	class:dircloser	file:
dir_exists	common/filetests.h	/^inline bool dir_exists(const char * path) {$/;"	f
dir_exists	common/filetests.h	/^inline bool dir_exists(const std::string & path) {$/;"	f
dir_void	tests/harness/fdtracker.h	/^    void * dir_void;$/;"	m	class:FDTracker
dircloser	common/fileutils.cc	/^    dircloser(DIR * dir_) : dir(dir_) {}$/;"	f	class:dircloser
dircloser	common/fileutils.cc	/^class dircloser {$/;"	c	file:
dirent	common/msvc_dirent.h	/^struct dirent$/;"	s
disable_token	languages/compiler/tokeniser.c	/^extern void disable_token(struct tokeniser * t, int code) {$/;"	f
discard_changes	backends/chert/chert_synonym.h	/^    void discard_changes() {$/;"	f	class:ChertSynonymTable
discard_changes	backends/glass/glass_synonym.h	/^    void discard_changes() {$/;"	f	class:GlassSynonymTable
discontinuous_longitude_range	geospatial/geoencode.h	/^    bool discontinuous_longitude_range;$/;"	m	class:GeoEncode::DecoderWithBoundingBox
dispatch_func	net/remoteserver.cc	/^typedef void (RemoteServer::* dispatch_func)(const string &);$/;"	t	file:
display_nicely	bin/xapian-inspect.cc	/^display_nicely(const string & data) {$/;"	f	file:
dist	include/xapian/geospatial.h	/^    double dist;$/;"	m	class:Xapian::LatLongDistancePostingSource
dist_m4data_DATA	Makefile	/^dist_m4data_DATA = m4-macros\/xapian.m4$/;"	m
dist_man_MANS	Makefile	/^dist_man_MANS = xapian-config.1 \\$/;"	m
dist_stopword_DATA	Makefile	/^dist_stopword_DATA = $(snowball_stopwords:.txt=.list)$/;"	m
dist_stopword_DATA	languages/Makefile.mk	/^dist_stopword_DATA = $(snowball_stopwords:.txt=.list)$/;"	m
distcleancheck_listfiles	Makefile	/^distcleancheck_listfiles = find . -type f -print$/;"	m
distdir	Makefile	/^distdir = $(PACKAGE)-$(VERSION)$/;"	m
distuninstallcheck_listfiles	Makefile	/^distuninstallcheck_listfiles = find . -type f -print$/;"	m
do_aligned_read	common/wordaccess.h	/^do_aligned_read(const unsigned char * ptr)$/;"	f
do_aligned_write	common/wordaccess.h	/^do_aligned_write(unsigned char * ptr, T value)$/;"	f
do_bswap	common/wordaccess.h	/^inline int do_bswap(uint16_t value) {$/;"	f
do_bswap	common/wordaccess.h	/^inline int do_bswap(uint32_t value) {$/;"	f
do_close	backends/remote/remote-database.cc	/^RemoteDatabase::do_close()$/;"	f	class:RemoteDatabase
do_close	net/remoteconnection.cc	/^RemoteConnection::do_close(bool wait)$/;"	f	class:RemoteConnection
do_clz	common/pack.h	/^do_clz(T value) {$/;"	f
do_clz	common/pack.h	/^do_clz(unsigned long long value) {$/;"	f
do_clz	common/pack.h	/^do_clz(unsigned long value) {$/;"	f
do_clz	common/pack.h	/^do_clz(unsigned value) {$/;"	f
do_get_all_values	backends/chert/chert_document.cc	/^ChertDocument::do_get_all_values(map<Xapian::valueno, string> & values_) const$/;"	f	class:ChertDocument
do_get_all_values	backends/document.h	/^	virtual void do_get_all_values(map<Xapian::valueno, string> & values_) const {$/;"	f	class:Xapian::Document::Internal
do_get_all_values	backends/glass/glass_document.cc	/^GlassDocument::do_get_all_values(map<Xapian::valueno, string> & values_) const$/;"	f	class:GlassDocument
do_get_all_values	backends/inmemory/inmemory_document.cc	/^InMemoryDocument::do_get_all_values(map<Xapian::valueno, string> &values_) const$/;"	f	class:InMemoryDocument
do_get_all_values	backends/remote/remote-document.cc	/^RemoteDocument::do_get_all_values(map<Xapian::valueno, string> &) const$/;"	f	class:RemoteDocument
do_get_all_values	matcher/valuestreamdocument.cc	/^ValueStreamDocument::do_get_all_values(map<Xapian::valueno, string> & v) const$/;"	f	class:ValueStreamDocument
do_get_data	backends/chert/chert_document.cc	/^ChertDocument::do_get_data() const$/;"	f	class:ChertDocument
do_get_data	backends/document.h	/^	virtual string do_get_data() const { return string(); }$/;"	f	class:Xapian::Document::Internal
do_get_data	backends/glass/glass_document.cc	/^GlassDocument::do_get_data() const$/;"	f	class:GlassDocument
do_get_data	backends/inmemory/inmemory_document.cc	/^InMemoryDocument::do_get_data() const$/;"	f	class:InMemoryDocument
do_get_data	backends/remote/remote-document.cc	/^RemoteDocument::do_get_data() const$/;"	f	class:RemoteDocument
do_get_data	matcher/valuestreamdocument.cc	/^ValueStreamDocument::do_get_data() const$/;"	f	class:ValueStreamDocument
do_get_database	tests/harness/backendmanager.cc	/^BackendManager::do_get_database(const vector<string> & files)$/;"	f	class:BackendManager
do_get_database	tests/harness/backendmanager_inmemory.cc	/^BackendManagerInMemory::do_get_database(const vector<string> & files)$/;"	f	class:BackendManagerInMemory
do_get_database	tests/harness/backendmanager_remoteprog.cc	/^BackendManagerRemoteProg::do_get_database(const vector<string> & files)$/;"	f	class:BackendManagerRemoteProg
do_get_database	tests/harness/backendmanager_remotetcp.cc	/^BackendManagerRemoteTcp::do_get_database(const vector<string> & files)$/;"	f	class:BackendManagerRemoteTcp
do_get_database_path	tests/harness/backendmanager.cc	/^BackendManager::do_get_database_path(const vector<string> &)$/;"	f	class:BackendManager
do_get_database_path	tests/harness/backendmanager_chert.cc	/^BackendManagerChert::do_get_database_path(const vector<string> & files)$/;"	f	class:BackendManagerChert
do_get_database_path	tests/harness/backendmanager_glass.cc	/^BackendManagerGlass::do_get_database_path(const vector<string> & files)$/;"	f	class:BackendManagerGlass
do_get_database_path	tests/harness/backendmanager_multi.cc	/^BackendManagerMulti::do_get_database_path(const vector<string> & files)$/;"	f	class:BackendManagerMulti
do_get_database_path	tests/harness/backendmanager_singlefile.cc	/^BackendManagerSingleFile::do_get_database_path(const vector<string> & files)$/;"	f	class:BackendManagerSingleFile
do_get_value	backends/chert/chert_document.cc	/^ChertDocument::do_get_value(Xapian::valueno slot) const$/;"	f	class:ChertDocument
do_get_value	backends/document.h	/^	virtual string do_get_value(Xapian::valueno \/*valueno*\/) const { return string(); }$/;"	f	class:Xapian::Document::Internal
do_get_value	backends/glass/glass_document.cc	/^GlassDocument::do_get_value(Xapian::valueno slot) const$/;"	f	class:GlassDocument
do_get_value	backends/inmemory/inmemory_document.cc	/^InMemoryDocument::do_get_value(Xapian::valueno slot) const$/;"	f	class:InMemoryDocument
do_get_value	backends/remote/remote-document.cc	/^RemoteDocument::do_get_value(Xapian::valueno) const$/;"	f	class:RemoteDocument
do_get_value	matcher/valuestreamdocument.cc	/^ValueStreamDocument::do_get_value(Xapian::valueno slot) const$/;"	f	class:ValueStreamDocument
do_max	api/queryinternal.cc	/^QueryBranch::do_max(QueryOptimiser * qopt, double factor) const$/;"	f	class:Xapian::Internal::QueryBranch
do_open_to_read	backends/chert/chert_table.cc	/^ChertTable::do_open_to_read(bool revision_supplied, chert_revision_number_t revision_)$/;"	f	class:ChertTable
do_open_to_read	backends/glass/glass_table.cc	/^GlassTable::do_open_to_read(const RootInfo * root_info,$/;"	f	class:GlassTable
do_open_to_write	backends/chert/chert_table.cc	/^ChertTable::do_open_to_write(bool revision_supplied,$/;"	f	class:ChertTable
do_open_to_write	backends/glass/glass_table.cc	/^GlassTable::do_open_to_write(const RootInfo * root_info,$/;"	f	class:GlassTable
do_or_like	api/queryinternal.cc	/^QueryBranch::do_or_like(OrContext& ctx, QueryOptimiser * qopt, double factor,$/;"	f	class:Xapian::Internal::QueryBranch
do_read	tests/api_replicate.cc	/^static size_t do_read(int fd, char * p, size_t desired)$/;"	f	file:
do_reserve	api/smallvector.cc	/^Xapian::SmallVector_::do_reserve(std::size_t n)$/;"	f	class:Xapian::SmallVector_
do_run_tests	tests/harness/testsuite.cc	/^test_driver::do_run_tests(vector<string>::const_iterator b,$/;"	f	class:test_driver
do_synonym	api/queryinternal.cc	/^QueryBranch::do_synonym(QueryOptimiser * qopt, double factor) const$/;"	f	class:Xapian::Internal::QueryBranch
do_tests_for_backend	tests/harness/testrunner.cc	/^TestRunner::do_tests_for_backend(BackendManager&& manager)$/;"	f	class:TestRunner
do_unaligned_read	common/wordaccess.h	/^do_unaligned_read(const unsigned char * ptr)$/;"	f
do_unaligned_write	common/wordaccess.h	/^do_unaligned_write(unsigned char * ptr, T value)$/;"	f
do_unpack_uint	backends/chert/chert_btreebase.cc	/^do_unpack_uint(const char **start, const char *end,$/;"	f	file:
do_until	bin/xapian-inspect.cc	/^do_until(GlassCursor & cursor, const string & target)$/;"	f	file:
do_write	tests/api_replicate.cc	/^static void do_write(int fd, const char * p, size_t n)$/;"	f	file:
doc	api/documentvaluelist.h	/^    Xapian::Internal::intrusive_ptr<const Xapian::Document::Internal> doc;$/;"	m	class:DocumentValueList
doc	matcher/valuestreamdocument.h	/^    mutable Xapian::Document::Internal * doc;$/;"	m	class:ValueStreamDocument
doc	queryparser/termgenerator_internal.h	/^    Document doc;$/;"	m	class:Xapian::TermGenerator::Internal
doc1	tests/api_closedb.cc	/^    Xapian::Document doc1;$/;"	m	struct:closedb1_iterators	file:
doc_DATA	docs/Makefile	/^doc_DATA = $(HTMLDOCS) $(RSTHTML)$/;"	m
doc_exists	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::doc_exists(Xapian::docid did) const$/;"	f	class:InMemoryDatabase
doccount	backends/chert/chert_alldocspostlist.h	/^    Xapian::doccount doccount;$/;"	m	class:ChertAllDocsPostList
doccount	backends/contiguousalldocspostlist.h	/^    Xapian::doccount doccount;$/;"	m	class:ContiguousAllDocsPostList
doccount	backends/glass/glass_alldocspostlist.h	/^    Xapian::doccount doccount;$/;"	m	class:GlassAllDocsPostList
doccount	backends/glass/glass_version.h	/^    Xapian::doccount doccount;$/;"	m	class:GlassVersion
doccount	backends/remote/remote-database.h	/^    mutable Xapian::doccount doccount;$/;"	m	class:RemoteDatabase
doccount	include/xapian/types.h	/^typedef unsigned XAPIAN_DOCID_BASE_TYPE doccount;$/;"	t	namespace:Xapian
doccount_diff	include/xapian/types.h	/^typedef XAPIAN_DOCID_BASE_TYPE doccount_diff;$/;"	t	namespace:Xapian
docdata_table	backends/glass/glass_database.h	/^	GlassDocDataTable docdata_table;$/;"	m	class:GlassDatabase
docdata_table	backends/glass/glass_document.h	/^    const GlassDocDataTable *docdata_table;$/;"	m	class:GlassDocument
docdir	Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	docs/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	tests/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docid	include/xapian/types.h	/^typedef unsigned XAPIAN_DOCID_BASE_TYPE docid;$/;"	t	namespace:Xapian
docid_from_key	backends/chert/chert_values.h	/^docid_from_key(Xapian::valueno required_slot, const std::string & key)$/;"	f
docid_from_key	backends/glass/glass_values.h	/^docid_from_key(Xapian::valueno required_slot, const std::string & key)$/;"	f	namespace:Glass
docid_order	include/xapian/enquire.h	/^	} docid_order;$/;"	t	class:Xapian::Enquire	typeref:enum:Xapian::Enquire::__anon16
docid_zero_invalid	api/omdatabase.cc	/^static void docid_zero_invalid()$/;"	f	file:
doclen	backends/chert/chert_termlist.h	/^    chert_doclen_t doclen;$/;"	m	class:ChertTermList
doclen	backends/glass/glass_termlist.h	/^    Xapian::termcount doclen;$/;"	m	class:GlassTermList
doclen_changes	backends/glass/glass_inverter.h	/^    std::map<Xapian::docid, Xapian::termcount> doclen_changes;$/;"	m	class:Inverter
doclen_lb	tests/api_postingsource.cc	/^    Xapian::doccount& doclen_lb;$/;"	m	class:CheckBoundsPostingSource	file:
doclen_lbound	backends/chert/chert_dbstats.h	/^    Xapian::termcount doclen_lbound;$/;"	m	class:ChertDatabaseStats
doclen_lbound	backends/glass/glass_version.h	/^    Xapian::termcount doclen_lbound;$/;"	m	class:GlassVersion
doclen_lbound	backends/remote/remote-database.h	/^    mutable Xapian::termcount doclen_lbound;$/;"	m	class:RemoteDatabase
doclen_lower_bound	matcher/synonympostlist.h	/^    Xapian::termcount doclen_lower_bound;$/;"	m	class:SynonymPostList
doclen_pl	backends/chert/chert_postlist.h	/^	mutable AutoPtr<ChertPostList> doclen_pl;$/;"	m	class:ChertPostListTable
doclen_pl	backends/glass/glass_postlist.h	/^	mutable AutoPtr<GlassPostList> doclen_pl;$/;"	m	class:GlassPostListTable
doclen_ub	tests/api_postingsource.cc	/^    Xapian::doccount& doclen_ub;$/;"	m	class:CheckBoundsPostingSource	file:
doclen_ubound	backends/chert/chert_dbstats.h	/^    Xapian::termcount doclen_ubound;$/;"	m	class:ChertDatabaseStats
doclen_ubound	backends/glass/glass_version.h	/^    Xapian::termcount doclen_ubound;$/;"	m	class:GlassVersion
doclen_ubound	backends/remote/remote-database.h	/^    mutable Xapian::termcount doclen_ubound;$/;"	m	class:RemoteDatabase
doclength	include/xapian/types.h	/^typedef double doclength;$/;"	t	namespace:Xapian
doclength_lower_bound_	include/xapian/weight.h	/^    Xapian::termcount doclength_lower_bound_;$/;"	m	class:Xapian::Weight
doclength_upper_bound_	include/xapian/weight.h	/^    Xapian::termcount doclength_upper_bound_;$/;"	m	class:Xapian::Weight
doclengths	backends/inmemory/inmemory_database.h	/^    vector<Xapian::termcount> doclengths;$/;"	m	class:InMemoryDatabase
doclens	backends/chert/chert_alldocsmodifiedpostlist.h	/^    map<Xapian::docid, Xapian::termcount> doclens;$/;"	m	class:ChertAllDocsModifiedPostList
doclens	backends/chert/chert_database.h	/^	mutable map<Xapian::docid, Xapian::termcount> doclens;$/;"	m	class:ChertWritableDatabase
doclens_it	backends/chert/chert_alldocsmodifiedpostlist.h	/^    map<Xapian::docid, Xapian::termcount>::const_iterator doclens_it;$/;"	m	class:ChertAllDocsModifiedPostList
doclists	backends/inmemory/inmemory_database.h	/^    vector<kdmtStr> doclists;$/;"	m	class:InMemoryDatabase
docs	backends/inmemory/inmemory_database.h	/^	vector<InMemoryPosting> docs;$/;"	m	class:InMemoryTerm
docs_considered	matcher/collapser.h	/^    Xapian::doccount docs_considered;$/;"	m	class:Collapser
docstats_to_string	tests/dbcheck.cc	/^docstats_to_string(const Xapian::Database & db, Xapian::docid did)$/;"	f
docterms_to_string	tests/dbcheck.cc	/^docterms_to_string(const Xapian::Database & db, Xapian::docid did)$/;"	f
document_exists	backends/chert/chert_postlist.cc	/^ChertPostListTable::document_exists(Xapian::docid did,$/;"	f	class:ChertPostListTable
document_exists	backends/glass/glass_postlist.cc	/^GlassPostListTable::document_exists(Xapian::docid did,$/;"	f	class:GlassPostListTable
document_length	backends/inmemory/inmemory_database.h	/^	Xapian::termcount document_length;$/;"	m	class:InMemoryTermList
document_length	backends/remote/net_termlist.h	/^	Xapian::termcount document_length;$/;"	m	class:NetworkTermList
document_terms	backends/document.h	/^	typedef map<string, OmDocumentTerm> document_terms;$/;"	t	class:Xapian::Document::Internal
document_values	backends/document.h	/^	typedef map<Xapian::valueno, string> document_values;$/;"	t	class:Xapian::Document::Internal
doesReduce	queryparser/lemon.c	/^  Boolean doesReduce;      \/* Reduce actions occur after optimization *\/$/;"	m	struct:rule	file:
done	api/query.cc	/^Query::done()$/;"	f	class:Xapian::Query
done	api/queryinternal.cc	/^QueryAndLike::done()$/;"	f	class:Xapian::Internal::QueryAndLike
done	api/queryinternal.cc	/^QueryAndMaybe::done()$/;"	f	class:Xapian::Internal::QueryAndMaybe
done	api/queryinternal.cc	/^QueryAndNot::done()$/;"	f	class:Xapian::Internal::QueryAndNot
done	api/queryinternal.cc	/^QueryOrLike::done()$/;"	f	class:Xapian::Internal::QueryOrLike
done	api/queryinternal.cc	/^QuerySynonym::done()$/;"	f	class:Xapian::Internal::QuerySynonym
done	api/queryinternal.cc	/^QueryWindowed::done()$/;"	f	class:Xapian::Internal::QueryWindowed
done	include/xapian/postingsource.h	/^    void done() {$/;"	f	class:Xapian::ValuePostingSource
done	queryparser/termgenerator_internal.cc	/^SnipPipe::done()$/;"	f	class:Xapian::SnipPipe
dot	queryparser/lemon.c	/^  int dot;                 \/* The parse point *\/$/;"	m	struct:config	file:
drain	queryparser/termgenerator_internal.cc	/^SnipPipe::drain(const string & input,$/;"	f	class:Xapian::SnipPipe
dtnum	queryparser/lemon.c	/^  int dtnum;               \/* The data type number.  In the parser, the value$/;"	m	struct:symbol	file:
dtor_called	backends/database.cc	/^Database::Internal::dtor_called()$/;"	f	class:Xapian::Database::Internal
dummy	include/xapian/version_h.cc	/^const char * dummy[] = {$/;"	v
dummy_handler	common/msvcignoreinvalidparam.h	/^static void dummy_handler(const wchar_t*,$/;"	f
dups_ignored	matcher/collapser.h	/^    Xapian::doccount dups_ignored;$/;"	m	class:Collapser
dvidir	Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	docs/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	tests/Makefile	/^dvidir = ${docdir}$/;"	m
dw	include/xapian/weight.h	/^    double dw;$/;"	m	class:Xapian::PL2PlusWeight
e_action	queryparser/lemon.c	/^enum e_action {$/;"	g	file:
e_adjacent_bracketed_in_among	languages/compiler/analyser.c	/^    e_adjacent_bracketed_in_among = 19,$/;"	e	enum:__anon28	file:
e_already_backwards	languages/compiler/analyser.c	/^    e_already_backwards = 17,$/;"	e	enum:__anon28	file:
e_assoc	queryparser/lemon.c	/^enum e_assoc {$/;"	g	file:
e_declared_as_different_mode	languages/compiler/analyser.c	/^    e_declared_as_different_mode = 32,$/;"	e	enum:__anon28	file:
e_empty_among	languages/compiler/analyser.c	/^    e_empty_among = 18,$/;"	e	enum:__anon28	file:
e_empty_grouping	languages/compiler/analyser.c	/^    e_empty_grouping = 16,$/;"	e	enum:__anon28	file:
e_misplaced	languages/compiler/analyser.c	/^    e_misplaced = 35,$/;"	e	enum:__anon28	file:
e_misused	languages/compiler/analyser.c	/^    e_misused = 37$/;"	e	enum:__anon28	file:
e_not_allowed_inside_reverse	languages/compiler/analyser.c	/^    e_not_allowed_inside_reverse = 15,$/;"	e	enum:__anon28	file:
e_not_of_type_string_or_integer	languages/compiler/analyser.c	/^    e_not_of_type_string_or_integer = 34,$/;"	e	enum:__anon28	file:
e_not_of_type_x	languages/compiler/analyser.c	/^    e_not_of_type_x = 33,$/;"	e	enum:__anon28	file:
e_redeclared	languages/compiler/analyser.c	/^    e_redeclared = 30,$/;"	e	enum:__anon28	file:
e_redefined	languages/compiler/analyser.c	/^    e_redefined = 36,$/;"	e	enum:__anon28	file:
e_state	queryparser/lemon.c	/^enum e_state {$/;"	g	file:
e_string_omitted	languages/compiler/analyser.c	/^    e_string_omitted = 2,$/;"	e	enum:__anon28	file:
e_substring_preceded_by_substring	languages/compiler/analyser.c	/^    e_substring_preceded_by_substring = 20,$/;"	e	enum:__anon28	file:
e_token_omitted	languages/compiler/analyser.c	/^    e_token_omitted = 0,$/;"	e	enum:__anon28	file:
e_undeclared	languages/compiler/analyser.c	/^    e_undeclared = 31,$/;"	e	enum:__anon28	file:
e_unexpected_token	languages/compiler/analyser.c	/^    e_unexpected_token = 1,$/;"	e	enum:__anon28	file:
e_unexpected_token_in_among	languages/compiler/analyser.c	/^    e_unexpected_token_in_among = 3,$/;"	e	enum:__anon28	file:
e_unresolved_substring	languages/compiler/analyser.c	/^    e_unresolved_substring = 14,$/;"	e	enum:__anon28	file:
eai_to_xapian	net/remoteconnection.h	/^inline int eai_to_xapian(int e) {$/;"	f
ebound	expand/esetinternal.h	/^    Xapian::termcount ebound;$/;"	m	class:Xapian::ESet::Internal
edist_calc_f_kp	api/editdistance.cc	/^void edist_state<CHR>::edist_calc_f_kp(int k, int p)$/;"	f	class:edist_state
edist_seq	api/editdistance.cc	/^    edist_seq(const CHR * ptr_, int len_) : ptr(ptr_), len(len_) { }$/;"	f	struct:edist_seq
edist_seq	api/editdistance.cc	/^struct edist_seq {$/;"	s	file:
edist_state	api/editdistance.cc	/^class edist_state {$/;"	c	file:
edist_state	api/editdistance.cc	/^edist_state<CHR>::edist_state(const CHR * ptr1, int len1,$/;"	f	class:edist_state
edit_distance_unsigned	api/editdistance.cc	/^edit_distance_unsigned(const unsigned * ptr1, int len1,$/;"	f
elt_type	backends/glass/glass_freelist.h	/^    typedef unsigned long elt_type;$/;"	t	class:GlassFreeListChecker
emit_code	queryparser/lemon.c	/^PRIVATE void emit_code($/;"	f
emit_destructor_code	queryparser/lemon.c	/^void emit_destructor_code($/;"	f
empty	api/omenquire.cc	/^RSet::empty() const$/;"	f	class:Xapian::RSet
empty	api/queryinternal.cc	/^    bool empty() const {$/;"	f	class:Xapian::Internal::Context
empty	api/smallvector.h	/^    bool empty() const {$/;"	f	class:Xapian::SmallVector
empty	backends/chert/chert_table.h	/^	bool empty() const {$/;"	f	class:ChertTable
empty	backends/glass/glass_freelist.h	/^    bool empty() const { return fl == fl_end; }$/;"	f	class:GlassFreeList
empty	backends/glass/glass_table.h	/^	bool empty() const {$/;"	f	class:GlassTable
empty	backends/inmemory/KeyDomet.h	/^        bool empty() const {$/;"	f	class:kdmt::KeyDometSize::KeyDometStr
empty	include/xapian/eset.h	/^    bool empty() const { return size() == 0; }$/;"	f	class:Xapian::ESet
empty	include/xapian/geospatial.h	/^    bool empty() const$/;"	f	class:Xapian::LatLongCoords
empty	include/xapian/mset.h	/^    bool empty() const { return size() == 0; }$/;"	f	class:Xapian::MSet
empty	include/xapian/query.h	/^    bool XAPIAN_NOTHROW(empty() const) {$/;"	f	class:Xapian::Query
empty	matcher/collapser.h	/^    bool empty() const { return table.empty(); }$/;"	f	class:Collapser
empty_metadata_key	api/omdatabase.cc	/^static void empty_metadata_key()$/;"	f	file:
empty_ok	queryparser/queryparser_internal.cc	/^    bool empty_ok;$/;"	m	class:TermGroup	file:
emsg	queryparser/lemon.c	/^static char emsg[] = "Command line syntax error: ";$/;"	v	file:
enc	languages/compiler/header.h	/^typedef enum { ENC_SINGLEBYTE, ENC_UTF8, ENC_WIDECHARS } enc;$/;"	t	typeref:enum:__anon26
encode	common/bitstream.cc	/^BitWriter::encode(Xapian::termpos value, Xapian::termpos outof)$/;"	f	class:Xapian::BitWriter
encode	geospatial/geoencode.cc	/^GeoEncode::encode(double lat, double lon, string & result)$/;"	f	class:GeoEncode
encode_interpolative	common/bitstream.cc	/^BitWriter::encode_interpolative(const vector<Xapian::termpos> &pos, int j, int k)$/;"	f	class:Xapian::BitWriter
encode_length	net/length.h	/^encode_length(T len)$/;"	f
encode_valuestats	backends/chert/chert_compact.cc	/^encode_valuestats(Xapian::doccount freq,$/;"	f	namespace:ChertCompact
encode_valuestats	backends/glass/glass_compact.cc	/^encode_valuestats(Xapian::doccount freq,$/;"	f	namespace:GlassCompact
encoding	languages/compiler/header.h	/^    enc encoding;$/;"	m	struct:analyser
encoding	languages/compiler/header.h	/^    enc encoding;$/;"	m	struct:options
encoding	languages/compiler/header.h	/^    enc encoding;$/;"	m	struct:tokeniser
end	api/queryinternal.cc	/^	size_t begin, end;$/;"	m	class:Xapian::Internal::AndContext::PosFilter	file:
end	api/queryinternal.h	/^    std::string begin, end;$/;"	m	class:Xapian::Internal::QueryValueRange
end	api/smallvector.h	/^    const_iterator end() const {$/;"	f	class:Xapian::SmallVector
end	backends/chert/chert_postlist.cc	/^    const char *end;$/;"	m	class:Chert::PostlistChunkReader	file:
end	backends/chert/chert_postlist.h	/^	const char * end;$/;"	m	class:ChertPostList
end	backends/chert/chert_termlist.h	/^    const char *end;$/;"	m	class:ChertTermList
end	backends/chert/chert_values.h	/^    const char *end;$/;"	m	class:ValueChunkReader
end	backends/glass/glass_postlist.cc	/^    const char *end;$/;"	m	class:Glass::PostlistChunkReader	file:
end	backends/glass/glass_postlist.h	/^	const char * end;$/;"	m	class:GlassPostList
end	backends/glass/glass_termlist.h	/^    const char *end;$/;"	m	class:GlassTermList
end	backends/glass/glass_values.h	/^    const char *end;$/;"	m	class:Glass::ValueChunkReader
end	backends/inmemory/inmemory_database.h	/^	vector<InMemoryPosting>::const_iterator end;$/;"	m	class:InMemoryPostList
end	backends/inmemory/inmemory_database.h	/^	vector<InMemoryTermEntry>::const_iterator end;$/;"	m	class:InMemoryTermList
end	include/xapian/eset.h	/^ESet::end() const {$/;"	f	class:Xapian::ESet
end	include/xapian/geospatial.h	/^    LatLongCoordsIterator end() const {$/;"	f	class:Xapian::LatLongCoords
end	include/xapian/mset.h	/^MSet::end() const {$/;"	f	class:Xapian::MSet
end	include/xapian/unicode.h	/^    const unsigned char *end;$/;"	m	class:Xapian::Utf8Iterator
end	matcher/valuerangepostlist.h	/^    const std::string begin, end;$/;"	m	class:ValueRangePostList
end	net/resolver.h	/^    const_iterator end() const {$/;"	f	class:Resolver
end	tests/harness/index_utils.h	/^    std::vector<std::string>::const_iterator file, end;$/;"	m	class:FileIndexer
end_time	common/realtime.h	/^inline double end_time(double timeout) {$/;"	f	namespace:RealTime
endswith	common/stringutils.h	/^endswith(const std::string & s, char sfx)$/;"	f
endswith	common/stringutils.h	/^endswith(const std::string & s, const char * sfx)$/;"	f
endswith	common/stringutils.h	/^endswith(const std::string & s, const char * sfx, size_t len)$/;"	f
endswith	common/stringutils.h	/^endswith(const std::string & s, const std::string & sfx)$/;"	f
enquire	api/omenquireinternal.h	/^	Xapian::Internal::intrusive_ptr<const Enquire::Internal> enquire;$/;"	m	class:Xapian::MSet::Internal
enter_key	backends/chert/chert_table.cc	/^ChertTable::enter_key(int j, Key prevkey, Key newkey)$/;"	f	class:ChertTable
enter_key_above_branch	backends/glass/glass_table.cc	/^GlassTable::enter_key_above_branch(int j, BItem newitem)$/;"	f	class:GlassTable
enter_key_above_leaf	backends/glass/glass_table.cc	/^GlassTable::enter_key_above_leaf(LeafItem previtem, LeafItem newitem)$/;"	f	class:GlassTable
entries	matcher/collapser.h	/^    Xapian::doccount entries() const { return entry_count; }$/;"	f	class:Collapser
entry_count	matcher/collapser.h	/^    Xapian::doccount entry_count;$/;"	m	class:Collapser
enum-members	docs/apidoc/html/namespaceXapian.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"><\/a>$/;"	a
enum-members	docs/apidoc/html/namespaceXapian_1_1Unicode.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"><\/a>$/;"	a
enum-members	docs/apidoc/html/queryparser_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"><\/a>$/;"	a
enum-members	docs/apidoc/html/unicode_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"><\/a>$/;"	a
env	tests/soaktest/soaktest_queries.cc	/^    QueryBuilderEnv env;$/;"	m	class:QueryBuilder	file:
epoch_year	include/xapian/queryparser.h	/^    int epoch_year;$/;"	m	class:Xapian::DateRangeProcessor
epoch_year	include/xapian/queryparser.h	/^    int epoch_year;$/;"	m	class:Xapian::DateValueRangeProcessor
eq	languages/compiler/driver.c	/^static int eq(const char * s1, const char * s2) {$/;"	f	file:
eq_s	languages/compiler/tokeniser.c	/^static int eq_s(struct tokeniser * t, const char * s) {$/;"	f	file:
eq_s	languages/steminternal.cc	/^int SnowballStemImplementation::eq_s(int s_size, const symbol * s) {$/;"	f	class:Xapian::SnowballStemImplementation
eq_s_b	languages/steminternal.cc	/^int SnowballStemImplementation::eq_s_b(int s_size, const symbol * s) {$/;"	f	class:Xapian::SnowballStemImplementation
eq_v	languages/steminternal.h	/^    int eq_v(const symbol * v) { return eq_s(SIZE(v), v); }$/;"	f	class:Xapian::SnowballStemImplementation
eq_v_b	languages/steminternal.h	/^    int eq_v_b(const symbol * v) { return eq_s_b(SIZE(v), v); }$/;"	f	class:Xapian::SnowballStemImplementation
erase	backends/chert/chert_table.cc	/^ChertTable::erase()$/;"	f	class:ChertTable
erase_sublist	matcher/maxpostlist.h	/^    void erase_sublist(size_t i) {$/;"	f	class:MaxPostList
erase_sublist	matcher/multixorpostlist.h	/^    void erase_sublist(size_t i) {$/;"	f	class:MultiXorPostList
errAction	queryparser/lemon.c	/^  int errAction;           \/* Error action value *\/$/;"	m	struct:lemon	file:
errline	queryparser/lemon.c	/^static void errline(int n, int k, FILE *err)$/;"	f	file:
errmsg	queryparser/queryparser_internal.h	/^    const char * errmsg;$/;"	m	class:Xapian::QueryParser::Internal
errno_to_string	common/errno_to_string.cc	/^errno_to_string(int e, string & s) {$/;"	f
error	languages/compiler/analyser.c	/^static void error(struct analyser * a, error_code n) { error2(a, n, 0); }$/;"	f	file:
error	languages/compiler/tokeniser.c	/^static void error(struct tokeniser * t, const char * s1, int n, symbol * p, const char * s2) {$/;"	f	file:
error	queryparser/lemon.c	/^  char *error;             \/* Code to execute when an error is seen *\/$/;"	m	struct:lemon	file:
error	queryparser/queryparser_internal.cc	/^    const char * error;$/;"	m	class:State	file:
error1	languages/compiler/tokeniser.c	/^static void error1(struct tokeniser * t, const char * s) {$/;"	f	file:
error2	languages/compiler/analyser.c	/^static void error2(struct analyser * a, error_code n, int x) {$/;"	f	file:
error2	languages/compiler/tokeniser.c	/^static void error2(struct tokeniser * t, const char * s) {$/;"	f	file:
error4	languages/compiler/analyser.c	/^static void error4(struct analyser * a, struct name * q) {$/;"	f	file:
error_code	languages/compiler/analyser.c	/^} error_code;$/;"	t	typeref:enum:__anon28	file:
error_count	languages/compiler/header.h	/^    int error_count;$/;"	m	struct:tokeniser
error_string	include/xapian/error.h	/^    mutable std::string error_string;$/;"	m	class:Xapian::Error
errorbaseclass	exception_data.pm	/^sub errorbaseclass {$/;"	s
errorclass	exception_data.pm	/^sub errorclass {$/;"	s
errorcnt	queryparser/lemon.c	/^  int errorcnt;            \/* Number of errors *\/$/;"	m	struct:lemon	file:
errorcnt	queryparser/lemon.c	/^  int errorcnt;         \/* Number of errors so far *\/$/;"	m	struct:pstate	file:
errstream	queryparser/lemon.c	/^static FILE *errstream;$/;"	v	file:
errsym	queryparser/lemon.c	/^  struct symbol *errsym;   \/* The error symbol *\/$/;"	m	struct:lemon	typeref:struct:lemon::symbol	file:
escape_xml	tests/perftest/perftest.cc	/^escape_xml(const string & str)$/;"	f	file:
eset	include/xapian/eset.h	/^    Xapian::ESet eset;$/;"	m	class:Xapian::ESetIterator
est	matcher/orpostlist.cc	/^est(double l, double r, double n)$/;"	f	file:
eweightname	api/omenquireinternal.h	/^	std::string eweightname;$/;"	m	class:Xapian::Enquire::Internal
examples_copydatabase_DEPENDENCIES	Makefile	/^examples_copydatabase_DEPENDENCIES = $(am__DEPENDENCIES_1) \\$/;"	m
examples_copydatabase_LDADD	Makefile	/^examples_copydatabase_LDADD = $(ldflags) $(libxapian_la)$/;"	m
examples_copydatabase_LDADD	examples/Makefile.mk	/^examples_copydatabase_LDADD = $(ldflags) $(libxapian_la)$/;"	m
examples_copydatabase_OBJECTS	Makefile	/^examples_copydatabase_OBJECTS = $(am_examples_copydatabase_OBJECTS)$/;"	m
examples_copydatabase_SOURCES	Makefile	/^examples_copydatabase_SOURCES = examples\/copydatabase.cc$/;"	m
examples_copydatabase_SOURCES	examples/Makefile.mk	/^examples_copydatabase_SOURCES = examples\/copydatabase.cc$/;"	m
examples_quest_DEPENDENCIES	Makefile	/^examples_quest_DEPENDENCIES = $(am__DEPENDENCIES_1) libgetopt.la \\$/;"	m
examples_quest_LDADD	Makefile	/^examples_quest_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
examples_quest_LDADD	examples/Makefile.mk	/^examples_quest_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
examples_quest_OBJECTS	Makefile	/^examples_quest_OBJECTS = $(am_examples_quest_OBJECTS)$/;"	m
examples_quest_SOURCES	Makefile	/^examples_quest_SOURCES = examples\/quest.cc$/;"	m
examples_quest_SOURCES	examples/Makefile.mk	/^examples_quest_SOURCES = examples\/quest.cc$/;"	m
examples_simpleexpand_DEPENDENCIES	Makefile	/^examples_simpleexpand_DEPENDENCIES = $(am__DEPENDENCIES_1) \\$/;"	m
examples_simpleexpand_LDADD	Makefile	/^examples_simpleexpand_LDADD = $(ldflags) $(libxapian_la)$/;"	m
examples_simpleexpand_LDADD	examples/Makefile.mk	/^examples_simpleexpand_LDADD = $(ldflags) $(libxapian_la)$/;"	m
examples_simpleexpand_OBJECTS	Makefile	/^examples_simpleexpand_OBJECTS = $(am_examples_simpleexpand_OBJECTS)$/;"	m
examples_simpleexpand_SOURCES	Makefile	/^examples_simpleexpand_SOURCES = examples\/simpleexpand.cc$/;"	m
examples_simpleexpand_SOURCES	examples/Makefile.mk	/^examples_simpleexpand_SOURCES = examples\/simpleexpand.cc$/;"	m
examples_simpleindex_DEPENDENCIES	Makefile	/^examples_simpleindex_DEPENDENCIES = $(am__DEPENDENCIES_1) \\$/;"	m
examples_simpleindex_LDADD	Makefile	/^examples_simpleindex_LDADD = $(ldflags) $(libxapian_la)$/;"	m
examples_simpleindex_LDADD	examples/Makefile.mk	/^examples_simpleindex_LDADD = $(ldflags) $(libxapian_la)$/;"	m
examples_simpleindex_OBJECTS	Makefile	/^examples_simpleindex_OBJECTS = $(am_examples_simpleindex_OBJECTS)$/;"	m
examples_simpleindex_SOURCES	Makefile	/^examples_simpleindex_SOURCES = examples\/simpleindex.cc$/;"	m
examples_simpleindex_SOURCES	examples/Makefile.mk	/^examples_simpleindex_SOURCES = examples\/simpleindex.cc$/;"	m
examples_simplesearch_DEPENDENCIES	Makefile	/^examples_simplesearch_DEPENDENCIES = $(am__DEPENDENCIES_1) \\$/;"	m
examples_simplesearch_LDADD	Makefile	/^examples_simplesearch_LDADD = $(ldflags) $(libxapian_la)$/;"	m
examples_simplesearch_LDADD	examples/Makefile.mk	/^examples_simplesearch_LDADD = $(ldflags) $(libxapian_la)$/;"	m
examples_simplesearch_OBJECTS	Makefile	/^examples_simplesearch_OBJECTS = $(am_examples_simplesearch_OBJECTS)$/;"	m
examples_simplesearch_SOURCES	Makefile	/^examples_simplesearch_SOURCES = examples\/simplesearch.cc$/;"	m
examples_simplesearch_SOURCES	examples/Makefile.mk	/^examples_simplesearch_SOURCES = examples\/simplesearch.cc$/;"	m
examples_xapian_metadata_DEPENDENCIES	Makefile	/^examples_xapian_metadata_DEPENDENCIES = $(am__DEPENDENCIES_1) \\$/;"	m
examples_xapian_metadata_LDADD	Makefile	/^examples_xapian_metadata_LDADD = $(ldflags) $(libxapian_la)$/;"	m
examples_xapian_metadata_LDADD	examples/Makefile.mk	/^examples_xapian_metadata_LDADD = $(ldflags) $(libxapian_la)$/;"	m
examples_xapian_metadata_OBJECTS	Makefile	/^examples_xapian_metadata_OBJECTS =  \\$/;"	m
examples_xapian_metadata_SOURCES	Makefile	/^examples_xapian_metadata_SOURCES = examples\/xapian-metadata.cc$/;"	m
examples_xapian_metadata_SOURCES	examples/Makefile.mk	/^examples_xapian_metadata_SOURCES = examples\/xapian-metadata.cc$/;"	m
examples_xapian_pos_DEPENDENCIES	Makefile	/^examples_xapian_pos_DEPENDENCIES = $(am__DEPENDENCIES_1) libgetopt.la \\$/;"	m
examples_xapian_pos_LDADD	Makefile	/^examples_xapian_pos_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
examples_xapian_pos_LDADD	examples/Makefile.mk	/^examples_xapian_pos_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
examples_xapian_pos_OBJECTS	Makefile	/^examples_xapian_pos_OBJECTS = $(am_examples_xapian_pos_OBJECTS)$/;"	m
examples_xapian_pos_SOURCES	Makefile	/^examples_xapian_pos_SOURCES = examples\/xapian-pos.cc$/;"	m
examples_xapian_pos_SOURCES	examples/Makefile.mk	/^examples_xapian_pos_SOURCES = examples\/xapian-pos.cc$/;"	m
exception_data	exception_data.pm	/^package exception_data;$/;"	p
exchange	common/getopt.cc	/^exchange (char **argv)$/;"	f	file:
exec_prefix	Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	docs/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	tests/Makefile	/^exec_prefix = ${prefix}$/;"	m
exists	backends/chert/chert_table.cc	/^ChertTable::exists() const {$/;"	f	class:ChertTable
exists	backends/glass/glass_table.cc	/^GlassTable::exists() const {$/;"	f	class:GlassTable
exp10	common/exp10.h	/^inline double exp10(double x) { return __builtin_exp10(x); }$/;"	f
exp10	common/exp10.h	/^inline double exp10(double x) { return __exp10(x); }$/;"	f
exp10	common/exp10.h	/^inline double exp10(double x) { return std::pow(10.0, x); }$/;"	f
expand	expand/esetinternal.cc	/^ESet::Internal::expand(Xapian::termcount max_esize,$/;"	f	class:Xapian::ESet::Internal
expand	preautoreconf	/^sub expand {$/;"	s
expand_k	api/omenquireinternal.h	/^	double expand_k;$/;"	m	class:Xapian::Enquire::Internal
expand_k	expand/expandweight.h	/^    double expand_k;$/;"	m	class:Xapian::Internal::ExpandStats
expect	tests/api_qpbackend.cc	/^    const char *expect;$/;"	m	struct:test	file:
expect	tests/api_queryparser.cc	/^    const char *expect;$/;"	m	struct:qp_default_op3_test	file:
expect	tests/api_queryparser.cc	/^    const char *expect;$/;"	m	struct:test	file:
expect	tests/api_snippets.cc	/^    const char * expect;$/;"	m	struct:snippet_testcase	file:
expect	tests/api_termgen.cc	/^    const char *expect;$/;"	m	struct:test	file:
expected_exception	tests/harness/testsuite.cc	/^const char * expected_exception = NULL;$/;"	v
expected_failure	tests/harness/testsuite.cc	/^const char* expected_failure;$/;"	v
expired	matcher/multimatch.cc	/^    volatile bool expired;$/;"	m	class:TimeOut	file:
extend_bit_map	backends/chert/chert_btreebase.cc	/^ChertTable_base::extend_bit_map()$/;"	f	class:ChertTable_base
externals_prefix	languages/compiler/header.h	/^    const char * externals_prefix;$/;"	m	struct:options
extracode	queryparser/lemon.c	/^  char *extracode;         \/* Code appended to the generated file *\/$/;"	m	struct:lemon	file:
extract_dependency_libs	xapian-config	/^extract_dependency_libs() {$/;"	f
extract_dependency_libs_	xapian-config	/^extract_dependency_libs_() {$/;"	f
extract_dlname	xapian-config	/^extract_dlname() {$/;"	f
f	examples/quest.cc	/^struct qp_flag { const char * s; unsigned f; };$/;"	m	struct:qp_flag	file:
f	examples/quest.cc	/^struct qp_op { const char * s; unsigned f; };$/;"	m	struct:qp_op	file:
f	examples/quest.cc	/^struct wt { const char * s; int f; };$/;"	m	struct:wt	file:
factor	include/xapian/weight.h	/^    double factor;$/;"	m	class:Xapian::CoordWeight
factor	include/xapian/weight.h	/^    double factor;$/;"	m	class:Xapian::PL2PlusWeight
factor	include/xapian/weight.h	/^    double factor;$/;"	m	class:Xapian::TfIdfWeight
factor	matcher/externalpostlist.h	/^    double factor;$/;"	m	class:ExternalPostList
factor	matcher/localsubmatch.cc	/^    double factor;$/;"	m	class:LazyWeight	file:
factor	tests/api_weight.cc	/^    double factor;$/;"	m	class:CheckInitWeight	file:
factor	tests/api_weight.cc	/^    double factor;$/;"	m	class:CheckStatsWeight	file:
factory	tests/internaltest.cc	/^    static TempDtorTest factory() { return TempDtorTest(); }$/;"	f	struct:TempDtorTest
fail	tests/api_serialise.cc	/^    failmode fail;$/;"	m	class:ExceptionalMatchSpy	file:
fail	tests/api_serialise.cc	/^    failmode fail;$/;"	m	class:ExceptionalPostingSource	file:
fail	tests/api_serialise.cc	/^    failmode fail;$/;"	m	class:ExceptionalWeight	file:
failed	tests/harness/testsuite.h	/^	    unsigned int failed = 0;$/;"	m	struct:test_driver::result
failmode	tests/api_serialise.cc	/^    typedef enum { NONE, CLONE } failmode;$/;"	t	class:ExceptionalMatchSpy	typeref:enum:ExceptionalMatchSpy::__anon38	file:
failmode	tests/api_serialise.cc	/^    typedef enum { NONE, CLONE } failmode;$/;"	t	class:ExceptionalPostingSource	typeref:enum:ExceptionalPostingSource::__anon36	file:
failmode	tests/api_serialise.cc	/^    typedef enum { NONE, CLONE } failmode;$/;"	t	class:ExceptionalWeight	typeref:enum:ExceptionalWeight::__anon37	file:
failure	backends/chert/chert_check.cc	/^void ChertTableCheck::failure(const char * msg) const$/;"	f	class:ChertTableCheck
failure	backends/glass/glass_check.cc	/^failure(const char *msg, uint4 n, int c)$/;"	f	file:
failure	queryparser/lemon.c	/^  char *failure;           \/* Code to execute on parser failure *\/$/;"	m	struct:lemon	file:
failure_keep_count	languages/compiler/header.h	/^    int failure_keep_count;$/;"	m	struct:generator
failure_label	languages/compiler/header.h	/^    int failure_label;$/;"	m	struct:generator
failure_str	languages/compiler/header.h	/^    struct str * failure_str;  \/* This is used by some generators instead of failure_keep_count *\/$/;"	m	struct:generator	typeref:struct:generator::str
fake_root_item	backends/chert/chert_table.h	/^    void fake_root_item() {$/;"	f	class:Item_wr
fake_root_item	backends/glass/glass_table.h	/^    void fake_root_item() {$/;"	f	class:Glass::LeafItem_wr
faked_root_block	backends/chert/chert_table.h	/^	bool faked_root_block;$/;"	m	class:ChertTable
faked_root_block	backends/glass/glass_table.h	/^	bool faked_root_block;$/;"	m	class:GlassTable
fallback	queryparser/lemon.c	/^  struct symbol *fallback;   \/* The fallback token *\/$/;"	m	struct:pstate	typeref:struct:pstate::symbol	file:
fallback	queryparser/lemon.c	/^  struct symbol *fallback; \/* fallback token in case this token doesn't parse *\/$/;"	m	struct:symbol	typeref:struct:symbol::symbol	file:
false	languages/compiler/header.h	7;"	d
fcntl_open_	common/safefcntl.h	/^inline int fcntl_open_(const char *filename, int flags) {$/;"	f
fcntl_open_	common/safefcntl.h	/^inline int fcntl_open_(const char *filename, int flags, mode_t mode) {$/;"	f
fd	backends/flint_lock.h	/^    int fd = -1;$/;"	m	class:FlintLock
fd	backends/glass/glass_version.h	/^    int fd;$/;"	m	class:GlassVersion
fd	common/debuglog.h	/^    int fd;$/;"	m	class:DebugLogger
fd	common/fd.h	/^    int fd;$/;"	m	class:FD
fd	tests/harness/backendmanager_remotetcp.cc	/^    int fd;$/;"	m	struct:pid_fd	file:
fd_to_handle	common/socket_utils.cc	/^extern HANDLE fd_to_handle(int fd) {$/;"	f
fdin	net/remoteconnection.h	/^    int fdin;$/;"	m	class:RemoteConnection
fdout	net/remoteconnection.h	/^    int fdout;$/;"	m	class:RemoteConnection
fds	backends/glass/glass_databasereplicator.h	/^	mutable int fds[Glass::MAX_];$/;"	m	class:GlassDatabaseReplicator
fds	tests/harness/fdtracker.h	/^    std::vector<bool> fds;$/;"	m	class:FDTracker
fdwrapper	tests/submitperftest	/^class fdwrapper:$/;"	c
fdwrapper	tests/submitperftest.in	/^class fdwrapper:$/;"	c
feature_flag	include/xapian/queryparser.h	/^    } feature_flag;$/;"	t	class:Xapian::QueryParser	typeref:enum:Xapian::QueryParser::__anon24
fetch	include/xapian/mset.h	/^    void fetch() const { fetch_(0, Xapian::doccount(-1)); }$/;"	f	class:Xapian::MSet
fetch	include/xapian/mset.h	/^MSet::fetch(const MSetIterator &begin_it, const MSetIterator &end_it) const$/;"	f	class:Xapian::MSet
fetch	include/xapian/mset.h	/^MSet::fetch(const MSetIterator &item) const$/;"	f	class:Xapian::MSet
fetch_	api/omenquire.cc	/^MSet::fetch_(Xapian::doccount first, Xapian::doccount last) const$/;"	f	class:Xapian::MSet
fetch_items	api/omenquire.cc	/^MSet::Internal::fetch_items(Xapian::doccount first, Xapian::doccount last) const$/;"	f	class:Xapian::MSet::Internal
field_info	queryparser/queryparser_internal.cc	/^    const FieldInfo * field_info;$/;"	m	class:Term	file:
field_map	queryparser/queryparser_internal.h	/^    map<string, FieldInfo> field_map;$/;"	m	class:Xapian::QueryParser::Internal
file	languages/compiler/header.h	/^    char * file;$/;"	m	struct:input
file	languages/compiler/header.h	/^    char * file;$/;"	m	struct:tokeniser
file	tests/harness/index_utils.h	/^    std::vector<std::string>::const_iterator file, end;$/;"	m	class:FileIndexer
file_exists	common/filetests.h	/^inline bool file_exists(const char * path) {$/;"	f
file_exists	common/filetests.h	/^inline bool file_exists(const std::string & path) {$/;"	f
file_makename	queryparser/lemon.c	/^PRIVATE char *file_makename(struct lemon *lemp, const char *suffix)$/;"	f
file_needs_freeing	languages/compiler/header.h	/^    int file_needs_freeing;$/;"	m	struct:input
file_needs_freeing	languages/compiler/header.h	/^    int file_needs_freeing;$/;"	m	struct:tokeniser
file_open	queryparser/lemon.c	/^PRIVATE FILE *file_open($/;"	f
file_size	common/filetests.h	/^inline off_t file_size(const char * path) {$/;"	f
file_size	common/filetests.h	/^inline off_t file_size(const std::string & path) {$/;"	f
file_size	common/filetests.h	/^inline off_t file_size(int fd) {$/;"	f
filename	backends/chert/chert_version.h	/^    std::string filename;$/;"	m	class:ChertVersion
filename	backends/flint_lock.h	/^    std::string filename;$/;"	m	class:FlintLock
filename	queryparser/lemon.c	/^  char *filename;          \/* Name of the input file *\/$/;"	m	struct:lemon	file:
filename	queryparser/lemon.c	/^  char *filename;       \/* Name of the input file *\/$/;"	m	struct:pstate	file:
files	docs/apidoc/html/dir_f63502d618711192f85ccb772536c6ae.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
filter	queryparser/queryparser_internal.cc	/^    map<string, Query> filter;$/;"	m	struct:ProbQuery	file:
filter_type	queryparser/queryparser_internal.h	/^typedef enum { NON_BOOLEAN, BOOLEAN, BOOLEAN_EXCLUSIVE } filter_type;$/;"	t	typeref:enum:__anon30
finalised	weight/weightinternal.h	/^    mutable bool finalised;$/;"	m	class:Xapian::Weight::Internal
find	backends/chert/chert_table.cc	/^ChertTable::find(Cursor * C_) const$/;"	f	class:ChertTable
find	backends/glass/glass_table.cc	/^GlassTable::find(Glass::Cursor * C_) const$/;"	f	class:GlassTable
find_among	languages/steminternal.cc	/^SnowballStemImplementation::find_among(const symbol * pool,$/;"	f	class:Xapian::SnowballStemImplementation
find_among_b	languages/steminternal.cc	/^SnowballStemImplementation::find_among_b(const symbol * pool,$/;"	f	class:Xapian::SnowballStemImplementation
find_changed_block	backends/chert/chert_btreebase.cc	/^ChertTable_base::find_changed_block(uint4 * n) const$/;"	f	class:ChertTable_base
find_entry	backends/chert/chert_cursor.cc	/^ChertCursor::find_entry(const string &key)$/;"	f	class:ChertCursor
find_entry	backends/glass/glass_cursor.cc	/^GlassCursor::find_entry(const string &key)$/;"	f	class:GlassCursor
find_entry_ge	backends/chert/chert_cursor.cc	/^ChertCursor::find_entry_ge(const string &key)$/;"	f	class:ChertCursor
find_entry_ge	backends/glass/glass_cursor.cc	/^GlassCursor::find_entry_ge(const string &key)$/;"	f	class:GlassCursor
find_entry_lt	backends/chert/chert_cursor.h	/^	void find_entry_lt(const string &key) {$/;"	f	class:ChertCursor
find_entry_lt	backends/glass/glass_cursor.cc	/^GlassCursor::find_entry_lt(const string &key)$/;"	f	class:GlassCursor
find_exact	backends/glass/glass_cursor.cc	/^GlassCursor::find_exact(const string &key)$/;"	f	class:GlassCursor
find_in_block	backends/chert/chert_table.cc	/^ChertTable::find_in_block(const uint8_t * p, Key key, bool leaf, int c)$/;"	f	class:ChertTable
find_in_branch	backends/glass/glass_table.cc	/^GlassTable::find_in_branch(const uint8_t * p, BItem item, int c)$/;"	f	class:GlassTable
find_in_branch	backends/glass/glass_table.cc	/^GlassTable::find_in_branch(const uint8_t * p, LeafItem item, int c)$/;"	f	class:GlassTable
find_in_branch_	backends/glass/glass_table.cc	/^find_in_branch_(const uint8_t * p, ITEM item, int c)$/;"	f
find_in_leaf	backends/glass/glass_table.cc	/^GlassTable::find_in_leaf(const uint8_t * p, LeafItem item, int c, bool& exact)$/;"	f	class:GlassTable
find_in_m	languages/compiler/tokeniser.c	/^static symbol * find_in_m(struct tokeniser * t, int n, symbol * p) {$/;"	f	file:
find_name	languages/compiler/analyser.c	/^static struct name * find_name(struct analyser * a) {$/;"	f	file:
find_next_match	matcher/multiandpostlist.cc	/^MultiAndPostList::find_next_match(double w_min)$/;"	f	class:MultiAndPostList
find_word	languages/compiler/tokeniser.c	/^static int find_word(int n, symbol * p) {$/;"	f	file:
finish_add_doc	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::finish_add_doc(Xapian::docid did, const Xapian::Document &document)$/;"	f	class:InMemoryDatabase
finished	backends/multi/multi_postlist.h	/^	bool finished;$/;"	m	class:MultiPostList
first	include/xapian/expanddecider.h	/^    Internal::opt_intrusive_ptr<const ExpandDecider> first, second;$/;"	m	class:Xapian::ExpandDeciderAnd
first	queryparser/queryparser_internal.cc	/^    const Xapian::Query * first;$/;"	m	class:SynonymIterator	file:
first_component	backends/glass/glass_table.h	/^    bool first_component() const { return *p & I_FIRST_BIT; }$/;"	f	class:Glass::LeafItem_base
first_did	backends/chert/chert_postlist.cc	/^	Xapian::docid first_did;$/;"	m	class:Chert::PostlistChunkWriter	file:
first_did	backends/chert/chert_values.cc	/^    Xapian::docid first_did;$/;"	m	class:ValueUpdater	file:
first_did	backends/glass/glass_postlist.cc	/^	Xapian::docid first_did;$/;"	m	class:Glass::PostlistChunkWriter	file:
first_did	backends/glass/glass_values.cc	/^    Xapian::docid first_did;$/;"	m	class:Glass::ValueUpdater	file:
first_did_in_chunk	backends/chert/chert_postlist.h	/^	Xapian::docid first_did_in_chunk;$/;"	m	class:ChertPostList
first_did_in_chunk	backends/glass/glass_postlist.h	/^	Xapian::docid first_did_in_chunk;$/;"	m	class:GlassPostList
first_nonopt	common/getopt.cc	/^static int first_nonopt;$/;"	v	file:
first_unused_block	backends/glass/glass_freelist.h	/^    uint4 first_unused_block;$/;"	m	class:GlassFreeList
firstdid	backends/chert/chert_compact.cc	/^    Xapian::docid firstdid;$/;"	m	class:ChertCompact::PostlistCursor	file:
firstdid	backends/glass/glass_compact.cc	/^    Xapian::docid firstdid;$/;"	m	class:GlassCompact::PositionCursor	file:
firstdid	backends/glass/glass_compact.cc	/^    Xapian::docid firstdid;$/;"	m	class:GlassCompact::PostlistCursor	file:
firstitem	api/omenquireinternal.h	/^	Xapian::doccount firstitem;$/;"	m	class:Xapian::MSet::Internal
firstrule	queryparser/lemon.c	/^  struct rule *firstrule;    \/* Pointer to first rule in the grammar *\/$/;"	m	struct:pstate	typeref:struct:pstate::rule	file:
firstset	queryparser/lemon.c	/^  char *firstset;          \/* First-set for all rules of this symbol *\/$/;"	m	struct:symbol	file:
fkp	api/editdistance.cc	/^    int * fkp;$/;"	m	class:edist_state	file:
fkp_cols	api/editdistance.cc	/^    int fkp_cols;$/;"	m	class:edist_state	file:
fl	backends/glass/glass_freelist.h	/^    GlassFLCursor fl, fl_end, flw;$/;"	m	class:GlassFreeList
fl_end	backends/glass/glass_freelist.h	/^    GlassFLCursor fl, fl_end, flw;$/;"	m	class:GlassFreeList
fl_serialised	backends/glass/glass_version.h	/^    std::string fl_serialised;$/;"	m	class:Glass::RootInfo
flag	common/gnu_getopt.h	/^    int * flag;$/;"	m	struct:option
flag_tab	examples/quest.cc	/^static const qp_flag flag_tab[] = {$/;"	v	file:
flags	api/compactor.cc	/^    unsigned flags;$/;"	m	class:Xapian::Compactor::Internal	file:
flags	backends/glass/glass_table.h	/^	int flags;$/;"	m	class:GlassTable
flags	include/xapian/queryparser.h	/^    unsigned flags;$/;"	m	class:Xapian::RangeProcessor
flags	include/xapian/termgenerator.h	/^    typedef int flags;$/;"	t	class:Xapian::TermGenerator
flags	queryparser/queryparser_internal.cc	/^    unsigned flags;$/;"	m	class:State	file:
flags	queryparser/termgenerator_internal.h	/^    TermGenerator::flags flags;$/;"	m	class:Xapian::TermGenerator::Internal
flipBytes	backends/inmemory/KeyDomet.h	/^     inline void  flipBytes(kdmt128_t& val) {$/;"	f	class:kdmt::KeyDometSize
flipBytes	backends/inmemory/KeyDomet.h	/^     inline void  flipBytes(uint32_t& val) { val = __builtin_bswap32(val); }$/;"	f	class:kdmt::KeyDometSize
flipBytes	backends/inmemory/KeyDomet.h	/^     inline void  flipBytes(uint64_t& val) { val = __builtin_bswap64(val); }$/;"	f	class:kdmt::KeyDometSize
flipBytes	backends/inmemory/KeyDomet.h	/^    inline void flipBytes(uint16_t& val) { val = __builtin_bswap16(val); }$/;"	f	class:kdmt::KeyDometSize
flush	backends/chert/chert_postlist.cc	/^PostlistChunkWriter::flush(ChertTable *table)$/;"	f	class:PostlistChunkWriter
flush	backends/glass/glass_inverter.cc	/^Inverter::flush(GlassPostListTable & table)$/;"	f	class:Inverter
flush	backends/glass/glass_postlist.cc	/^PostlistChunkWriter::flush(GlassTable *table)$/;"	f	class:PostlistChunkWriter
flush_all_post_lists	backends/glass/glass_inverter.cc	/^Inverter::flush_all_post_lists(GlassPostListTable & table)$/;"	f	class:Inverter
flush_db	backends/chert/chert_spelling.h	/^    void flush_db() {$/;"	f	class:ChertSpellingTable
flush_db	backends/chert/chert_synonym.h	/^    void flush_db() {$/;"	f	class:ChertSynonymTable
flush_db	backends/chert/chert_table.cc	/^ChertTable::flush_db()$/;"	f	class:ChertTable
flush_db	backends/glass/glass_spelling.h	/^    Xapian::termcount flush_db() {$/;"	f	class:GlassSpellingTable
flush_db	backends/glass/glass_synonym.h	/^    void flush_db() {$/;"	f	class:GlassSynonymTable
flush_db	backends/glass/glass_table.cc	/^GlassTable::flush_db()$/;"	f	class:GlassTable
flush_doclengths	backends/glass/glass_inverter.cc	/^Inverter::flush_doclengths(GlassPostListTable & table)$/;"	f	class:Inverter
flush_pos_lists	backends/glass/glass_inverter.cc	/^Inverter::flush_pos_lists(GlassPositionListTable & table)$/;"	f	class:Inverter
flush_post_list	backends/glass/glass_inverter.cc	/^Inverter::flush_post_list(GlassPostListTable & table, const string & term)$/;"	f	class:Inverter
flush_post_lists	backends/glass/glass_inverter.cc	/^Inverter::flush_post_lists(GlassPostListTable & table, const string & pfx)$/;"	f	class:Inverter
flush_postlist_changes	backends/chert/chert_database.cc	/^ChertWritableDatabase::flush_postlist_changes() const$/;"	f	class:ChertWritableDatabase
flush_postlist_changes	backends/glass/glass_database.cc	/^GlassWritableDatabase::flush_postlist_changes() const$/;"	f	class:GlassWritableDatabase
flush_threshold	backends/chert/chert_database.h	/^	Xapian::doccount flush_threshold;$/;"	m	class:ChertWritableDatabase
flush_threshold	backends/glass/glass_database.h	/^	Xapian::doccount flush_threshold;$/;"	m	class:GlassWritableDatabase
flw	backends/glass/glass_freelist.h	/^    GlassFLCursor fl, fl_end, flw;$/;"	m	class:GlassFreeList
flw_appending	backends/glass/glass_freelist.h	/^    bool flw_appending;$/;"	m	class:GlassFreeList
for_each_nothrow	exception_data.pm	/^sub for_each_nothrow {$/;"	s
form_key	backends/chert/chert_table.cc	/^void ChertTable::form_key(const string & key) const$/;"	f	class:ChertTable
form_key	backends/chert/chert_table.h	/^    void form_key(const std::string & key_) {$/;"	f	class:Item_wr
form_key	backends/glass/glass_table.cc	/^void GlassTable::form_key(const string & key) const$/;"	f	class:GlassTable
form_key	backends/glass/glass_table.h	/^    void form_key(const std::string & key_) {$/;"	f	class:Glass::LeafItem_wr
form_null_key	backends/chert/chert_table.h	/^    void form_null_key(uint4 n) {$/;"	f	class:Item_wr
form_null_key	backends/glass/glass_table.h	/^    void form_null_key(uint4 n) {$/;"	f	class:Glass::BItem_wr
format	common/str.cc	/^format(const char * fmt, T value)$/;"	f	namespace:Xapian::Internal
format_doc_termlist	tests/api_termgen.cc	/^format_doc_termlist(const Xapian::Document & doc)$/;"	f	file:
format_int_fixed_width	api/valuerangeproc.cc	/^format_int_fixed_width(char * p, int v, int w)$/;"	f	namespace:Xapian
format_yyyymmdd	api/valuerangeproc.cc	/^format_yyyymmdd(char * p, int y, int m, int d)$/;"	f	namespace:Xapian
fplp	queryparser/lemon.c	/^  struct plink *fplp;      \/* Follow-set forward propagation links *\/$/;"	m	struct:config	typeref:struct:config::plink	file:
fragment	backends/chert/chert_spelling.h	/^    explicit fragment(char data_[4]) { std::memcpy(data, data_, 4); }$/;"	f	struct:fragment
fragment	backends/chert/chert_spelling.h	/^    fragment() { }$/;"	f	struct:fragment
fragment	backends/chert/chert_spelling.h	/^struct fragment {$/;"	s
fragment	backends/glass/glass_spelling.h	/^    explicit fragment(char data_[4]) { std::memcpy(data, data_, 4); }$/;"	f	struct:Glass::fragment
fragment	backends/glass/glass_spelling.h	/^    fragment() { }$/;"	f	struct:Glass::fragment
fragment	backends/glass/glass_spelling.h	/^struct fragment {$/;"	s	namespace:Glass
free_block	backends/chert/chert_btreebase.cc	/^ChertTable_base::free_block(uint4 n)$/;"	f	class:ChertTable_base
free_list	backends/glass/glass_table.h	/^	GlassFreeList free_list;$/;"	m	class:GlassTable
freelist	queryparser/lemon.c	/^static struct config *freelist = 0;      \/* List of free configurations *\/$/;"	v	typeref:struct:config	file:
freeze	common/bitstream.h	/^    std::string & freeze() {$/;"	f	class:Xapian::BitWriter
freq	backends/valuestats.h	/^    Xapian::doccount freq;$/;"	m	struct:ValueStats
freq_deltas	backends/chert/chert_database.h	/^		freq_deltas;$/;"	m	class:ChertWritableDatabase
freq_edit_lower_bound	api/omdatabase.cc	/^freq_edit_lower_bound(const vector<unsigned> & a, const vector<unsigned> & b)$/;"	f	namespace:Xapian
freq_real	backends/chert/chert_dbcheck.cc	/^    Xapian::doccount freq_real;$/;"	m	struct:VStats	file:
freq_real	backends/glass/glass_dbcheck.cc	/^    Xapian::doccount freq_real;$/;"	m	struct:VStats	file:
frequency	api/matchspy.cc	/^    Xapian::doccount frequency;$/;"	m	class:StringAndFrequency	file:
from	queryparser/lemon.c	/^  struct s_x1node **from;  \/* Previous link *\/$/;"	m	struct:s_x1node	typeref:struct:s_x1node::s_x1node	file:
from	queryparser/lemon.c	/^  struct s_x2node **from;  \/* Previous link *\/$/;"	m	struct:s_x2node	typeref:struct:s_x2node::s_x2node	file:
from	queryparser/lemon.c	/^  struct s_x3node **from;  \/* Previous link *\/$/;"	m	struct:s_x3node	typeref:struct:s_x3node::s_x3node	file:
from	queryparser/lemon.c	/^  struct s_x4node **from;  \/* Previous link *\/$/;"	m	struct:s_x4node	typeref:struct:s_x4node::s_x4node	file:
fstat	config.h	453;"	d
fstat	config.h	456;"	d
full_compaction	backends/chert/chert_table.h	/^	bool full_compaction;$/;"	m	class:ChertTable
full_compaction	backends/glass/glass_table.h	/^	bool full_compaction;$/;"	m	class:GlassTable
full_db_has_positions	matcher/multimatch.h	/^	bool full_db_has_positions() const {$/;"	f	class:MultiMatch
full_db_has_positions	matcher/queryoptimiser.h	/^    bool full_db_has_positions;$/;"	m	class:QueryOptimiser
fullcopy_count	api/replication.h	/^    int fullcopy_count;$/;"	m	struct:Xapian::ReplicationInfo
func	common/debuglog.h	/^    std::string func;$/;"	m	class:DebugLogFunc
func	common/debuglog.h	/^    std::string func;$/;"	m	class:DebugLogFuncVoid
func	queryparser/lemon.c	/^  void(*func)();$/;"	m	struct:s_options	file:
func-members	docs/apidoc/html/dbfactory_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/apidoc/html/eset_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/apidoc/html/geospatial_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/apidoc/html/mset_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/apidoc/html/namespaceXapian.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/apidoc/html/namespaceXapian_1_1Auto.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/apidoc/html/namespaceXapian_1_1Chert.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/apidoc/html/namespaceXapian_1_1InMemory.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/apidoc/html/namespaceXapian_1_1Remote.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/apidoc/html/namespaceXapian_1_1Unicode.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/apidoc/html/positioniterator_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/apidoc/html/postingiterator_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/apidoc/html/query_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/apidoc/html/queryparser_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/apidoc/html/termiterator_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/apidoc/html/unicode_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/apidoc/html/valueiterator_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/apidoc/html/xapian_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func_add_hook	libtool	/^func_add_hook ()$/;"	f
func_add_hook	ltmain.sh	/^func_add_hook ()$/;"	f
func_append	libtool	/^  func_append ()$/;"	f
func_append	ltmain.sh	/^  func_append ()$/;"	f
func_append_quoted	libtool	/^  func_append_quoted ()$/;"	f
func_append_quoted	ltmain.sh	/^  func_append_quoted ()$/;"	f
func_append_uniq	libtool	/^func_append_uniq ()$/;"	f
func_append_uniq	ltmain.sh	/^func_append_uniq ()$/;"	f
func_arith	libtool	/^  func_arith ()$/;"	f
func_arith	ltmain.sh	/^  func_arith ()$/;"	f
func_at_file	ar-lib	/^func_at_file ()$/;"	f
func_cc_basename	config.status	/^func_cc_basename ()$/;"	f
func_cc_basename	configure	/^func_cc_basename ()$/;"	f
func_cc_basename	libtool	/^func_cc_basename ()$/;"	f
func_check_prog_grep	libtool	/^  func_check_prog_grep ()$/;"	f
func_check_prog_grep	ltmain.sh	/^  func_check_prog_grep ()$/;"	f
func_check_prog_sed	libtool	/^  func_check_prog_sed ()$/;"	f
func_check_prog_sed	ltmain.sh	/^  func_check_prog_sed ()$/;"	f
func_check_version_match	libtool	/^func_check_version_match ()$/;"	f
func_check_version_match	ltmain.sh	/^func_check_version_match ()$/;"	f
func_cl_dashL	compile	/^func_cl_dashL ()$/;"	f
func_cl_dashl	compile	/^func_cl_dashl ()$/;"	f
func_cl_wrapper	compile	/^func_cl_wrapper ()$/;"	f
func_config	libtool	/^func_config ()$/;"	f
func_config	ltmain.sh	/^func_config ()$/;"	f
func_convert_core_file_wine_to_w32	libtool	/^func_convert_core_file_wine_to_w32 ()$/;"	f
func_convert_core_file_wine_to_w32	ltmain.sh	/^func_convert_core_file_wine_to_w32 ()$/;"	f
func_convert_core_msys_to_w32	libtool	/^func_convert_core_msys_to_w32 ()$/;"	f
func_convert_core_msys_to_w32	ltmain.sh	/^func_convert_core_msys_to_w32 ()$/;"	f
func_convert_core_path_wine_to_w32	libtool	/^func_convert_core_path_wine_to_w32 ()$/;"	f
func_convert_core_path_wine_to_w32	ltmain.sh	/^func_convert_core_path_wine_to_w32 ()$/;"	f
func_convert_file_check	libtool	/^func_convert_file_check ()$/;"	f
func_convert_file_check	ltmain.sh	/^func_convert_file_check ()$/;"	f
func_convert_file_cygwin_to_w32	libtool	/^func_convert_file_cygwin_to_w32 ()$/;"	f
func_convert_file_cygwin_to_w32	ltmain.sh	/^func_convert_file_cygwin_to_w32 ()$/;"	f
func_convert_file_msys_to_cygwin	libtool	/^func_convert_file_msys_to_cygwin ()$/;"	f
func_convert_file_msys_to_cygwin	ltmain.sh	/^func_convert_file_msys_to_cygwin ()$/;"	f
func_convert_file_msys_to_w32	libtool	/^func_convert_file_msys_to_w32 ()$/;"	f
func_convert_file_msys_to_w32	ltmain.sh	/^func_convert_file_msys_to_w32 ()$/;"	f
func_convert_file_nix_to_cygwin	libtool	/^func_convert_file_nix_to_cygwin ()$/;"	f
func_convert_file_nix_to_cygwin	ltmain.sh	/^func_convert_file_nix_to_cygwin ()$/;"	f
func_convert_file_nix_to_w32	libtool	/^func_convert_file_nix_to_w32 ()$/;"	f
func_convert_file_nix_to_w32	ltmain.sh	/^func_convert_file_nix_to_w32 ()$/;"	f
func_convert_file_noop	libtool	/^func_convert_file_noop ()$/;"	f
func_convert_file_noop	ltmain.sh	/^func_convert_file_noop ()$/;"	f
func_convert_path_check	libtool	/^func_convert_path_check ()$/;"	f
func_convert_path_check	ltmain.sh	/^func_convert_path_check ()$/;"	f
func_convert_path_cygwin_to_w32	libtool	/^func_convert_path_cygwin_to_w32 ()$/;"	f
func_convert_path_cygwin_to_w32	ltmain.sh	/^func_convert_path_cygwin_to_w32 ()$/;"	f
func_convert_path_front_back_pathsep	libtool	/^func_convert_path_front_back_pathsep ()$/;"	f
func_convert_path_front_back_pathsep	ltmain.sh	/^func_convert_path_front_back_pathsep ()$/;"	f
func_convert_path_msys_to_cygwin	libtool	/^func_convert_path_msys_to_cygwin ()$/;"	f
func_convert_path_msys_to_cygwin	ltmain.sh	/^func_convert_path_msys_to_cygwin ()$/;"	f
func_convert_path_msys_to_w32	libtool	/^func_convert_path_msys_to_w32 ()$/;"	f
func_convert_path_msys_to_w32	ltmain.sh	/^func_convert_path_msys_to_w32 ()$/;"	f
func_convert_path_nix_to_cygwin	libtool	/^func_convert_path_nix_to_cygwin ()$/;"	f
func_convert_path_nix_to_cygwin	ltmain.sh	/^func_convert_path_nix_to_cygwin ()$/;"	f
func_convert_path_nix_to_w32	libtool	/^func_convert_path_nix_to_w32 ()$/;"	f
func_convert_path_nix_to_w32	ltmain.sh	/^func_convert_path_nix_to_w32 ()$/;"	f
func_convert_path_noop	libtool	/^func_convert_path_noop ()$/;"	f
func_convert_path_noop	ltmain.sh	/^func_convert_path_noop ()$/;"	f
func_cygming_dll_for_implib	libtool	/^func_cygming_dll_for_implib ()$/;"	f
func_cygming_dll_for_implib	ltmain.sh	/^func_cygming_dll_for_implib ()$/;"	f
func_cygming_dll_for_implib_fallback	libtool	/^func_cygming_dll_for_implib_fallback ()$/;"	f
func_cygming_dll_for_implib_fallback	ltmain.sh	/^func_cygming_dll_for_implib_fallback ()$/;"	f
func_cygming_dll_for_implib_fallback_core	libtool	/^func_cygming_dll_for_implib_fallback_core ()$/;"	f
func_cygming_dll_for_implib_fallback_core	ltmain.sh	/^func_cygming_dll_for_implib_fallback_core ()$/;"	f
func_cygming_gnu_implib_p	libtool	/^func_cygming_gnu_implib_p ()$/;"	f
func_cygming_gnu_implib_p	ltmain.sh	/^func_cygming_gnu_implib_p ()$/;"	f
func_cygming_ms_implib_p	libtool	/^func_cygming_ms_implib_p ()$/;"	f
func_cygming_ms_implib_p	ltmain.sh	/^func_cygming_ms_implib_p ()$/;"	f
func_cygpath	libtool	/^func_cygpath ()$/;"	f
func_cygpath	ltmain.sh	/^func_cygpath ()$/;"	f
func_dll_def_p	libtool	/^func_dll_def_p ()$/;"	f
func_dll_def_p	ltmain.sh	/^func_dll_def_p ()$/;"	f
func_echo	libtool	/^func_echo ()$/;"	f
func_echo	ltmain.sh	/^func_echo ()$/;"	f
func_echo_all	configure	/^func_echo_all ()$/;"	f
func_echo_all	libtool	/^func_echo_all ()$/;"	f
func_echo_all	ltmain.sh	/^func_echo_all ()$/;"	f
func_echo_infix_1	libtool	/^func_echo_infix_1 ()$/;"	f
func_echo_infix_1	ltmain.sh	/^func_echo_infix_1 ()$/;"	f
func_emit_cwrapperexe_src	libtool	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_cwrapperexe_src	ltmain.sh	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_wrapper	libtool	/^func_emit_wrapper ()$/;"	f
func_emit_wrapper	ltmain.sh	/^func_emit_wrapper ()$/;"	f
func_enable_tag	libtool	/^func_enable_tag ()$/;"	f
func_enable_tag	ltmain.sh	/^func_enable_tag ()$/;"	f
func_error	ar-lib	/^func_error ()$/;"	f
func_error	libtool	/^func_error ()$/;"	f
func_error	ltmain.sh	/^func_error ()$/;"	f
func_exec_program	bin/xapian-check	/^func_exec_program ()$/;"	f
func_exec_program	bin/xapian-compact	/^func_exec_program ()$/;"	f
func_exec_program	bin/xapian-delve	/^func_exec_program ()$/;"	f
func_exec_program	bin/xapian-progsrv	/^func_exec_program ()$/;"	f
func_exec_program	bin/xapian-replicate	/^func_exec_program ()$/;"	f
func_exec_program	bin/xapian-replicate-server	/^func_exec_program ()$/;"	f
func_exec_program	bin/xapian-tcpsrv	/^func_exec_program ()$/;"	f
func_exec_program	examples/copydatabase	/^func_exec_program ()$/;"	f
func_exec_program	examples/quest	/^func_exec_program ()$/;"	f
func_exec_program	examples/simpleexpand	/^func_exec_program ()$/;"	f
func_exec_program	examples/simpleindex	/^func_exec_program ()$/;"	f
func_exec_program	examples/simplesearch	/^func_exec_program ()$/;"	f
func_exec_program	examples/xapian-metadata	/^func_exec_program ()$/;"	f
func_exec_program	examples/xapian-pos	/^func_exec_program ()$/;"	f
func_exec_program	libtool	/^func_exec_program ()$/;"	f
func_exec_program	ltmain.sh	/^func_exec_program ()$/;"	f
func_exec_program_core	bin/xapian-check	/^func_exec_program_core ()$/;"	f
func_exec_program_core	bin/xapian-compact	/^func_exec_program_core ()$/;"	f
func_exec_program_core	bin/xapian-delve	/^func_exec_program_core ()$/;"	f
func_exec_program_core	bin/xapian-progsrv	/^func_exec_program_core ()$/;"	f
func_exec_program_core	bin/xapian-replicate	/^func_exec_program_core ()$/;"	f
func_exec_program_core	bin/xapian-replicate-server	/^func_exec_program_core ()$/;"	f
func_exec_program_core	bin/xapian-tcpsrv	/^func_exec_program_core ()$/;"	f
func_exec_program_core	examples/copydatabase	/^func_exec_program_core ()$/;"	f
func_exec_program_core	examples/quest	/^func_exec_program_core ()$/;"	f
func_exec_program_core	examples/simpleexpand	/^func_exec_program_core ()$/;"	f
func_exec_program_core	examples/simpleindex	/^func_exec_program_core ()$/;"	f
func_exec_program_core	examples/simplesearch	/^func_exec_program_core ()$/;"	f
func_exec_program_core	examples/xapian-metadata	/^func_exec_program_core ()$/;"	f
func_exec_program_core	examples/xapian-pos	/^func_exec_program_core ()$/;"	f
func_exec_program_core	libtool	/^func_exec_program_core ()$/;"	f
func_exec_program_core	ltmain.sh	/^func_exec_program_core ()$/;"	f
func_executable_p	libtool	/^func_executable_p ()$/;"	f
func_executable_p	ltmain.sh	/^func_executable_p ()$/;"	f
func_execute_cmds	libtool	/^func_execute_cmds ()$/;"	f
func_execute_cmds	ltmain.sh	/^func_execute_cmds ()$/;"	f
func_extract_an_archive	libtool	/^func_extract_an_archive ()$/;"	f
func_extract_an_archive	ltmain.sh	/^func_extract_an_archive ()$/;"	f
func_extract_archives	libtool	/^func_extract_archives ()$/;"	f
func_extract_archives	ltmain.sh	/^func_extract_archives ()$/;"	f
func_fallback_echo	bin/xapian-check	/^func_fallback_echo ()$/;"	f
func_fallback_echo	bin/xapian-compact	/^func_fallback_echo ()$/;"	f
func_fallback_echo	bin/xapian-delve	/^func_fallback_echo ()$/;"	f
func_fallback_echo	bin/xapian-progsrv	/^func_fallback_echo ()$/;"	f
func_fallback_echo	bin/xapian-replicate	/^func_fallback_echo ()$/;"	f
func_fallback_echo	bin/xapian-replicate-server	/^func_fallback_echo ()$/;"	f
func_fallback_echo	bin/xapian-tcpsrv	/^func_fallback_echo ()$/;"	f
func_fallback_echo	config.status	/^func_fallback_echo ()$/;"	f
func_fallback_echo	configure	/^  func_fallback_echo ()$/;"	f
func_fallback_echo	configure	/^func_fallback_echo ()$/;"	f
func_fallback_echo	examples/copydatabase	/^func_fallback_echo ()$/;"	f
func_fallback_echo	examples/quest	/^func_fallback_echo ()$/;"	f
func_fallback_echo	examples/simpleexpand	/^func_fallback_echo ()$/;"	f
func_fallback_echo	examples/simpleindex	/^func_fallback_echo ()$/;"	f
func_fallback_echo	examples/simplesearch	/^func_fallback_echo ()$/;"	f
func_fallback_echo	examples/xapian-metadata	/^func_fallback_echo ()$/;"	f
func_fallback_echo	examples/xapian-pos	/^func_fallback_echo ()$/;"	f
func_fallback_echo	libtool	/^func_fallback_echo ()$/;"	f
func_fallback_echo	ltmain.sh	/^func_fallback_echo ()$/;"	f
func_fatal_configuration	libtool	/^func_fatal_configuration ()$/;"	f
func_fatal_configuration	ltmain.sh	/^func_fatal_configuration ()$/;"	f
func_fatal_error	libtool	/^func_fatal_error ()$/;"	f
func_fatal_error	ltmain.sh	/^func_fatal_error ()$/;"	f
func_fatal_help	libtool	/^func_fatal_help ()$/;"	f
func_fatal_help	ltmain.sh	/^func_fatal_help ()$/;"	f
func_features	libtool	/^func_features ()$/;"	f
func_features	ltmain.sh	/^func_features ()$/;"	f
func_file_conv	ar-lib	/^func_file_conv ()$/;"	f
func_file_conv	compile	/^func_file_conv ()$/;"	f
func_generate_dlsyms	libtool	/^func_generate_dlsyms ()$/;"	f
func_generate_dlsyms	ltmain.sh	/^func_generate_dlsyms ()$/;"	f
func_generated_by_libtool_p	libtool	/^func_generated_by_libtool_p ()$/;"	f
func_generated_by_libtool_p	ltmain.sh	/^func_generated_by_libtool_p ()$/;"	f
func_grep	libtool	/^func_grep ()$/;"	f
func_grep	ltmain.sh	/^func_grep ()$/;"	f
func_help	libtool	/^func_help ()$/;"	f
func_help	ltmain.sh	/^func_help ()$/;"	f
func_hookable	libtool	/^func_hookable ()$/;"	f
func_hookable	ltmain.sh	/^func_hookable ()$/;"	f
func_infer_tag	libtool	/^func_infer_tag ()$/;"	f
func_infer_tag	ltmain.sh	/^func_infer_tag ()$/;"	f
func_init_to_host_path_cmd	libtool	/^func_init_to_host_path_cmd ()$/;"	f
func_init_to_host_path_cmd	ltmain.sh	/^func_init_to_host_path_cmd ()$/;"	f
func_lalib_p	libtool	/^func_lalib_p ()$/;"	f
func_lalib_p	ltmain.sh	/^func_lalib_p ()$/;"	f
func_lalib_unsafe_p	libtool	/^func_lalib_unsafe_p ()$/;"	f
func_lalib_unsafe_p	ltmain.sh	/^func_lalib_unsafe_p ()$/;"	f
func_len	libtool	/^  func_len ()$/;"	f
func_len	ltmain.sh	/^  func_len ()$/;"	f
func_lo2o	libtool	/^  func_lo2o ()$/;"	f
func_lo2o	ltmain.sh	/^  func_lo2o ()$/;"	f
func_lt_dump_args	bin/xapian-check	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	bin/xapian-compact	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	bin/xapian-delve	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	bin/xapian-progsrv	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	bin/xapian-replicate	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	bin/xapian-replicate-server	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	bin/xapian-tcpsrv	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	examples/copydatabase	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	examples/quest	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	examples/simpleexpand	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	examples/simpleindex	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	examples/simplesearch	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	examples/xapian-metadata	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	examples/xapian-pos	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	libtool	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	ltmain.sh	/^func_lt_dump_args ()$/;"	f
func_lt_ver	libtool	/^func_lt_ver ()$/;"	f
func_lt_ver	ltmain.sh	/^func_lt_ver ()$/;"	f
func_ltwrapper_executable_p	libtool	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_executable_p	ltmain.sh	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_p	libtool	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_p	ltmain.sh	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_script_p	libtool	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_script_p	ltmain.sh	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_scriptname	libtool	/^func_ltwrapper_scriptname ()$/;"	f
func_ltwrapper_scriptname	ltmain.sh	/^func_ltwrapper_scriptname ()$/;"	f
func_missing_arg	libtool	/^func_missing_arg ()$/;"	f
func_missing_arg	ltmain.sh	/^func_missing_arg ()$/;"	f
func_mkdir_p	libtool	/^func_mkdir_p ()$/;"	f
func_mkdir_p	ltmain.sh	/^func_mkdir_p ()$/;"	f
func_mktempdir	libtool	/^func_mktempdir ()$/;"	f
func_mktempdir	ltmain.sh	/^func_mktempdir ()$/;"	f
func_mode_compile	libtool	/^func_mode_compile ()$/;"	f
func_mode_compile	ltmain.sh	/^func_mode_compile ()$/;"	f
func_mode_execute	libtool	/^func_mode_execute ()$/;"	f
func_mode_execute	ltmain.sh	/^func_mode_execute ()$/;"	f
func_mode_finish	libtool	/^func_mode_finish ()$/;"	f
func_mode_finish	ltmain.sh	/^func_mode_finish ()$/;"	f
func_mode_help	libtool	/^func_mode_help ()$/;"	f
func_mode_help	ltmain.sh	/^func_mode_help ()$/;"	f
func_mode_install	libtool	/^func_mode_install ()$/;"	f
func_mode_install	ltmain.sh	/^func_mode_install ()$/;"	f
func_mode_link	libtool	/^func_mode_link ()$/;"	f
func_mode_link	ltmain.sh	/^func_mode_link ()$/;"	f
func_mode_uninstall	libtool	/^func_mode_uninstall ()$/;"	f
func_mode_uninstall	ltmain.sh	/^func_mode_uninstall ()$/;"	f
func_munge_path_list	config.status	/^func_munge_path_list ()$/;"	f
func_munge_path_list	configure	/^func_munge_path_list ()$/;"	f
func_munge_path_list	libtool	/^func_munge_path_list ()$/;"	f
func_normal_abspath	libtool	/^func_normal_abspath ()$/;"	f
func_normal_abspath	ltmain.sh	/^func_normal_abspath ()$/;"	f
func_notquiet	libtool	/^func_notquiet ()$/;"	f
func_notquiet	ltmain.sh	/^func_notquiet ()$/;"	f
func_options	libtool	/^func_options ()$/;"	f
func_options	ltmain.sh	/^func_options ()$/;"	f
func_options_prep	libtool	/^func_options_prep ()$/;"	f
func_options_prep	ltmain.sh	/^func_options_prep ()$/;"	f
func_parse_lt_options	bin/xapian-check	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	bin/xapian-compact	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	bin/xapian-delve	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	bin/xapian-progsrv	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	bin/xapian-replicate	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	bin/xapian-replicate-server	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	bin/xapian-tcpsrv	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	examples/copydatabase	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	examples/quest	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	examples/simpleexpand	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	examples/simpleindex	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	examples/simplesearch	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	examples/xapian-metadata	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	examples/xapian-pos	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	libtool	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	ltmain.sh	/^func_parse_lt_options ()$/;"	f
func_parse_options	libtool	/^func_parse_options ()$/;"	f
func_parse_options	ltmain.sh	/^func_parse_options ()$/;"	f
func_path_progs	libtool	/^func_path_progs ()$/;"	f
func_path_progs	ltmain.sh	/^func_path_progs ()$/;"	f
func_quote_for_eval	libtool	/^func_quote_for_eval ()$/;"	f
func_quote_for_eval	ltmain.sh	/^func_quote_for_eval ()$/;"	f
func_quote_for_expand	libtool	/^func_quote_for_expand ()$/;"	f
func_quote_for_expand	ltmain.sh	/^func_quote_for_expand ()$/;"	f
func_relative_path	libtool	/^func_relative_path ()$/;"	f
func_relative_path	ltmain.sh	/^func_relative_path ()$/;"	f
func_remove_hook	libtool	/^func_remove_hook ()$/;"	f
func_remove_hook	ltmain.sh	/^func_remove_hook ()$/;"	f
func_replace_sysroot	libtool	/^func_replace_sysroot ()$/;"	f
func_replace_sysroot	ltmain.sh	/^func_replace_sysroot ()$/;"	f
func_require_term_colors	libtool	/^func_require_term_colors ()$/;"	f
func_require_term_colors	ltmain.sh	/^func_require_term_colors ()$/;"	f
func_resolve_sysroot	libtool	/^func_resolve_sysroot ()$/;"	f
func_resolve_sysroot	ltmain.sh	/^func_resolve_sysroot ()$/;"	f
func_run_hooks	libtool	/^func_run_hooks ()$/;"	f
func_run_hooks	ltmain.sh	/^func_run_hooks ()$/;"	f
func_show_eval	libtool	/^func_show_eval ()$/;"	f
func_show_eval	ltmain.sh	/^func_show_eval ()$/;"	f
func_show_eval_locale	libtool	/^func_show_eval_locale ()$/;"	f
func_show_eval_locale	ltmain.sh	/^func_show_eval_locale ()$/;"	f
func_sort_ver	libtool	/^func_sort_ver ()$/;"	f
func_sort_ver	ltmain.sh	/^func_sort_ver ()$/;"	f
func_source	libtool	/^func_source ()$/;"	f
func_source	ltmain.sh	/^func_source ()$/;"	f
func_split_equals	libtool	/^  func_split_equals ()$/;"	f
func_split_equals	ltmain.sh	/^  func_split_equals ()$/;"	f
func_split_short_opt	libtool	/^  func_split_short_opt ()$/;"	f
func_split_short_opt	ltmain.sh	/^  func_split_short_opt ()$/;"	f
func_stripname	libtool	/^  func_stripname ()$/;"	f
func_stripname	ltmain.sh	/^  func_stripname ()$/;"	f
func_stripname_cnf	configure	/^func_stripname_cnf ()$/;"	f
func_suncc_cstd_abi	libtool	/^func_suncc_cstd_abi ()$/;"	f
func_suncc_cstd_abi	ltmain.sh	/^func_suncc_cstd_abi ()$/;"	f
func_to_host_file	libtool	/^func_to_host_file ()$/;"	f
func_to_host_file	ltmain.sh	/^func_to_host_file ()$/;"	f
func_to_host_path	libtool	/^func_to_host_path ()$/;"	f
func_to_host_path	ltmain.sh	/^func_to_host_path ()$/;"	f
func_to_tool_file	libtool	/^func_to_tool_file ()$/;"	f
func_to_tool_file	ltmain.sh	/^func_to_tool_file ()$/;"	f
func_tr_sh	libtool	/^func_tr_sh ()$/;"	f
func_tr_sh	ltmain.sh	/^func_tr_sh ()$/;"	f
func_usage	libtool	/^func_usage ()$/;"	f
func_usage	ltmain.sh	/^func_usage ()$/;"	f
func_usage_message	libtool	/^func_usage_message ()$/;"	f
func_usage_message	ltmain.sh	/^func_usage_message ()$/;"	f
func_validate_options	libtool	/^func_validate_options ()$/;"	f
func_validate_options	ltmain.sh	/^func_validate_options ()$/;"	f
func_verbose	libtool	/^func_verbose ()$/;"	f
func_verbose	ltmain.sh	/^func_verbose ()$/;"	f
func_version	libtool	/^func_version ()$/;"	f
func_version	ltmain.sh	/^func_version ()$/;"	f
func_warn_and_continue	libtool	/^func_warn_and_continue ()$/;"	f
func_warn_and_continue	ltmain.sh	/^func_warn_and_continue ()$/;"	f
func_warning	libtool	/^func_warning ()$/;"	f
func_warning	ltmain.sh	/^func_warning ()$/;"	f
func_win32_import_lib_p	libtool	/^func_win32_import_lib_p ()$/;"	f
func_win32_import_lib_p	ltmain.sh	/^func_win32_import_lib_p ()$/;"	f
func_win32_libid	libtool	/^func_win32_libid ()$/;"	f
func_win32_libid	ltmain.sh	/^func_win32_libid ()$/;"	f
func_write_libtool_object	libtool	/^func_write_libtool_object ()$/;"	f
func_write_libtool_object	ltmain.sh	/^func_write_libtool_object ()$/;"	f
func_xform	libtool	/^  func_xform ()$/;"	f
func_xform	ltmain.sh	/^  func_xform ()$/;"	f
function	languages/compiler/header.h	/^    struct name * function;$/;"	m	struct:amongvec	typeref:struct:amongvec::name
function_count	languages/compiler/header.h	/^    int function_count;       \/* in this among *\/$/;"	m	struct:among
fws	queryparser/lemon.c	/^  char *fws;               \/* Follow-set for this configuration only *\/$/;"	m	struct:config	file:
g_AEI	languages/finnish.cc	/^static const unsigned char g_AEI[] = { 17, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8 };$/;"	v	file:
g_AEIO	languages/italian.cc	/^static const unsigned char g_AEIO[] = { 17, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 8, 2 };$/;"	v	file:
g_AIOU	languages/kraaij_pohlmann.cc	/^static const unsigned char g_AIOU[] = { 1, 65, 16 };$/;"	v	file:
g_AOU	languages/kraaij_pohlmann.cc	/^static const unsigned char g_AOU[] = { 1, 64, 16 };$/;"	v	file:
g_CG	languages/italian.cc	/^static const unsigned char g_CG[] = { 17 };$/;"	v	file:
g_U	languages/turkish.cc	/^static const unsigned char g_U[] = { 1, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 1 };$/;"	v	file:
g_V1	languages/finnish.cc	/^static const unsigned char g_V1[] = { 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 32 };$/;"	v	file:
g_V2	languages/finnish.cc	/^static const unsigned char g_V2[] = { 17, 65, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 32 };$/;"	v	file:
g_keep_with_s	languages/french.cc	/^static const unsigned char g_keep_with_s[] = { 1, 65, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128 };$/;"	v	file:
g_particle_end	languages/finnish.cc	/^static const unsigned char g_particle_end[] = { 17, 97, 24, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 32 };$/;"	v	file:
g_random_seed	tests/soaktest/soaktest.cc	/^unsigned int g_random_seed;$/;"	v
g_s_ending	languages/danish.cc	/^static const unsigned char g_s_ending[] = { 239, 254, 42, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16 };$/;"	v	file:
g_s_ending	languages/german.cc	/^static const unsigned char g_s_ending[] = { 117, 30, 5 };$/;"	v	file:
g_s_ending	languages/german2.cc	/^static const unsigned char g_s_ending[] = { 117, 30, 5 };$/;"	v	file:
g_s_ending	languages/norwegian.cc	/^static const unsigned char g_s_ending[] = { 119, 125, 149, 1 };$/;"	v	file:
g_s_ending	languages/swedish.cc	/^static const unsigned char g_s_ending[] = { 119, 127, 149 };$/;"	v	file:
g_st_ending	languages/german.cc	/^static const unsigned char g_st_ending[] = { 117, 30, 4 };$/;"	v	file:
g_st_ending	languages/german2.cc	/^static const unsigned char g_st_ending[] = { 117, 30, 4 };$/;"	v	file:
g_v	languages/armenian.cc	/^static const unsigned char g_v[] = { 209, 4, 128, 0, 18 };$/;"	v	file:
g_v	languages/basque.cc	/^static const unsigned char g_v[] = { 17, 65, 16 };$/;"	v	file:
g_v	languages/catalan.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 129, 81, 6, 10 };$/;"	v	file:
g_v	languages/danish.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 0, 128 };$/;"	v	file:
g_v	languages/dutch.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128 };$/;"	v	file:
g_v	languages/earlyenglish.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 1 };$/;"	v	file:
g_v	languages/english.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 1 };$/;"	v	file:
g_v	languages/french.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 130, 103, 8, 5 };$/;"	v	file:
g_v	languages/german.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 32, 8 };$/;"	v	file:
g_v	languages/german2.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 32, 8 };$/;"	v	file:
g_v	languages/hungarian.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17, 36, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1 };$/;"	v	file:
g_v	languages/irish.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17, 4, 2 };$/;"	v	file:
g_v	languages/italian.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 8, 2, 1 };$/;"	v	file:
g_v	languages/kraaij_pohlmann.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 1 };$/;"	v	file:
g_v	languages/lithuanian.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 64, 1, 0, 64, 0, 0, 0, 0, 0, 0, 0, 4, 4 };$/;"	v	file:
g_v	languages/norwegian.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 0, 128 };$/;"	v	file:
g_v	languages/porter.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 1 };$/;"	v	file:
g_v	languages/portuguese.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 19, 12, 2 };$/;"	v	file:
g_v	languages/romanian.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 32, 0, 0, 4 };$/;"	v	file:
g_v	languages/russian.cc	/^static const unsigned char g_v[] = { 33, 65, 8, 232 };$/;"	v	file:
g_v	languages/spanish.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17, 4, 10 };$/;"	v	file:
g_v	languages/swedish.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 32 };$/;"	v	file:
g_v_I	languages/dutch.cc	/^static const unsigned char g_v_I[] = { 1, 0, 0, 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128 };$/;"	v	file:
g_v_WX	languages/kraaij_pohlmann.cc	/^static const unsigned char g_v_WX[] = { 17, 65, 208, 1 };$/;"	v	file:
g_v_WXY	languages/earlyenglish.cc	/^static const unsigned char g_v_WXY[] = { 1, 17, 65, 208, 1 };$/;"	v	file:
g_v_WXY	languages/english.cc	/^static const unsigned char g_v_WXY[] = { 1, 17, 65, 208, 1 };$/;"	v	file:
g_v_WXY	languages/porter.cc	/^static const unsigned char g_v_WXY[] = { 1, 17, 65, 208, 1 };$/;"	v	file:
g_v_j	languages/dutch.cc	/^static const unsigned char g_v_j[] = { 17, 67, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128 };$/;"	v	file:
g_valid_LI	languages/english.cc	/^static const unsigned char g_valid_LI[] = { 55, 141, 2 };$/;"	v	file:
g_vowel	languages/indonesian.cc	/^static const unsigned char g_vowel[] = { 17, 65, 16 };$/;"	v	file:
g_vowel	languages/turkish.cc	/^static const unsigned char g_vowel[] = { 17, 65, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 8, 0, 0, 0, 0, 0, 0, 1 };$/;"	v	file:
g_vowel1	languages/turkish.cc	/^static const unsigned char g_vowel1[] = { 1, 64, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 };$/;"	v	file:
g_vowel2	languages/turkish.cc	/^static const unsigned char g_vowel2[] = { 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 130 };$/;"	v	file:
g_vowel3	languages/turkish.cc	/^static const unsigned char g_vowel3[] = { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 };$/;"	v	file:
g_vowel4	languages/turkish.cc	/^static const unsigned char g_vowel4[] = { 17 };$/;"	v	file:
g_vowel5	languages/turkish.cc	/^static const unsigned char g_vowel5[] = { 65 };$/;"	v	file:
g_vowel6	languages/turkish.cc	/^static const unsigned char g_vowel6[] = { 65 };$/;"	v	file:
gather	matcher/orpositionlist.h	/^    PositionList* gather(PostList* pl) {$/;"	f	class:OrPositionList
gather_position_lists	api/leafpostlist.cc	/^LeafPostList::gather_position_lists(OrPositionList* orposlist)$/;"	f	class:LeafPostList
gather_position_lists	api/postlist.cc	/^PostList::gather_position_lists(OrPositionList*)$/;"	f	class:Xapian::PostList
gather_position_lists	matcher/andmaybepostlist.cc	/^AndMaybePostList::gather_position_lists(OrPositionList* orposlist)$/;"	f	class:AndMaybePostList
gather_position_lists	matcher/multiandpostlist.cc	/^MultiAndPostList::gather_position_lists(OrPositionList* orposlist)$/;"	f	class:MultiAndPostList
gather_position_lists	matcher/orpostlist.cc	/^OrPostList::gather_position_lists(OrPositionList* orposlist)$/;"	f	class:OrPostList
gather_terms	api/queryinternal.cc	/^Query::Internal::gather_terms(void *) const$/;"	f	class:Xapian::Query::Internal
gather_terms	api/queryinternal.cc	/^QueryBranch::gather_terms(void * void_terms) const$/;"	f	class:Xapian::Internal::QueryBranch
gather_terms	api/queryinternal.cc	/^QueryScaleWeight::gather_terms(void * void_terms) const$/;"	f	class:Xapian::Internal::QueryScaleWeight
gather_terms	api/queryinternal.cc	/^QueryTerm::gather_terms(void * void_terms) const$/;"	f	class:Xapian::Internal::QueryTerm
gen_subdbwithoutpos1_db	tests/api_query.cc	/^gen_subdbwithoutpos1_db(Xapian::WritableDatabase& db, const string&)$/;"	f	file:
gen_uniqterms_gt_doclen_db	tests/api_backend.cc	/^gen_uniqterms_gt_doclen_db(Xapian::WritableDatabase& db, const string&)$/;"	f	file:
gen_wdf_eq_doclen_db	tests/api_weight.cc	/^gen_wdf_eq_doclen_db(Xapian::WritableDatabase& db, const string&)$/;"	f	file:
gen_word	tests/perftest/perftest_randomidx.cc	/^gen_word(unsigned int length, unsigned int char_range)$/;"	f	file:
generate	backends/uuids.cc	/^Uuid::generate()$/;"	f	class:Uuid
generate	languages/compiler/generator.c	/^static void generate(struct generator * g, struct node * p) {$/;"	f	file:
generate_AE	languages/compiler/generator.c	/^static void generate_AE(struct generator * g, struct node * p) {$/;"	f	file:
generate_GO	languages/compiler/generator.c	/^static void generate_GO(struct generator * g, struct node * p, int style) {$/;"	f	file:
generate_GO_grouping	languages/compiler/generator.c	/^static void generate_GO_grouping(struct generator * g, struct node * p, int is_goto, int complement) {$/;"	f	file:
generate_among	languages/compiler/generator.c	/^static void generate_among(struct generator * g, struct node * p) {$/;"	f	file:
generate_among_pool	languages/compiler/generator.c	/^static void generate_among_pool(struct generator * g, struct among * x) {$/;"	f	file:
generate_among_table	languages/compiler/generator.c	/^static void generate_among_table(struct generator * g, struct among * x) {$/;"	f	file:
generate_amongs	languages/compiler/generator.c	/^static void generate_amongs(struct generator * g) {$/;"	f	file:
generate_and	languages/compiler/generator.c	/^static void generate_and(struct generator * g, struct node * p) {$/;"	f	file:
generate_assignfrom	languages/compiler/generator.c	/^static void generate_assignfrom(struct generator * g, struct node * p) {$/;"	f	file:
generate_assignto	languages/compiler/generator.c	/^static void generate_assignto(struct generator * g, struct node * p) {$/;"	f	file:
generate_atleast	languages/compiler/generator.c	/^static void generate_atleast(struct generator * g, struct node * p) {$/;"	f	file:
generate_atlimit	languages/compiler/generator.c	/^static void generate_atlimit(struct generator * g, struct node * p) {$/;"	f	file:
generate_atmark	languages/compiler/generator.c	/^static void generate_atmark(struct generator * g, struct node * p) {$/;"	f	file:
generate_backwards	languages/compiler/generator.c	/^static void generate_backwards(struct generator * g, struct node * p) {$/;"	f	file:
generate_booltest	languages/compiler/generator.c	/^static void generate_booltest(struct generator * g, struct node * p) {$/;"	f	file:
generate_bra	languages/compiler/generator.c	/^static void generate_bra(struct generator * g, struct node * p) {$/;"	f	file:
generate_call	languages/compiler/generator.c	/^static void generate_call(struct generator * g, struct node * p) {$/;"	f	file:
generate_close	languages/compiler/generator.c	/^static void generate_close(struct generator * g) {$/;"	f	file:
generate_create	languages/compiler/generator.c	/^static void generate_create(struct generator * g) {$/;"	f	file:
generate_create_and_close_templates	languages/compiler/generator.c	/^static void generate_create_and_close_templates(struct generator * g) {$/;"	f	file:
generate_debug	languages/compiler/generator.c	/^static void generate_debug(struct generator * g, struct node * p) {$/;"	f	file:
generate_define	languages/compiler/generator.c	/^static void generate_define(struct generator * g, struct node * p) {$/;"	f	file:
generate_delete	languages/compiler/generator.c	/^static void generate_delete(struct generator * g, struct node * p) {$/;"	f	file:
generate_do	languages/compiler/generator.c	/^static void generate_do(struct generator * g, struct node * p) {$/;"	f	file:
generate_dollar	languages/compiler/generator.c	/^static void generate_dollar(struct generator * g, struct node * p) {$/;"	f	file:
generate_fail	languages/compiler/generator.c	/^static void generate_fail(struct generator * g, struct node * p) {$/;"	f	file:
generate_false	languages/compiler/generator.c	/^static void generate_false(struct generator * g, struct node * p) {$/;"	f	file:
generate_grouping	languages/compiler/generator.c	/^static void generate_grouping(struct generator * g, struct node * p, int complement) {$/;"	f	file:
generate_grouping_table	languages/compiler/generator.c	/^static void generate_grouping_table(struct generator * g, struct grouping * q) {$/;"	f	file:
generate_groupings	languages/compiler/generator.c	/^static void generate_groupings(struct generator * g) {$/;"	f	file:
generate_head	languages/compiler/generator.c	/^static void generate_head(struct generator * g) {$/;"	f	file:
generate_header_file	languages/compiler/generator.c	/^static void generate_header_file(struct generator * g) {$/;"	f	file:
generate_hop	languages/compiler/generator.c	/^static void generate_hop(struct generator * g, struct node * p) {$/;"	f	file:
generate_insert	languages/compiler/generator.c	/^static void generate_insert(struct generator * g, struct node * p, int style) {$/;"	f	file:
generate_integer_assign	languages/compiler/generator.c	/^static void generate_integer_assign(struct generator * g, struct node * p, char * s) {$/;"	f	file:
generate_integer_test	languages/compiler/generator.c	/^static void generate_integer_test(struct generator * g, struct node * p, char * s) {$/;"	f	file:
generate_leftslice	languages/compiler/generator.c	/^static void generate_leftslice(struct generator * g, struct node * p) {$/;"	f	file:
generate_literalstring	languages/compiler/generator.c	/^static void generate_literalstring(struct generator * g, struct node * p) {$/;"	f	file:
generate_loop	languages/compiler/generator.c	/^static void generate_loop(struct generator * g, struct node * p) {$/;"	f	file:
generate_namedstring	languages/compiler/generator.c	/^static void generate_namedstring(struct generator * g, struct node * p) {$/;"	f	file:
generate_next	languages/compiler/generator.c	/^static void generate_next(struct generator * g, struct node * p) {$/;"	f	file:
generate_not	languages/compiler/generator.c	/^static void generate_not(struct generator * g, struct node * p) {$/;"	f	file:
generate_or	languages/compiler/generator.c	/^static void generate_or(struct generator * g, struct node * p) {$/;"	f	file:
generate_program_c	languages/compiler/generator.c	/^extern void generate_program_c(struct generator * g) {$/;"	f
generate_repeat	languages/compiler/generator.c	/^static void generate_repeat(struct generator * g, struct node * p, int atleast_case) {$/;"	f	file:
generate_rightslice	languages/compiler/generator.c	/^static void generate_rightslice(struct generator * g, struct node * p) {$/;"	f	file:
generate_routine_headers	languages/compiler/generator.c	/^static void generate_routine_headers(struct generator * g) {$/;"	f	file:
generate_set	languages/compiler/generator.c	/^static void generate_set(struct generator * g, struct node * p) {$/;"	f	file:
generate_setlimit	languages/compiler/generator.c	/^static void generate_setlimit(struct generator * g, struct node * p) {$/;"	f	file:
generate_setmark	languages/compiler/generator.c	/^static void generate_setmark(struct generator * g, struct node * p) {$/;"	f	file:
generate_slicefrom	languages/compiler/generator.c	/^static void generate_slicefrom(struct generator * g, struct node * p) {$/;"	f	file:
generate_sliceto	languages/compiler/generator.c	/^static void generate_sliceto(struct generator * g, struct node * p) {$/;"	f	file:
generate_start_comment	languages/compiler/generator.c	/^static void generate_start_comment(struct generator * g) {$/;"	f	file:
generate_substring	languages/compiler/generator.c	/^static void generate_substring(struct generator * g, struct node * p) {$/;"	f	file:
generate_test	languages/compiler/generator.c	/^static void generate_test(struct generator * g, struct node * p) {$/;"	f	file:
generate_tolimit	languages/compiler/generator.c	/^static void generate_tolimit(struct generator * g, struct node * p) {$/;"	f	file:
generate_tomark	languages/compiler/generator.c	/^static void generate_tomark(struct generator * g, struct node * p) {$/;"	f	file:
generate_try	languages/compiler/generator.c	/^static void generate_try(struct generator * g, struct node * p) {$/;"	f	file:
generate_unset	languages/compiler/generator.c	/^static void generate_unset(struct generator * g, struct node * p) {$/;"	f	file:
generator	languages/compiler/header.h	/^struct generator {$/;"	s
get	include/xapian/intrusive_ptr.h	/^    T * get() const$/;"	f	class:Xapian::Internal::intrusive_ptr
get	include/xapian/intrusive_ptr.h	/^    T * get() const$/;"	f	class:Xapian::Internal::opt_intrusive_ptr
getD	backends/glass/glass_table.h	/^    static int getD(const uint8_t * q, int c) {$/;"	f	class:Glass::BItem_base
getD	backends/glass/glass_table.h	/^    static int getD(const uint8_t * q, int c) {$/;"	f	class:Glass::LeafItem_base
getI	backends/glass/glass_table.h	/^    int getI() const { return unaligned_read2(p); }$/;"	f	class:Glass::LeafItem_base
getK	backends/chert/chert_table.h	/^inline int getK(const unsigned char *p, int c) { return getint1(p, c); }$/;"	f
getPrefix	backends/inmemory/KeyDomet.h	/^        const KeyDomet<Size_>& getPrefix() const$/;"	f	class:kdmt::KeyDometSize::KeyDometStr
getRawStr	backends/inmemory/KeyDomet.h	/^    inline const char* getRawStr(const char* str) { return str; }$/;"	f	class:kdmt::KeyDometSize
getRawStr	backends/inmemory/KeyDomet.h	/^    inline const char* getRawStr(const std::string& str) { return str.data(); }$/;"	f	class:kdmt::KeyDometSize
getStr	backends/inmemory/KeyDomet.h	/^        const StrImp_& getStr() const$/;"	f	class:kdmt::KeyDometSize::KeyDometStr
getVal	backends/inmemory/KeyDomet.h	/^        KeyDometType getVal() const$/;"	f	class:kdmt::KeyDometSize::KeyDomet
getX	backends/glass/glass_table.h	/^    static int getX(const uint8_t * q, int c) { return unaligned_read2(q + c); }$/;"	f	class:Glass::BItem_base
getX	backends/glass/glass_table.h	/^    static int getX(const uint8_t * q, int c) { return unaligned_read2(q + c); }$/;"	f	class:Glass::LeafItem_base
get_address	backends/chert/chert_table.h	/^    T get_address() const { return p; }$/;"	f	class:Item_base
get_address	backends/chert/chert_table.h	/^    const uint8_t * get_address() const { return p; }$/;"	f	class:Key
get_address	backends/glass/glass_table.h	/^    T get_address() const { return p; }$/;"	f	class:Glass::BItem_base
get_address	backends/glass/glass_table.h	/^    T get_address() const { return p; }$/;"	f	class:Glass::LeafItem_base
get_address	backends/glass/glass_table.h	/^    const uint8_t * get_address() const { return p; }$/;"	f	class:Glass::Key
get_all_values	backends/chert/chert_values.cc	/^ChertValueManager::get_all_values(map<Xapian::valueno, string> & values,$/;"	f	class:ChertValueManager
get_all_values	backends/glass/glass_values.cc	/^GlassValueManager::get_all_values(map<Xapian::valueno, string> & values,$/;"	f	class:GlassValueManager
get_approx_size	api/maptermlist.h	/^	Xapian::termcount get_approx_size() const {$/;"	f	class:MapTermList
get_approx_size	api/matchspy.cc	/^    Xapian::termcount get_approx_size() const { unsupported_method(); return 0; }$/;"	f	class:StringAndFreqTermList
get_approx_size	api/matchspy.cc	/^    Xapian::termcount get_approx_size() const { unsupported_method(); return 0; }$/;"	f	class:ValueCountTermList
get_approx_size	api/vectortermlist.cc	/^VectorTermList::get_approx_size() const$/;"	f	class:VectorTermList
get_approx_size	backends/alltermslist.cc	/^AllTermsList::get_approx_size() const$/;"	f	class:AllTermsList
get_approx_size	backends/chert/chert_positionlist.cc	/^ChertPositionList::get_approx_size() const$/;"	f	class:ChertPositionList
get_approx_size	backends/chert/chert_spelling.cc	/^ChertSpellingTermList::get_approx_size() const$/;"	f	class:ChertSpellingTermList
get_approx_size	backends/chert/chert_termlist.cc	/^ChertTermList::get_approx_size() const$/;"	f	class:ChertTermList
get_approx_size	backends/glass/glass_positionlist.cc	/^GlassPositionList::get_approx_size() const$/;"	f	class:GlassPositionList
get_approx_size	backends/glass/glass_spelling.cc	/^GlassSpellingTermList::get_approx_size() const$/;"	f	class:GlassSpellingTermList
get_approx_size	backends/glass/glass_termlist.cc	/^GlassTermList::get_approx_size() const$/;"	f	class:GlassTermList
get_approx_size	backends/inmemory/inmemory_database.cc	/^InMemoryTermList::get_approx_size() const$/;"	f	class:InMemoryTermList
get_approx_size	backends/inmemory/inmemory_positionlist.cc	/^InMemoryPositionList::get_approx_size() const$/;"	f	class:InMemoryPositionList
get_approx_size	backends/multi/multi_termlist.cc	/^MultiTermList::get_approx_size() const$/;"	f	class:MultiTermList
get_approx_size	backends/remote/net_termlist.cc	/^NetworkTermList::get_approx_size() const$/;"	f	class:NetworkTermList
get_approx_size	expand/ortermlist.cc	/^OrTermList::get_approx_size() const$/;"	f	class:OrTermList
get_approx_size	matcher/orpositionlist.cc	/^OrPositionList::get_approx_size() const$/;"	f	class:OrPositionList
get_available_languages	include/xapian/stem.h	/^    static std::string get_available_languages() {$/;"	f	class:Xapian::Stem
get_average_length	include/xapian/weight.h	/^    Xapian::doclength get_average_length() const { return average_length_; }$/;"	f	class:Xapian::Weight
get_average_length	weight/weightinternal.h	/^    Xapian::doclength get_average_length() const {$/;"	f	class:Xapian::Weight::Internal
get_avlen	expand/expandweight.h	/^    double get_avlen() const { return avlen; }$/;"	f	class:Xapian::Internal::ExpandWeight
get_avlength	api/omdatabase.cc	/^Database::get_avlength() const$/;"	f	class:Xapian::Database
get_b_utf8	languages/steminternal.cc	/^int SnowballStemImplementation::get_b_utf8(int * slot) {$/;"	f	class:Xapian::SnowballStemImplementation
get_backend_info	backends/chert/chert_database.h	/^	int get_backend_info(string * path) const {$/;"	f	class:ChertDatabase
get_backend_info	backends/glass/glass_database.h	/^	int get_backend_info(string * path) const {$/;"	f	class:GlassDatabase
get_backend_info	backends/inmemory/inmemory_database.h	/^    int get_backend_info(string * path) const {$/;"	f	class:InMemoryDatabase
get_backend_info	backends/remote/remote-database.h	/^    int get_backend_info(string * path) const {$/;"	f	class:RemoteDatabase
get_bit_map_size	backends/chert/chert_btreebase.h	/^	uint4 get_bit_map_size() const { return bit_map_size; }$/;"	f	class:ChertTable_base
get_block	backends/glass/glass_freelist.cc	/^GlassFreeList::get_block(const GlassTable *B, uint4 block_size,$/;"	f	class:GlassFreeList
get_block_size	backends/chert/chert_btreebase.h	/^	uint4 get_block_size() const { return block_size; }$/;"	f	class:ChertTable_base
get_block_size	backends/chert/chert_table.h	/^	unsigned int get_block_size() const { return block_size; }$/;"	f	class:ChertTable
get_blocksize	backends/glass/glass_version.h	/^    unsigned get_blocksize() const {$/;"	f	class:Glass::RootInfo
get_case_type	include/xapian/unicode.h	/^    inline int get_case_type(int info) { return ((info & 0xe0) >> 5); }$/;"	f	namespace:Xapian::Unicode::Internal
get_category	include/xapian/unicode.h	/^    inline category get_category(int info) { return static_cast<category>(info & 0x1f); }$/;"	f	namespace:Xapian::Unicode::Internal
get_category	include/xapian/unicode.h	/^inline category get_category(unsigned ch) {$/;"	f	namespace:Xapian::Unicode
get_cfdelta	backends/glass/glass_inverter.h	/^	Xapian::termcount_diff get_cfdelta() const { return cf_delta; }$/;"	f	class:Inverter::PostingChanges
get_changeset	tests/api_replicate.cc	/^get_changeset(const string & changesetpath,$/;"	f	file:
get_changeset_revisions	backends/chert/chert_database.cc	/^ChertDatabase::get_changeset_revisions(const string & path,$/;"	f	class:ChertDatabase
get_changeset_revisions	backends/glass/glass_database.cc	/^GlassDatabase::get_changeset_revisions(const string & path,$/;"	f	class:GlassDatabase
get_chunk	backends/chert/chert_postlist.cc	/^ChertPostListTable::get_chunk(const string &tname,$/;"	f	class:ChertPostListTable
get_chunk	backends/glass/glass_postlist.cc	/^GlassPostListTable::get_chunk(const string &tname,$/;"	f	class:GlassPostListTable
get_chunk_containing_did	backends/chert/chert_values.cc	/^ChertValueManager::get_chunk_containing_did(Xapian::valueno slot,$/;"	f	class:ChertValueManager
get_chunk_containing_did	backends/glass/glass_values.cc	/^GlassValueManager::get_chunk_containing_did(Xapian::valueno slot,$/;"	f	class:GlassValueManager
get_cjk	queryparser/cjk-tokenizer.cc	/^CJK::get_cjk(Xapian::Utf8Iterator &it)$/;"	f	class:CJK
get_collapse_count	api/omenquire.cc	/^MSetIterator::get_collapse_count() const$/;"	f	class:Xapian::MSetIterator
get_collapse_count	matcher/collapser.cc	/^Collapser::get_collapse_count(const string & collapse_key, int percent_cutoff,$/;"	f	class:Collapser
get_collapse_count	matcher/collapser.h	/^    Xapian::doccount get_collapse_count() const { return collapse_count; }$/;"	f	class:CollapseData
get_collapse_key	api/omenquire.cc	/^MSetIterator::get_collapse_key() const$/;"	f	class:Xapian::MSetIterator
get_collapse_key	api/postlist.cc	/^PostingIterator::Internal::get_collapse_key() const$/;"	f	class:Xapian::PostingIterator::Internal
get_collapse_key	matcher/mergepostlist.cc	/^MergePostList::get_collapse_key() const$/;"	f	class:MergePostList
get_collapse_key	matcher/msetpostlist.cc	/^MSetPostList::get_collapse_key() const$/;"	f	class:MSetPostList
get_collection_freq	api/omdatabase.cc	/^Database::get_collection_freq(const string & tname) const$/;"	f	class:Xapian::Database
get_collection_freq	backends/chert/chert_alltermslist.cc	/^ChertAllTermsList::get_collection_freq() const$/;"	f	class:ChertAllTermsList
get_collection_freq	backends/chert/chert_metadata.cc	/^ChertMetadataTermList::get_collection_freq() const$/;"	f	class:ChertMetadataTermList
get_collection_freq	backends/chert/chert_spelling.cc	/^ChertSpellingTermList::get_collection_freq() const$/;"	f	class:ChertSpellingTermList
get_collection_freq	backends/chert/chert_spellingwordslist.cc	/^ChertSpellingWordsList::get_collection_freq() const$/;"	f	class:ChertSpellingWordsList
get_collection_freq	backends/chert/chert_synonym.cc	/^ChertSynonymTermList::get_collection_freq() const$/;"	f	class:ChertSynonymTermList
get_collection_freq	backends/glass/glass_alltermslist.cc	/^GlassAllTermsList::get_collection_freq() const$/;"	f	class:GlassAllTermsList
get_collection_freq	backends/glass/glass_metadata.cc	/^GlassMetadataTermList::get_collection_freq() const$/;"	f	class:GlassMetadataTermList
get_collection_freq	backends/glass/glass_spelling.cc	/^GlassSpellingTermList::get_collection_freq() const$/;"	f	class:GlassSpellingTermList
get_collection_freq	backends/glass/glass_spellingwordslist.cc	/^GlassSpellingWordsList::get_collection_freq() const$/;"	f	class:GlassSpellingWordsList
get_collection_freq	backends/glass/glass_synonym.cc	/^GlassSynonymTermList::get_collection_freq() const$/;"	f	class:GlassSynonymTermList
get_collection_freq	backends/inmemory/inmemory_alltermslist.cc	/^Xapian::termcount InMemoryAllTermsList::get_collection_freq() const {$/;"	f	class:InMemoryAllTermsList
get_collection_freq	expand/expandweight.h	/^    Xapian::termcount get_collection_freq() const { return collection_freq; }$/;"	f	class:Xapian::Internal::ExpandWeight
get_collection_freq	include/xapian/weight.h	/^    Xapian::termcount get_collection_freq() const { return collectionfreq_; }$/;"	f	class:Xapian::Weight
get_collection_len	expand/expandweight.h	/^    Xapian::totallength get_collection_len() const { return collection_len; }$/;"	f	class:Xapian::Internal::ExpandWeight
get_collection_size	include/xapian/weight.h	/^    Xapian::doccount get_collection_size() const { return collection_size_; }$/;"	f	class:Xapian::Weight
get_commit_ref	tests/perftest/perftest.cc	/^get_commit_ref()$/;"	f	file:
get_compress_min	backends/glass/glass_version.h	/^    uint4 get_compress_min() const { return compress_min; }$/;"	f	class:Glass::RootInfo
get_compressed	backends/chert/chert_table.h	/^    bool get_compressed() const { return *p & 0x80; }$/;"	f	class:Item_base
get_compressed	backends/glass/glass_table.h	/^    bool get_compressed() const { return *p & I_COMPRESSED_BIT; }$/;"	f	class:Glass::LeafItem_base
get_context	include/xapian/error.h	/^    const std::string & XAPIAN_NOTHROW(get_context() const) {$/;"	f	class:Xapian::Error
get_corrected_query_string	queryparser/queryparser.cc	/^QueryParser::get_corrected_query_string() const$/;"	f	class:QueryParser
get_current_cputime	tests/harness/cputimer.cc	/^CPUTimer::get_current_cputime() const$/;"	f	class:CPUTimer
get_data	api/omdocument.cc	/^Document::get_data() const$/;"	f	class:Xapian::Document
get_data	api/omdocument.cc	/^Xapian::Document::Internal::get_data() const$/;"	f	class:Xapian::Document::Internal
get_database	include/xapian/postingsource.h	/^    Xapian::Database get_database() const { return real_db; }$/;"	f	class:Xapian::ValuePostingSource
get_database	queryparser/queryparser_internal.cc	/^    Database get_database() const {$/;"	f	class:State
get_database	tests/apitest.cc	/^get_database(const std::string &dbname,$/;"	f
get_database	tests/apitest.cc	/^get_database(const string &dbname)$/;"	f
get_database	tests/apitest.cc	/^get_database(const string &dbname, const string &dbname2)$/;"	f
get_database	tests/harness/backendmanager.cc	/^BackendManager::get_database(const std::string &dbname,$/;"	f	class:BackendManager
get_database	tests/harness/backendmanager.cc	/^BackendManager::get_database(const string & file)$/;"	f	class:BackendManager
get_database	tests/harness/backendmanager.cc	/^BackendManager::get_database(const vector<string> & files)$/;"	f	class:BackendManager
get_database_path	tests/apitest.cc	/^get_database_path(const std::string &dbname,$/;"	f
get_database_path	tests/apitest.cc	/^get_database_path(const string &dbname)$/;"	f
get_database_path	tests/harness/backendmanager.cc	/^BackendManager::get_database_path(const std::string &dbname,$/;"	f	class:BackendManager
get_database_path	tests/harness/backendmanager.cc	/^BackendManager::get_database_path(const string & file)$/;"	f	class:BackendManager
get_database_path	tests/harness/backendmanager.cc	/^BackendManager::get_database_path(const vector<string> & files)$/;"	f	class:BackendManager
get_database_write_lock	backends/chert/chert_database.cc	/^ChertDatabase::get_database_write_lock(int flags, bool creating)$/;"	f	class:ChertDatabase
get_database_write_lock	backends/glass/glass_database.cc	/^GlassDatabase::get_database_write_lock(int flags, bool creating)$/;"	f	class:GlassDatabase
get_datadir	tests/harness/backendmanager.h	/^    const std::string & get_datadir() const { return datadir; }$/;"	f	class:BackendManager
get_dbsize	expand/expandweight.h	/^    Xapian::doccount get_dbsize() const { return dbsize; }$/;"	f	class:Xapian::Internal::ExpandWeight
get_dbtype	tests/apitest.cc	/^std::string get_dbtype()$/;"	f
get_dbtype	tests/harness/backendmanager.cc	/^BackendManager::get_dbtype() const$/;"	f	class:BackendManager
get_dbtype	tests/harness/backendmanager_chert.cc	/^BackendManagerChert::get_dbtype() const$/;"	f	class:BackendManagerChert
get_dbtype	tests/harness/backendmanager_glass.cc	/^BackendManagerGlass::get_dbtype() const$/;"	f	class:BackendManagerGlass
get_dbtype	tests/harness/backendmanager_inmemory.cc	/^BackendManagerInMemory::get_dbtype() const$/;"	f	class:BackendManagerInMemory
get_dbtype	tests/harness/backendmanager_multi.cc	/^BackendManagerMulti::get_dbtype() const$/;"	f	class:BackendManagerMulti
get_dbtype	tests/harness/backendmanager_remoteprog.cc	/^BackendManagerRemoteProg::get_dbtype() const$/;"	f	class:BackendManagerRemoteProg
get_dbtype	tests/harness/backendmanager_remotetcp.cc	/^BackendManagerRemoteTcp::get_dbtype() const$/;"	f	class:BackendManagerRemoteTcp
get_dbtype	tests/harness/backendmanager_singlefile.cc	/^BackendManagerSingleFile::get_dbtype() const$/;"	f	class:BackendManagerSingleFile
get_default_op	queryparser/queryparser.cc	/^QueryParser::get_default_op() const$/;"	f	class:QueryParser
get_delta	include/xapian/unicode.h	/^    inline int get_delta(int info) {$/;"	f	namespace:Xapian::Unicode::Internal
get_deltas	backends/glass/glass_inverter.h	/^    bool get_deltas(const std::string & term,$/;"	f	class:Inverter
get_depth	languages/compiler/header.h	/^    int get_depth;$/;"	m	struct:tokeniser
get_description	api/decvalwtsource.cc	/^DecreasingValueWeightPostingSource::get_description() const {$/;"	f	class:DecreasingValueWeightPostingSource
get_description	api/documentvaluelist.cc	/^DocumentValueList::get_description() const$/;"	f	class:DocumentValueList
get_description	api/emptypostlist.cc	/^EmptyPostList::get_description() const$/;"	f	class:EmptyPostList
get_description	api/error.cc	/^Xapian::Error::get_description() const$/;"	f	class:Xapian::Error
get_description	api/matchspy.cc	/^MatchSpy::get_description() const {$/;"	f	class:MatchSpy
get_description	api/matchspy.cc	/^ValueCountMatchSpy::get_description() const {$/;"	f	class:ValueCountMatchSpy
get_description	api/omdatabase.cc	/^Database::get_description() const$/;"	f	class:Xapian::Database
get_description	api/omdatabase.cc	/^WritableDatabase::get_description() const$/;"	f	class:Xapian::WritableDatabase
get_description	api/omdocument.cc	/^Document::get_description() const$/;"	f	class:Xapian::Document
get_description	api/omdocument.cc	/^OmDocumentTerm::get_description() const$/;"	f	class:OmDocumentTerm
get_description	api/omdocument.cc	/^Xapian::Document::Internal::get_description() const$/;"	f	class:Xapian::Document::Internal
get_description	api/omenquire.cc	/^Enquire::Internal::get_description() const$/;"	f	class:Xapian::Enquire::Internal
get_description	api/omenquire.cc	/^Enquire::get_description() const$/;"	f	class:Xapian::Enquire
get_description	api/omenquire.cc	/^MSet::Internal::get_description() const$/;"	f	class:Xapian::MSet::Internal
get_description	api/omenquire.cc	/^MSet::get_description() const$/;"	f	class:Xapian::MSet
get_description	api/omenquire.cc	/^MSetItem::get_description() const$/;"	f	class:Xapian::Internal::MSetItem
get_description	api/omenquire.cc	/^MSetIterator::get_description() const$/;"	f	class:Xapian::MSetIterator
get_description	api/omenquire.cc	/^RSet::Internal::get_description() const$/;"	f	class:Xapian::RSet::Internal
get_description	api/omenquire.cc	/^RSet::get_description() const$/;"	f	class:Xapian::RSet
get_description	api/positioniterator.cc	/^PositionIterator::get_description() const$/;"	f	class:Xapian::PositionIterator
get_description	api/postingiterator.cc	/^PostingIterator::get_description() const$/;"	f	class:Xapian::PostingIterator
get_description	api/postingsource.cc	/^FixedWeightPostingSource::get_description() const$/;"	f	class:Xapian::FixedWeightPostingSource
get_description	api/postingsource.cc	/^PostingSource::get_description() const$/;"	f	class:Xapian::PostingSource
get_description	api/postingsource.cc	/^ValueMapPostingSource::get_description() const$/;"	f	class:Xapian::ValueMapPostingSource
get_description	api/postingsource.cc	/^ValueWeightPostingSource::get_description() const$/;"	f	class:Xapian::ValueWeightPostingSource
get_description	api/query.cc	/^Query::get_description() const$/;"	f	class:Xapian::Query
get_description	api/queryinternal.cc	/^QueryAnd::get_description() const$/;"	f	class:Xapian::Internal::QueryAnd
get_description	api/queryinternal.cc	/^QueryAndMaybe::get_description() const$/;"	f	class:Xapian::Internal::QueryAndMaybe
get_description	api/queryinternal.cc	/^QueryAndNot::get_description() const$/;"	f	class:Xapian::Internal::QueryAndNot
get_description	api/queryinternal.cc	/^QueryEliteSet::get_description() const$/;"	f	class:Xapian::Internal::QueryEliteSet
get_description	api/queryinternal.cc	/^QueryFilter::get_description() const$/;"	f	class:Xapian::Internal::QueryFilter
get_description	api/queryinternal.cc	/^QueryInvalid::get_description() const$/;"	f	class:Xapian::Internal::QueryInvalid
get_description	api/queryinternal.cc	/^QueryMax::get_description() const$/;"	f	class:Xapian::Internal::QueryMax
get_description	api/queryinternal.cc	/^QueryNear::get_description() const$/;"	f	class:Xapian::Internal::QueryNear
get_description	api/queryinternal.cc	/^QueryOr::get_description() const$/;"	f	class:Xapian::Internal::QueryOr
get_description	api/queryinternal.cc	/^QueryPhrase::get_description() const$/;"	f	class:Xapian::Internal::QueryPhrase
get_description	api/queryinternal.cc	/^QueryPostingSource::get_description() const$/;"	f	class:Xapian::Internal::QueryPostingSource
get_description	api/queryinternal.cc	/^QueryScaleWeight::get_description() const$/;"	f	class:Xapian::Internal::QueryScaleWeight
get_description	api/queryinternal.cc	/^QuerySynonym::get_description() const$/;"	f	class:Xapian::Internal::QuerySynonym
get_description	api/queryinternal.cc	/^QueryTerm::get_description() const$/;"	f	class:Xapian::Internal::QueryTerm
get_description	api/queryinternal.cc	/^QueryValueGE::get_description() const$/;"	f	class:Xapian::Internal::QueryValueGE
get_description	api/queryinternal.cc	/^QueryValueLE::get_description() const$/;"	f	class:Xapian::Internal::QueryValueLE
get_description	api/queryinternal.cc	/^QueryValueRange::get_description() const$/;"	f	class:Xapian::Internal::QueryValueRange
get_description	api/queryinternal.cc	/^QueryWildcard::get_description() const$/;"	f	class:Xapian::Internal::QueryWildcard
get_description	api/queryinternal.cc	/^QueryXor::get_description() const$/;"	f	class:Xapian::Internal::QueryXor
get_description	api/replication.cc	/^    string get_description() const { return path; }$/;"	f	class:DatabaseReplica::Internal
get_description	api/replication.cc	/^DatabaseMaster::get_description() const$/;"	f	class:DatabaseMaster
get_description	api/replication.cc	/^DatabaseReplica::get_description() const$/;"	f	class:DatabaseReplica
get_description	api/termiterator.cc	/^TermIterator::get_description() const$/;"	f	class:Xapian::TermIterator
get_description	api/valueiterator.cc	/^ValueIterator::get_description() const$/;"	f	class:Xapian::ValueIterator
get_description	backends/chert/chert_alldocsmodifiedpostlist.cc	/^ChertAllDocsModifiedPostList::get_description() const$/;"	f	class:ChertAllDocsModifiedPostList
get_description	backends/chert/chert_alldocspostlist.cc	/^ChertAllDocsPostList::get_description() const$/;"	f	class:ChertAllDocsPostList
get_description	backends/chert/chert_modifiedpostlist.cc	/^ChertModifiedPostList::get_description() const$/;"	f	class:ChertModifiedPostList
get_description	backends/chert/chert_postlist.cc	/^ChertPostList::get_description() const$/;"	f	class:ChertPostList
get_description	backends/chert/chert_valuelist.cc	/^ChertValueList::get_description() const$/;"	f	class:ChertValueList
get_description	backends/contiguousalldocspostlist.cc	/^ContiguousAllDocsPostList::get_description() const$/;"	f	class:ContiguousAllDocsPostList
get_description	backends/glass/glass_alldocspostlist.cc	/^GlassAllDocsPostList::get_description() const$/;"	f	class:GlassAllDocsPostList
get_description	backends/glass/glass_postlist.cc	/^GlassPostList::get_description() const$/;"	f	class:GlassPostList
get_description	backends/glass/glass_valuelist.cc	/^GlassValueList::get_description() const$/;"	f	class:GlassValueList
get_description	backends/inmemory/inmemory_database.cc	/^InMemoryAllDocsPostList::get_description() const$/;"	f	class:InMemoryAllDocsPostList
get_description	backends/inmemory/inmemory_database.cc	/^InMemoryPostList::get_description() const$/;"	f	class:InMemoryPostList
get_description	backends/multi/multi_postlist.cc	/^MultiPostList::get_description() const$/;"	f	class:MultiPostList
get_description	backends/multi/multi_valuelist.cc	/^MultiValueList::get_description() const$/;"	f	class:MultiValueList
get_description	backends/remote/net_postlist.cc	/^NetworkPostList::get_description() const$/;"	f	class:NetworkPostList
get_description	backends/slowvaluelist.cc	/^SlowValueList::get_description() const$/;"	f	class:SlowValueList
get_description	expand/esetinternal.cc	/^ESet::Internal::get_description() const$/;"	f	class:Xapian::ESet::Internal
get_description	expand/esetinternal.cc	/^ESet::get_description() const$/;"	f	class:Xapian::ESet
get_description	expand/esetinternal.cc	/^ESetIterator::get_description() const$/;"	f	class:Xapian::ESetIterator
get_description	expand/esetinternal.cc	/^Internal::ExpandTerm::get_description() const$/;"	f	class:Xapian::Internal::ExpandTerm
get_description	geospatial/latlong_posting_source.cc	/^LatLongDistancePostingSource::get_description() const$/;"	f	class:LatLongDistancePostingSource
get_description	geospatial/latlongcoord.cc	/^LatLongCoord::get_description() const$/;"	f	class:LatLongCoord
get_description	geospatial/latlongcoord.cc	/^LatLongCoords::get_description() const$/;"	f	class:LatLongCoords
get_description	languages/arabic.cc	/^Xapian::InternalStemArabic::get_description() const$/;"	f	class:Xapian::InternalStemArabic
get_description	languages/armenian.cc	/^Xapian::InternalStemArmenian::get_description() const$/;"	f	class:Xapian::InternalStemArmenian
get_description	languages/basque.cc	/^Xapian::InternalStemBasque::get_description() const$/;"	f	class:Xapian::InternalStemBasque
get_description	languages/catalan.cc	/^Xapian::InternalStemCatalan::get_description() const$/;"	f	class:Xapian::InternalStemCatalan
get_description	languages/danish.cc	/^Xapian::InternalStemDanish::get_description() const$/;"	f	class:Xapian::InternalStemDanish
get_description	languages/dutch.cc	/^Xapian::InternalStemDutch::get_description() const$/;"	f	class:Xapian::InternalStemDutch
get_description	languages/earlyenglish.cc	/^Xapian::InternalStemEarlyenglish::get_description() const$/;"	f	class:Xapian::InternalStemEarlyenglish
get_description	languages/english.cc	/^Xapian::InternalStemEnglish::get_description() const$/;"	f	class:Xapian::InternalStemEnglish
get_description	languages/finnish.cc	/^Xapian::InternalStemFinnish::get_description() const$/;"	f	class:Xapian::InternalStemFinnish
get_description	languages/french.cc	/^Xapian::InternalStemFrench::get_description() const$/;"	f	class:Xapian::InternalStemFrench
get_description	languages/german.cc	/^Xapian::InternalStemGerman::get_description() const$/;"	f	class:Xapian::InternalStemGerman
get_description	languages/german2.cc	/^Xapian::InternalStemGerman2::get_description() const$/;"	f	class:Xapian::InternalStemGerman2
get_description	languages/hungarian.cc	/^Xapian::InternalStemHungarian::get_description() const$/;"	f	class:Xapian::InternalStemHungarian
get_description	languages/indonesian.cc	/^Xapian::InternalStemIndonesian::get_description() const$/;"	f	class:Xapian::InternalStemIndonesian
get_description	languages/irish.cc	/^Xapian::InternalStemIrish::get_description() const$/;"	f	class:Xapian::InternalStemIrish
get_description	languages/italian.cc	/^Xapian::InternalStemItalian::get_description() const$/;"	f	class:Xapian::InternalStemItalian
get_description	languages/kraaij_pohlmann.cc	/^Xapian::InternalStemKraaij_pohlmann::get_description() const$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
get_description	languages/lithuanian.cc	/^Xapian::InternalStemLithuanian::get_description() const$/;"	f	class:Xapian::InternalStemLithuanian
get_description	languages/lovins.cc	/^Xapian::InternalStemLovins::get_description() const$/;"	f	class:Xapian::InternalStemLovins
get_description	languages/nepali.cc	/^Xapian::InternalStemNepali::get_description() const$/;"	f	class:Xapian::InternalStemNepali
get_description	languages/norwegian.cc	/^Xapian::InternalStemNorwegian::get_description() const$/;"	f	class:Xapian::InternalStemNorwegian
get_description	languages/porter.cc	/^Xapian::InternalStemPorter::get_description() const$/;"	f	class:Xapian::InternalStemPorter
get_description	languages/portuguese.cc	/^Xapian::InternalStemPortuguese::get_description() const$/;"	f	class:Xapian::InternalStemPortuguese
get_description	languages/romanian.cc	/^Xapian::InternalStemRomanian::get_description() const$/;"	f	class:Xapian::InternalStemRomanian
get_description	languages/russian.cc	/^Xapian::InternalStemRussian::get_description() const$/;"	f	class:Xapian::InternalStemRussian
get_description	languages/spanish.cc	/^Xapian::InternalStemSpanish::get_description() const$/;"	f	class:Xapian::InternalStemSpanish
get_description	languages/stem.cc	/^Stem::get_description() const$/;"	f	class:Xapian::Stem
get_description	languages/swedish.cc	/^Xapian::InternalStemSwedish::get_description() const$/;"	f	class:Xapian::InternalStemSwedish
get_description	languages/tamil.cc	/^Xapian::InternalStemTamil::get_description() const$/;"	f	class:Xapian::InternalStemTamil
get_description	languages/turkish.cc	/^Xapian::InternalStemTurkish::get_description() const$/;"	f	class:Xapian::InternalStemTurkish
get_description	matcher/andmaybepostlist.cc	/^AndMaybePostList::get_description() const$/;"	f	class:AndMaybePostList
get_description	matcher/andnotpostlist.cc	/^AndNotPostList::get_description() const$/;"	f	class:AndNotPostList
get_description	matcher/exactphrasepostlist.cc	/^ExactPhrasePostList::get_description() const$/;"	f	class:ExactPhrasePostList
get_description	matcher/externalpostlist.cc	/^ExternalPostList::get_description() const$/;"	f	class:ExternalPostList
get_description	matcher/extraweightpostlist.h	/^	std::string get_description() const {$/;"	f	class:ExtraWeightPostList
get_description	matcher/maxpostlist.cc	/^MaxPostList::get_description() const$/;"	f	class:MaxPostList
get_description	matcher/mergepostlist.cc	/^MergePostList::get_description() const$/;"	f	class:MergePostList
get_description	matcher/msetpostlist.cc	/^MSetPostList::get_description() const$/;"	f	class:MSetPostList
get_description	matcher/multiandpostlist.cc	/^MultiAndPostList::get_description() const$/;"	f	class:MultiAndPostList
get_description	matcher/multixorpostlist.cc	/^MultiXorPostList::get_description() const$/;"	f	class:MultiXorPostList
get_description	matcher/nearpostlist.cc	/^NearPostList::get_description() const$/;"	f	class:NearPostList
get_description	matcher/orpospostlist.cc	/^OrPosPostList::get_description() const$/;"	f	class:OrPosPostList
get_description	matcher/orpostlist.cc	/^OrPostList::get_description() const$/;"	f	class:OrPostList
get_description	matcher/phrasepostlist.cc	/^PhrasePostList::get_description() const$/;"	f	class:PhrasePostList
get_description	matcher/selectpostlist.h	/^SelectPostList::get_description() const$/;"	f	class:SelectPostList
get_description	matcher/synonympostlist.cc	/^SynonymPostList::get_description() const$/;"	f	class:SynonymPostList
get_description	matcher/valuegepostlist.cc	/^ValueGePostList::get_description() const$/;"	f	class:ValueGePostList
get_description	matcher/valuerangepostlist.cc	/^ValueRangePostList::get_description() const$/;"	f	class:ValueRangePostList
get_description	net/length.cc	/^    const char * get_description() const { return msg; }$/;"	f	class:Xapian_NetworkError
get_description	queryparser/queryparser.cc	/^QueryParser::get_description() const$/;"	f	class:QueryParser
get_description	queryparser/queryparser.cc	/^SimpleStopper::get_description() const$/;"	f	class:SimpleStopper
get_description	queryparser/queryparser.cc	/^Stopper::get_description() const$/;"	f	class:Stopper
get_description	queryparser/termgenerator.cc	/^TermGenerator::get_description() const$/;"	f	class:TermGenerator
get_description	tests/api_percentages.cc	/^    string get_description() const {$/;"	f	class:MyPostingSource
get_description	tests/api_postingsource.cc	/^    string get_description() const { return "ChangeMaxweightPostingSource"; }$/;"	f	class:ChangeMaxweightPostingSource
get_description	tests/api_postingsource.cc	/^    string get_description() const { return "CloneTestPostingSource"; }$/;"	f	class:CloneTestPostingSource
get_description	tests/api_postingsource.cc	/^    string get_description() const { return "MyOddPostingSource"; }$/;"	f	class:MyOddPostingSource
get_description	tests/api_postingsource.cc	/^    string get_description() const {$/;"	f	class:MyDontAskWeightPostingSource
get_description	tests/api_postingsource.cc	/^    string get_description() const {$/;"	f	class:MyOddWeightingPostingSource
get_description	tests/api_serialise.cc	/^    std::string get_description() const {$/;"	f	class:MyPostingSource2
get_description	tests/api_stem.cc	/^    string get_description() const {$/;"	f	class:MyStemImpl	file:
get_description	weight/weightinternal.cc	/^TermFreqs::get_description() const {$/;"	f	class:TermFreqs
get_description	weight/weightinternal.cc	/^Weight::Internal::get_description() const$/;"	f	class:Xapian::Weight::Internal
get_description_helper	api/queryinternal.cc	/^QueryBranch::get_description_helper(const char * op,$/;"	f	class:Xapian::Internal::QueryBranch
get_distro	tests/perftest/perftest.cc	/^get_distro()$/;"	f	file:
get_doc_by_index	api/omenquire.cc	/^MSet::Internal::get_doc_by_index(Xapian::doccount index) const$/;"	f	class:Xapian::MSet::Internal
get_doccount	api/omdatabase.cc	/^Database::get_doccount() const$/;"	f	class:Xapian::Database
get_doccount	backends/chert/chert_database.cc	/^ChertDatabase::get_doccount() const$/;"	f	class:ChertDatabase
get_doccount	backends/chert/chert_record.cc	/^ChertRecordTable::get_doccount() const$/;"	f	class:ChertRecordTable
get_doccount	backends/glass/glass_database.cc	/^GlassDatabase::get_doccount() const$/;"	f	class:GlassDatabase
get_doccount	backends/glass/glass_version.h	/^    Xapian::doccount get_doccount() const { return doccount; }$/;"	f	class:GlassVersion
get_doccount	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::get_doccount() const$/;"	f	class:InMemoryDatabase
get_doccount	backends/remote/remote-database.cc	/^RemoteDatabase::get_doccount() const$/;"	f	class:RemoteDatabase
get_docid	api/documentvaluelist.cc	/^DocumentValueList::get_docid() const$/;"	f	class:DocumentValueList
get_docid	api/emptypostlist.cc	/^EmptyPostList::get_docid() const$/;"	f	class:EmptyPostList
get_docid	api/omdocument.cc	/^Document::get_docid() const$/;"	f	class:Xapian::Document
get_docid	api/postingsource.cc	/^FixedWeightPostingSource::get_docid() const$/;"	f	class:Xapian::FixedWeightPostingSource
get_docid	api/postingsource.cc	/^ValuePostingSource::get_docid() const$/;"	f	class:Xapian::ValuePostingSource
get_docid	api/valueiterator.cc	/^ValueIterator::get_docid() const$/;"	f	class:Xapian::ValueIterator
get_docid	backends/chert/chert_alldocsmodifiedpostlist.cc	/^ChertAllDocsModifiedPostList::get_docid() const$/;"	f	class:ChertAllDocsModifiedPostList
get_docid	backends/chert/chert_modifiedpostlist.cc	/^ChertModifiedPostList::get_docid() const$/;"	f	class:ChertModifiedPostList
get_docid	backends/chert/chert_postlist.cc	/^    Xapian::docid get_docid() const {$/;"	f	class:Chert::PostlistChunkReader
get_docid	backends/chert/chert_postlist.h	/^	Xapian::docid get_docid() const { Assert(have_started); return did; }$/;"	f	class:ChertPostList
get_docid	backends/chert/chert_valuelist.cc	/^ChertValueList::get_docid() const$/;"	f	class:ChertValueList
get_docid	backends/chert/chert_values.h	/^    Xapian::docid get_docid() const { return did; }$/;"	f	class:ValueChunkReader
get_docid	backends/contiguousalldocspostlist.cc	/^ContiguousAllDocsPostList::get_docid() const$/;"	f	class:ContiguousAllDocsPostList
get_docid	backends/document.h	/^	Xapian::docid get_docid() const { return did; }$/;"	f	class:Xapian::Document::Internal
get_docid	backends/glass/glass_postlist.cc	/^    Xapian::docid get_docid() const {$/;"	f	class:Glass::PostlistChunkReader
get_docid	backends/glass/glass_postlist.h	/^	Xapian::docid get_docid() const { Assert(have_started); return did; }$/;"	f	class:GlassPostList
get_docid	backends/glass/glass_valuelist.cc	/^GlassValueList::get_docid() const$/;"	f	class:GlassValueList
get_docid	backends/glass/glass_values.h	/^    Xapian::docid get_docid() const { return did; }$/;"	f	class:Glass::ValueChunkReader
get_docid	backends/inmemory/inmemory_database.cc	/^InMemoryAllDocsPostList::get_docid() const$/;"	f	class:InMemoryAllDocsPostList
get_docid	backends/inmemory/inmemory_database.cc	/^InMemoryPostList::get_docid() const$/;"	f	class:InMemoryPostList
get_docid	backends/multi/multi_postlist.cc	/^MultiPostList::get_docid() const$/;"	f	class:MultiPostList
get_docid	backends/multi/multi_valuelist.cc	/^    Xapian::docid get_docid() const {$/;"	f	struct:SubValueList
get_docid	backends/multi/multi_valuelist.cc	/^MultiValueList::get_docid() const$/;"	f	class:MultiValueList
get_docid	backends/remote/net_postlist.cc	/^NetworkPostList::get_docid() const$/;"	f	class:NetworkPostList
get_docid	backends/slowvaluelist.cc	/^SlowValueList::get_docid() const$/;"	f	class:SlowValueList
get_docid	matcher/andmaybepostlist.cc	/^AndMaybePostList::get_docid() const$/;"	f	class:AndMaybePostList
get_docid	matcher/andnotpostlist.cc	/^AndNotPostList::get_docid() const$/;"	f	class:AndNotPostList
get_docid	matcher/externalpostlist.cc	/^ExternalPostList::get_docid() const$/;"	f	class:ExternalPostList
get_docid	matcher/extraweightpostlist.h	/^	Xapian::docid get_docid() const { return pl->get_docid(); }$/;"	f	class:ExtraWeightPostList
get_docid	matcher/maxpostlist.cc	/^MaxPostList::get_docid() const$/;"	f	class:MaxPostList
get_docid	matcher/mergepostlist.cc	/^MergePostList::get_docid() const$/;"	f	class:MergePostList
get_docid	matcher/msetpostlist.cc	/^MSetPostList::get_docid() const$/;"	f	class:MSetPostList
get_docid	matcher/multiandpostlist.cc	/^MultiAndPostList::get_docid() const$/;"	f	class:MultiAndPostList
get_docid	matcher/multixorpostlist.cc	/^MultiXorPostList::get_docid() const$/;"	f	class:MultiXorPostList
get_docid	matcher/orpospostlist.cc	/^OrPosPostList::get_docid() const$/;"	f	class:OrPosPostList
get_docid	matcher/orpostlist.cc	/^OrPostList::get_docid() const$/;"	f	class:OrPostList
get_docid	matcher/selectpostlist.h	/^	Xapian::docid get_docid() const { return source->get_docid(); }$/;"	f	class:SelectPostList
get_docid	matcher/synonympostlist.cc	/^SynonymPostList::get_docid() const {$/;"	f	class:SynonymPostList
get_docid	matcher/valuerangepostlist.cc	/^ValueRangePostList::get_docid() const$/;"	f	class:ValueRangePostList
get_docid	tests/api_percentages.cc	/^    Xapian::docid get_docid() const { return i->first; }$/;"	f	class:MyPostingSource
get_docid	tests/api_postingsource.cc	/^    Xapian::docid get_docid() const { return 0; }$/;"	f	class:CloneTestPostingSource
get_docid	tests/api_postingsource.cc	/^    Xapian::docid get_docid() const { return did; }$/;"	f	class:ChangeMaxweightPostingSource
get_docid	tests/api_postingsource.cc	/^    Xapian::docid get_docid() const { return did; }$/;"	f	class:MyDontAskWeightPostingSource
get_docid	tests/api_postingsource.cc	/^    Xapian::docid get_docid() const { return did; }$/;"	f	class:MyOddPostingSource
get_docid	tests/api_postingsource.cc	/^    Xapian::docid get_docid() const { return did; }$/;"	f	class:MyOddWeightingPostingSource
get_docid	tests/api_serialise.cc	/^    Xapian::docid get_docid() const { return 0; }$/;"	f	class:ExceptionalPostingSource
get_doclength	api/emptypostlist.cc	/^EmptyPostList::get_doclength() const$/;"	f	class:EmptyPostList
get_doclength	api/omdatabase.cc	/^Database::get_doclength(Xapian::docid did) const$/;"	f	class:Xapian::Database
get_doclength	api/postingiterator.cc	/^PostingIterator::get_doclength() const$/;"	f	class:Xapian::PostingIterator
get_doclength	backends/chert/chert_alldocsmodifiedpostlist.cc	/^ChertAllDocsModifiedPostList::get_doclength() const$/;"	f	class:ChertAllDocsModifiedPostList
get_doclength	backends/chert/chert_alldocspostlist.cc	/^ChertAllDocsPostList::get_doclength() const$/;"	f	class:ChertAllDocsPostList
get_doclength	backends/chert/chert_database.cc	/^ChertDatabase::get_doclength(Xapian::docid did) const$/;"	f	class:ChertDatabase
get_doclength	backends/chert/chert_database.cc	/^ChertWritableDatabase::get_doclength(Xapian::docid did) const$/;"	f	class:ChertWritableDatabase
get_doclength	backends/chert/chert_modifiedpostlist.cc	/^ChertModifiedPostList::get_doclength() const$/;"	f	class:ChertModifiedPostList
get_doclength	backends/chert/chert_postlist.cc	/^ChertPostList::get_doclength() const$/;"	f	class:ChertPostList
get_doclength	backends/chert/chert_postlist.cc	/^ChertPostListTable::get_doclength(Xapian::docid did,$/;"	f	class:ChertPostListTable
get_doclength	backends/chert/chert_termlist.cc	/^ChertTermList::get_doclength() const$/;"	f	class:ChertTermList
get_doclength	backends/contiguousalldocspostlist.cc	/^ContiguousAllDocsPostList::get_doclength() const$/;"	f	class:ContiguousAllDocsPostList
get_doclength	backends/glass/glass_alldocspostlist.cc	/^GlassAllDocsPostList::get_doclength() const$/;"	f	class:GlassAllDocsPostList
get_doclength	backends/glass/glass_database.cc	/^GlassDatabase::get_doclength(Xapian::docid did) const$/;"	f	class:GlassDatabase
get_doclength	backends/glass/glass_database.cc	/^GlassWritableDatabase::get_doclength(Xapian::docid did) const$/;"	f	class:GlassWritableDatabase
get_doclength	backends/glass/glass_inverter.h	/^    bool get_doclength(Xapian::docid did, Xapian::termcount & doclen) const {$/;"	f	class:Inverter
get_doclength	backends/glass/glass_postlist.cc	/^GlassPostList::get_doclength() const$/;"	f	class:GlassPostList
get_doclength	backends/glass/glass_postlist.cc	/^GlassPostListTable::get_doclength(Xapian::docid did,$/;"	f	class:GlassPostListTable
get_doclength	backends/glass/glass_termlist.cc	/^GlassTermList::get_doclength() const$/;"	f	class:GlassTermList
get_doclength	backends/inmemory/inmemory_database.cc	/^InMemoryAllDocsPostList::get_doclength() const$/;"	f	class:InMemoryAllDocsPostList
get_doclength	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::get_doclength(Xapian::docid did) const$/;"	f	class:InMemoryDatabase
get_doclength	backends/inmemory/inmemory_database.cc	/^InMemoryPostList::get_doclength() const$/;"	f	class:InMemoryPostList
get_doclength	backends/multi/multi_postlist.cc	/^MultiPostList::get_doclength() const$/;"	f	class:MultiPostList
get_doclength	backends/remote/net_postlist.cc	/^NetworkPostList::get_doclength() const$/;"	f	class:NetworkPostList
get_doclength	backends/remote/remote-database.cc	/^RemoteDatabase::get_doclength(Xapian::docid did) const$/;"	f	class:RemoteDatabase
get_doclength	matcher/andmaybepostlist.cc	/^AndMaybePostList::get_doclength() const$/;"	f	class:AndMaybePostList
get_doclength	matcher/andnotpostlist.cc	/^AndNotPostList::get_doclength() const$/;"	f	class:AndNotPostList
get_doclength	matcher/externalpostlist.cc	/^ExternalPostList::get_doclength() const$/;"	f	class:ExternalPostList
get_doclength	matcher/extraweightpostlist.h	/^	virtual Xapian::termcount get_doclength() const {$/;"	f	class:ExtraWeightPostList
get_doclength	matcher/maxpostlist.cc	/^MaxPostList::get_doclength() const$/;"	f	class:MaxPostList
get_doclength	matcher/mergepostlist.cc	/^MergePostList::get_doclength() const$/;"	f	class:MergePostList
get_doclength	matcher/msetpostlist.cc	/^MSetPostList::get_doclength() const$/;"	f	class:MSetPostList
get_doclength	matcher/multiandpostlist.cc	/^MultiAndPostList::get_doclength() const$/;"	f	class:MultiAndPostList
get_doclength	matcher/multixorpostlist.cc	/^MultiXorPostList::get_doclength() const$/;"	f	class:MultiXorPostList
get_doclength	matcher/orpospostlist.cc	/^OrPosPostList::get_doclength() const$/;"	f	class:OrPosPostList
get_doclength	matcher/orpostlist.cc	/^OrPostList::get_doclength() const$/;"	f	class:OrPostList
get_doclength	matcher/selectpostlist.h	/^	Xapian::termcount get_doclength() const { return source->get_doclength(); }$/;"	f	class:SelectPostList
get_doclength	matcher/synonympostlist.cc	/^SynonymPostList::get_doclength() const {$/;"	f	class:SynonymPostList
get_doclength	matcher/valuerangepostlist.cc	/^ValueRangePostList::get_doclength() const$/;"	f	class:ValueRangePostList
get_doclength_lower_bound	api/omdatabase.cc	/^Database::get_doclength_lower_bound() const$/;"	f	class:Xapian::Database
get_doclength_lower_bound	backends/chert/chert_database.cc	/^ChertDatabase::get_doclength_lower_bound() const$/;"	f	class:ChertDatabase
get_doclength_lower_bound	backends/chert/chert_dbstats.h	/^    Xapian::termcount get_doclength_lower_bound() const {$/;"	f	class:ChertDatabaseStats
get_doclength_lower_bound	backends/database.cc	/^Database::Internal::get_doclength_lower_bound() const$/;"	f	class:Xapian::Database::Internal
get_doclength_lower_bound	backends/glass/glass_database.cc	/^GlassDatabase::get_doclength_lower_bound() const$/;"	f	class:GlassDatabase
get_doclength_lower_bound	backends/glass/glass_version.h	/^    Xapian::termcount get_doclength_lower_bound() const {$/;"	f	class:GlassVersion
get_doclength_lower_bound	backends/remote/remote-database.cc	/^RemoteDatabase::get_doclength_lower_bound() const$/;"	f	class:RemoteDatabase
get_doclength_lower_bound	include/xapian/weight.h	/^    Xapian::termcount get_doclength_lower_bound() const {$/;"	f	class:Xapian::Weight
get_doclength_upper_bound	api/omdatabase.cc	/^Database::get_doclength_upper_bound() const$/;"	f	class:Xapian::Database
get_doclength_upper_bound	backends/chert/chert_database.cc	/^ChertDatabase::get_doclength_upper_bound() const$/;"	f	class:ChertDatabase
get_doclength_upper_bound	backends/chert/chert_dbstats.h	/^    Xapian::termcount get_doclength_upper_bound() const {$/;"	f	class:ChertDatabaseStats
get_doclength_upper_bound	backends/database.cc	/^Database::Internal::get_doclength_upper_bound() const$/;"	f	class:Xapian::Database::Internal
get_doclength_upper_bound	backends/glass/glass_database.cc	/^GlassDatabase::get_doclength_upper_bound() const$/;"	f	class:GlassDatabase
get_doclength_upper_bound	backends/glass/glass_version.h	/^    Xapian::termcount get_doclength_upper_bound() const {$/;"	f	class:GlassVersion
get_doclength_upper_bound	backends/remote/remote-database.cc	/^RemoteDatabase::get_doclength_upper_bound() const$/;"	f	class:RemoteDatabase
get_doclength_upper_bound	include/xapian/weight.h	/^    Xapian::termcount get_doclength_upper_bound() const {$/;"	f	class:Xapian::Weight
get_docs_considered	matcher/collapser.h	/^    Xapian::doccount get_docs_considered() const { return docs_considered; }$/;"	f	class:Collapser
get_document	api/omdatabase.cc	/^Database::get_document(Xapian::docid did) const$/;"	f	class:Xapian::Database
get_document	api/omdatabase.cc	/^Database::get_document(Xapian::docid did, unsigned flags) const$/;"	f	class:Xapian::Database
get_document	api/omenquire.cc	/^Enquire::Internal::get_document(const Xapian::Internal::MSetItem &item) const$/;"	f	class:Xapian::Enquire::Internal
get_document	api/omenquire.cc	/^MSetIterator::get_document() const$/;"	f	class:Xapian::MSetIterator
get_document	queryparser/termgenerator.cc	/^TermGenerator::get_document() const$/;"	f	class:TermGenerator
get_document_data	backends/glass/glass_docdata.h	/^    std::string get_document_data(Xapian::docid did) const {$/;"	f	class:GlassDocDataTable
get_dups_ignored	matcher/collapser.h	/^    Xapian::doccount get_dups_ignored() const { return dups_ignored; }$/;"	f	class:Collapser
get_ebound	expand/esetinternal.cc	/^ESet::get_ebound() const$/;"	f	class:Xapian::ESet
get_entry_count	backends/chert/chert_table.h	/^	chert_tablesize_t get_entry_count() const {$/;"	f	class:ChertTable
get_entry_count	backends/glass/glass_table.h	/^	glass_tablesize_t get_entry_count() const {$/;"	f	class:GlassTable
get_error_string	api/error.cc	/^Xapian::Error::get_error_string() const$/;"	f	class:Xapian::Error
get_eset	api/omenquire.cc	/^Enquire::Internal::get_eset(Xapian::termcount maxitems,$/;"	f	class:Xapian::Enquire::Internal
get_eset	api/omenquire.cc	/^Enquire::get_eset(Xapian::termcount maxitems, const RSet & rset, int flags,$/;"	f	class:Xapian::Enquire
get_eset	include/xapian/enquire.h	/^	XAPIAN_DEPRECATED(ESet get_eset(Xapian::termcount maxitems,$/;"	f	class:Xapian::Enquire
get_eset	include/xapian/enquire.h	/^	inline ESet get_eset(Xapian::termcount maxitems, const RSet & omrset,$/;"	f	class:Xapian::Enquire
get_exact_entry	backends/chert/chert_table.cc	/^ChertTable::get_exact_entry(const string &key, string & tag) const$/;"	f	class:ChertTable
get_exact_entry	backends/glass/glass_table.cc	/^GlassTable::get_exact_entry(const string &key, string & tag) const$/;"	f	class:GlassTable
get_f_kp	api/editdistance.cc	/^    int get_f_kp(int k, int p) const {$/;"	f	class:edist_state
get_file_size	tests/api_replicate.cc	/^static off_t get_file_size(const string & path) {$/;"	f	file:
get_first_unused_block	backends/glass/glass_freelist.h	/^    uint4 get_first_unused_block() const { return first_unused_block; }$/;"	f	class:GlassFreeList
get_firstitem	api/omenquire.cc	/^MSet::get_firstitem() const$/;"	f	class:Xapian::MSet
get_flags	backends/glass/glass_table.h	/^	int get_flags() const { return flags; }$/;"	f	class:GlassTable
get_free_list	backends/glass/glass_version.h	/^    const std::string & get_free_list() const { return fl_serialised; }$/;"	f	class:Glass::RootInfo
get_free_physical_memory	tests/perftest/freemem.cc	/^get_free_physical_memory()$/;"	f
get_freqs	backends/chert/chert_database.cc	/^ChertDatabase::get_freqs(const string & term,$/;"	f	class:ChertDatabase
get_freqs	backends/chert/chert_database.cc	/^ChertWritableDatabase::get_freqs(const string & term,$/;"	f	class:ChertWritableDatabase
get_freqs	backends/chert/chert_postlist.cc	/^ChertPostListTable::get_freqs(const string & term,$/;"	f	class:ChertPostListTable
get_freqs	backends/glass/glass_database.cc	/^GlassDatabase::get_freqs(const string & term,$/;"	f	class:GlassDatabase
get_freqs	backends/glass/glass_database.cc	/^GlassWritableDatabase::get_freqs(const string & term,$/;"	f	class:GlassWritableDatabase
get_freqs	backends/glass/glass_postlist.cc	/^GlassPostListTable::get_freqs(const string & term,$/;"	f	class:GlassPostListTable
get_freqs	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::get_freqs(const string & term,$/;"	f	class:InMemoryDatabase
get_freqs	backends/remote/remote-database.cc	/^RemoteDatabase::get_freqs(const string & term,$/;"	f	class:RemoteDatabase
get_frequency	api/matchspy.cc	/^    Xapian::doccount get_frequency() const { return frequency; }$/;"	f	class:StringAndFrequency
get_grouping	queryparser/queryparser_internal.cc	/^    string get_grouping() const {$/;"	f	class:Term
get_have_fakeroot	backends/chert/chert_btreebase.h	/^	bool get_have_fakeroot() const { return have_fakeroot; }$/;"	f	class:ChertTable_base
get_hint_postlist	matcher/queryoptimiser.h	/^    const LeafPostList * get_hint_postlist() const { return hint; }$/;"	f	class:QueryOptimiser
get_hostname	tests/perftest/perftest.cc	/^get_hostname()$/;"	f	file:
get_idfn	weight/tfidfweight.cc	/^TfIdfWeight::get_idfn(Xapian::doccount termfreq, char c) const$/;"	f	class:Xapian::TfIdfWeight
get_input	languages/compiler/tokeniser.c	/^extern symbol * get_input(const char * filename) {$/;"	f
get_item_count	backends/chert/chert_btreebase.h	/^	chert_tablesize_t get_item_count() const { return item_count; }$/;"	f	class:ChertTable_base
get_items	api/omenquireinternal.h	/^	const set<Xapian::docid> & get_items() const { return items; }$/;"	f	class:Xapian::RSet::Internal
get_key	backends/chert/chert_cursor.cc	/^ChertCursor::get_key(string * key) const$/;"	f	class:ChertCursor
get_key	backends/glass/glass_cursor.cc	/^GlassCursor::get_key(string * key) const$/;"	f	class:GlassCursor
get_key_len	backends/glass/glass_table.h	/^    int get_key_len() const { return p[BYTES_PER_BLOCK_NUMBER]; }$/;"	f	class:Glass::BItem_base
get_key_len	backends/glass/glass_table.h	/^    int get_key_len() const { return p[I2]; }$/;"	f	class:Glass::LeafItem_base
get_last_block	backends/chert/chert_btreebase.h	/^	uint4 get_last_block() const { return last_block; }$/;"	f	class:ChertTable_base
get_last_docid	backends/chert/chert_dbstats.h	/^    Xapian::docid get_last_docid() const { return last_docid; }$/;"	f	class:ChertDatabaseStats
get_last_docid	backends/glass/glass_version.h	/^    Xapian::docid get_last_docid() const { return last_docid; }$/;"	f	class:GlassVersion
get_lastdocid	api/omdatabase.cc	/^Database::get_lastdocid() const$/;"	f	class:Xapian::Database
get_lastdocid	backends/chert/chert_database.cc	/^ChertDatabase::get_lastdocid() const$/;"	f	class:ChertDatabase
get_lastdocid	backends/glass/glass_database.cc	/^GlassDatabase::get_lastdocid() const$/;"	f	class:GlassDatabase
get_lastdocid	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::get_lastdocid() const$/;"	f	class:InMemoryDatabase
get_lastdocid	backends/remote/remote-database.cc	/^RemoteDatabase::get_lastdocid() const$/;"	f	class:RemoteDatabase
get_lat_long_metric	api/registry.cc	/^Registry::get_lat_long_metric(const string & name) const$/;"	f	class:Xapian::Registry
get_latest_revision_number	backends/chert/chert_table.h	/^	chert_revision_number_t get_latest_revision_number() const {$/;"	f	class:ChertTable
get_length	queryparser/cjk-tokenizer.h	/^    unsigned get_length() const { return len; }$/;"	f	class:CJKTokenIterator
get_level	backends/chert/chert_btreebase.h	/^	uint4 get_level() const { return level; }$/;"	f	class:ChertTable_base
get_level	backends/glass/glass_version.h	/^    int get_level() const { return int(level); }$/;"	f	class:Glass::RootInfo
get_listening_socket	net/tcpserver.cc	/^TcpServer::get_listening_socket(const std::string & host, int port,$/;"	f	class:TcpServer
get_loadavg	tests/perftest/perftest.cc	/^get_loadavg()$/;"	f	file:
get_match_spy	api/registry.cc	/^Registry::get_match_spy(const string & name) const$/;"	f	class:Xapian::Registry
get_matches_estimated	api/omenquire.cc	/^MSet::get_matches_estimated() const$/;"	f	class:Xapian::MSet
get_matches_lower_bound	api/omenquire.cc	/^MSet::get_matches_lower_bound() const$/;"	f	class:Xapian::MSet
get_matches_lower_bound	matcher/collapser.cc	/^Collapser::get_matches_lower_bound() const$/;"	f	class:Collapser
get_matches_upper_bound	api/omenquire.cc	/^MSet::get_matches_upper_bound() const$/;"	f	class:Xapian::MSet
get_matching_terms	api/omenquire.cc	/^Enquire::Internal::get_matching_terms(Xapian::docid did) const$/;"	f	class:Xapian::Enquire::Internal
get_matching_terms	api/omenquire.cc	/^Enquire::Internal::get_matching_terms(const MSetIterator &it) const$/;"	f	class:Xapian::Enquire::Internal
get_matching_terms_begin	api/omenquire.cc	/^Enquire::get_matching_terms_begin(Xapian::docid did) const$/;"	f	class:Xapian::Enquire
get_matching_terms_begin	api/omenquire.cc	/^Enquire::get_matching_terms_begin(const MSetIterator &it) const$/;"	f	class:Xapian::Enquire
get_matching_terms_end	include/xapian/enquire.h	/^	TermIterator XAPIAN_NOTHROW(get_matching_terms_end(Xapian::docid \/*did*\/) const) {$/;"	f	class:Xapian::Enquire
get_matching_terms_end	include/xapian/enquire.h	/^	TermIterator XAPIAN_NOTHROW(get_matching_terms_end(const MSetIterator &\/*it*\/) const) {$/;"	f	class:Xapian::Enquire
get_max_attained	api/omenquire.cc	/^MSet::get_max_attained() const$/;"	f	class:Xapian::MSet
get_max_partial_expansion	queryparser/queryparser_internal.cc	/^    Xapian::termcount get_max_partial_expansion() const {$/;"	f	class:State
get_max_partial_type	queryparser/queryparser_internal.cc	/^    int get_max_partial_type() const {$/;"	f	class:State
get_max_possible	api/omenquire.cc	/^MSet::get_max_possible() const$/;"	f	class:Xapian::MSet
get_max_termweight	weight/weightinternal.h	/^    void get_max_termweight(double & min_tw, double & max_tw) {$/;"	f	class:Xapian::Weight::Internal
get_max_wildcard_expansion	queryparser/queryparser_internal.cc	/^    Xapian::termcount get_max_wildcard_expansion() const {$/;"	f	class:State
get_max_wildcard_type	queryparser/queryparser_internal.cc	/^    int get_max_wildcard_type() const {$/;"	f	class:State
get_maxextra	matcher/localsubmatch.cc	/^LazyWeight::get_maxextra() const$/;"	f	class:LazyWeight
get_maxextra	tests/api_db.cc	/^    double get_maxextra() const { return 0; }$/;"	f	class:MyWeight
get_maxextra	tests/api_percentages.cc	/^    double get_maxextra() const {$/;"	f	class:ZWeight
get_maxextra	tests/api_serialise.cc	/^    double get_maxextra() const { return 0; }$/;"	f	class:ExceptionalWeight
get_maxextra	tests/api_weight.cc	/^    double get_maxextra() const { return 1.0; }$/;"	f	class:CheckInitWeight
get_maxextra	tests/api_weight.cc	/^    double get_maxextra() const { return 1.0; }$/;"	f	class:CheckStatsWeight
get_maxextra	weight/bb2weight.cc	/^BB2Weight::get_maxextra() const$/;"	f	class:Xapian::BB2Weight
get_maxextra	weight/bm25plusweight.cc	/^BM25PlusWeight::get_maxextra() const$/;"	f	class:Xapian::BM25PlusWeight
get_maxextra	weight/bm25weight.cc	/^BM25Weight::get_maxextra() const$/;"	f	class:Xapian::BM25Weight
get_maxextra	weight/boolweight.cc	/^BoolWeight::get_maxextra() const$/;"	f	class:Xapian::BoolWeight
get_maxextra	weight/coordweight.cc	/^CoordWeight::get_maxextra() const$/;"	f	class:Xapian::CoordWeight
get_maxextra	weight/dlhweight.cc	/^DLHWeight::get_maxextra() const$/;"	f	class:Xapian::DLHWeight
get_maxextra	weight/dphweight.cc	/^DPHWeight::get_maxextra() const$/;"	f	class:Xapian::DPHWeight
get_maxextra	weight/ifb2weight.cc	/^IfB2Weight::get_maxextra() const$/;"	f	class:Xapian::IfB2Weight
get_maxextra	weight/ineb2weight.cc	/^IneB2Weight::get_maxextra() const$/;"	f	class:Xapian::IneB2Weight
get_maxextra	weight/inl2weight.cc	/^InL2Weight::get_maxextra() const$/;"	f	class:Xapian::InL2Weight
get_maxextra	weight/lmweight.cc	/^LMWeight::get_maxextra() const$/;"	f	class:Xapian::LMWeight
get_maxextra	weight/pl2plusweight.cc	/^PL2PlusWeight::get_maxextra() const$/;"	f	class:Xapian::PL2PlusWeight
get_maxextra	weight/pl2weight.cc	/^PL2Weight::get_maxextra() const$/;"	f	class:Xapian::PL2Weight
get_maxextra	weight/tfidfweight.cc	/^TfIdfWeight::get_maxextra() const$/;"	f	class:Xapian::TfIdfWeight
get_maxextra	weight/tradweight.cc	/^TradWeight::get_maxextra() const$/;"	f	class:Xapian::TradWeight
get_maxfd	common/closefrom.cc	/^get_maxfd() {$/;"	f	file:
get_maxpart	matcher/localsubmatch.cc	/^LazyWeight::get_maxpart() const$/;"	f	class:LazyWeight
get_maxpart	tests/api_db.cc	/^    double get_maxpart() const { return scale_factor; }$/;"	f	class:MyWeight
get_maxpart	tests/api_percentages.cc	/^    double get_maxpart() const {$/;"	f	class:ZWeight
get_maxpart	tests/api_serialise.cc	/^    double get_maxpart() const { return 0; }$/;"	f	class:ExceptionalWeight
get_maxpart	tests/api_weight.cc	/^    double get_maxpart() const { return 1.0; }$/;"	f	class:CheckInitWeight
get_maxpart	tests/api_weight.cc	/^    double get_maxpart() const {$/;"	f	class:CheckStatsWeight
get_maxpart	weight/bb2weight.cc	/^BB2Weight::get_maxpart() const$/;"	f	class:Xapian::BB2Weight
get_maxpart	weight/bm25plusweight.cc	/^BM25PlusWeight::get_maxpart() const$/;"	f	class:Xapian::BM25PlusWeight
get_maxpart	weight/bm25weight.cc	/^BM25Weight::get_maxpart() const$/;"	f	class:Xapian::BM25Weight
get_maxpart	weight/boolweight.cc	/^BoolWeight::get_maxpart() const$/;"	f	class:Xapian::BoolWeight
get_maxpart	weight/coordweight.cc	/^CoordWeight::get_maxpart() const$/;"	f	class:Xapian::CoordWeight
get_maxpart	weight/dlhweight.cc	/^DLHWeight::get_maxpart() const$/;"	f	class:Xapian::DLHWeight
get_maxpart	weight/dphweight.cc	/^DPHWeight::get_maxpart() const$/;"	f	class:Xapian::DPHWeight
get_maxpart	weight/ifb2weight.cc	/^IfB2Weight::get_maxpart() const$/;"	f	class:Xapian::IfB2Weight
get_maxpart	weight/ineb2weight.cc	/^IneB2Weight::get_maxpart() const$/;"	f	class:Xapian::IneB2Weight
get_maxpart	weight/inl2weight.cc	/^InL2Weight::get_maxpart() const$/;"	f	class:Xapian::InL2Weight
get_maxpart	weight/lmweight.cc	/^LMWeight::get_maxpart() const$/;"	f	class:Xapian::LMWeight
get_maxpart	weight/pl2plusweight.cc	/^PL2PlusWeight::get_maxpart() const$/;"	f	class:Xapian::PL2PlusWeight
get_maxpart	weight/pl2weight.cc	/^PL2Weight::get_maxpart() const$/;"	f	class:Xapian::PL2Weight
get_maxpart	weight/tfidfweight.cc	/^TfIdfWeight::get_maxpart() const$/;"	f	class:Xapian::TfIdfWeight
get_maxpart	weight/tradweight.cc	/^TradWeight::get_maxpart() const$/;"	f	class:Xapian::TradWeight
get_maxweight	api/emptypostlist.cc	/^EmptyPostList::get_maxweight() const$/;"	f	class:EmptyPostList
get_maxweight	api/leafpostlist.cc	/^LeafPostList::get_maxweight() const$/;"	f	class:LeafPostList
get_maxweight	backends/multi/multi_postlist.cc	/^MultiPostList::get_maxweight() const$/;"	f	class:MultiPostList
get_maxweight	include/xapian/postingsource.h	/^    double XAPIAN_NOTHROW(get_maxweight() const) { return max_weight_; }$/;"	f	class:Xapian::PostingSource
get_maxweight	matcher/andmaybepostlist.cc	/^AndMaybePostList::get_maxweight() const$/;"	f	class:AndMaybePostList
get_maxweight	matcher/andnotpostlist.cc	/^AndNotPostList::get_maxweight() const$/;"	f	class:AndNotPostList
get_maxweight	matcher/externalpostlist.cc	/^ExternalPostList::get_maxweight() const$/;"	f	class:ExternalPostList
get_maxweight	matcher/extraweightpostlist.h	/^	double get_maxweight() const {$/;"	f	class:ExtraWeightPostList
get_maxweight	matcher/maxpostlist.cc	/^MaxPostList::get_maxweight() const$/;"	f	class:MaxPostList
get_maxweight	matcher/mergepostlist.cc	/^MergePostList::get_maxweight() const$/;"	f	class:MergePostList
get_maxweight	matcher/msetpostlist.cc	/^MSetPostList::get_maxweight() const$/;"	f	class:MSetPostList
get_maxweight	matcher/multiandpostlist.cc	/^MultiAndPostList::get_maxweight() const$/;"	f	class:MultiAndPostList
get_maxweight	matcher/multixorpostlist.cc	/^MultiXorPostList::get_maxweight() const$/;"	f	class:MultiXorPostList
get_maxweight	matcher/orpospostlist.cc	/^OrPosPostList::get_maxweight() const$/;"	f	class:OrPosPostList
get_maxweight	matcher/orpostlist.cc	/^OrPostList::get_maxweight() const$/;"	f	class:OrPostList
get_maxweight	matcher/selectpostlist.h	/^	double get_maxweight() const { return source->get_maxweight(); }$/;"	f	class:SelectPostList
get_maxweight	matcher/synonympostlist.cc	/^SynonymPostList::get_maxweight() const$/;"	f	class:SynonymPostList
get_maxweight	matcher/valuerangepostlist.cc	/^ValueRangePostList::get_maxweight() const$/;"	f	class:ValueRangePostList
get_merged_docid	backends/multi/multi_valuelist.cc	/^    Xapian::docid get_merged_docid(unsigned multiplier) const {$/;"	f	struct:SubValueList
get_message	backends/remote/remote-database.cc	/^RemoteDatabase::get_message(string &result,$/;"	f	class:RemoteDatabase
get_message	backends/remote/remote-database.h	/^    void get_message(std::string& message,$/;"	f	class:RemoteDatabase
get_message	net/remoteconnection.cc	/^RemoteConnection::get_message(string &result, double end_time)$/;"	f	class:RemoteConnection
get_message	net/remoteserver.cc	/^RemoteServer::get_message(double timeout, string & result,$/;"	f	class:RemoteServer
get_message	tests/harness/fdtracker.h	/^    const std::string & get_message() const { return message; }$/;"	f	class:FDTracker
get_message_chunk	net/remoteconnection.cc	/^RemoteConnection::get_message_chunk(string &result, size_t at_least,$/;"	f	class:RemoteConnection
get_message_chunked	net/remoteconnection.cc	/^RemoteConnection::get_message_chunked(double end_time)$/;"	f	class:RemoteConnection
get_message_or_done	backends/remote/remote-database.h	/^    bool get_message_or_done(std::string& message,$/;"	f	class:RemoteDatabase
get_metadata	api/omdatabase.cc	/^Database::get_metadata(const string & key) const$/;"	f	class:Xapian::Database
get_metadata	backends/chert/chert_database.cc	/^ChertDatabase::get_metadata(const string & key) const$/;"	f	class:ChertDatabase
get_metadata	backends/database.cc	/^Database::Internal::get_metadata(const string &) const$/;"	f	class:Xapian::Database::Internal
get_metadata	backends/glass/glass_database.cc	/^GlassDatabase::get_metadata(const string & key) const$/;"	f	class:GlassDatabase
get_metadata	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::get_metadata(const std::string & key) const$/;"	f	class:InMemoryDatabase
get_metadata	backends/remote/remote-database.cc	/^RemoteDatabase::get_metadata(const string & key) const$/;"	f	class:RemoteDatabase
get_modifiable_p	backends/glass/glass_cursor.h	/^	uint8_t * get_modifiable_p(unsigned block_size) {$/;"	f	class:Glass::Cursor
get_most_frequent_items	api/matchspy.cc	/^get_most_frequent_items(vector<StringAndFrequency> & result,$/;"	f	file:
get_mset	api/omenquire.cc	/^Enquire::Internal::get_mset(Xapian::doccount first, Xapian::doccount maxitems,$/;"	f	class:Xapian::Enquire::Internal
get_mset	api/omenquire.cc	/^Enquire::get_mset(Xapian::doccount first, Xapian::doccount maxitems,$/;"	f	class:Xapian::Enquire
get_mset	backends/remote/remote-database.cc	/^RemoteDatabase::get_mset(Xapian::MSet &mset,$/;"	f	class:RemoteDatabase
get_mset	include/xapian/enquire.h	/^	MSet get_mset(Xapian::doccount first, Xapian::doccount maxitems,$/;"	f	class:Xapian::Enquire
get_mset	matcher/multimatch.cc	/^MultiMatch::get_mset(Xapian::doccount first, Xapian::doccount maxitems,$/;"	f	class:MultiMatch
get_mset	matcher/remotesubmatch.h	/^    void get_mset(Xapian::MSet & mset) { db->get_mset(mset, matchspies); }$/;"	f	class:RemoteSubMatch
get_msetcmp_function	matcher/msetcmp.cc	/^get_msetcmp_function(Xapian::Enquire::Internal::sort_setting sort_by,$/;"	f
get_msg	include/xapian/error.h	/^    const std::string & XAPIAN_NOTHROW(get_msg() const) {$/;"	f	class:Xapian::Error
get_n	backends/glass/glass_cursor.h	/^	uint4 get_n() const {$/;"	f	class:Glass::Cursor
get_named_writable_database	tests/apitest.cc	/^get_named_writable_database(const std::string &name, const std::string &source)$/;"	f
get_named_writable_database_path	tests/apitest.cc	/^get_named_writable_database_path(const std::string &name)$/;"	f
get_ncpus	tests/perftest/perftest.cc	/^get_ncpus()$/;"	f	file:
get_next_best_weight	matcher/collapser.h	/^    double get_next_best_weight() const { return next_best_weight; }$/;"	f	class:CollapseData
get_next_docid	backends/chert/chert_dbstats.h	/^    Xapian::docid get_next_docid() { return ++last_docid; }$/;"	f	class:ChertDatabaseStats
get_next_docid	backends/glass/glass_version.h	/^    Xapian::docid get_next_docid() { return ++last_docid; }$/;"	f	class:GlassVersion
get_next_revision_number	backends/chert/chert_database.cc	/^ChertDatabase::get_next_revision_number() const$/;"	f	class:ChertDatabase
get_next_revision_number	backends/glass/glass_database.cc	/^GlassDatabase::get_next_revision_number() const$/;"	f	class:GlassDatabase
get_num_entries	backends/glass/glass_version.h	/^    glass_tablesize_t get_num_entries() const { return num_entries; }$/;"	f	class:Glass::RootInfo
get_number	languages/compiler/tokeniser.c	/^static int get_number(int n, symbol * p) {$/;"	f	file:
get_offset	backends/glass/glass_version.h	/^    off_t get_offset() const { return offset; }$/;"	f	class:GlassVersion
get_oldest_changeset	backends/glass/glass_changes.h	/^    glass_revision_number_t get_oldest_changeset() const {$/;"	f	class:GlassChanges
get_oldest_changeset	backends/glass/glass_version.h	/^    glass_revision_number_t get_oldest_changeset() const {$/;"	f	class:GlassVersion
get_op	api/queryinternal.cc	/^QueryAnd::get_op() const$/;"	f	class:Xapian::Internal::QueryAnd
get_op	api/queryinternal.cc	/^QueryAndMaybe::get_op() const$/;"	f	class:Xapian::Internal::QueryAndMaybe
get_op	api/queryinternal.cc	/^QueryAndNot::get_op() const$/;"	f	class:Xapian::Internal::QueryAndNot
get_op	api/queryinternal.cc	/^QueryEliteSet::get_op() const$/;"	f	class:Xapian::Internal::QueryEliteSet
get_op	api/queryinternal.cc	/^QueryFilter::get_op() const$/;"	f	class:Xapian::Internal::QueryFilter
get_op	api/queryinternal.cc	/^QueryMax::get_op() const$/;"	f	class:Xapian::Internal::QueryMax
get_op	api/queryinternal.cc	/^QueryNear::get_op() const$/;"	f	class:Xapian::Internal::QueryNear
get_op	api/queryinternal.cc	/^QueryOr::get_op() const$/;"	f	class:Xapian::Internal::QueryOr
get_op	api/queryinternal.cc	/^QueryPhrase::get_op() const$/;"	f	class:Xapian::Internal::QueryPhrase
get_op	api/queryinternal.cc	/^QuerySynonym::get_op() const$/;"	f	class:Xapian::Internal::QuerySynonym
get_op	api/queryinternal.cc	/^QueryWildcard::get_op() const$/;"	f	class:Xapian::Internal::QueryWildcard
get_op	api/queryinternal.cc	/^QueryXor::get_op() const$/;"	f	class:Xapian::Internal::QueryXor
get_open_revision_number	backends/chert/chert_table.h	/^	chert_revision_number_t get_open_revision_number() const {$/;"	f	class:ChertTable
get_open_revision_number	backends/glass/glass_table.h	/^	glass_revision_number_t get_open_revision_number() const {$/;"	f	class:GlassTable
get_output	languages/compiler/driver.c	/^static FILE * get_output(symbol * b) {$/;"	f	file:
get_p	backends/glass/glass_cursor.h	/^	const uint8_t * get_p() const {$/;"	f	class:Glass::Cursor
get_paragraph	tests/harness/index_utils.cc	/^get_paragraph(istream &input)$/;"	f	file:
get_path	backends/chert/chert_table.h	/^	string get_path() const {$/;"	f	class:ChertTable
get_path	backends/glass/glass_table.h	/^	string get_path() const {$/;"	f	class:GlassTable
get_pattern	api/queryinternal.h	/^    const std::string & get_pattern() const { return pattern; }$/;"	f	class:Xapian::Internal::QueryWildcard
get_percent	include/xapian/mset.h	/^    int get_percent() const {$/;"	f	class:Xapian::MSetIterator
get_percent_factor	matcher/remotesubmatch.h	/^    double get_percent_factor() const { return percent_factor; }$/;"	f	class:RemoteSubMatch
get_pos	examples/xapian-pos.cc	/^    Xapian::termpos get_pos() const { return pos; }$/;"	f	class:Pos
get_position	backends/chert/chert_positionlist.cc	/^ChertPositionList::get_position() const$/;"	f	class:ChertPositionList
get_position	backends/glass/glass_positionlist.cc	/^GlassPositionList::get_position() const$/;"	f	class:GlassPositionList
get_position	backends/inmemory/inmemory_positionlist.cc	/^InMemoryPositionList::get_position() const$/;"	f	class:InMemoryPositionList
get_position	matcher/orpositionlist.cc	/^OrPositionList::get_position() const$/;"	f	class:OrPositionList
get_positionlist	backends/glass/glass_inverter.cc	/^Inverter::get_positionlist(Xapian::docid did,$/;"	f	class:Inverter
get_posting_source	api/registry.cc	/^Registry::get_posting_source(const string & name) const$/;"	f	class:Xapian::Registry
get_postlist	matcher/localsubmatch.cc	/^LocalSubMatch::get_postlist(MultiMatch * matcher,$/;"	f	class:LocalSubMatch
get_postlist	matcher/remotesubmatch.cc	/^RemoteSubMatch::get_postlist(MultiMatch * matcher,$/;"	f	class:RemoteSubMatch
get_postlist_cursor	backends/chert/chert_database.h	/^	ChertCursor * get_postlist_cursor() const {$/;"	f	class:ChertDatabase
get_postlist_cursor	backends/glass/glass_database.h	/^	GlassCursor * get_postlist_cursor() const {$/;"	f	class:GlassDatabase
get_progcontext	net/progclient.cc	/^ProgClient::get_progcontext(const string &progname, const string &args)$/;"	f	class:ProgClient
get_query	api/omenquire.cc	/^Enquire::Internal::get_query() const$/;"	f	class:Xapian::Enquire::Internal
get_query	api/omenquire.cc	/^Enquire::get_query() const$/;"	f	class:Xapian::Enquire
get_query	queryparser/queryparser_internal.cc	/^Term::get_query() const$/;"	f	class:Term
get_query_length	include/xapian/weight.h	/^    Xapian::termcount get_query_length() const { return query_length_; }$/;"	f	class:Xapian::Weight
get_query_with_auto_synonyms	queryparser/queryparser_internal.cc	/^Term::get_query_with_auto_synonyms() const$/;"	f	class:Term
get_query_with_synonyms	queryparser/queryparser_internal.cc	/^Term::get_query_with_synonyms() const$/;"	f	class:Term
get_rank	include/xapian/mset.h	/^    Xapian::doccount get_rank() const {$/;"	f	class:Xapian::MSetIterator
get_record	backends/chert/chert_record.cc	/^ChertRecordTable::get_record(Xapian::docid did) const$/;"	f	class:ChertRecordTable
get_registry	net/remoteserver.h	/^    const Xapian::Registry & get_registry() const { return reg; }$/;"	f	class:RemoteServer
get_reltermfreq	include/xapian/weight.h	/^    Xapian::doccount get_reltermfreq() const { return reltermfreq_; }$/;"	f	class:Xapian::Weight
get_remote_database	tests/apitest.cc	/^get_remote_database(const string &dbname, unsigned int timeout)$/;"	f
get_remote_database	tests/harness/backendmanager.cc	/^BackendManager::get_remote_database(const vector<string> &, unsigned int)$/;"	f	class:BackendManager
get_remote_database	tests/harness/backendmanager_remoteprog.cc	/^BackendManagerRemoteProg::get_remote_database(const vector<string> & files,$/;"	f	class:BackendManagerRemoteProg
get_remote_database	tests/harness/backendmanager_remotetcp.cc	/^BackendManagerRemoteTcp::get_remote_database(const vector<string> & files,$/;"	f	class:BackendManagerRemoteTcp
get_remote_database_args	tests/harness/backendmanager_remote.cc	/^BackendManagerRemote::get_remote_database_args(const std::vector<std::string> & files,$/;"	f	class:BackendManagerRemote
get_remote_stats	backends/remote/remote-database.cc	/^RemoteDatabase::get_remote_stats(bool nowait, Xapian::Weight::Internal &out)$/;"	f	class:RemoteDatabase
get_replica_path	api/replication.cc	/^    string get_replica_path(int id) const {$/;"	f	class:DatabaseReplica::Internal	file:
get_revision	api/omdatabase.cc	/^Database::get_revision() const$/;"	f	class:Xapian::Database
get_revision	backends/chert/chert_btreebase.h	/^	uint4 get_revision() const { return revision; }$/;"	f	class:ChertTable_base
get_revision	backends/glass/glass_freelist.h	/^    uint4 get_revision() const { return revision; }$/;"	f	class:GlassFreeList
get_revision	backends/glass/glass_version.h	/^    glass_revision_number_t get_revision() const { return rev; }$/;"	f	class:GlassVersion
get_revision_info	api/replication.cc	/^DatabaseReplica::Internal::get_revision_info() const$/;"	f	class:DatabaseReplica::Internal
get_revision_info	api/replication.cc	/^DatabaseReplica::get_revision_info() const$/;"	f	class:DatabaseReplica
get_revision_info	backends/chert/chert_database.cc	/^ChertDatabase::get_revision_info() const$/;"	f	class:ChertDatabase
get_revision_info	backends/database.cc	/^Database::Internal::get_revision_info() const$/;"	f	class:Xapian::Database::Internal
get_revision_info	backends/glass/glass_database.cc	/^GlassDatabase::get_revision_info() const$/;"	f	class:GlassDatabase
get_revision_number	backends/chert/chert_database.cc	/^ChertDatabase::get_revision_number() const$/;"	f	class:ChertDatabase
get_revision_number	backends/glass/glass_database.cc	/^GlassDatabase::get_revision_number() const$/;"	f	class:GlassDatabase
get_root	backends/chert/chert_btreebase.h	/^	uint4 get_root() const { return root; }$/;"	f	class:ChertTable_base
get_root	backends/glass/glass_version.h	/^    const RootInfo & get_root(Glass::table_type tbl) const {$/;"	f	class:GlassVersion
get_root	backends/glass/glass_version.h	/^    glass_block_t get_root() const { return root; }$/;"	f	class:Glass::RootInfo
get_root_is_fake	backends/glass/glass_version.h	/^    bool get_root_is_fake() const { return root_is_fake; }$/;"	f	class:Glass::RootInfo
get_rset_size	include/xapian/weight.h	/^    Xapian::doccount get_rset_size() const { return rset_size_; }$/;"	f	class:Xapian::Weight
get_rsize	expand/expandweight.h	/^    Xapian::doccount get_rsize() const { return rsize; }$/;"	f	class:Xapian::Internal::ExpandWeight
get_sequential	backends/chert/chert_btreebase.h	/^	bool get_sequential() const { return sequential; }$/;"	f	class:ChertTable_base
get_sequential	backends/glass/glass_version.h	/^    bool get_sequential() const { return sequential; }$/;"	f	class:Glass::RootInfo
get_slot	api/queryinternal.h	/^    Xapian::valueno get_slot() const { return slot; }$/;"	f	class:Xapian::Internal::QueryValueBase
get_slot	include/xapian/postingsource.h	/^    Xapian::valueno get_slot() const { return real_slot; }$/;"	f	class:Xapian::ValuePostingSource
get_sort_key	api/omenquire.cc	/^MSetIterator::get_sort_key() const$/;"	f	class:Xapian::MSetIterator
get_sort_key	api/postlist.cc	/^PostingIterator::Internal::get_sort_key() const$/;"	f	class:Xapian::PostingIterator::Internal
get_sort_key	matcher/mergepostlist.cc	/^MergePostList::get_sort_key() const$/;"	f	class:MergePostList
get_sort_key	matcher/msetpostlist.cc	/^MSetPostList::get_sort_key() const$/;"	f	class:MSetPostList
get_spelling_frequency	backends/chert/chert_database.cc	/^ChertDatabase::get_spelling_frequency(const string & word) const$/;"	f	class:ChertDatabase
get_spelling_frequency	backends/database.cc	/^Database::Internal::get_spelling_frequency(const string &) const$/;"	f	class:Xapian::Database::Internal
get_spelling_frequency	backends/glass/glass_database.cc	/^GlassDatabase::get_spelling_frequency(const string & word) const$/;"	f	class:GlassDatabase
get_spelling_suggestion	api/omdatabase.cc	/^Database::get_spelling_suggestion(const string &word,$/;"	f	class:Xapian::Database
get_spelling_wordfreq_upper_bound	backends/glass/glass_version.h	/^    Xapian::termcount get_spelling_wordfreq_upper_bound() const {$/;"	f	class:GlassVersion
get_srcdir	tests/harness/testsuite.cc	/^test_driver::get_srcdir()$/;"	f	class:test_driver
get_started	include/xapian/postingsource.h	/^    bool get_started() const { return real_started; }$/;"	f	class:Xapian::ValuePostingSource
get_stats	weight/weightinternal.h	/^    bool get_stats(const std::string & term,$/;"	f	class:Xapian::Weight::Internal
get_stopper	queryparser/queryparser_internal.cc	/^    const Stopper * get_stopper() const {$/;"	f	class:State
get_string	api/matchspy.cc	/^    std::string get_string() const { return str; }$/;"	f	class:StringAndFrequency
get_subquery	api/query.cc	/^Query::get_subquery(size_t n) const$/;"	f	class:Xapian::Query
get_subquery	api/queryinternal.cc	/^Query::Internal::get_subquery(size_t) const$/;"	f	class:Xapian::Query::Internal
get_subquery	api/queryinternal.cc	/^QueryBranch::get_subquery(size_t n) const$/;"	f	class:Xapian::Internal::QueryBranch
get_subquery	api/queryinternal.cc	/^QueryScaleWeight::get_subquery(size_t) const$/;"	f	class:Xapian::Internal::QueryScaleWeight
get_sumextra	matcher/localsubmatch.cc	/^LazyWeight::get_sumextra(Xapian::termcount doclen,$/;"	f	class:LazyWeight
get_sumextra	tests/api_db.cc	/^    double get_sumextra(Xapian::termcount, Xapian::termcount) const { return 0; }$/;"	f	class:MyWeight
get_sumextra	tests/api_percentages.cc	/^    double get_sumextra(Xapian::termcount doclen,$/;"	f	class:ZWeight
get_sumextra	tests/api_serialise.cc	/^    double get_sumextra(Xapian::termcount, Xapian::termcount) const { return 0; }$/;"	f	class:ExceptionalWeight
get_sumextra	tests/api_weight.cc	/^    double get_sumextra(Xapian::termcount doclen, Xapian::termcount) const {$/;"	f	class:CheckInitWeight
get_sumextra	tests/api_weight.cc	/^    double get_sumextra(Xapian::termcount doclen, Xapian::termcount) const {$/;"	f	class:CheckStatsWeight
get_sumextra	weight/bb2weight.cc	/^BB2Weight::get_sumextra(Xapian::termcount, Xapian::termcount) const$/;"	f	class:Xapian::BB2Weight
get_sumextra	weight/bm25plusweight.cc	/^BM25PlusWeight::get_sumextra(Xapian::termcount len, Xapian::termcount) const$/;"	f	class:Xapian::BM25PlusWeight
get_sumextra	weight/bm25weight.cc	/^BM25Weight::get_sumextra(Xapian::termcount len, Xapian::termcount) const$/;"	f	class:Xapian::BM25Weight
get_sumextra	weight/boolweight.cc	/^BoolWeight::get_sumextra(Xapian::termcount, Xapian::termcount) const$/;"	f	class:Xapian::BoolWeight
get_sumextra	weight/coordweight.cc	/^CoordWeight::get_sumextra(Xapian::termcount, Xapian::termcount) const$/;"	f	class:Xapian::CoordWeight
get_sumextra	weight/dlhweight.cc	/^DLHWeight::get_sumextra(Xapian::termcount, Xapian::termcount) const$/;"	f	class:Xapian::DLHWeight
get_sumextra	weight/dphweight.cc	/^DPHWeight::get_sumextra(Xapian::termcount, Xapian::termcount) const$/;"	f	class:Xapian::DPHWeight
get_sumextra	weight/ifb2weight.cc	/^IfB2Weight::get_sumextra(Xapian::termcount, Xapian::termcount) const$/;"	f	class:Xapian::IfB2Weight
get_sumextra	weight/ineb2weight.cc	/^IneB2Weight::get_sumextra(Xapian::termcount, Xapian::termcount) const$/;"	f	class:Xapian::IneB2Weight
get_sumextra	weight/inl2weight.cc	/^InL2Weight::get_sumextra(Xapian::termcount, Xapian::termcount) const$/;"	f	class:Xapian::InL2Weight
get_sumextra	weight/lmweight.cc	/^LMWeight::get_sumextra(Xapian::termcount len, Xapian::termcount) const$/;"	f	class:Xapian::LMWeight
get_sumextra	weight/pl2plusweight.cc	/^PL2PlusWeight::get_sumextra(Xapian::termcount, Xapian::termcount) const$/;"	f	class:Xapian::PL2PlusWeight
get_sumextra	weight/pl2weight.cc	/^PL2Weight::get_sumextra(Xapian::termcount, Xapian::termcount) const$/;"	f	class:Xapian::PL2Weight
get_sumextra	weight/tfidfweight.cc	/^TfIdfWeight::get_sumextra(Xapian::termcount, Xapian::termcount) const$/;"	f	class:Xapian::TfIdfWeight
get_sumextra	weight/tradweight.cc	/^TradWeight::get_sumextra(Xapian::termcount, Xapian::termcount) const$/;"	f	class:Xapian::TradWeight
get_sumpart	matcher/localsubmatch.cc	/^LazyWeight::get_sumpart(Xapian::termcount wdf,$/;"	f	class:LazyWeight
get_sumpart	tests/api_db.cc	/^    double get_sumpart(Xapian::termcount, Xapian::termcount, Xapian::termcount) const {$/;"	f	class:MyWeight
get_sumpart	tests/api_percentages.cc	/^    double get_sumpart(Xapian::termcount,$/;"	f	class:ZWeight
get_sumpart	tests/api_serialise.cc	/^    double get_sumpart(Xapian::termcount, Xapian::termcount, Xapian::termcount) const {$/;"	f	class:ExceptionalWeight
get_sumpart	tests/api_weight.cc	/^    double get_sumpart(Xapian::termcount wdf, Xapian::termcount doclen,$/;"	f	class:CheckStatsWeight
get_sumpart	tests/api_weight.cc	/^    double get_sumpart(Xapian::termcount, Xapian::termcount,$/;"	f	class:CheckInitWeight
get_sumpart	weight/bb2weight.cc	/^BB2Weight::get_sumpart(Xapian::termcount wdf, Xapian::termcount len,$/;"	f	class:Xapian::BB2Weight
get_sumpart	weight/bm25plusweight.cc	/^BM25PlusWeight::get_sumpart(Xapian::termcount wdf, Xapian::termcount len,$/;"	f	class:Xapian::BM25PlusWeight
get_sumpart	weight/bm25weight.cc	/^BM25Weight::get_sumpart(Xapian::termcount wdf, Xapian::termcount len,$/;"	f	class:Xapian::BM25Weight
get_sumpart	weight/boolweight.cc	/^BoolWeight::get_sumpart(Xapian::termcount, Xapian::termcount,$/;"	f	class:Xapian::BoolWeight
get_sumpart	weight/coordweight.cc	/^CoordWeight::get_sumpart(Xapian::termcount, Xapian::termcount,$/;"	f	class:Xapian::CoordWeight
get_sumpart	weight/dlhweight.cc	/^DLHWeight::get_sumpart(Xapian::termcount wdf, Xapian::termcount len,$/;"	f	class:Xapian::DLHWeight
get_sumpart	weight/dphweight.cc	/^DPHWeight::get_sumpart(Xapian::termcount wdf, Xapian::termcount len,$/;"	f	class:Xapian::DPHWeight
get_sumpart	weight/ifb2weight.cc	/^IfB2Weight::get_sumpart(Xapian::termcount wdf, Xapian::termcount len,$/;"	f	class:Xapian::IfB2Weight
get_sumpart	weight/ineb2weight.cc	/^IneB2Weight::get_sumpart(Xapian::termcount wdf, Xapian::termcount len,$/;"	f	class:Xapian::IneB2Weight
get_sumpart	weight/inl2weight.cc	/^InL2Weight::get_sumpart(Xapian::termcount wdf, Xapian::termcount len,$/;"	f	class:Xapian::InL2Weight
get_sumpart	weight/lmweight.cc	/^LMWeight::get_sumpart(Xapian::termcount wdf, Xapian::termcount len,$/;"	f	class:Xapian::LMWeight
get_sumpart	weight/pl2plusweight.cc	/^PL2PlusWeight::get_sumpart(Xapian::termcount wdf, Xapian::termcount len,$/;"	f	class:Xapian::PL2PlusWeight
get_sumpart	weight/pl2weight.cc	/^PL2Weight::get_sumpart(Xapian::termcount wdf, Xapian::termcount len,$/;"	f	class:Xapian::PL2Weight
get_sumpart	weight/tfidfweight.cc	/^TfIdfWeight::get_sumpart(Xapian::termcount wdf, Xapian::termcount doclen,$/;"	f	class:Xapian::TfIdfWeight
get_sumpart	weight/tradweight.cc	/^TradWeight::get_sumpart(Xapian::termcount wdf, Xapian::termcount len,$/;"	f	class:Xapian::TradWeight
get_sumpart_needs_doclength_	include/xapian/weight.h	/^    bool get_sumpart_needs_doclength_() const {$/;"	f	class:Xapian::Weight
get_sumpart_needs_uniqueterms_	include/xapian/weight.h	/^    bool get_sumpart_needs_uniqueterms_() const {$/;"	f	class:Xapian::Weight
get_sumpart_needs_wdf_	include/xapian/weight.h	/^    bool get_sumpart_needs_wdf_() const {$/;"	f	class:Xapian::Weight
get_table	backends/chert/chert_cursor.h	/^	const ChertTable * get_table() const { return B; }$/;"	f	class:ChertCursor
get_table	backends/glass/glass_cursor.h	/^	const GlassTable * get_table() const { return B; }$/;"	f	class:GlassCursor
get_tag	backends/glass/glass_compact.cc	/^    const string & get_tag() const {$/;"	f	class:GlassCompact::PositionCursor
get_tcpcontext	net/remotetcpclient.cc	/^RemoteTcpClient::get_tcpcontext(const string & hostname, int port)$/;"	f	class:RemoteTcpClient
get_term	api/queryinternal.h	/^    const std::string & get_term() const { return term; }$/;"	f	class:Xapian::Internal::QueryTerm
get_term	examples/xapian-pos.cc	/^    const string& get_term() const { return term; }$/;"	f	class:Pos
get_termfreq	api/maptermlist.h	/^	Xapian::doccount get_termfreq() const {$/;"	f	class:MapTermList
get_termfreq	api/matchspy.cc	/^    Xapian::doccount get_termfreq() const {$/;"	f	class:StringAndFreqTermList
get_termfreq	api/matchspy.cc	/^    Xapian::doccount get_termfreq() const {$/;"	f	class:ValueCountTermList
get_termfreq	api/omdatabase.cc	/^Database::get_termfreq(const string & tname) const$/;"	f	class:Xapian::Database
get_termfreq	api/omenquire.cc	/^Enquire::Internal::get_termfreq(const string &tname) const$/;"	f	class:Xapian::Enquire::Internal
get_termfreq	api/omenquire.cc	/^MSet::get_termfreq(const string &tname) const$/;"	f	class:Xapian::MSet
get_termfreq	api/termiterator.cc	/^TermIterator::get_termfreq() const$/;"	f	class:Xapian::TermIterator
get_termfreq	api/vectortermlist.cc	/^VectorTermList::get_termfreq() const$/;"	f	class:VectorTermList
get_termfreq	backends/chert/chert_alldocspostlist.cc	/^ChertAllDocsPostList::get_termfreq() const$/;"	f	class:ChertAllDocsPostList
get_termfreq	backends/chert/chert_alltermslist.cc	/^ChertAllTermsList::get_termfreq() const$/;"	f	class:ChertAllTermsList
get_termfreq	backends/chert/chert_metadata.cc	/^ChertMetadataTermList::get_termfreq() const$/;"	f	class:ChertMetadataTermList
get_termfreq	backends/chert/chert_modifiedpostlist.cc	/^ChertModifiedPostList::get_termfreq() const$/;"	f	class:ChertModifiedPostList
get_termfreq	backends/chert/chert_postlist.h	/^	Xapian::doccount get_termfreq() const { return number_of_entries; }$/;"	f	class:ChertPostList
get_termfreq	backends/chert/chert_spelling.cc	/^ChertSpellingTermList::get_termfreq() const$/;"	f	class:ChertSpellingTermList
get_termfreq	backends/chert/chert_spellingwordslist.cc	/^ChertSpellingWordsList::get_termfreq() const$/;"	f	class:ChertSpellingWordsList
get_termfreq	backends/chert/chert_synonym.cc	/^ChertSynonymTermList::get_termfreq() const$/;"	f	class:ChertSynonymTermList
get_termfreq	backends/chert/chert_termlist.cc	/^ChertTermList::get_termfreq() const$/;"	f	class:ChertTermList
get_termfreq	backends/contiguousalldocspostlist.cc	/^ContiguousAllDocsPostList::get_termfreq() const$/;"	f	class:ContiguousAllDocsPostList
get_termfreq	backends/glass/glass_alldocspostlist.cc	/^GlassAllDocsPostList::get_termfreq() const$/;"	f	class:GlassAllDocsPostList
get_termfreq	backends/glass/glass_alltermslist.cc	/^GlassAllTermsList::get_termfreq() const$/;"	f	class:GlassAllTermsList
get_termfreq	backends/glass/glass_metadata.cc	/^GlassMetadataTermList::get_termfreq() const$/;"	f	class:GlassMetadataTermList
get_termfreq	backends/glass/glass_postlist.h	/^	Xapian::doccount get_termfreq() const { return number_of_entries; }$/;"	f	class:GlassPostList
get_termfreq	backends/glass/glass_spelling.cc	/^GlassSpellingTermList::get_termfreq() const$/;"	f	class:GlassSpellingTermList
get_termfreq	backends/glass/glass_spellingwordslist.cc	/^GlassSpellingWordsList::get_termfreq() const$/;"	f	class:GlassSpellingWordsList
get_termfreq	backends/glass/glass_synonym.cc	/^GlassSynonymTermList::get_termfreq() const$/;"	f	class:GlassSynonymTermList
get_termfreq	backends/glass/glass_termlist.cc	/^GlassTermList::get_termfreq() const$/;"	f	class:GlassTermList
get_termfreq	backends/inmemory/inmemory_alltermslist.cc	/^Xapian::doccount InMemoryAllTermsList::get_termfreq() const {$/;"	f	class:InMemoryAllTermsList
get_termfreq	backends/inmemory/inmemory_database.cc	/^InMemoryAllDocsPostList::get_termfreq() const$/;"	f	class:InMemoryAllDocsPostList
get_termfreq	backends/inmemory/inmemory_database.cc	/^InMemoryPostList::get_termfreq() const$/;"	f	class:InMemoryPostList
get_termfreq	backends/inmemory/inmemory_database.cc	/^InMemoryTermList::get_termfreq() const$/;"	f	class:InMemoryTermList
get_termfreq	backends/multi/multi_alltermslist.cc	/^MultiAllTermsList::get_termfreq() const$/;"	f	class:MultiAllTermsList
get_termfreq	backends/multi/multi_termlist.cc	/^Xapian::doccount MultiTermList::get_termfreq() const$/;"	f	class:MultiTermList
get_termfreq	backends/remote/net_postlist.cc	/^NetworkPostList::get_termfreq() const$/;"	f	class:NetworkPostList
get_termfreq	backends/remote/net_termlist.cc	/^NetworkTermList::get_termfreq() const$/;"	f	class:NetworkTermList
get_termfreq	expand/ortermlist.cc	/^FreqAdderOrTermList::get_termfreq() const$/;"	f	class:FreqAdderOrTermList
get_termfreq	expand/ortermlist.cc	/^OrTermList::get_termfreq() const$/;"	f	class:OrTermList
get_termfreq	include/xapian/weight.h	/^    Xapian::doccount get_termfreq() const { return termfreq_; }$/;"	f	class:Xapian::Weight
get_termfreq_est	api/emptypostlist.cc	/^EmptyPostList::get_termfreq_est() const$/;"	f	class:EmptyPostList
get_termfreq_est	api/leafpostlist.cc	/^LeafPostList::get_termfreq_est() const$/;"	f	class:LeafPostList
get_termfreq_est	api/postingsource.cc	/^FixedWeightPostingSource::get_termfreq_est() const$/;"	f	class:Xapian::FixedWeightPostingSource
get_termfreq_est	api/postingsource.cc	/^ValuePostingSource::get_termfreq_est() const$/;"	f	class:Xapian::ValuePostingSource
get_termfreq_est	backends/multi/multi_postlist.cc	/^MultiPostList::get_termfreq_est() const$/;"	f	class:MultiPostList
get_termfreq_est	matcher/andmaybepostlist.cc	/^AndMaybePostList::get_termfreq_est() const$/;"	f	class:AndMaybePostList
get_termfreq_est	matcher/andnotpostlist.cc	/^AndNotPostList::get_termfreq_est() const$/;"	f	class:AndNotPostList
get_termfreq_est	matcher/exactphrasepostlist.cc	/^ExactPhrasePostList::get_termfreq_est() const$/;"	f	class:ExactPhrasePostList
get_termfreq_est	matcher/externalpostlist.cc	/^ExternalPostList::get_termfreq_est() const$/;"	f	class:ExternalPostList
get_termfreq_est	matcher/extraweightpostlist.h	/^	Xapian::doccount get_termfreq_est() const {$/;"	f	class:ExtraWeightPostList
get_termfreq_est	matcher/maxpostlist.cc	/^MaxPostList::get_termfreq_est() const$/;"	f	class:MaxPostList
get_termfreq_est	matcher/mergepostlist.cc	/^MergePostList::get_termfreq_est() const$/;"	f	class:MergePostList
get_termfreq_est	matcher/msetpostlist.cc	/^MSetPostList::get_termfreq_est() const$/;"	f	class:MSetPostList
get_termfreq_est	matcher/multiandpostlist.cc	/^MultiAndPostList::get_termfreq_est() const$/;"	f	class:MultiAndPostList
get_termfreq_est	matcher/multixorpostlist.cc	/^MultiXorPostList::get_termfreq_est() const$/;"	f	class:MultiXorPostList
get_termfreq_est	matcher/nearpostlist.cc	/^NearPostList::get_termfreq_est() const$/;"	f	class:NearPostList
get_termfreq_est	matcher/orpospostlist.cc	/^OrPosPostList::get_termfreq_est() const$/;"	f	class:OrPosPostList
get_termfreq_est	matcher/orpostlist.cc	/^OrPostList::get_termfreq_est() const$/;"	f	class:OrPostList
get_termfreq_est	matcher/phrasepostlist.cc	/^PhrasePostList::get_termfreq_est() const$/;"	f	class:PhrasePostList
get_termfreq_est	matcher/synonympostlist.cc	/^SynonymPostList::get_termfreq_est() const {$/;"	f	class:SynonymPostList
get_termfreq_est	matcher/valuerangepostlist.cc	/^ValueRangePostList::get_termfreq_est() const$/;"	f	class:ValueRangePostList
get_termfreq_est	tests/api_percentages.cc	/^    Xapian::doccount get_termfreq_est() const { return weights.size(); }$/;"	f	class:MyPostingSource
get_termfreq_est	tests/api_postingsource.cc	/^    Xapian::doccount get_termfreq_est() const { return 1; }$/;"	f	class:CloneTestPostingSource
get_termfreq_est	tests/api_postingsource.cc	/^    Xapian::doccount get_termfreq_est() const { return 4; }$/;"	f	class:ChangeMaxweightPostingSource
get_termfreq_est	tests/api_postingsource.cc	/^    Xapian::doccount get_termfreq_est() const { return num_docs \/ 2; }$/;"	f	class:MyOddPostingSource
get_termfreq_est	tests/api_postingsource.cc	/^    Xapian::doccount get_termfreq_est() const { return num_docs \/ 2; }$/;"	f	class:MyOddWeightingPostingSource
get_termfreq_est	tests/api_postingsource.cc	/^    Xapian::doccount get_termfreq_est() const { return num_docs; }$/;"	f	class:MyDontAskWeightPostingSource
get_termfreq_est	tests/api_serialise.cc	/^    Xapian::doccount get_termfreq_est() const { return 1; }$/;"	f	class:ExceptionalPostingSource
get_termfreq_est_using_stats	api/emptypostlist.cc	/^EmptyPostList::get_termfreq_est_using_stats(const Xapian::Weight::Internal &) const$/;"	f	class:EmptyPostList
get_termfreq_est_using_stats	api/leafpostlist.cc	/^LeafPostList::get_termfreq_est_using_stats($/;"	f	class:LeafPostList
get_termfreq_est_using_stats	api/postlist.cc	/^PostingIterator::Internal::get_termfreq_est_using_stats($/;"	f	class:Xapian::PostingIterator::Internal
get_termfreq_est_using_stats	matcher/andmaybepostlist.cc	/^AndMaybePostList::get_termfreq_est_using_stats($/;"	f	class:AndMaybePostList
get_termfreq_est_using_stats	matcher/andnotpostlist.cc	/^AndNotPostList::get_termfreq_est_using_stats($/;"	f	class:AndNotPostList
get_termfreq_est_using_stats	matcher/exactphrasepostlist.cc	/^ExactPhrasePostList::get_termfreq_est_using_stats($/;"	f	class:ExactPhrasePostList
get_termfreq_est_using_stats	matcher/maxpostlist.cc	/^MaxPostList::get_termfreq_est_using_stats($/;"	f	class:MaxPostList
get_termfreq_est_using_stats	matcher/multiandpostlist.cc	/^MultiAndPostList::get_termfreq_est_using_stats($/;"	f	class:MultiAndPostList
get_termfreq_est_using_stats	matcher/multixorpostlist.cc	/^MultiXorPostList::get_termfreq_est_using_stats($/;"	f	class:MultiXorPostList
get_termfreq_est_using_stats	matcher/nearpostlist.cc	/^NearPostList::get_termfreq_est_using_stats($/;"	f	class:NearPostList
get_termfreq_est_using_stats	matcher/orpospostlist.cc	/^OrPosPostList::get_termfreq_est_using_stats(const Xapian::Weight::Internal & stats) const$/;"	f	class:OrPosPostList
get_termfreq_est_using_stats	matcher/orpostlist.cc	/^OrPostList::get_termfreq_est_using_stats($/;"	f	class:OrPostList
get_termfreq_est_using_stats	matcher/phrasepostlist.cc	/^PhrasePostList::get_termfreq_est_using_stats($/;"	f	class:PhrasePostList
get_termfreq_est_using_stats	matcher/valuerangepostlist.cc	/^ValueRangePostList::get_termfreq_est_using_stats($/;"	f	class:ValueRangePostList
get_termfreq_max	api/emptypostlist.cc	/^EmptyPostList::get_termfreq_max() const$/;"	f	class:EmptyPostList
get_termfreq_max	api/leafpostlist.cc	/^LeafPostList::get_termfreq_max() const$/;"	f	class:LeafPostList
get_termfreq_max	api/postingsource.cc	/^FixedWeightPostingSource::get_termfreq_max() const$/;"	f	class:Xapian::FixedWeightPostingSource
get_termfreq_max	api/postingsource.cc	/^ValuePostingSource::get_termfreq_max() const$/;"	f	class:Xapian::ValuePostingSource
get_termfreq_max	backends/multi/multi_postlist.cc	/^MultiPostList::get_termfreq_max() const$/;"	f	class:MultiPostList
get_termfreq_max	matcher/andmaybepostlist.cc	/^AndMaybePostList::get_termfreq_max() const$/;"	f	class:AndMaybePostList
get_termfreq_max	matcher/andnotpostlist.cc	/^AndNotPostList::get_termfreq_max() const$/;"	f	class:AndNotPostList
get_termfreq_max	matcher/externalpostlist.cc	/^ExternalPostList::get_termfreq_max() const$/;"	f	class:ExternalPostList
get_termfreq_max	matcher/extraweightpostlist.h	/^	Xapian::doccount get_termfreq_max() const {$/;"	f	class:ExtraWeightPostList
get_termfreq_max	matcher/maxpostlist.cc	/^MaxPostList::get_termfreq_max() const$/;"	f	class:MaxPostList
get_termfreq_max	matcher/mergepostlist.cc	/^MergePostList::get_termfreq_max() const$/;"	f	class:MergePostList
get_termfreq_max	matcher/msetpostlist.cc	/^MSetPostList::get_termfreq_max() const$/;"	f	class:MSetPostList
get_termfreq_max	matcher/multiandpostlist.cc	/^MultiAndPostList::get_termfreq_max() const$/;"	f	class:MultiAndPostList
get_termfreq_max	matcher/multixorpostlist.cc	/^MultiXorPostList::get_termfreq_max() const$/;"	f	class:MultiXorPostList
get_termfreq_max	matcher/orpospostlist.cc	/^OrPosPostList::get_termfreq_max() const$/;"	f	class:OrPosPostList
get_termfreq_max	matcher/orpostlist.cc	/^OrPostList::get_termfreq_max() const$/;"	f	class:OrPostList
get_termfreq_max	matcher/selectpostlist.h	/^	Xapian::doccount get_termfreq_max() const { return source->get_termfreq_max(); }$/;"	f	class:SelectPostList
get_termfreq_max	matcher/synonympostlist.cc	/^SynonymPostList::get_termfreq_max() const {$/;"	f	class:SynonymPostList
get_termfreq_max	matcher/valuerangepostlist.cc	/^ValueRangePostList::get_termfreq_max() const$/;"	f	class:ValueRangePostList
get_termfreq_max	tests/api_percentages.cc	/^    Xapian::doccount get_termfreq_max() const { return weights.size(); }$/;"	f	class:MyPostingSource
get_termfreq_max	tests/api_postingsource.cc	/^    Xapian::doccount get_termfreq_max() const { return 2; }$/;"	f	class:CloneTestPostingSource
get_termfreq_max	tests/api_postingsource.cc	/^    Xapian::doccount get_termfreq_max() const { return 4; }$/;"	f	class:ChangeMaxweightPostingSource
get_termfreq_max	tests/api_postingsource.cc	/^    Xapian::doccount get_termfreq_max() const { return num_docs; }$/;"	f	class:MyDontAskWeightPostingSource
get_termfreq_max	tests/api_postingsource.cc	/^    Xapian::doccount get_termfreq_max() const { return num_docs; }$/;"	f	class:MyOddPostingSource
get_termfreq_max	tests/api_postingsource.cc	/^    Xapian::doccount get_termfreq_max() const { return num_docs; }$/;"	f	class:MyOddWeightingPostingSource
get_termfreq_max	tests/api_serialise.cc	/^    Xapian::doccount get_termfreq_max() const { return 2; }$/;"	f	class:ExceptionalPostingSource
get_termfreq_min	api/emptypostlist.cc	/^EmptyPostList::get_termfreq_min() const$/;"	f	class:EmptyPostList
get_termfreq_min	api/leafpostlist.cc	/^LeafPostList::get_termfreq_min() const$/;"	f	class:LeafPostList
get_termfreq_min	api/postingsource.cc	/^FixedWeightPostingSource::get_termfreq_min() const$/;"	f	class:Xapian::FixedWeightPostingSource
get_termfreq_min	api/postingsource.cc	/^ValuePostingSource::get_termfreq_min() const$/;"	f	class:Xapian::ValuePostingSource
get_termfreq_min	backends/multi/multi_postlist.cc	/^MultiPostList::get_termfreq_min() const$/;"	f	class:MultiPostList
get_termfreq_min	matcher/andmaybepostlist.cc	/^AndMaybePostList::get_termfreq_min() const$/;"	f	class:AndMaybePostList
get_termfreq_min	matcher/andnotpostlist.cc	/^AndNotPostList::get_termfreq_min() const$/;"	f	class:AndNotPostList
get_termfreq_min	matcher/externalpostlist.cc	/^ExternalPostList::get_termfreq_min() const$/;"	f	class:ExternalPostList
get_termfreq_min	matcher/extraweightpostlist.h	/^	Xapian::doccount get_termfreq_min() const {$/;"	f	class:ExtraWeightPostList
get_termfreq_min	matcher/maxpostlist.cc	/^MaxPostList::get_termfreq_min() const$/;"	f	class:MaxPostList
get_termfreq_min	matcher/mergepostlist.cc	/^MergePostList::get_termfreq_min() const$/;"	f	class:MergePostList
get_termfreq_min	matcher/msetpostlist.cc	/^MSetPostList::get_termfreq_min() const$/;"	f	class:MSetPostList
get_termfreq_min	matcher/multiandpostlist.cc	/^MultiAndPostList::get_termfreq_min() const$/;"	f	class:MultiAndPostList
get_termfreq_min	matcher/multixorpostlist.cc	/^MultiXorPostList::get_termfreq_min() const$/;"	f	class:MultiXorPostList
get_termfreq_min	matcher/orpospostlist.cc	/^OrPosPostList::get_termfreq_min() const$/;"	f	class:OrPosPostList
get_termfreq_min	matcher/orpostlist.cc	/^OrPostList::get_termfreq_min() const$/;"	f	class:OrPostList
get_termfreq_min	matcher/selectpostlist.h	/^	Xapian::doccount get_termfreq_min() const { return 0; }$/;"	f	class:SelectPostList
get_termfreq_min	matcher/synonympostlist.cc	/^SynonymPostList::get_termfreq_min() const {$/;"	f	class:SynonymPostList
get_termfreq_min	matcher/valuerangepostlist.cc	/^ValueRangePostList::get_termfreq_min() const$/;"	f	class:ValueRangePostList
get_termfreq_min	tests/api_percentages.cc	/^    Xapian::doccount get_termfreq_min() const { return weights.size(); }$/;"	f	class:MyPostingSource
get_termfreq_min	tests/api_postingsource.cc	/^    Xapian::doccount get_termfreq_min() const { return 0; }$/;"	f	class:CloneTestPostingSource
get_termfreq_min	tests/api_postingsource.cc	/^    Xapian::doccount get_termfreq_min() const { return 0; }$/;"	f	class:MyOddPostingSource
get_termfreq_min	tests/api_postingsource.cc	/^    Xapian::doccount get_termfreq_min() const { return 0; }$/;"	f	class:MyOddWeightingPostingSource
get_termfreq_min	tests/api_postingsource.cc	/^    Xapian::doccount get_termfreq_min() const { return 4; }$/;"	f	class:ChangeMaxweightPostingSource
get_termfreq_min	tests/api_postingsource.cc	/^    Xapian::doccount get_termfreq_min() const { return num_docs; }$/;"	f	class:MyDontAskWeightPostingSource
get_termfreq_min	tests/api_serialise.cc	/^    Xapian::doccount get_termfreq_min() const { return 0; }$/;"	f	class:ExceptionalPostingSource
get_termname	api/maptermlist.h	/^	string get_termname() const {$/;"	f	class:MapTermList
get_termname	api/matchspy.cc	/^    string get_termname() const {$/;"	f	class:StringAndFreqTermList
get_termname	api/matchspy.cc	/^    string get_termname() const {$/;"	f	class:ValueCountTermList
get_termname	api/vectortermlist.cc	/^VectorTermList::get_termname() const$/;"	f	class:VectorTermList
get_termname	backends/chert/chert_alltermslist.cc	/^ChertAllTermsList::get_termname() const$/;"	f	class:ChertAllTermsList
get_termname	backends/chert/chert_metadata.cc	/^ChertMetadataTermList::get_termname() const$/;"	f	class:ChertMetadataTermList
get_termname	backends/chert/chert_spelling.cc	/^ChertSpellingTermList::get_termname() const$/;"	f	class:ChertSpellingTermList
get_termname	backends/chert/chert_spellingwordslist.cc	/^ChertSpellingWordsList::get_termname() const$/;"	f	class:ChertSpellingWordsList
get_termname	backends/chert/chert_synonym.cc	/^ChertSynonymTermList::get_termname() const$/;"	f	class:ChertSynonymTermList
get_termname	backends/chert/chert_termlist.cc	/^ChertTermList::get_termname() const$/;"	f	class:ChertTermList
get_termname	backends/glass/glass_alltermslist.cc	/^GlassAllTermsList::get_termname() const$/;"	f	class:GlassAllTermsList
get_termname	backends/glass/glass_metadata.cc	/^GlassMetadataTermList::get_termname() const$/;"	f	class:GlassMetadataTermList
get_termname	backends/glass/glass_spelling.cc	/^GlassSpellingTermList::get_termname() const$/;"	f	class:GlassSpellingTermList
get_termname	backends/glass/glass_spellingwordslist.cc	/^GlassSpellingWordsList::get_termname() const$/;"	f	class:GlassSpellingWordsList
get_termname	backends/glass/glass_synonym.cc	/^GlassSynonymTermList::get_termname() const$/;"	f	class:GlassSynonymTermList
get_termname	backends/glass/glass_termlist.cc	/^GlassTermList::get_termname() const$/;"	f	class:GlassTermList
get_termname	backends/inmemory/inmemory_alltermslist.cc	/^string InMemoryAllTermsList::get_termname() const {$/;"	f	class:InMemoryAllTermsList
get_termname	backends/inmemory/inmemory_database.cc	/^InMemoryTermList::get_termname() const$/;"	f	class:InMemoryTermList
get_termname	backends/multi/multi_alltermslist.cc	/^MultiAllTermsList::get_termname() const$/;"	f	class:MultiAllTermsList
get_termname	backends/multi/multi_termlist.cc	/^MultiTermList::get_termname() const$/;"	f	class:MultiTermList
get_termname	backends/remote/net_termlist.cc	/^NetworkTermList::get_termname() const$/;"	f	class:NetworkTermList
get_termname	expand/ortermlist.cc	/^OrTermList::get_termname() const$/;"	f	class:OrTermList
get_termpos	queryparser/queryparser_internal.cc	/^    termpos get_termpos() const { return pos; }$/;"	f	class:Term
get_termpos	queryparser/termgenerator.cc	/^TermGenerator::get_termpos() const$/;"	f	class:TermGenerator
get_terms_begin	api/query.cc	/^Query::get_terms_begin() const$/;"	f	class:Xapian::Query
get_terms_end	include/xapian/query.h	/^    const TermIterator XAPIAN_NOTHROW(get_terms_end() const) {$/;"	f	class:Xapian::Query
get_termweight	api/omenquire.cc	/^MSet::get_termweight(const string &tname) const$/;"	f	class:Xapian::MSet
get_termweight	weight/weightinternal.h	/^    bool get_termweight(const std::string & term, double & termweight) const {$/;"	f	class:Xapian::Weight::Internal
get_tfdelta	backends/glass/glass_inverter.h	/^	Xapian::termcount_diff get_tfdelta() const { return tf_delta; }$/;"	f	class:Inverter::PostingChanges
get_time	tests/harness/cputimer.h	/^    double get_time() const {$/;"	f	class:CPUTimer
get_tname_from_key	backends/chert/chert_postlist.cc	/^static inline bool get_tname_from_key(const char **src, const char *end,$/;"	f	file:
get_tname_from_key	backends/glass/glass_postlist.cc	/^get_tname_from_key(const char **src, const char *end, string &tname)$/;"	f	file:
get_token	languages/compiler/analyser.c	/^static int get_token(struct analyser * a, int code) {$/;"	f	file:
get_total	include/xapian/matchspy.h	/^    size_t XAPIAN_NOTHROW(get_total() const) {$/;"	f	class:Xapian::ValueCountMatchSpy
get_total_doclen	backends/chert/chert_dbstats.h	/^    Xapian::totallength get_total_doclen() const { return total_doclen; }$/;"	f	class:ChertDatabaseStats
get_total_doclen	backends/glass/glass_version.h	/^    Xapian::totallength get_total_doclen() const { return total_doclen; }$/;"	f	class:GlassVersion
get_total_length	api/omdatabase.cc	/^Database::get_total_length() const$/;"	f	class:Xapian::Database
get_total_length	backends/chert/chert_database.cc	/^ChertDatabase::get_total_length() const$/;"	f	class:ChertDatabase
get_total_length	backends/glass/glass_database.cc	/^GlassDatabase::get_total_length() const$/;"	f	class:GlassDatabase
get_total_length	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::get_total_length() const$/;"	f	class:InMemoryDatabase
get_total_length	backends/remote/remote-database.cc	/^RemoteDatabase::get_total_length() const$/;"	f	class:RemoteDatabase
get_total_physical_memory	tests/perftest/freemem.cc	/^get_total_physical_memory()$/;"	f
get_total_subqs	matcher/queryoptimiser.h	/^    Xapian::termcount get_total_subqs() const { return total_subqs; }$/;"	f	class:QueryOptimiser
get_type	include/xapian/error.h	/^    const char * XAPIAN_NOTHROW(get_type() const) {$/;"	f	class:Xapian::Error
get_uncollapsed_matches_estimated	api/omenquire.cc	/^MSet::get_uncollapsed_matches_estimated() const$/;"	f	class:Xapian::MSet
get_uncollapsed_matches_lower_bound	api/omenquire.cc	/^MSet::get_uncollapsed_matches_lower_bound() const$/;"	f	class:Xapian::MSet
get_uncollapsed_matches_upper_bound	api/omenquire.cc	/^MSet::get_uncollapsed_matches_upper_bound() const$/;"	f	class:Xapian::MSet
get_unique_terms	api/emptypostlist.cc	/^EmptyPostList::get_unique_terms() const$/;"	f	class:EmptyPostList
get_unique_terms	api/omdatabase.cc	/^Database::get_unique_terms(Xapian::docid did) const$/;"	f	class:Xapian::Database
get_unique_terms	api/postingiterator.cc	/^PostingIterator::get_unique_terms() const$/;"	f	class:Xapian::PostingIterator
get_unique_terms	backends/chert/chert_alldocsmodifiedpostlist.cc	/^ChertAllDocsModifiedPostList::get_unique_terms() const$/;"	f	class:ChertAllDocsModifiedPostList
get_unique_terms	backends/chert/chert_database.cc	/^ChertDatabase::get_unique_terms(Xapian::docid did) const$/;"	f	class:ChertDatabase
get_unique_terms	backends/chert/chert_database.cc	/^ChertWritableDatabase::get_unique_terms(Xapian::docid did) const$/;"	f	class:ChertWritableDatabase
get_unique_terms	backends/chert/chert_modifiedpostlist.cc	/^ChertModifiedPostList::get_unique_terms() const$/;"	f	class:ChertModifiedPostList
get_unique_terms	backends/chert/chert_postlist.cc	/^ChertPostList::get_unique_terms() const$/;"	f	class:ChertPostList
get_unique_terms	backends/contiguousalldocspostlist.cc	/^ContiguousAllDocsPostList::get_unique_terms() const$/;"	f	class:ContiguousAllDocsPostList
get_unique_terms	backends/glass/glass_database.cc	/^GlassDatabase::get_unique_terms(Xapian::docid did) const$/;"	f	class:GlassDatabase
get_unique_terms	backends/glass/glass_database.cc	/^GlassWritableDatabase::get_unique_terms(Xapian::docid did) const$/;"	f	class:GlassWritableDatabase
get_unique_terms	backends/glass/glass_postlist.cc	/^GlassPostList::get_unique_terms() const$/;"	f	class:GlassPostList
get_unique_terms	backends/glass/glass_termlist.cc	/^GlassTermList::get_unique_terms() const$/;"	f	class:GlassTermList
get_unique_terms	backends/inmemory/inmemory_database.cc	/^InMemoryAllDocsPostList::get_unique_terms() const$/;"	f	class:InMemoryAllDocsPostList
get_unique_terms	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::get_unique_terms(Xapian::docid did) const$/;"	f	class:InMemoryDatabase
get_unique_terms	backends/inmemory/inmemory_database.cc	/^InMemoryPostList::get_unique_terms() const$/;"	f	class:InMemoryPostList
get_unique_terms	backends/multi/multi_postlist.cc	/^MultiPostList::get_unique_terms() const$/;"	f	class:MultiPostList
get_unique_terms	backends/remote/net_postlist.cc	/^NetworkPostList::get_unique_terms() const$/;"	f	class:NetworkPostList
get_unique_terms	backends/remote/remote-database.cc	/^RemoteDatabase::get_unique_terms(Xapian::docid did) const$/;"	f	class:RemoteDatabase
get_unique_terms	matcher/andmaybepostlist.cc	/^AndMaybePostList::get_unique_terms() const$/;"	f	class:AndMaybePostList
get_unique_terms	matcher/andnotpostlist.cc	/^AndNotPostList::get_unique_terms() const$/;"	f	class:AndNotPostList
get_unique_terms	matcher/externalpostlist.cc	/^ExternalPostList::get_unique_terms() const$/;"	f	class:ExternalPostList
get_unique_terms	matcher/extraweightpostlist.h	/^	virtual Xapian::termcount get_unique_terms() const {$/;"	f	class:ExtraWeightPostList
get_unique_terms	matcher/maxpostlist.cc	/^MaxPostList::get_unique_terms() const$/;"	f	class:MaxPostList
get_unique_terms	matcher/mergepostlist.cc	/^MergePostList::get_unique_terms() const$/;"	f	class:MergePostList
get_unique_terms	matcher/msetpostlist.cc	/^MSetPostList::get_unique_terms() const$/;"	f	class:MSetPostList
get_unique_terms	matcher/multiandpostlist.cc	/^MultiAndPostList::get_unique_terms() const$/;"	f	class:MultiAndPostList
get_unique_terms	matcher/multixorpostlist.cc	/^MultiXorPostList::get_unique_terms() const$/;"	f	class:MultiXorPostList
get_unique_terms	matcher/orpospostlist.cc	/^OrPosPostList::get_unique_terms() const$/;"	f	class:OrPosPostList
get_unique_terms	matcher/orpostlist.cc	/^OrPostList::get_unique_terms() const$/;"	f	class:OrPostList
get_unique_terms	matcher/selectpostlist.h	/^	Xapian::termcount get_unique_terms() const { return source->get_unique_terms(); }$/;"	f	class:SelectPostList
get_unique_terms	matcher/synonympostlist.cc	/^SynonymPostList::get_unique_terms() const {$/;"	f	class:SynonymPostList
get_unique_terms	matcher/valuerangepostlist.cc	/^ValueRangePostList::get_unique_terms() const$/;"	f	class:ValueRangePostList
get_unique_terms_begin	api/query.cc	/^Query::get_unique_terms_begin() const$/;"	f	class:Xapian::Query
get_used_docid_range	backends/chert/chert_database.cc	/^ChertDatabase::get_used_docid_range(Xapian::docid & first,$/;"	f	class:ChertDatabase
get_used_docid_range	backends/chert/chert_postlist.cc	/^ChertPostListTable::get_used_docid_range(Xapian::docid & first,$/;"	f	class:ChertPostListTable
get_used_docid_range	backends/database.cc	/^Database::Internal::get_used_docid_range(Xapian::docid &,$/;"	f	class:Xapian::Database::Internal
get_used_docid_range	backends/glass/glass_database.cc	/^GlassDatabase::get_used_docid_range(Xapian::docid & first,$/;"	f	class:GlassDatabase
get_used_docid_range	backends/glass/glass_postlist.cc	/^GlassPostListTable::get_used_docid_range(Xapian::docid & first,$/;"	f	class:GlassPostListTable
get_utf8	languages/compiler/space.c	/^extern int get_utf8(const symbol * p, int * slot) {$/;"	f
get_utf8	languages/steminternal.cc	/^int SnowballStemImplementation::get_utf8(int * slot) {$/;"	f	class:Xapian::SnowballStemImplementation
get_uuid	api/omdatabase.cc	/^Database::get_uuid() const$/;"	f	class:Xapian::Database
get_uuid	backends/chert/chert_database.cc	/^ChertDatabase::get_uuid() const$/;"	f	class:ChertDatabase
get_uuid	backends/chert/chert_databasereplicator.cc	/^ChertDatabaseReplicator::get_uuid() const$/;"	f	class:ChertDatabaseReplicator
get_uuid	backends/chert/chert_version.h	/^    const char * get_uuid() const {$/;"	f	class:ChertVersion
get_uuid	backends/database.cc	/^Database::Internal::get_uuid() const$/;"	f	class:Xapian::Database::Internal
get_uuid	backends/glass/glass_database.cc	/^GlassDatabase::get_uuid() const$/;"	f	class:GlassDatabase
get_uuid	backends/glass/glass_databasereplicator.cc	/^GlassDatabaseReplicator::get_uuid() const$/;"	f	class:GlassDatabaseReplicator
get_uuid	backends/glass/glass_version.h	/^    const char * get_uuid() const {$/;"	f	class:GlassVersion
get_uuid	backends/remote/remote-database.cc	/^RemoteDatabase::get_uuid() const$/;"	f	class:RemoteDatabase
get_uuid_string	backends/chert/chert_version.h	/^    std::string get_uuid_string() const {$/;"	f	class:ChertVersion
get_uuid_string	backends/glass/glass_version.h	/^    std::string get_uuid_string() const {$/;"	f	class:GlassVersion
get_value	api/documentvaluelist.cc	/^DocumentValueList::get_value() const$/;"	f	class:DocumentValueList
get_value	api/omdocument.cc	/^Document::get_value(Xapian::valueno slot) const$/;"	f	class:Xapian::Document
get_value	api/omdocument.cc	/^Xapian::Document::Internal::get_value(Xapian::valueno slot) const$/;"	f	class:Xapian::Document::Internal
get_value	backends/chert/chert_valuelist.cc	/^ChertValueList::get_value() const$/;"	f	class:ChertValueList
get_value	backends/chert/chert_values.cc	/^ChertValueManager::get_value(Xapian::docid did, Xapian::valueno slot) const$/;"	f	class:ChertValueManager
get_value	backends/chert/chert_values.h	/^    const std::string & get_value() const { return value; }$/;"	f	class:ValueChunkReader
get_value	backends/glass/glass_valuelist.cc	/^GlassValueList::get_value() const$/;"	f	class:GlassValueList
get_value	backends/glass/glass_values.cc	/^GlassValueManager::get_value(Xapian::docid did, Xapian::valueno slot) const$/;"	f	class:GlassValueManager
get_value	backends/glass/glass_values.h	/^    const std::string & get_value() const { return value; }$/;"	f	class:Glass::ValueChunkReader
get_value	backends/multi/multi_valuelist.cc	/^    std::string get_value() const { return valuelist->get_value(); }$/;"	f	struct:SubValueList
get_value	backends/multi/multi_valuelist.cc	/^MultiValueList::get_value() const$/;"	f	class:MultiValueList
get_value	backends/slowvaluelist.cc	/^SlowValueList::get_value() const$/;"	f	class:SlowValueList
get_value	include/xapian/postingsource.h	/^    std::string get_value() const { return *real_value_it; }$/;"	f	class:Xapian::ValuePostingSource
get_value	matcher/valuestreamdocument.h	/^    std::string get_value(Xapian::valueno slot) const {$/;"	f	class:ValueStreamDocument
get_value_freq	api/omdatabase.cc	/^Database::get_value_freq(Xapian::valueno slot) const$/;"	f	class:Xapian::Database
get_value_freq	backends/chert/chert_database.cc	/^ChertDatabase::get_value_freq(Xapian::valueno slot) const$/;"	f	class:ChertDatabase
get_value_freq	backends/chert/chert_database.cc	/^ChertWritableDatabase::get_value_freq(Xapian::valueno slot) const$/;"	f	class:ChertWritableDatabase
get_value_freq	backends/chert/chert_values.h	/^    Xapian::doccount get_value_freq(Xapian::valueno slot) const {$/;"	f	class:ChertValueManager
get_value_freq	backends/database.cc	/^Database::Internal::get_value_freq(Xapian::valueno) const$/;"	f	class:Xapian::Database::Internal
get_value_freq	backends/glass/glass_database.cc	/^GlassDatabase::get_value_freq(Xapian::valueno slot) const$/;"	f	class:GlassDatabase
get_value_freq	backends/glass/glass_database.cc	/^GlassWritableDatabase::get_value_freq(Xapian::valueno slot) const$/;"	f	class:GlassWritableDatabase
get_value_freq	backends/glass/glass_values.h	/^    Xapian::doccount get_value_freq(Xapian::valueno slot) const {$/;"	f	class:GlassValueManager
get_value_freq	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::get_value_freq(Xapian::valueno slot) const$/;"	f	class:InMemoryDatabase
get_value_freq	backends/remote/remote-database.cc	/^RemoteDatabase::get_value_freq(Xapian::valueno slot) const$/;"	f	class:RemoteDatabase
get_value_lower_bound	api/omdatabase.cc	/^Database::get_value_lower_bound(Xapian::valueno slot) const$/;"	f	class:Xapian::Database
get_value_lower_bound	backends/chert/chert_database.cc	/^ChertDatabase::get_value_lower_bound(Xapian::valueno slot) const$/;"	f	class:ChertDatabase
get_value_lower_bound	backends/chert/chert_database.cc	/^ChertWritableDatabase::get_value_lower_bound(Xapian::valueno slot) const$/;"	f	class:ChertWritableDatabase
get_value_lower_bound	backends/chert/chert_values.h	/^    std::string get_value_lower_bound(Xapian::valueno slot) const {$/;"	f	class:ChertValueManager
get_value_lower_bound	backends/database.cc	/^Database::Internal::get_value_lower_bound(Xapian::valueno) const$/;"	f	class:Xapian::Database::Internal
get_value_lower_bound	backends/glass/glass_database.cc	/^GlassDatabase::get_value_lower_bound(Xapian::valueno slot) const$/;"	f	class:GlassDatabase
get_value_lower_bound	backends/glass/glass_database.cc	/^GlassWritableDatabase::get_value_lower_bound(Xapian::valueno slot) const$/;"	f	class:GlassWritableDatabase
get_value_lower_bound	backends/glass/glass_values.h	/^    std::string get_value_lower_bound(Xapian::valueno slot) const {$/;"	f	class:GlassValueManager
get_value_lower_bound	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::get_value_lower_bound(Xapian::valueno slot) const$/;"	f	class:InMemoryDatabase
get_value_lower_bound	backends/remote/remote-database.cc	/^RemoteDatabase::get_value_lower_bound(Xapian::valueno slot) const$/;"	f	class:RemoteDatabase
get_value_stats	backends/chert/chert_values.cc	/^ChertValueManager::get_value_stats(Xapian::valueno slot) const$/;"	f	class:ChertValueManager
get_value_stats	backends/chert/chert_values.cc	/^ChertValueManager::get_value_stats(Xapian::valueno slot, ValueStats & stats) const$/;"	f	class:ChertValueManager
get_value_stats	backends/glass/glass_values.cc	/^GlassValueManager::get_value_stats(Xapian::valueno slot) const$/;"	f	class:GlassValueManager
get_value_stats	backends/glass/glass_values.cc	/^GlassValueManager::get_value_stats(Xapian::valueno slot, ValueStats & stats) const$/;"	f	class:GlassValueManager
get_value_upper_bound	api/omdatabase.cc	/^Database::get_value_upper_bound(Xapian::valueno slot) const$/;"	f	class:Xapian::Database
get_value_upper_bound	backends/chert/chert_database.cc	/^ChertDatabase::get_value_upper_bound(Xapian::valueno slot) const$/;"	f	class:ChertDatabase
get_value_upper_bound	backends/chert/chert_database.cc	/^ChertWritableDatabase::get_value_upper_bound(Xapian::valueno slot) const$/;"	f	class:ChertWritableDatabase
get_value_upper_bound	backends/chert/chert_values.h	/^    std::string get_value_upper_bound(Xapian::valueno slot) const {$/;"	f	class:ChertValueManager
get_value_upper_bound	backends/database.cc	/^Database::Internal::get_value_upper_bound(Xapian::valueno) const$/;"	f	class:Xapian::Database::Internal
get_value_upper_bound	backends/glass/glass_database.cc	/^GlassDatabase::get_value_upper_bound(Xapian::valueno slot) const$/;"	f	class:GlassDatabase
get_value_upper_bound	backends/glass/glass_database.cc	/^GlassWritableDatabase::get_value_upper_bound(Xapian::valueno slot) const$/;"	f	class:GlassWritableDatabase
get_value_upper_bound	backends/glass/glass_values.h	/^    std::string get_value_upper_bound(Xapian::valueno slot) const {$/;"	f	class:GlassValueManager
get_value_upper_bound	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::get_value_upper_bound(Xapian::valueno slot) const$/;"	f	class:InMemoryDatabase
get_value_upper_bound	backends/remote/remote-database.cc	/^RemoteDatabase::get_value_upper_bound(Xapian::valueno slot) const$/;"	f	class:RemoteDatabase
get_valueno	api/documentvaluelist.cc	/^DocumentValueList::get_valueno() const$/;"	f	class:DocumentValueList
get_valueno	api/valueiterator.cc	/^ValueIterator::get_valueno() const$/;"	f	class:Xapian::ValueIterator
get_valueno	backends/chert/chert_valuelist.cc	/^ChertValueList::get_valueno() const$/;"	f	class:ChertValueList
get_valueno	backends/glass/glass_valuelist.cc	/^GlassValueList::get_valueno() const$/;"	f	class:GlassValueList
get_valueno	backends/multi/multi_valuelist.cc	/^MultiValueList::get_valueno() const$/;"	f	class:MultiValueList
get_valueno	backends/slowvaluelist.cc	/^SlowValueList::get_valueno() const$/;"	f	class:SlowValueList
get_vector_termpos	api/documentterm.h	/^    const term_positions* get_vector_termpos() const {$/;"	f	class:OmDocumentTerm
get_vector_termpos	api/maptermlist.h	/^	const std::vector<Xapian::termpos> * get_vector_termpos() const {$/;"	f	class:MapTermList
get_vector_termpos	api/termlist.cc	/^TermIterator::Internal::get_vector_termpos() const$/;"	f	class:Xapian::TermIterator::Internal
get_wdf	api/documentterm.h	/^    Xapian::termcount get_wdf() const { return wdf; }$/;"	f	class:OmDocumentTerm
get_wdf	api/maptermlist.h	/^	Xapian::termcount get_wdf() const {$/;"	f	class:MapTermList
get_wdf	api/matchspy.cc	/^    Xapian::termcount get_wdf() const { unsupported_method(); return 0; }$/;"	f	class:StringAndFreqTermList
get_wdf	api/matchspy.cc	/^    Xapian::termcount get_wdf() const { unsupported_method(); return 0; }$/;"	f	class:ValueCountTermList
get_wdf	api/postingiterator.cc	/^PostingIterator::get_wdf() const$/;"	f	class:Xapian::PostingIterator
get_wdf	api/postlist.cc	/^PostingIterator::Internal::get_wdf() const$/;"	f	class:Xapian::PostingIterator::Internal
get_wdf	api/termiterator.cc	/^TermIterator::get_wdf() const$/;"	f	class:Xapian::TermIterator
get_wdf	api/vectortermlist.cc	/^VectorTermList::get_wdf() const$/;"	f	class:VectorTermList
get_wdf	backends/alltermslist.cc	/^AllTermsList::get_wdf() const$/;"	f	class:AllTermsList
get_wdf	backends/chert/chert_alldocspostlist.cc	/^ChertAllDocsPostList::get_wdf() const$/;"	f	class:ChertAllDocsPostList
get_wdf	backends/chert/chert_modifiedpostlist.cc	/^ChertModifiedPostList::get_wdf() const$/;"	f	class:ChertModifiedPostList
get_wdf	backends/chert/chert_postlist.cc	/^    Xapian::termcount get_wdf() const {$/;"	f	class:Chert::PostlistChunkReader
get_wdf	backends/chert/chert_postlist.h	/^	Xapian::termcount get_wdf() const { Assert(have_started); return wdf; }$/;"	f	class:ChertPostList
get_wdf	backends/chert/chert_spelling.cc	/^ChertSpellingTermList::get_wdf() const$/;"	f	class:ChertSpellingTermList
get_wdf	backends/chert/chert_termlist.cc	/^ChertTermList::get_wdf() const$/;"	f	class:ChertTermList
get_wdf	backends/contiguousalldocspostlist.cc	/^ContiguousAllDocsPostList::get_wdf() const$/;"	f	class:ContiguousAllDocsPostList
get_wdf	backends/glass/glass_alldocspostlist.cc	/^GlassAllDocsPostList::get_wdf() const$/;"	f	class:GlassAllDocsPostList
get_wdf	backends/glass/glass_postlist.cc	/^    Xapian::termcount get_wdf() const {$/;"	f	class:Glass::PostlistChunkReader
get_wdf	backends/glass/glass_postlist.h	/^	Xapian::termcount get_wdf() const { Assert(have_started); return wdf; }$/;"	f	class:GlassPostList
get_wdf	backends/glass/glass_spelling.cc	/^GlassSpellingTermList::get_wdf() const$/;"	f	class:GlassSpellingTermList
get_wdf	backends/glass/glass_termlist.cc	/^GlassTermList::get_wdf() const$/;"	f	class:GlassTermList
get_wdf	backends/inmemory/inmemory_database.cc	/^InMemoryAllDocsPostList::get_wdf() const$/;"	f	class:InMemoryAllDocsPostList
get_wdf	backends/inmemory/inmemory_database.cc	/^InMemoryPostList::get_wdf() const$/;"	f	class:InMemoryPostList
get_wdf	backends/inmemory/inmemory_database.cc	/^InMemoryTermList::get_wdf() const$/;"	f	class:InMemoryTermList
get_wdf	backends/multi/multi_postlist.cc	/^MultiPostList::get_wdf() const$/;"	f	class:MultiPostList
get_wdf	backends/multi/multi_termlist.cc	/^Xapian::termcount MultiTermList::get_wdf() const$/;"	f	class:MultiTermList
get_wdf	backends/remote/net_postlist.cc	/^NetworkPostList::get_wdf() const$/;"	f	class:NetworkPostList
get_wdf	backends/remote/net_termlist.cc	/^NetworkTermList::get_wdf() const$/;"	f	class:NetworkTermList
get_wdf	expand/ortermlist.cc	/^OrTermList::get_wdf() const$/;"	f	class:OrTermList
get_wdf	matcher/andmaybepostlist.cc	/^AndMaybePostList::get_wdf() const$/;"	f	class:AndMaybePostList
get_wdf	matcher/andnotpostlist.cc	/^AndNotPostList::get_wdf() const$/;"	f	class:AndNotPostList
get_wdf	matcher/exactphrasepostlist.cc	/^ExactPhrasePostList::get_wdf() const$/;"	f	class:ExactPhrasePostList
get_wdf	matcher/maxpostlist.cc	/^MaxPostList::get_wdf() const$/;"	f	class:MaxPostList
get_wdf	matcher/mergepostlist.cc	/^MergePostList::get_wdf() const$/;"	f	class:MergePostList
get_wdf	matcher/multiandpostlist.cc	/^MultiAndPostList::get_wdf() const$/;"	f	class:MultiAndPostList
get_wdf	matcher/multixorpostlist.cc	/^MultiXorPostList::get_wdf() const$/;"	f	class:MultiXorPostList
get_wdf	matcher/nearpostlist.cc	/^NearPostList::get_wdf() const$/;"	f	class:NearPostList
get_wdf	matcher/orpospostlist.cc	/^OrPosPostList::get_wdf() const$/;"	f	class:OrPosPostList
get_wdf	matcher/orpostlist.cc	/^OrPostList::get_wdf() const$/;"	f	class:OrPostList
get_wdf	matcher/phrasepostlist.cc	/^PhrasePostList::get_wdf() const$/;"	f	class:PhrasePostList
get_wdf	matcher/synonympostlist.cc	/^SynonymPostList::get_wdf() const {$/;"	f	class:SynonymPostList
get_wdf_upper_bound	api/omdatabase.cc	/^Database::get_wdf_upper_bound(const string & term) const$/;"	f	class:Xapian::Database
get_wdf_upper_bound	backends/chert/chert_database.cc	/^ChertDatabase::get_wdf_upper_bound(const string & term) const$/;"	f	class:ChertDatabase
get_wdf_upper_bound	backends/chert/chert_dbstats.h	/^    Xapian::termcount get_wdf_upper_bound() const { return wdf_ubound; }$/;"	f	class:ChertDatabaseStats
get_wdf_upper_bound	backends/database.cc	/^Database::Internal::get_wdf_upper_bound(const string & term) const$/;"	f	class:Xapian::Database::Internal
get_wdf_upper_bound	backends/glass/glass_database.cc	/^GlassDatabase::get_wdf_upper_bound(const string & term) const$/;"	f	class:GlassDatabase
get_wdf_upper_bound	backends/glass/glass_version.h	/^    Xapian::termcount get_wdf_upper_bound() const { return wdf_ubound; }$/;"	f	class:GlassVersion
get_wdf_upper_bound	backends/remote/remote-database.cc	/^RemoteDatabase::get_wdf_upper_bound(const string &) const$/;"	f	class:RemoteDatabase
get_wdf_upper_bound	include/xapian/weight.h	/^    Xapian::termcount get_wdf_upper_bound() const {$/;"	f	class:Xapian::Weight
get_wdfn	weight/tfidfweight.cc	/^TfIdfWeight::get_wdfn(Xapian::termcount wdf, char c) const$/;"	f	class:Xapian::TfIdfWeight
get_wdfn_for_L	weight/tfidfweight.cc	/^get_wdfn_for_L(Xapian::termcount wdf, Xapian::termcount doclen,$/;"	f	namespace:Xapian
get_weight	api/decvalwtsource.cc	/^DecreasingValueWeightPostingSource::get_weight() const {$/;"	f	class:DecreasingValueWeightPostingSource
get_weight	api/emptypostlist.cc	/^EmptyPostList::get_weight() const$/;"	f	class:EmptyPostList
get_weight	api/leafpostlist.cc	/^LeafPostList::get_weight() const$/;"	f	class:LeafPostList
get_weight	api/omenquire.cc	/^MSetIterator::get_weight() const$/;"	f	class:Xapian::MSetIterator
get_weight	api/postingsource.cc	/^FixedWeightPostingSource::get_weight() const$/;"	f	class:Xapian::FixedWeightPostingSource
get_weight	api/postingsource.cc	/^PostingSource::get_weight() const$/;"	f	class:Xapian::PostingSource
get_weight	api/postingsource.cc	/^ValueMapPostingSource::get_weight() const$/;"	f	class:Xapian::ValueMapPostingSource
get_weight	api/postingsource.cc	/^ValueWeightPostingSource::get_weight() const$/;"	f	class:Xapian::ValueWeightPostingSource
get_weight	backends/multi/multi_postlist.cc	/^MultiPostList::get_weight() const$/;"	f	class:MultiPostList
get_weight	expand/bo1eweight.cc	/^Bo1EWeight::get_weight() const$/;"	f	class:Xapian::Internal::Bo1EWeight
get_weight	expand/esetinternal.cc	/^ESetIterator::get_weight() const$/;"	f	class:Xapian::ESetIterator
get_weight	expand/tradeweight.cc	/^TradEWeight::get_weight() const$/;"	f	class:Xapian::Internal::TradEWeight
get_weight	geospatial/latlong_posting_source.cc	/^LatLongDistancePostingSource::get_weight() const$/;"	f	class:LatLongDistancePostingSource
get_weight	matcher/andmaybepostlist.cc	/^AndMaybePostList::get_weight() const$/;"	f	class:AndMaybePostList
get_weight	matcher/andnotpostlist.cc	/^AndNotPostList::get_weight() const$/;"	f	class:AndNotPostList
get_weight	matcher/externalpostlist.cc	/^ExternalPostList::get_weight() const$/;"	f	class:ExternalPostList
get_weight	matcher/extraweightpostlist.h	/^	double get_weight() const {$/;"	f	class:ExtraWeightPostList
get_weight	matcher/maxpostlist.cc	/^MaxPostList::get_weight() const$/;"	f	class:MaxPostList
get_weight	matcher/mergepostlist.cc	/^MergePostList::get_weight() const$/;"	f	class:MergePostList
get_weight	matcher/msetpostlist.cc	/^MSetPostList::get_weight() const$/;"	f	class:MSetPostList
get_weight	matcher/multiandpostlist.cc	/^MultiAndPostList::get_weight() const$/;"	f	class:MultiAndPostList
get_weight	matcher/multixorpostlist.cc	/^MultiXorPostList::get_weight() const$/;"	f	class:MultiXorPostList
get_weight	matcher/orpospostlist.cc	/^OrPosPostList::get_weight() const$/;"	f	class:OrPosPostList
get_weight	matcher/orpostlist.cc	/^OrPostList::get_weight() const$/;"	f	class:OrPostList
get_weight	matcher/selectpostlist.h	/^	double get_weight() const {$/;"	f	class:SelectPostList
get_weight	matcher/synonympostlist.cc	/^SynonymPostList::get_weight() const$/;"	f	class:SynonymPostList
get_weight	matcher/valuerangepostlist.cc	/^ValueRangePostList::get_weight() const$/;"	f	class:ValueRangePostList
get_weight	tests/api_percentages.cc	/^    double get_weight() const { return i->second; }$/;"	f	class:MyPostingSource
get_weight	tests/api_postingsource.cc	/^    double get_weight() const {$/;"	f	class:ChangeMaxweightPostingSource
get_weight	tests/api_postingsource.cc	/^    double get_weight() const {$/;"	f	class:MyDontAskWeightPostingSource
get_weight	tests/api_postingsource.cc	/^    double get_weight() const {$/;"	f	class:MyOddWeightingPostingSource
get_weight	tests/api_serialise.cc	/^    double get_weight() const { return 1.0; }$/;"	f	class:MyPostingSource2
get_weighting_scheme	api/registry.cc	/^Registry::get_weighting_scheme(const string & name) const$/;"	f	class:Xapian::Registry
get_window	api/queryinternal.h	/^    size_t get_window() const { return window; }$/;"	f	class:Xapian::Internal::QueryWindowed
get_word_frequency	backends/chert/chert_spelling.cc	/^ChertSpellingTable::get_word_frequency(const string & word) const$/;"	f	class:ChertSpellingTable
get_word_frequency	backends/glass/glass_spelling.cc	/^GlassSpellingTable::get_word_frequency(const string & word) const$/;"	f	class:GlassSpellingTable
get_wqf	include/xapian/weight.h	/^    Xapian::termcount get_wqf() const { return wqf_; }$/;"	f	class:Xapian::Weight
get_writable_database	tests/apitest.cc	/^get_writable_database(const string &dbname)$/;"	f
get_writable_database	tests/harness/backendmanager.cc	/^BackendManager::get_writable_database(const string &, const string &)$/;"	f	class:BackendManager
get_writable_database	tests/harness/backendmanager_chert.cc	/^BackendManagerChert::get_writable_database(const string & name,$/;"	f	class:BackendManagerChert
get_writable_database	tests/harness/backendmanager_glass.cc	/^BackendManagerGlass::get_writable_database(const string & name,$/;"	f	class:BackendManagerGlass
get_writable_database	tests/harness/backendmanager_inmemory.cc	/^BackendManagerInMemory::get_writable_database(const string &,$/;"	f	class:BackendManagerInMemory
get_writable_database	tests/harness/backendmanager_multi.cc	/^BackendManagerMulti::get_writable_database(const string& name, const string& file)$/;"	f	class:BackendManagerMulti
get_writable_database	tests/harness/backendmanager_remoteprog.cc	/^BackendManagerRemoteProg::get_writable_database(const string & name,$/;"	f	class:BackendManagerRemoteProg
get_writable_database	tests/harness/backendmanager_remotetcp.cc	/^BackendManagerRemoteTcp::get_writable_database(const string & name,$/;"	f	class:BackendManagerRemoteTcp
get_writable_database	tests/harness/backendmanager_singlefile.cc	/^BackendManagerSingleFile::get_writable_database(const string &, const string &)$/;"	f	class:BackendManagerSingleFile
get_writable_database_again	tests/apitest.cc	/^get_writable_database_again()$/;"	f
get_writable_database_again	tests/harness/backendmanager.cc	/^BackendManager::get_writable_database_again()$/;"	f	class:BackendManager
get_writable_database_again	tests/harness/backendmanager_chert.cc	/^BackendManagerChert::get_writable_database_again()$/;"	f	class:BackendManagerChert
get_writable_database_again	tests/harness/backendmanager_glass.cc	/^BackendManagerGlass::get_writable_database_again()$/;"	f	class:BackendManagerGlass
get_writable_database_again	tests/harness/backendmanager_multi.cc	/^BackendManagerMulti::get_writable_database_again()$/;"	f	class:BackendManagerMulti
get_writable_database_again	tests/harness/backendmanager_remoteprog.cc	/^BackendManagerRemoteProg::get_writable_database_again()$/;"	f	class:BackendManagerRemoteProg
get_writable_database_again	tests/harness/backendmanager_remotetcp.cc	/^BackendManagerRemoteTcp::get_writable_database_again()$/;"	f	class:BackendManagerRemoteTcp
get_writable_database_again_args	tests/harness/backendmanager_remote.cc	/^BackendManagerRemote::get_writable_database_again_args()$/;"	f	class:BackendManagerRemote
get_writable_database_args	tests/harness/backendmanager_remote.cc	/^BackendManagerRemote::get_writable_database_args(const std::string & name,$/;"	f	class:BackendManagerRemote
get_writable_database_as_database	tests/apitest.cc	/^get_writable_database_as_database()$/;"	f
get_writable_database_as_database	tests/harness/backendmanager.cc	/^BackendManager::get_writable_database_as_database()$/;"	f	class:BackendManager
get_writable_database_as_database	tests/harness/backendmanager_chert.cc	/^BackendManagerChert::get_writable_database_as_database()$/;"	f	class:BackendManagerChert
get_writable_database_as_database	tests/harness/backendmanager_glass.cc	/^BackendManagerGlass::get_writable_database_as_database()$/;"	f	class:BackendManagerGlass
get_writable_database_as_database	tests/harness/backendmanager_multi.cc	/^BackendManagerMulti::get_writable_database_as_database()$/;"	f	class:BackendManagerMulti
get_writable_database_as_database	tests/harness/backendmanager_remoteprog.cc	/^BackendManagerRemoteProg::get_writable_database_as_database()$/;"	f	class:BackendManagerRemoteProg
get_writable_database_as_database	tests/harness/backendmanager_remotetcp.cc	/^BackendManagerRemoteTcp::get_writable_database_as_database()$/;"	f	class:BackendManagerRemoteTcp
get_writable_database_as_database_args	tests/harness/backendmanager_remote.cc	/^BackendManagerRemote::get_writable_database_as_database_args()$/;"	f	class:BackendManagerRemote
get_writable_database_path	tests/harness/backendmanager.cc	/^BackendManager::get_writable_database_path(const std::string &)$/;"	f	class:BackendManager
get_writable_database_path	tests/harness/backendmanager_chert.cc	/^BackendManagerChert::get_writable_database_path(const string & name)$/;"	f	class:BackendManagerChert
get_writable_database_path	tests/harness/backendmanager_glass.cc	/^BackendManagerGlass::get_writable_database_path(const string & name)$/;"	f	class:BackendManagerGlass
get_writable_database_path	tests/harness/backendmanager_inmemory.cc	/^BackendManagerInMemory::get_writable_database_path(const std::string&)$/;"	f	class:BackendManagerInMemory
get_writable_database_path	tests/harness/backendmanager_multi.cc	/^BackendManagerMulti::get_writable_database_path(const std::string& name)$/;"	f	class:BackendManagerMulti
get_wtn	weight/tfidfweight.cc	/^TfIdfWeight::get_wtn(double wt, char c) const$/;"	f	class:Xapian::TfIdfWeight
get_x	tests/unittest.cc	/^    int get_x() const {$/;"	f	class:A
get_x	tests/unittest.cc	/^    int get_x() const {$/;"	f	class:B
get_xapian_progsrv_command	tests/harness/backendmanager.cc	/^BackendManager::get_xapian_progsrv_command()$/;"	f	class:BackendManager
getint1	backends/chert/chert_table.h	/^getint1(const unsigned char *p, int c)$/;"	f
getint2	backends/chert/chert_table.h	/^getint2(const unsigned char *p, int c)$/;"	f
getint4	backends/chert/chert_table.h	/^getint4(const unsigned char *p, int c)$/;"	f
getopt_initialize	common/getopt.cc	/^getopt_initialize (int argc, char *const *argv, const char *optstring)$/;"	f	file:
getopt_initialized	common/getopt.cc	/^static int getopt_initialized;$/;"	v	file:
getorrecalc_maxweight	matcher/multimatch.cc	/^MultiMatch::getorrecalc_maxweight(PostList *pl)$/;"	f	class:MultiMatch
getstate	queryparser/lemon.c	/^PRIVATE struct state *getstate(struct lemon *lemp)$/;"	f
getwritedb_chert	tests/harness/backendmanager.cc	/^BackendManager::getwritedb_chert(const string & name,$/;"	f	class:BackendManager
getwritedb_chert_path	tests/harness/backendmanager.cc	/^BackendManager::getwritedb_chert_path(const string & name)$/;"	f	class:BackendManager
getwritedb_glass	tests/harness/backendmanager.cc	/^BackendManager::getwritedb_glass(const string & name,$/;"	f	class:BackendManager
getwritedb_glass_path	tests/harness/backendmanager.cc	/^BackendManager::getwritedb_glass_path(const string & name)$/;"	f	class:BackendManager
getwritedb_inmemory	tests/harness/backendmanager.cc	/^BackendManager::getwritedb_inmemory(const vector<string> &files)$/;"	f	class:BackendManager
give_advice	missing	/^give_advice ()$/;"	f
glass_block_t	backends/glass/glass_defs.h	/^typedef uint4 glass_block_t;$/;"	t
glass_revision_number_t	backends/glass/glass_defs.h	/^typedef uint4 glass_revision_number_t;$/;"	t
glass_tables	backends/dbcheck.cc	/^static const struct { char name[9]; } glass_tables[] = {$/;"	v	typeref:struct:__anon4	file:
glass_tablesize_t	backends/glass/glass_defs.h	/^typedef unsigned long long glass_tablesize_t;$/;"	t
gnu_getopt	common/gnu_getopt.h	/^gnu_getopt(int argc_, char *const *argv_, const char *shortopts_) {$/;"	f
gnu_getopt_internal_	common/getopt.cc	/^gnu_getopt_internal_(int argc, char *const *argv, const char *optstring, const struct option *longopts, int *longind, int long_only)$/;"	f
gnu_getopt_long	common/gnu_getopt.h	/^gnu_getopt_long(int argc_, char *const *argv_, const char *shortopts_,$/;"	f
gnu_getopt_long_only	common/gnu_getopt.h	/^gnu_getopt_long_only(int argc_, char *const *argv_, const char *shortopts_,$/;"	f
go_snowball_runtime	languages/compiler/header.h	/^    const char * go_snowball_runtime;$/;"	m	struct:options
gp	queryparser/lemon.c	/^  struct lemon *gp;     \/* Global state vector *\/$/;"	m	struct:pstate	typeref:struct:pstate::lemon	file:
groupMap	unicode/unicode-data.cc	/^static const unsigned char groupMap[] = {$/;"	v	file:
grouping	languages/compiler/header.h	/^    struct grouping * grouping; \/* for grouping names *\/$/;"	m	struct:name	typeref:struct:name::grouping
grouping	languages/compiler/header.h	/^struct grouping {$/;"	s
grouping	queryparser/queryparser_internal.h	/^    std::string grouping;$/;"	m	struct:Xapian::RangeProc
grouping	queryparser/queryparser_internal.h	/^    string grouping;$/;"	m	struct:FieldInfo
groupings	languages/compiler/header.h	/^    struct grouping * groupings;$/;"	m	struct:analyser	typeref:struct:analyser::grouping
groupings_end	languages/compiler/header.h	/^    struct grouping * groupings_end;$/;"	m	struct:analyser	typeref:struct:analyser::grouping
groups	unicode/unicode-data.cc	/^static const int groups[] = {$/;"	v	file:
hFile	backends/flint_lock.h	/^    HANDLE hFile = INVALID_HANDLE_VALUE;$/;"	m	class:FlintLock
handle	backends/chert/chert_table.h	/^	int handle;$/;"	m	class:ChertTable
handle	backends/glass/glass_table.h	/^	int handle;$/;"	m	class:GlassTable
handle	common/msvc_dirent.cc	/^    intptr_t            handle; \/* -1 for failed rewind *\/$/;"	m	struct:DIR	file:
handle_D_option	queryparser/lemon.c	/^static void handle_D_option(char *z){$/;"	f	file:
handle_T_option	queryparser/lemon.c	/^static void handle_T_option(char *z){$/;"	f	file:
handle_h_option	queryparser/lemon.c	/^static void handle_h_option(char *z){$/;"	f	file:
handle_o_option	queryparser/lemon.c	/^static void handle_o_option(char *z){$/;"	f	file:
handle_one_connection	net/remotetcpserver.cc	/^RemoteTcpServer::handle_one_connection(int socket)$/;"	f	class:RemoteTcpServer
handle_one_connection	net/replicatetcpserver.cc	/^ReplicateTcpServer::handle_one_connection(int socket)$/;"	f	class:ReplicateTcpServer
handle_prune	expand/ortermlist.cc	/^handle_prune(TermList *& old, TermList * result)$/;"	f	file:
handle_prune	matcher/branchpostlist.h	/^	void handle_prune(PostList *&kid, PostList *ret) {$/;"	f	class:BranchPostList
handle_sig	tests/harness/testsuite.cc	/^static void handle_sig(int signum_)$/;"	f	file:
handle_sig	tests/harness/testsuite.cc	/^static void handle_sig(int signum_, siginfo_t *si, void *)$/;"	f	file:
handleflags	queryparser/lemon.c	/^static int handleflags(int i, FILE *err)$/;"	f	file:
handleswitch	queryparser/lemon.c	/^static int handleswitch(int i, FILE *err)$/;"	f	file:
has_arg	common/gnu_getopt.h	/^    int has_arg;$/;"	m	struct:option
has_destructor	queryparser/lemon.c	/^int has_destructor(struct symbol *sp, struct lemon *lemp)$/;"	f
has_drive	common/fileutils.cc	/^has_drive(const string &path)$/;"	f	file:
has_fallback	queryparser/lemon.c	/^  int has_fallback;        \/* True if any %fallback is seen in the grammar *\/$/;"	m	struct:lemon	file:
has_positional_info	backends/remote/remote-database.h	/^    mutable bool has_positional_info;$/;"	m	class:RemoteDatabase
has_positions	api/omdatabase.cc	/^Database::has_positions() const$/;"	f	class:Xapian::Database
has_positions	backends/chert/chert_database.cc	/^ChertDatabase::has_positions() const$/;"	f	class:ChertDatabase
has_positions	backends/glass/glass_database.cc	/^GlassDatabase::has_positions() const$/;"	f	class:GlassDatabase
has_positions	backends/glass/glass_database.cc	/^GlassWritableDatabase::has_positions() const$/;"	f	class:GlassWritableDatabase
has_positions	backends/glass/glass_inverter.cc	/^Inverter::has_positions(const GlassPositionListTable & position_table) const$/;"	f	class:Inverter
has_positions	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::has_positions() const$/;"	f	class:InMemoryDatabase
has_positions	backends/remote/remote-database.cc	/^RemoteDatabase::has_positions() const$/;"	f	class:RemoteDatabase
has_uncommitted_changes	backends/chert/chert_database.cc	/^ChertDatabase::has_uncommitted_changes() const$/;"	f	class:ChertDatabase
has_uncommitted_changes	backends/chert/chert_database.cc	/^ChertWritableDatabase::has_uncommitted_changes() const$/;"	f	class:ChertWritableDatabase
has_uncommitted_changes	backends/glass/glass_database.cc	/^GlassDatabase::has_uncommitted_changes() const$/;"	f	class:GlassDatabase
has_uncommitted_changes	backends/glass/glass_database.cc	/^GlassWritableDatabase::has_uncommitted_changes() const$/;"	f	class:GlassWritableDatabase
hate	queryparser/queryparser_internal.cc	/^    Query* hate = NULL;$/;"	m	struct:ProbQuery	file:
have_fakeroot	backends/chert/chert_btreebase.h	/^	bool have_fakeroot;$/;"	m	class:ChertTable_base
have_max_part	weight/weightinternal.h	/^    bool have_max_part;$/;"	m	class:Xapian::Weight::Internal
have_offline_db	api/replication.cc	/^    bool have_offline_db;$/;"	m	class:DatabaseReplica::Internal	file:
have_started	backends/chert/chert_positionlist.h	/^    bool have_started;$/;"	m	class:ChertPositionList
have_started	backends/chert/chert_postlist.h	/^	bool have_started;$/;"	m	class:ChertPostList
have_started	backends/glass/glass_positionlist.h	/^    bool have_started;$/;"	m	class:GlassPositionList
have_started	backends/glass/glass_postlist.h	/^	bool have_started;$/;"	m	class:GlassPostList
hex_digit	common/stringutils.h	/^inline int hex_digit(char ch) {$/;"	f
hex_display_encode	backends/chert/chert_cursor.cc	/^hex_display_encode(const string & input)$/;"	f	file:
hex_display_encode	backends/glass/glass_cursor.cc	/^hex_display_encode(const string & input)$/;"	f	file:
hex_to_num	languages/compiler/tokeniser.c	/^static int hex_to_num(int ch) {$/;"	f	file:
highest_order_bit	common/bitstream.cc	/^highest_order_bit(T mask)$/;"	f	file:
highlight	queryparser/termgenerator_internal.cc	/^    size_t highlight;$/;"	m	struct:Xapian::Sniplet	file:
hint	matcher/queryoptimiser.h	/^    LeafPostList * hint;$/;"	m	class:QueryOptimiser
hint_owned	matcher/queryoptimiser.h	/^    bool hint_owned;$/;"	m	class:QueryOptimiser
host	Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host	docs/Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host	tests/Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host_alias	Makefile	/^host_alias = $/;"	m
host_alias	docs/Makefile	/^host_alias = $/;"	m
host_alias	tests/Makefile	/^host_alias = $/;"	m
host_cpu	Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	docs/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	tests/Makefile	/^host_cpu = x86_64$/;"	m
host_os	Makefile	/^host_os = linux-gnu$/;"	m
host_os	docs/Makefile	/^host_os = linux-gnu$/;"	m
host_os	tests/Makefile	/^host_os = linux-gnu$/;"	m
host_triplet	Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_triplet	docs/Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_triplet	tests/Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_vendor	Makefile	/^host_vendor = pc$/;"	m
host_vendor	docs/Makefile	/^host_vendor = pc$/;"	m
host_vendor	tests/Makefile	/^host_vendor = pc$/;"	m
ht	queryparser/lemon.c	/^  struct s_x1node **ht;  \/* Hash table for lookups *\/$/;"	m	struct:s_x1	typeref:struct:s_x1::s_x1node	file:
ht	queryparser/lemon.c	/^  struct s_x2node **ht;  \/* Hash table for lookups *\/$/;"	m	struct:s_x2	typeref:struct:s_x2::s_x2node	file:
ht	queryparser/lemon.c	/^  struct s_x3node **ht;  \/* Hash table for lookups *\/$/;"	m	struct:s_x3	typeref:struct:s_x3::s_x3node	file:
ht	queryparser/lemon.c	/^  struct s_x4node **ht;  \/* Hash table for lookups *\/$/;"	m	struct:s_x4	typeref:struct:s_x4::s_x4node	file:
htmldir	Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	docs/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	tests/Makefile	/^htmldir = ${docdir}$/;"	m
i	languages/compiler/header.h	/^    int i;           \/* the amongvec index of the longest substring of b *\/$/;"	m	struct:amongvec
i	queryparser/queryparser_internal.cc	/^    Xapian::TermIterator i;$/;"	m	class:SynonymIterator	file:
i	tests/api_percentages.cc	/^    vector<pair<Xapian::docid, double>>::const_iterator i;$/;"	m	class:MyPostingSource	file:
iDfltReduce	queryparser/lemon.c	/^  int iDfltReduce;         \/* Default action is to REDUCE by this rule *\/$/;"	m	struct:state	file:
iNtOfst	queryparser/lemon.c	/^  int iTknOfst, iNtOfst;   \/* yy_action[] offset for terminals and nonterms *\/$/;"	m	struct:state	file:
iOrder	queryparser/lemon.c	/^  int iOrder;          \/* Original order of action sets *\/$/;"	m	struct:axset	file:
iRule	queryparser/lemon.c	/^  int iRule;               \/* Rule number as used in the generated tables *\/$/;"	m	struct:rule	file:
iTknOfst	queryparser/lemon.c	/^  int iTknOfst, iNtOfst;   \/* yy_action[] offset for terminals and nonterms *\/$/;"	m	struct:state	file:
idle_timeout	net/remoteserver.h	/^    double idle_timeout;$/;"	m	class:RemoteServer
idle_timeout	net/remotetcpserver.h	/^    double idle_timeout;$/;"	m	class:RemoteTcpServer
idx	common/bitstream.h	/^    size_t idx;$/;"	m	class:Xapian::BitReader
in_grouping_U	languages/steminternal.cc	/^SnowballStemImplementation::in_grouping_U(const unsigned char * s, int min,$/;"	f	class:Xapian::SnowballStemImplementation
in_grouping_b_U	languages/steminternal.cc	/^SnowballStemImplementation::in_grouping_b_U(const unsigned char * s, int min,$/;"	f	class:Xapian::SnowballStemImplementation
in_synonym	matcher/queryoptimiser.h	/^    bool in_synonym;$/;"	m	class:QueryOptimiser
inc_HEADERS	Makefile	/^inc_HEADERS = \\$/;"	m
inc_HEADERS	include/Makefile.mk	/^inc_HEADERS =\\$/;"	m
inc_total_subqs	matcher/queryoptimiser.h	/^    void inc_total_subqs() { ++total_subqs; }$/;"	f	class:QueryOptimiser
incdir	Makefile	/^incdir = ${prefix}\/include$/;"	m
incdir	docs/Makefile	/^incdir = ${prefix}\/include$/;"	m
incdir	tests/Makefile	/^incdir = ${prefix}\/include$/;"	m
include	languages/compiler/header.h	/^struct include {$/;"	s
include	queryparser/lemon.c	/^  char *include;           \/* Code to put at the start of the C file *\/$/;"	m	struct:lemon	file:
include_poles	geospatial/geoencode.h	/^    bool include_poles;$/;"	m	class:GeoEncode::DecoderWithBoundingBox
includedir	Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	docs/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	tests/Makefile	/^includedir = ${prefix}\/include$/;"	m
includes	languages/compiler/header.h	/^    struct include * includes;$/;"	m	struct:options	typeref:struct:options::include
includes	languages/compiler/header.h	/^    struct include * includes;$/;"	m	struct:tokeniser	typeref:struct:tokeniser::include
includes_end	languages/compiler/header.h	/^    struct include * includes_end;$/;"	m	struct:options	typeref:struct:options::include
inclusive	include/xapian/valuesetmatchdecider.h	/^    bool inclusive;$/;"	m	class:Xapian::ValueSetMatchDecider
increase_capacity	languages/compiler/space.c	/^extern symbol * increase_capacity(symbol * p, int n) {$/;"	f
increase_size	languages/steminternal.cc	/^SnowballStemImplementation::increase_size(symbol * p, int n)$/;"	f	class:Xapian::SnowballStemImplementation
increase_termpos	queryparser/termgenerator.cc	/^TermGenerator::increase_termpos(Xapian::termpos delta)$/;"	f	class:TermGenerator
increase_wdf	api/documentterm.h	/^    bool increase_wdf(Xapian::termcount delta) {$/;"	f	class:OmDocumentTerm
indent	common/debuglog.h	/^    void indent() { ++indent_level; }$/;"	f	class:DebugLogger
indent_level	common/debuglog.h	/^    int indent_level;$/;"	m	class:DebugLogger
index	queryparser/lemon.c	/^  int index;               \/* An index number for this rule *\/$/;"	m	struct:rule	file:
index	queryparser/lemon.c	/^  int index;               \/* Index number for this symbol *\/$/;"	m	struct:symbol	file:
index_files_to_database	tests/harness/backendmanager.cc	/^BackendManager::index_files_to_database(Xapian::WritableDatabase & database,$/;"	f	class:BackendManager
index_text	include/xapian/termgenerator.h	/^    void index_text(const std::string & text,$/;"	f	class:Xapian::TermGenerator
index_text	queryparser/termgenerator.cc	/^TermGenerator::index_text(const Xapian::Utf8Iterator & itor,$/;"	f	class:TermGenerator
index_text	queryparser/termgenerator_internal.cc	/^TermGenerator::Internal::index_text(Utf8Iterator itor, termcount wdf_inc,$/;"	f	class:Xapian::TermGenerator::Internal
index_text_without_positions	include/xapian/termgenerator.h	/^    void index_text_without_positions(const std::string & text,$/;"	f	class:Xapian::TermGenerator
index_text_without_positions	queryparser/termgenerator.cc	/^TermGenerator::index_text_without_positions(const Xapian::Utf8Iterator & itor,$/;"	f	class:TermGenerator
index_to	tests/harness/index_utils.cc	/^FileIndexer::index_to(Xapian::WritableDatabase & db)$/;"	f	class:FileIndexer
indexeddocs	api/omenquireinternal.h	/^	mutable map<Xapian::doccount, Xapian::Document> indexeddocs;$/;"	m	class:Xapian::MSet::Internal
indexing_add	tests/perftest/perftest.cc	/^PerfTestLogger::indexing_add()$/;"	f	class:PerfTestLogger
indexing_addcount	tests/perftest/perftest.h	/^    Xapian::doccount indexing_addcount;$/;"	m	class:PerfTestLogger
indexing_begin	tests/perftest/perftest.cc	/^PerfTestLogger::indexing_begin(const string & dbname,$/;"	f	class:PerfTestLogger
indexing_end	tests/perftest/perftest.cc	/^PerfTestLogger::indexing_end()$/;"	f	class:PerfTestLogger
indexing_log	tests/perftest/perftest.cc	/^PerfTestLogger::indexing_log()$/;"	f	class:PerfTestLogger
indexing_started	tests/perftest/perftest.h	/^    bool indexing_started;$/;"	m	class:PerfTestLogger
indexing_timer	tests/perftest/perftest.h	/^    double indexing_timer;$/;"	m	class:PerfTestLogger
indexing_unlogged_changes	tests/perftest/perftest.h	/^    bool indexing_unlogged_changes;$/;"	m	class:PerfTestLogger
inflate_zstream	backends/chert/chert_table.h	/^	mutable z_stream *inflate_zstream;$/;"	m	class:ChertTable
inflate_zstream	common/compression_stream.h	/^    z_stream* inflate_zstream;$/;"	m	class:CompressionStream
info	common/msvc_dirent.cc	/^    struct _finddata_t  info;$/;"	m	struct:DIR	typeref:struct:DIR::_finddata_t	file:
infodir	Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	docs/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	tests/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
inherited	docs/apidoc/html/classXapian_1_1BB2Weight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1BM25PlusWeight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1BM25Weight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1BoolWeight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1CoordWeight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1DLHWeight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1DPHWeight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1DateRangeProcessor.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1DateValueRangeProcessor.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1IfB2Weight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1InL2Weight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1IneB2Weight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1LMWeight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1LatLongDistancePostingSource.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1LogicError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1NumberRangeProcessor.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1NumberValueRangeProcessor.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1PL2PlusWeight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1PL2Weight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1RuntimeError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1TfIdfWeight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1TradWeight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1ValueMapPostingSource.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1ValueWeightPostingSource.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1WritableDatabase.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
init	api/decvalwtsource.cc	/^DecreasingValueWeightPostingSource::init(const Xapian::Database & db_) {$/;"	f	class:DecreasingValueWeightPostingSource
init	api/matchspy.cc	/^    void init() {$/;"	f	class:StringAndFreqTermList
init	api/postingsource.cc	/^FixedWeightPostingSource::init(const Xapian::Database & db_)$/;"	f	class:Xapian::FixedWeightPostingSource
init	api/postingsource.cc	/^ValueMapPostingSource::init(const Database & db_)$/;"	f	class:Xapian::ValueMapPostingSource
init	api/postingsource.cc	/^ValuePostingSource::init(const Database & db_)$/;"	f	class:Xapian::ValuePostingSource
init	api/postingsource.cc	/^ValueWeightPostingSource::init(const Database & db_)$/;"	f	class:Xapian::ValueWeightPostingSource
init	api/query.cc	/^Query::init(op op_, size_t n_subqueries, Xapian::termcount parameter)$/;"	f	class:Xapian::Query
init	backends/glass/glass_cursor.h	/^	uint8_t * init(unsigned block_size) {$/;"	f	class:Glass::Cursor
init	backends/glass/glass_postlist.cc	/^GlassPostList::init()$/;"	f	class:GlassPostList
init	backends/glass/glass_version.cc	/^RootInfo::init(unsigned blocksize_, uint4 compress_min_)$/;"	f	class:Glass::RootInfo
init	common/bitstream.h	/^    void init(const std::string &buf_, size_t skip = 0) {$/;"	f	class:Xapian::BitReader
init	geospatial/latlong_posting_source.cc	/^LatLongDistancePostingSource::init(const Database & db_)$/;"	f	class:LatLongDistancePostingSource
init	include/xapian/query.h	/^    void init(Query::op op_, Xapian::termcount window,$/;"	f	class:Xapian::Query
init	matcher/localsubmatch.cc	/^LazyWeight::init(double factor_)$/;"	f	class:LazyWeight
init	tests/api_db.cc	/^    void init(double factor) {$/;"	f	class:MyWeight
init	tests/api_percentages.cc	/^    void init(const Xapian::Database &) { started = false; }$/;"	f	class:MyPostingSource
init	tests/api_percentages.cc	/^    void init(double) { }$/;"	f	class:ZWeight
init	tests/api_postingsource.cc	/^    void init(const Xapian::Database &) { did = 0; }$/;"	f	class:ChangeMaxweightPostingSource
init	tests/api_postingsource.cc	/^    void init(const Xapian::Database &) { did = 0; }$/;"	f	class:MyOddPostingSource
init	tests/api_postingsource.cc	/^    void init(const Xapian::Database &) { did = 0; }$/;"	f	class:MyOddWeightingPostingSource
init	tests/api_postingsource.cc	/^    void init(const Xapian::Database &db) {$/;"	f	class:MyDontAskWeightPostingSource
init	tests/api_postingsource.cc	/^    void init(const Xapian::Database& database) {$/;"	f	class:CheckBoundsPostingSource
init	tests/api_postingsource.cc	/^    void init(const Xapian::Database&) { }$/;"	f	class:CloneTestPostingSource
init	tests/api_serialise.cc	/^    void init(const Xapian::Database &) { }$/;"	f	class:ExceptionalPostingSource
init	tests/api_serialise.cc	/^    void init(double) { }$/;"	f	class:ExceptionalWeight
init	tests/api_weight.cc	/^    void init(double factor_) {$/;"	f	class:CheckInitWeight
init	tests/api_weight.cc	/^    void init(double factor_) {$/;"	f	class:CheckStatsWeight
init	tests/harness/fdtracker.cc	/^FDTracker::init()$/;"	f	class:FDTracker
init	weight/bb2weight.cc	/^BB2Weight::init(double factor)$/;"	f	class:Xapian::BB2Weight
init	weight/bm25plusweight.cc	/^BM25PlusWeight::init(double factor)$/;"	f	class:Xapian::BM25PlusWeight
init	weight/bm25weight.cc	/^BM25Weight::init(double factor)$/;"	f	class:Xapian::BM25Weight
init	weight/boolweight.cc	/^BoolWeight::init(double)$/;"	f	class:Xapian::BoolWeight
init	weight/coordweight.cc	/^CoordWeight::init(double factor_)$/;"	f	class:Xapian::CoordWeight
init	weight/dlhweight.cc	/^DLHWeight::init(double factor)$/;"	f	class:Xapian::DLHWeight
init	weight/dphweight.cc	/^DPHWeight::init(double factor)$/;"	f	class:Xapian::DPHWeight
init	weight/ifb2weight.cc	/^IfB2Weight::init(double factor)$/;"	f	class:Xapian::IfB2Weight
init	weight/ineb2weight.cc	/^IneB2Weight::init(double factor)$/;"	f	class:Xapian::IneB2Weight
init	weight/inl2weight.cc	/^InL2Weight::init(double factor)$/;"	f	class:Xapian::InL2Weight
init	weight/lmweight.cc	/^LMWeight::init(double factor_)$/;"	f	class:Xapian::LMWeight
init	weight/pl2plusweight.cc	/^PL2PlusWeight::init(double factor_)$/;"	f	class:Xapian::PL2PlusWeight
init	weight/pl2weight.cc	/^PL2Weight::init(double factor_)$/;"	f	class:Xapian::PL2Weight
init	weight/tfidfweight.cc	/^TfIdfWeight::init(double factor_)$/;"	f	class:Xapian::TfIdfWeight
init	weight/tradweight.cc	/^TradWeight::init(double factor)$/;"	f	class:Xapian::TradWeight
init_	weight/weight.cc	/^Weight::init_(const Internal & stats, Xapian::termcount query_length)$/;"	f	class:Xapian::Weight
init_	weight/weight.cc	/^Weight::init_(const Internal & stats, Xapian::termcount query_length,$/;"	f	class:Xapian::Weight
initialise_categories_mask	common/debuglog.cc	/^DebugLogger::initialise_categories_mask()$/;"	f	class:DebugLogger
initialised	languages/compiler/header.h	/^    byte initialised;           \/* (For variables) is it ever initialised? *\/$/;"	m	struct:name
initrand	tests/soaktest/soaktest.cc	/^extern unsigned int initrand()$/;"	f
input	languages/compiler/header.h	/^struct input {$/;"	s
input	tests/api_snippets.cc	/^    const char * input;$/;"	m	struct:snippet_testcase	file:
input	tests/harness/index_utils.h	/^    std::ifstream input;$/;"	m	class:FileIndexer
insertLineMacro	queryparser/lemon.c	/^  int insertLineMacro;       \/* Add #line before declaration insert *\/$/;"	m	struct:pstate	file:
insert_mod_plist	backends/chert/chert_database.cc	/^ChertWritableDatabase::insert_mod_plist(Xapian::docid did,$/;"	f	class:ChertWritableDatabase
insert_s	languages/steminternal.cc	/^SnowballStemImplementation::insert_s(int c_bra, int c_ket, int s_size,$/;"	f	class:Xapian::SnowballStemImplementation
insert_v	languages/steminternal.h	/^    void insert_v(int c_bra, int c_ket, const symbol * v) {$/;"	f	class:Xapian::SnowballStemImplementation
install_sh	Makefile	/^install_sh = ${SHELL} \/home\/sammar\/new-xapian-v2\/install-sh$/;"	m
install_sh	docs/Makefile	/^install_sh = ${SHELL} \/home\/sammar\/new-xapian-v2\/install-sh$/;"	m
install_sh	tests/Makefile	/^install_sh = ${SHELL} \/home\/sammar\/new-xapian-v2\/install-sh$/;"	m
install_sh_DATA	Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	docs/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	tests/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	docs/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	tests/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	docs/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	tests/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
int_limits_used	languages/compiler/header.h	/^    byte int_limits_used;     \/* are maxint or minint used? *\/$/;"	m	struct:analyser
internal	api/replication.h	/^    Internal * internal;$/;"	m	class:Xapian::DatabaseReplica
internal	include/xapian/compactor.h	/^    Xapian::Internal::intrusive_ptr<Internal> internal;$/;"	m	class:Xapian::Compactor
internal	include/xapian/database.h	/^	std::vector<Xapian::Internal::intrusive_ptr<Internal> > internal;$/;"	m	class:Xapian::Database
internal	include/xapian/document.h	/^	Xapian::Internal::intrusive_ptr<Internal> internal;$/;"	m	class:Xapian::Document
internal	include/xapian/enquire.h	/^	Xapian::Internal::intrusive_ptr<Internal> internal;$/;"	m	class:Xapian::Enquire
internal	include/xapian/enquire.h	/^	Xapian::Internal::intrusive_ptr<Internal> internal;$/;"	m	class:Xapian::RSet
internal	include/xapian/eset.h	/^    Xapian::Internal::intrusive_ptr<Internal> internal;$/;"	m	class:Xapian::ESet
internal	include/xapian/matchspy.h	/^    Xapian::Internal::intrusive_ptr<Internal> internal;$/;"	m	class:Xapian::ValueCountMatchSpy
internal	include/xapian/mset.h	/^    Xapian::Internal::intrusive_ptr<Internal> internal;$/;"	m	class:Xapian::MSet
internal	include/xapian/positioniterator.h	/^    Internal * internal;$/;"	m	class:Xapian::PositionIterator
internal	include/xapian/postingiterator.h	/^    Internal * internal;$/;"	m	class:Xapian::PostingIterator
internal	include/xapian/query.h	/^    Xapian::Internal::intrusive_ptr<Internal> internal;$/;"	m	class:Xapian::Query
internal	include/xapian/queryparser.h	/^    Xapian::Internal::intrusive_ptr<Internal> internal;$/;"	m	class:Xapian::QueryParser
internal	include/xapian/registry.h	/^    Xapian::Internal::intrusive_ptr<Internal> internal;$/;"	m	class:Xapian::Registry
internal	include/xapian/stem.h	/^    Xapian::Internal::intrusive_ptr<StemImplementation> internal;$/;"	m	class:Xapian::Stem
internal	include/xapian/termgenerator.h	/^    Xapian::Internal::intrusive_ptr<Internal> internal;$/;"	m	class:Xapian::TermGenerator
internal	include/xapian/termiterator.h	/^    Internal * internal;$/;"	m	class:Xapian::TermIterator
internal	include/xapian/valueiterator.h	/^    Internal * internal;$/;"	m	class:Xapian::ValueIterator
internaltest_DEPENDENCIES	tests/Makefile	/^internaltest_DEPENDENCIES = ..\/libgetopt.la ..\/$(libxapian_la)$/;"	m
internaltest_LDADD	tests/Makefile	/^internaltest_LDADD = ..\/libgetopt.la ..\/$(libxapian_la)$/;"	m
internaltest_LDFLAGS	tests/Makefile	/^internaltest_LDFLAGS = $(NO_INSTALL) $(ldflags)$/;"	m
internaltest_LINK	tests/Makefile	/^internaltest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
internaltest_OBJECTS	tests/Makefile	/^internaltest_OBJECTS = $(am_internaltest_OBJECTS)$/;"	m
internaltest_SOURCES	tests/Makefile	/^internaltest_SOURCES = internaltest.cc $(testharness_sources)$/;"	m
intrusive_base	include/xapian/intrusive_ptr.h	/^    intrusive_base() : _refs(0) { }$/;"	f	class:Xapian::Internal::intrusive_base
intrusive_base	include/xapian/intrusive_ptr.h	/^class intrusive_base {$/;"	c	namespace:Xapian::Internal
intrusive_ptr	include/xapian/intrusive_ptr.h	/^    intrusive_ptr( T * p): px( p )$/;"	f	class:Xapian::Internal::intrusive_ptr
intrusive_ptr	include/xapian/intrusive_ptr.h	/^    intrusive_ptr( intrusive_ptr<U> const & rhs )$/;"	f	class:Xapian::Internal::intrusive_ptr
intrusive_ptr	include/xapian/intrusive_ptr.h	/^    intrusive_ptr(): px( 0 )$/;"	f	class:Xapian::Internal::intrusive_ptr
intrusive_ptr	include/xapian/intrusive_ptr.h	/^    intrusive_ptr(intrusive_ptr && rhs) : px( rhs.px )$/;"	f	class:Xapian::Internal::intrusive_ptr
intrusive_ptr	include/xapian/intrusive_ptr.h	/^    intrusive_ptr(intrusive_ptr const & rhs): px( rhs.px )$/;"	f	class:Xapian::Internal::intrusive_ptr
intrusive_ptr	include/xapian/intrusive_ptr.h	/^    intrusive_ptr(intrusive_ptr<U> && rhs) : px( rhs.px )$/;"	f	class:Xapian::Internal::intrusive_ptr
intrusive_ptr	include/xapian/intrusive_ptr.h	/^template<class T> class intrusive_ptr$/;"	c	namespace:Xapian::Internal
invalidate_doc_object	backends/chert/chert_database.cc	/^ChertWritableDatabase::invalidate_doc_object(Xapian::Document::Internal * obj) const$/;"	f	class:ChertWritableDatabase
invalidate_doc_object	backends/database.cc	/^Database::Internal::invalidate_doc_object(Xapian::Document::Internal *) const$/;"	f	class:Xapian::Database::Internal
invalidate_doc_object	backends/glass/glass_database.cc	/^GlassWritableDatabase::invalidate_doc_object(Xapian::Document::Internal * obj) const$/;"	f	class:GlassWritableDatabase
inverter	backends/glass/glass_database.h	/^	mutable Inverter inverter;$/;"	m	class:GlassWritableDatabase
io_full_sync	common/io_utils.h	/^inline bool io_full_sync(int fd)$/;"	f
io_open_block_rd	common/io_utils.h	/^inline int io_open_block_rd(const char * fname) {$/;"	f
io_open_block_rd	common/io_utils.h	/^inline int io_open_block_rd(const std::string & fname)$/;"	f
io_open_block_wr	common/io_utils.cc	/^io_open_block_wr(const char * fname, bool anew)$/;"	f
io_open_block_wr	common/io_utils.h	/^inline int io_open_block_wr(const std::string & fname, bool anew)$/;"	f
io_read	common/io_utils.cc	/^io_read(int fd, char * p, size_t n, size_t min)$/;"	f
io_read_block	common/io_utils.cc	/^io_read_block(int fd, char * p, size_t n, off_t b, off_t o)$/;"	f
io_readahead_block	common/io_utils.cc	/^io_readahead_block(int fd, size_t n, off_t b, off_t o)$/;"	f
io_readahead_block	common/io_utils.h	/^inline bool io_readahead_block(int, size_t, off_t, off_t = 0) { return false; }$/;"	f
io_sync	common/io_utils.h	/^inline bool io_sync(int fd)$/;"	f
io_tmp_rename	common/io_utils.cc	/^io_tmp_rename(const std::string & tmp_file, const std::string & real_file)$/;"	f
io_unlink	common/io_utils.cc	/^io_unlink(const std::string & filename)$/;"	f
io_write	common/io_utils.cc	/^io_write(int fd, const char * p, size_t n)$/;"	f
io_write	common/io_utils.h	/^inline void io_write(int fd, const unsigned char * p, size_t n) {$/;"	f
io_write_block	common/io_utils.cc	/^io_write_block(int fd, const char * p, size_t n, off_t b, off_t o)$/;"	f
io_write_block	common/io_utils.h	/^inline void io_write_block(int fd, const unsigned char * p, size_t n, off_t b) {$/;"	f
isTkn	queryparser/lemon.c	/^  int isTkn;           \/* True to use tokens.  False for non-terminals *\/$/;"	m	struct:axset	file:
is_after_end	backends/chert/chert_cursor.h	/^	bool is_after_end;$/;"	m	class:ChertCursor
is_after_end	backends/glass/glass_cursor.h	/^	bool is_after_end;$/;"	m	class:GlassCursor
is_at_end	backends/chert/chert_postlist.cc	/^    bool is_at_end() const {$/;"	f	class:Chert::PostlistChunkReader
is_at_end	backends/chert/chert_postlist.h	/^	bool is_at_end;$/;"	m	class:ChertPostList
is_at_end	backends/glass/glass_postlist.cc	/^    bool is_at_end() const {$/;"	f	class:Glass::PostlistChunkReader
is_at_end	backends/glass/glass_postlist.h	/^	bool is_at_end;$/;"	m	class:GlassPostList
is_category_wanted	common/debuglog.h	/^    bool is_category_wanted() const {$/;"	f	class:DebugLogFunc
is_category_wanted	common/debuglog.h	/^    bool is_category_wanted() const {$/;"	f	class:DebugLogFuncVoid
is_category_wanted	common/debuglog.h	/^    bool is_category_wanted(debuglog_categories category) {$/;"	f	class:DebugLogger
is_cjk_enabled	queryparser/cjk-tokenizer.cc	/^CJK::is_cjk_enabled()$/;"	f	class:CJK
is_closed	backends/inmemory/inmemory_database.h	/^    bool is_closed() const { return closed; }$/;"	f	class:InMemoryDatabase
is_currency	include/xapian/unicode.h	/^inline bool is_currency(unsigned ch) {$/;"	f	namespace:Xapian::Unicode
is_deleted	api/documentterm.h	/^    bool is_deleted() const { return positions.empty() && split > 0; }$/;"	f	class:OmDocumentTerm
is_digit	queryparser/queryparser_internal.cc	/^is_digit(unsigned ch) {$/;"	f
is_digit	queryparser/termgenerator_internal.cc	/^is_digit(unsigned ch) {$/;"	f	namespace:Xapian
is_doclenchunk_key	backends/chert/chert_compact.cc	/^is_doclenchunk_key(const string & key)$/;"	f	namespace:ChertCompact
is_doclenchunk_key	backends/glass/glass_compact.cc	/^is_doclenchunk_key(const string & key)$/;"	f	namespace:GlassCompact
is_double_quote	queryparser/queryparser_internal.cc	/^is_double_quote(unsigned ch) {$/;"	f
is_first_chunk	backends/chert/chert_postlist.cc	/^	bool is_first_chunk;$/;"	m	class:Chert::PostlistChunkWriter	file:
is_first_chunk	backends/glass/glass_postlist.cc	/^	bool is_first_chunk;$/;"	m	class:Glass::PostlistChunkWriter	file:
is_initialized	common/bitstream.h	/^	bool is_initialized() const {$/;"	f	struct:Xapian::BitReader::DIState
is_last_chunk	backends/chert/chert_postlist.cc	/^	bool is_last_chunk;$/;"	m	class:Chert::PostlistChunkWriter	file:
is_last_chunk	backends/chert/chert_postlist.h	/^	bool is_last_chunk;$/;"	m	class:ChertPostList
is_last_chunk	backends/glass/glass_postlist.cc	/^	bool is_last_chunk;$/;"	m	class:Glass::PostlistChunkWriter	file:
is_last_chunk	backends/glass/glass_postlist.h	/^	bool is_last_chunk;$/;"	m	class:GlassPostList
is_matchnothing	api/queryinternal.cc	/^struct is_matchnothing {$/;"	s	namespace:Xapian::Internal	file:
is_metainfo_key	backends/chert/chert_compact.cc	/^is_metainfo_key(const string & key)$/;"	f	namespace:ChertCompact
is_modified	backends/chert/chert_spelling.h	/^    bool is_modified() const {$/;"	f	class:ChertSpellingTable
is_modified	backends/chert/chert_synonym.h	/^    bool is_modified() const {$/;"	f	class:ChertSynonymTable
is_modified	backends/chert/chert_table.h	/^	bool is_modified() const { return Btree_modified; }$/;"	f	class:ChertTable
is_modified	backends/chert/chert_values.h	/^    bool is_modified() const {$/;"	f	class:ChertValueManager
is_modified	backends/glass/glass_spelling.h	/^    bool is_modified() const {$/;"	f	class:GlassSpellingTable
is_modified	backends/glass/glass_synonym.h	/^    bool is_modified() const {$/;"	f	class:GlassSynonymTable
is_modified	backends/glass/glass_table.h	/^	bool is_modified() const { return Btree_modified; }$/;"	f	class:GlassTable
is_modified	backends/glass/glass_values.h	/^    bool is_modified() const {$/;"	f	class:GlassValueManager
is_next	common/bitstream.h	/^	bool is_next() const { return j + 1 < k; }$/;"	f	struct:Xapian::BitReader::DIState
is_not_whitespace	queryparser/queryparser_internal.cc	/^is_not_whitespace(unsigned ch) {$/;"	f
is_not_wordchar	queryparser/queryparser_internal.cc	/^is_not_wordchar(unsigned ch) {$/;"	f
is_null	backends/uuids.h	/^    bool is_null() const {$/;"	f	class:Uuid
is_open	backends/chert/chert_table.h	/^	bool is_open() const { return handle >= 0; }$/;"	f	class:ChertTable
is_open	backends/glass/glass_table.h	/^	bool is_open() const { return handle >= 0; }$/;"	f	class:GlassTable
is_phrase_generator	queryparser/queryparser_internal.cc	/^is_phrase_generator(unsigned ch)$/;"	f
is_positional	queryparser/queryparser_internal.cc	/^is_positional(Xapian::Query::op op)$/;"	f
is_positioned	backends/chert/chert_cursor.h	/^	bool is_positioned;$/;"	m	class:ChertCursor
is_positioned	backends/glass/glass_cursor.h	/^	bool is_positioned;$/;"	m	class:GlassCursor
is_remote	matcher/multimatch.h	/^	vector<bool> is_remote;$/;"	m	class:MultiMatch
is_stem_preventer	queryparser/queryparser_internal.cc	/^is_stem_preventer(unsigned ch)$/;"	f
is_stopword	queryparser/queryparser_internal.cc	/^    bool is_stopword(const Term *term) const {$/;"	f	class:State
is_suffix	queryparser/queryparser_internal.cc	/^is_suffix(unsigned ch) {$/;"	f
is_transposed	api/editdistance.cc	/^    bool is_transposed(int pos1, int pos2) const {$/;"	f	class:edist_state
is_uninstalled	xapian-config	/^is_uninstalled()$/;"	f
is_user_metadata_key	backends/chert/chert_compact.cc	/^is_user_metadata_key(const string & key)$/;"	f	namespace:ChertCompact
is_user_metadata_key	backends/chert/chert_dbcheck.cc	/^is_user_metadata_key(const string & key)$/;"	f	file:
is_user_metadata_key	backends/glass/glass_compact.cc	/^is_user_metadata_key(const string & key)$/;"	f	namespace:GlassCompact
is_user_metadata_key	backends/glass/glass_dbcheck.cc	/^is_user_metadata_key(const string & key)$/;"	f	file:
is_valid	backends/inmemory/inmemory_database.h	/^	bool is_valid;$/;"	m	class:InMemoryDoc
is_valuechunk_key	backends/chert/chert_compact.cc	/^is_valuechunk_key(const string & key)$/;"	f	namespace:ChertCompact
is_valuechunk_key	backends/glass/glass_compact.cc	/^is_valuechunk_key(const string & key)$/;"	f	namespace:GlassCompact
is_valuestats_key	backends/chert/chert_compact.cc	/^is_valuestats_key(const string & key)$/;"	f	namespace:ChertCompact
is_valuestats_key	backends/glass/glass_compact.cc	/^is_valuestats_key(const string & key)$/;"	f	namespace:GlassCompact
is_whitespace	include/xapian/unicode.h	/^inline bool is_whitespace(unsigned ch) {$/;"	f	namespace:Xapian::Unicode
is_wordchar	include/xapian/unicode.h	/^inline bool is_wordchar(unsigned ch) {$/;"	f	namespace:Xapian::Unicode
is_writable	backends/glass/glass_table.h	/^	bool is_writable() const { return writable; }$/;"	f	class:GlassTable
is_yyyy_mm_dd	api/valuerangeproc.cc	/^is_yyyy_mm_dd(const string &s)$/;"	f	namespace:Xapian
it	api/documentvaluelist.h	/^    Xapian::Document::Internal::document_values::const_iterator it;$/;"	m	class:DocumentValueList
it	api/maptermlist.h	/^	Xapian::Document::Internal::document_terms::const_iterator it;$/;"	m	class:MapTermList
it	api/matchspy.cc	/^    map<string, Xapian::doccount>::const_iterator it;$/;"	m	class:ValueCountTermList	file:
it	api/matchspy.cc	/^    vector<StringAndFrequency>::const_iterator it;$/;"	m	class:StringAndFreqTermList	file:
it	backends/chert/chert_modifiedpostlist.h	/^    map<Xapian::docid, pair<char, Xapian::termcount> >::const_iterator it;$/;"	m	class:ChertModifiedPostList
it	backends/inmemory/inmemory_alltermslist.h	/^	std::map<kdmtStr, InMemoryTerm>::const_iterator it;$/;"	m	class:InMemoryAllTermsList
it	include/xapian/postingsource.h	/^    Xapian::PostingIterator it;$/;"	m	class:Xapian::FixedWeightPostingSource
it	queryparser/cjk-tokenizer.h	/^    Xapian::Utf8Iterator it;$/;"	m	class:CJKTokenIterator
it_end	api/maptermlist.h	/^	Xapian::Document::Internal::document_terms::const_iterator it_end;$/;"	m	class:MapTermList
item_count	backends/chert/chert_btreebase.h	/^	chert_tablesize_t item_count;$/;"	m	class:ChertTable_base
item_count	backends/chert/chert_table.h	/^	chert_tablesize_t item_count;$/;"	m	class:ChertTable
item_count	backends/glass/glass_table.h	/^	glass_tablesize_t item_count;$/;"	m	class:GlassTable
items	api/omenquireinternal.h	/^	set<Xapian::docid> items;$/;"	m	class:Xapian::RSet::Internal
items	api/omenquireinternal.h	/^	vector<Xapian::Internal::MSetItem> items;$/;"	m	class:Xapian::MSet::Internal
items	backends/remote/net_termlist.h	/^	vector<NetworkTermListItem> items;$/;"	m	class:NetworkTermList
items	expand/esetinternal.h	/^    std::vector<Xapian::Internal::ExpandTerm> items;$/;"	m	class:Xapian::ESet::Internal
items	matcher/collapser.h	/^    std::vector<Xapian::Internal::MSetItem> items;$/;"	m	class:CollapseData
items_at_end	include/xapian/postingsource.h	/^    bool items_at_end;$/;"	m	class:Xapian::DecreasingValueWeightPostingSource
iter	include/xapian/geospatial.h	/^    std::vector<LatLongCoord>::const_iterator iter;$/;"	m	class:Xapian::LatLongCoordsIterator
iterating_in_progress	backends/inmemory/inmemory_positionlist.h	/^	bool iterating_in_progress;$/;"	m	class:InMemoryPositionList
iterator	include/xapian/eset.h	/^    typedef Xapian::ESetIterator iterator;$/;"	t	class:Xapian::ESet
iterator	include/xapian/mset.h	/^    typedef Xapian::MSetIterator iterator;$/;"	t	class:Xapian::MSet
iterator_category	include/xapian/eset.h	/^    typedef std::random_access_iterator_tag iterator_category;$/;"	t	class:Xapian::ESetIterator
iterator_category	include/xapian/geospatial.h	/^    typedef std::input_iterator_tag iterator_category;$/;"	t	class:Xapian::LatLongCoordsIterator
iterator_category	include/xapian/mset.h	/^    typedef std::random_access_iterator_tag iterator_category;$/;"	t	class:Xapian::MSetIterator
iterator_category	include/xapian/positioniterator.h	/^    typedef std::input_iterator_tag iterator_category;$/;"	t	class:Xapian::PositionIterator
iterator_category	include/xapian/postingiterator.h	/^    typedef std::input_iterator_tag iterator_category;$/;"	t	class:Xapian::PostingIterator
iterator_category	include/xapian/termiterator.h	/^    typedef std::input_iterator_tag iterator_category;$/;"	t	class:Xapian::TermIterator
iterator_category	include/xapian/unicode.h	/^    typedef std::input_iterator_tag iterator_category;$/;"	t	class:Xapian::Utf8Iterator
iterator_category	include/xapian/valueiterator.h	/^    typedef std::input_iterator_tag iterator_category;$/;"	t	class:Xapian::ValueIterator
iterator_category	queryparser/queryparser_internal.cc	/^    typedef std::input_iterator_tag iterator_category;$/;"	t	class:SynonymIterator	file:
iterator_rewind	include/xapian/iterator.h	/^inline void iterator_rewind(Xapian::ESetIterator & it) {$/;"	f	namespace:Xapian
iterator_rewind	include/xapian/iterator.h	/^inline void iterator_rewind(Xapian::MSetIterator & it) {$/;"	f	namespace:Xapian
iterator_rewound	include/xapian/iterator.h	/^inline bool iterator_rewound(Xapian::ESetIterator & it) {$/;"	f	namespace:Xapian
iterator_rewound	include/xapian/iterator.h	/^inline bool iterator_rewound(Xapian::MSetIterator & it) {$/;"	f	namespace:Xapian
iterator_valid	include/xapian/iterator.h	/^inline bool iterator_valid(const Xapian::ESetIterator & it) {$/;"	f	namespace:Xapian
iterator_valid	include/xapian/iterator.h	/^inline bool iterator_valid(const Xapian::MSetIterator & it) {$/;"	f	namespace:Xapian
iterator_valid	include/xapian/iterator.h	/^inline bool iterator_valid(const Xapian::PositionIterator & it) {$/;"	f	namespace:Xapian
iterator_valid	include/xapian/iterator.h	/^inline bool iterator_valid(const Xapian::PostingIterator & it) {$/;"	f	namespace:Xapian
iterator_valid	include/xapian/iterator.h	/^inline bool iterator_valid(const Xapian::TermIterator & it) {$/;"	f	namespace:Xapian
iterator_valid	include/xapian/iterator.h	/^inline bool iterator_valid(const Xapian::ValueIterator & it) {$/;"	f	namespace:Xapian
j	common/bitstream.h	/^	int j, k;$/;"	m	struct:Xapian::BitReader::DIStack
jb	tests/harness/testsuite.cc	/^static SIGJMP_BUF jb;$/;"	v	file:
jump_to	backends/chert/chert_postlist.cc	/^ChertPostList::jump_to(Xapian::docid desired_did)$/;"	f	class:ChertPostList
jump_to	backends/glass/glass_postlist.cc	/^GlassPostList::jump_to(Xapian::docid desired_did)$/;"	f	class:GlassPostList
k	common/bitstream.h	/^	int j, k;$/;"	m	struct:Xapian::BitReader::DIStack
k1	include/xapian/geospatial.h	/^    double k1;$/;"	m	class:Xapian::LatLongDistancePostingSource
k2	include/xapian/geospatial.h	/^    double k2;$/;"	m	class:Xapian::LatLongDistancePostingSource
kdmt	backends/inmemory/KeyDomet.h	/^namespace kdmt$/;"	n
kdmt128_t	backends/inmemory/KeyDomet.h	/^        constexpr explicit kdmt128_t(HalfType l) : msbs{0}, lsbs{l} {}$/;"	f	struct:kdmt::KeyDometSize::kdmt128_t
kdmt128_t	backends/inmemory/KeyDomet.h	/^        constexpr kdmt128_t(HalfType m, HalfType l) : msbs{m}, lsbs{l} {}$/;"	f	struct:kdmt::KeyDometSize::kdmt128_t
kdmt128_t	backends/inmemory/KeyDomet.h	/^    struct kdmt128_t$/;"	s	class:kdmt::KeyDometSize
kdmtStr	backends/inmemory/tmp.h	/^typedef KeyDometStr<string, kdmt::KeyDometSize::SIZE_32BIT> kdmtStr;$/;"	t
keep_alive	api/omdatabase.cc	/^Database::keep_alive()$/;"	f	class:Xapian::Database
keep_alive	backends/database.cc	/^Database::Internal::keep_alive()$/;"	f	class:Xapian::Database::Internal
keep_alive	backends/remote/remote-database.cc	/^RemoteDatabase::keep_alive()$/;"	f	class:RemoteDatabase
keep_count	languages/compiler/header.h	/^    int keep_count;      \/* used to number keep\/restore pairs to avoid compiler warnings$/;"	m	struct:generator
ket	languages/steminternal.h	/^    int c, l, lb, bra, ket;$/;"	m	class:Xapian::SnowballStemImplementation
key	backends/chert/chert_compact.cc	/^    string key, tag;$/;"	m	class:ChertCompact::PostlistCursor	file:
key	backends/chert/chert_table.h	/^    Key key() const { return Key(p + I2); }$/;"	f	class:Item_base
key	backends/glass/glass_compact.cc	/^    string key, tag;$/;"	m	class:GlassCompact::PostlistCursor	file:
key	backends/glass/glass_compact.cc	/^    string key;$/;"	m	class:GlassCompact::PositionCursor	file:
key	backends/glass/glass_table.h	/^    Key key() const { return Key(p + BYTES_PER_BLOCK_NUMBER); }$/;"	f	class:Glass::BItem_base
key	backends/glass/glass_table.h	/^    Key key() const { return Key(p + I2); }$/;"	f	class:Glass::LeafItem_base
key	queryparser/lemon.c	/^  const char *key;         \/* The key *\/$/;"	m	struct:s_x2node	file:
key	queryparser/lemon.c	/^  struct config *key;                   \/* The key *\/$/;"	m	struct:s_x3node	typeref:struct:s_x3node::config	file:
key_exists	backends/chert/chert_table.cc	/^ChertTable::key_exists(const string &key) const$/;"	f	class:ChertTable
key_exists	backends/glass/glass_table.cc	/^GlassTable::key_exists(const string &key) const$/;"	f	class:GlassTable
keys	bin/xapian-inspect.cc	/^static bool keys = true, tags = true;$/;"	v	file:
keyword	common/keyword.cc	/^keyword(const unsigned char * p, const char * s, size_t len)$/;"	f
keyword2	common/keyword.cc	/^keyword2(const unsigned char * p, const char * s, size_t len)$/;"	f
kt	backends/chert/chert_table.h	/^	mutable Item_wr kt;$/;"	m	class:ChertTable
kt	backends/glass/glass_table.h	/^	mutable Glass::LeafItem_wr kt;$/;"	m	class:GlassTable
l	languages/steminternal.h	/^    int c, l, lb, bra, ket;$/;"	m	class:Xapian::SnowballStemImplementation
l	matcher/branchpostlist.h	/^	PostList *l;$/;"	m	class:BranchPostList
label	queryparser/lemon.c	/^  const char *label;$/;"	m	struct:s_options	file:
label_used	languages/compiler/header.h	/^    int label_used;     \/* Keep track of whether the failure label is used. *\/$/;"	m	struct:generator
lambda	queryparser/lemon.c	/^  Boolean lambda;          \/* True if NT and can generate an empty string *\/$/;"	m	struct:symbol	file:
language	tests/stemtest.cc	/^static string language;$/;"	v	file:
largest_ch	languages/compiler/header.h	/^    int largest_ch;           \/* character with max code *\/$/;"	m	struct:grouping
last	backends/chert/chert_positionlist.h	/^    Xapian::termpos last;$/;"	m	class:ChertPositionList
last	backends/glass/glass_positionlist.h	/^    Xapian::termpos last;$/;"	m	class:GlassPositionList
last_allowed_did	backends/chert/chert_values.cc	/^    Xapian::docid last_allowed_did;$/;"	m	class:ValueUpdater	file:
last_allowed_did	backends/glass/glass_values.cc	/^    Xapian::docid last_allowed_did;$/;"	m	class:Glass::ValueUpdater	file:
last_block	backends/chert/chert_btreebase.h	/^	uint4 last_block;$/;"	m	class:ChertTable_base
last_component	backends/glass/glass_table.h	/^    bool last_component() const { return *p & I_LAST_BIT; }$/;"	f	class:Glass::LeafItem_base
last_did_in_chunk	backends/chert/chert_postlist.h	/^	Xapian::docid last_did_in_chunk;$/;"	m	class:ChertPostList
last_did_in_chunk	backends/glass/glass_postlist.h	/^	Xapian::docid last_did_in_chunk;$/;"	m	class:GlassPostList
last_docid	backends/chert/chert_dbstats.h	/^    Xapian::docid last_docid;$/;"	m	class:ChertDatabaseStats
last_docid	backends/glass/glass_version.h	/^    Xapian::docid last_docid;$/;"	m	class:GlassVersion
last_docid	backends/slowvaluelist.h	/^    Xapian::docid last_docid;$/;"	m	class:SlowValueList
last_docid	tests/api_postingsource.cc	/^    Xapian::doccount last_docid;$/;"	m	class:MyDontAskWeightPostingSource	file:
last_docid	tests/api_postingsource.cc	/^    Xapian::doccount last_docid;$/;"	m	class:MyOddPostingSource	file:
last_docid	tests/api_postingsource.cc	/^    Xapian::doccount last_docid;$/;"	m	class:MyOddWeightingPostingSource	file:
last_indexlog_timer	tests/perftest/perftest.h	/^    double last_indexlog_timer;$/;"	m	class:PerfTestLogger
last_live_changeset_time	api/replication.cc	/^    double last_live_changeset_time;$/;"	m	class:DatabaseReplica::Internal	file:
last_nonopt	common/getopt.cc	/^static int last_nonopt;$/;"	v	file:
last_readahead	backends/chert/chert_table.h	/^	mutable uint4 last_readahead;$/;"	m	class:ChertTable
last_readahead	backends/glass/glass_table.h	/^	mutable uint4 last_readahead;$/;"	m	class:GlassTable
last_sequential_block	backends/chert/chert_check.h	/^	uint4 last_sequential_block;$/;"	m	class:ChertTableCheck
last_synonyms	backends/chert/chert_synonym.h	/^    mutable std::set<std::string> last_synonyms;$/;"	m	class:ChertSynonymTable
last_synonyms	backends/glass/glass_synonym.h	/^    mutable std::set<std::string> last_synonyms;$/;"	m	class:GlassSynonymTable
last_term	backends/chert/chert_synonym.h	/^    mutable std::string last_term;$/;"	m	class:ChertSynonymTable
last_term	backends/glass/glass_synonym.h	/^    mutable std::string last_term;$/;"	m	class:GlassSynonymTable
last_wdb_name	tests/harness/backendmanager_chert.h	/^    std::string last_wdb_name;$/;"	m	class:BackendManagerChert
last_wdb_name	tests/harness/backendmanager_glass.h	/^    std::string last_wdb_name;$/;"	m	class:BackendManagerGlass
last_wdb_name	tests/harness/backendmanager_remote.h	/^    std::string last_wdb_name;$/;"	m	class:BackendManagerRemote
last_wdb_name	tests/harness/backendmanager_remoteprog.h	/^    std::string last_wdb_name;$/;"	m	class:BackendManagerRemoteProg
last_wdb_name	tests/harness/backendmanager_remotetcp.h	/^    std::string last_wdb_name;$/;"	m	class:BackendManagerRemoteTcp
last_wdb_path	tests/harness/backendmanager_multi.h	/^    std::string last_wdb_path;$/;"	m	class:BackendManagerMulti
lastdocid	backends/remote/net_postlist.h	/^    Xapian::docid lastdocid;$/;"	m	class:NetworkPostList
lastdocid	backends/remote/remote-database.h	/^    mutable Xapian::docid lastdocid;$/;"	m	class:RemoteDatabase
lastposlist	backends/remote/net_postlist.h	/^    Xapian::Internal::intrusive_ptr<PositionList> lastposlist;$/;"	m	class:NetworkPostList
lastrule	queryparser/lemon.c	/^  struct rule *lastrule;     \/* Pointer to the most recently parsed rule *\/$/;"	m	struct:pstate	typeref:struct:pstate::rule	file:
lastwdf	backends/remote/net_postlist.h	/^    Xapian::termcount lastwdf;$/;"	m	class:NetworkPostList
lat_long_metrics	api/registry.cc	/^    std::map<std::string, Xapian::LatLongMetric *> lat_long_metrics;$/;"	m	class:Xapian::Registry::Internal	file:
latest_revision_number	backends/chert/chert_table.h	/^	mutable chert_revision_number_t latest_revision_number;$/;"	m	class:ChertTable
latitude	include/xapian/geospatial.h	/^    double latitude;$/;"	m	struct:Xapian::LatLongCoord
launch_xapian_tcpsrv	tests/harness/backendmanager_remotetcp.cc	/^launch_xapian_tcpsrv(const string & args)$/;"	f	file:
lazy	backends/chert/chert_table.h	/^	bool lazy;$/;"	m	class:ChertTable
lazy	backends/glass/glass_table.h	/^	bool lazy;$/;"	m	class:GlassTable
lazy_alloc_deflate_zstream	backends/chert/chert_table.cc	/^ChertTable::lazy_alloc_deflate_zstream() const {$/;"	f	class:ChertTable
lazy_alloc_deflate_zstream	common/compression_stream.cc	/^CompressionStream::lazy_alloc_deflate_zstream() {$/;"	f	class:CompressionStream
lazy_alloc_inflate_zstream	backends/chert/chert_table.cc	/^ChertTable::lazy_alloc_inflate_zstream() const {$/;"	f	class:ChertTable
lazy_alloc_inflate_zstream	common/compression_stream.cc	/^CompressionStream::lazy_alloc_inflate_zstream() {$/;"	f	class:CompressionStream
lb	languages/steminternal.h	/^    int c, l, lb, bra, ket;$/;"	m	class:Xapian::SnowballStemImplementation
lcov_branch_coverage	Makefile	/^	lcov --capture -d . --quiet --rc 'lcov_branch_coverage=1' --no-external -o xapian-core.lcov$/;"	m
ldflags	Makefile	/^ldflags = $/;"	m
ldflags	docs/Makefile	/^ldflags = $/;"	m
ldflags	tests/Makefile	/^ldflags = $/;"	m
leaves	matcher/multimatch.h	/^	std::vector<Xapian::Internal::intrusive_ptr<SubMatch> > leaves;$/;"	m	class:MultiMatch
left	backends/byte_length_strings.h	/^    size_t left;$/;"	m	class:ByteLengthPrefixedStringItor
left	backends/prefix_compressed_strings.h	/^    size_t left;$/;"	m	class:PrefixCompressedStringItor
left	expand/ortermlist.h	/^    TermList *left, *right;$/;"	m	class:OrTermList
left	include/xapian/unicode.h	/^    size_t left() const { return p ? end - p : 0; }$/;"	f	class:Xapian::Utf8Iterator
left	languages/compiler/header.h	/^    struct node * left;$/;"	m	struct:node	typeref:struct:node::node
left_current	expand/ortermlist.h	/^    std::string left_current, right_current;$/;"	m	class:OrTermList
lemon	queryparser/lemon.c	/^struct lemon {$/;"	s	file:
lemonStrlen	queryparser/lemon.c	64;"	d	file:
lemon_addtext	queryparser/lemon.c	/^static void lemon_addtext($/;"	f	file:
lemon_built_sources	Makefile	/^lemon_built_sources = \\$/;"	m
lemon_built_sources	queryparser/Makefile.mk	/^lemon_built_sources =\\$/;"	m
lemon_sprintf	queryparser/lemon.c	/^static int lemon_sprintf(char *str, const char *format, ...){$/;"	f	file:
lemon_strcat	queryparser/lemon.c	/^static void lemon_strcat(char *dest, const char *src){$/;"	f	file:
lemon_strcpy	queryparser/lemon.c	/^static void lemon_strcpy(char *dest, const char *src){$/;"	f	file:
lemon_vsprintf	queryparser/lemon.c	/^static int lemon_vsprintf(char *str, const char *zFormat, va_list ap){$/;"	f	file:
len	api/editdistance.cc	/^    int len;$/;"	m	struct:edist_seq	file:
len	queryparser/cjk-tokenizer.h	/^    mutable unsigned len;$/;"	m	class:CJKTokenIterator
len	tests/api_snippets.cc	/^    size_t len;$/;"	m	struct:snippet_testcase	file:
len_factor	include/xapian/weight.h	/^    mutable Xapian::doclength len_factor;$/;"	m	class:Xapian::BM25PlusWeight
len_factor	include/xapian/weight.h	/^    mutable Xapian::doclength len_factor;$/;"	m	class:Xapian::BM25Weight
len_factor	include/xapian/weight.h	/^    mutable Xapian::doclength len_factor;$/;"	m	class:Xapian::TradWeight
len_lower	tests/api_weight.cc	/^    mutable Xapian::termcount len_lower;$/;"	m	class:CheckStatsWeight	file:
len_upper	tests/api_weight.cc	/^    mutable Xapian::termcount len_upper;$/;"	m	class:CheckStatsWeight	file:
len_utf8	languages/steminternal.cc	/^int SnowballStemImplementation::len_utf8(const symbol * v) {$/;"	f	class:Xapian::SnowballStemImplementation
length	backends/chert/chert_table.h	/^    int length() const {$/;"	f	class:Key
length	backends/glass/glass_table.h	/^    int length() const {$/;"	f	class:Glass::Key
length	queryparser/termgenerator_internal.cc	/^    size_t length;$/;"	m	class:Xapian::SnipPipe	file:
letter_a	docs/apidoc/html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_a"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;a&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_b	docs/apidoc/html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_b"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;b&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_c	docs/apidoc/html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_c"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;c&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_d	docs/apidoc/html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_d"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;d&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_e	docs/apidoc/html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_e"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;e&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_f	docs/apidoc/html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_f"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;f&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_g	docs/apidoc/html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_g"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;g&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_i	docs/apidoc/html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_i"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;i&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_k	docs/apidoc/html/classes.html	/^<tr><td valign="top"><a class="el" href="classXapian_1_1CoordWeight.html">CoordWeight<\/a> (<a class="el" href="namespaceXapian.html">Xapian<\/a>)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_k"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;k&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_l	docs/apidoc/html/classes.html	/^<tr><td valign="top"><a class="el" href="classXapian_1_1Database.html">Database<\/a> (<a class="el" href="namespaceXapian.html">Xapian<\/a>)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_l"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;l&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_m	docs/apidoc/html/classes.html	/^<tr><td valign="top"><a class="el" href="classXapian_1_1DecreasingValueWeightPostingSource.html">DecreasingValueWeightPostingSource<\/a> (<a class="el" href="namespaceXapian.html">Xapian<\/a>)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_m"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;m&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_n	docs/apidoc/html/classes.html	/^<tr><td valign="top"><a class="el" href="classXapian_1_1Enquire.html">Enquire<\/a> (<a class="el" href="namespaceXapian.html">Xapian<\/a>)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_n"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;n&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_p	docs/apidoc/html/classes.html	/^<tr><td valign="top"><a class="el" href="classXapian_1_1ExpandDeciderAnd.html">ExpandDeciderAnd<\/a> (<a class="el" href="namespaceXapian.html">Xapian<\/a>)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_p"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;p&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_q	docs/apidoc/html/classes.html	/^<\/td><td valign="top"><a class="el" href="classXapian_1_1FixedWeightPostingSource.html">FixedWeightPostingSource<\/a> (<a class="el" href="namespaceXapian.html">Xapian<\/a>)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_q"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;q&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_r	docs/apidoc/html/classes.html	/^<tr><td valign="top"><a class="el" href="classXapian_1_1BB2Weight.html">BB2Weight<\/a> (<a class="el" href="namespaceXapian.html">Xapian<\/a>)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_r"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;r&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_s	docs/apidoc/html/classes.html	/^<\/td><td rowspan="2" valign="bottom"><a name="letter_s"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;s&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_t	docs/apidoc/html/classes.html	/^<tr><td valign="top"><a class="el" href="classXapian_1_1DatabaseModifiedError.html">DatabaseModifiedError<\/a> (<a class="el" href="namespaceXapian.html">Xapian<\/a>)&#160;&#160;&#160;<\/td><td valign="top"><a class="el" href="classXapian_1_1LatLongDistanceKeyMaker.html">LatLongDistanceKeyMaker<\/a> (<a class="el" href="namespaceXapian.html">Xapian<\/a>)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_t"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;t&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_u	docs/apidoc/html/classes.html	/^<tr><td valign="top"><a class="el" href="classXapian_1_1DLHWeight.html">DLHWeight<\/a> (<a class="el" href="namespaceXapian.html">Xapian<\/a>)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_u"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;u&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_v	docs/apidoc/html/classes.html	/^<\/td><td valign="top"><a class="el" href="classXapian_1_1MSetIterator.html">MSetIterator<\/a> (<a class="el" href="namespaceXapian.html">Xapian<\/a>)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_v"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;v&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_w	docs/apidoc/html/classes.html	/^<tr><td valign="top"><a class="el" href="classXapian_1_1ExpandDeciderFilterPrefix.html">ExpandDeciderFilterPrefix<\/a> (<a class="el" href="namespaceXapian.html">Xapian<\/a>)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_w"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;w&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
level	backends/chert/chert_btreebase.h	/^	uint4 level;$/;"	m	class:ChertTable_base
level	backends/chert/chert_cursor.h	/^	int level;$/;"	m	class:ChertCursor
level	backends/chert/chert_table.h	/^	int level;$/;"	m	class:ChertTable
level	backends/glass/glass_cursor.h	/^	int level;$/;"	m	class:GlassCursor
level	backends/glass/glass_table.h	/^	int level;$/;"	m	class:GlassTable
level	backends/glass/glass_version.h	/^    unsigned level;$/;"	m	class:Glass::RootInfo
lhead	matcher/andmaybepostlist.h	/^	Xapian::docid lhead, rhead;$/;"	m	class:AndMaybePostList
lhead	matcher/andnotpostlist.h	/^	Xapian::docid lhead, rhead;$/;"	m	class:AndNotPostList
lhead	matcher/orpostlist.h	/^	Xapian::docid lhead, rhead;$/;"	m	class:OrPostList
lhs	queryparser/lemon.c	/^  struct symbol *lhs;        \/* Left-hand side of current rule *\/$/;"	m	struct:pstate	typeref:struct:pstate::symbol	file:
lhs	queryparser/lemon.c	/^  struct symbol *lhs;      \/* Left-hand side of the rule *\/$/;"	m	struct:rule	typeref:struct:rule::symbol	file:
lhs	queryparser/queryparser_internal.cc	/^  YYCODETYPE lhs;       \/* Symbol on the left-hand side of the rule *\/$/;"	m	struct:__anon34	file:
lhsStart	queryparser/lemon.c	/^  int lhsStart;            \/* True if left-hand side is the start symbol *\/$/;"	m	struct:rule	file:
lhsalias	queryparser/lemon.c	/^  const char *lhsalias;      \/* Alias for the LHS *\/$/;"	m	struct:pstate	file:
lhsalias	queryparser/lemon.c	/^  const char *lhsalias;    \/* Alias for the LHS (NULL if none) *\/$/;"	m	struct:rule	file:
lib_LTLIBRARIES	Makefile	/^lib_LTLIBRARIES = libxapian.la$/;"	m
lib_src	Makefile	/^lib_src = api\/compactor.cc api\/constinfo.cc api\/decvalwtsource.cc \\$/;"	m
libdir	Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	docs/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	tests/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libexecdir	Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	docs/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	tests/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libgetopt_la_LIBADD	Makefile	/^libgetopt_la_LIBADD =$/;"	m
libgetopt_la_OBJECTS	Makefile	/^libgetopt_la_OBJECTS = $(am_libgetopt_la_OBJECTS)$/;"	m
libgetopt_la_SOURCES	Makefile	/^libgetopt_la_SOURCES = \\$/;"	m
libgetopt_la_SOURCES	common/Makefile.mk	/^libgetopt_la_SOURCES =\\$/;"	m
libtool_options_prep	libtool	/^libtool_options_prep ()$/;"	f
libtool_options_prep	ltmain.sh	/^libtool_options_prep ()$/;"	f
libtool_parse_options	libtool	/^libtool_parse_options ()$/;"	f
libtool_parse_options	ltmain.sh	/^libtool_parse_options ()$/;"	f
libtool_validate_options	libtool	/^libtool_validate_options ()$/;"	f
libtool_validate_options	ltmain.sh	/^libtool_validate_options ()$/;"	f
libxapian_la	Makefile	/^libxapian_la = libxapian.la$/;"	m
libxapian_la	tests/Makefile	/^libxapian_la = libxapian.la$/;"	m
libxapian_la_DEPENDENCIES	Makefile	/^libxapian_la_DEPENDENCIES = $(am__DEPENDENCIES_1)$/;"	m
libxapian_la_LDFLAGS	Makefile	/^libxapian_la_LDFLAGS = \\$/;"	m
libxapian_la_LIBADD	Makefile	/^libxapian_la_LIBADD = $(XAPIAN_LIBS)$/;"	m
libxapian_la_LINK	Makefile	/^libxapian_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
libxapian_la_OBJECTS	Makefile	/^libxapian_la_OBJECTS = $(am_libxapian_la_OBJECTS)$/;"	m
libxapian_la_SOURCES	Makefile	/^libxapian_la_SOURCES = $(lib_src)$/;"	m
limit	api/queryinternal.h	/^    std::string limit;$/;"	m	class:Xapian::Internal::QueryValueGE
limit	api/queryinternal.h	/^    std::string limit;$/;"	m	class:Xapian::Internal::QueryValueLE
line	queryparser/lemon.c	/^  int line;                \/* Line number at which code begins *\/$/;"	m	struct:rule	file:
line_count	languages/compiler/header.h	/^    int line_count;      \/* counts number of lines output *\/$/;"	m	struct:generator
line_labelled	languages/compiler/header.h	/^    int line_labelled;   \/* in ISO C, will need extra ';' if it is a block end *\/$/;"	m	struct:generator
line_number	languages/compiler/header.h	/^    int line_number; \/* for diagnostics and stable sorting *\/$/;"	m	struct:amongvec
line_number	languages/compiler/header.h	/^    int line_number;$/;"	m	struct:grouping
line_number	languages/compiler/header.h	/^    int line_number;$/;"	m	struct:input
line_number	languages/compiler/header.h	/^    int line_number;$/;"	m	struct:node
line_number	languages/compiler/header.h	/^    int line_number;$/;"	m	struct:tokeniser
link	backends/remote/remote-database.h	/^    mutable RemoteConnection link;$/;"	m	class:RemoteDatabase
link_all_deplibs_CXX	Makefile	/^link_all_deplibs_CXX = no$/;"	m
link_all_deplibs_CXX	docs/Makefile	/^link_all_deplibs_CXX = no$/;"	m
link_all_deplibs_CXX	tests/Makefile	/^link_all_deplibs_CXX = no$/;"	m
listen_socket	net/tcpserver.h	/^    int listen_socket;$/;"	m	class:SOCKET_INITIALIZER_MIXIN
literalstring	languages/compiler/header.h	/^    symbol * literalstring;$/;"	m	struct:node
literalstring	languages/compiler/header.h	/^struct literalstring {$/;"	s
literalstring_count	languages/compiler/header.h	/^    int literalstring_count;  \/* in this among *\/$/;"	m	struct:among
literalstring_count	languages/compiler/header.h	/^    int literalstring_count;$/;"	m	struct:generator
literalstrings	languages/compiler/header.h	/^    struct literalstring * literalstrings;$/;"	m	struct:analyser	typeref:struct:analyser::literalstring
live_db	api/replication.cc	/^    mutable WritableDatabase live_db;$/;"	m	class:DatabaseReplica::Internal	file:
live_id	api/replication.cc	/^    int live_id;$/;"	m	class:DatabaseReplica::Internal	file:
lmax	matcher/andmaybepostlist.h	/^	double lmax, rmax;$/;"	m	class:AndMaybePostList
lmax	matcher/orpostlist.h	/^	double lmax, rmax, minmax;$/;"	m	class:OrPostList
local_to	languages/compiler/header.h	/^    struct name * local_to;     \/* Local to one routine\/external *\/$/;"	m	struct:name	typeref:struct:name::name
localedir	Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	docs/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	tests/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localstatedir	Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	docs/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	tests/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localsubmatch	matcher/queryoptimiser.h	/^    LocalSubMatch & localsubmatch;$/;"	m	class:QueryOptimiser
lock	backends/chert/chert_database.h	/^	FlintLock lock;$/;"	m	class:ChertDatabase
lock	backends/flint_lock.cc	/^FlintLock::lock(bool exclusive, bool wait, string & explanation) {$/;"	f	class:FlintLock
lock	backends/glass/glass_database.h	/^	FlintLock lock;$/;"	m	class:GlassDatabase
locked	api/omdatabase.cc	/^Database::locked() const$/;"	f	class:Xapian::Database
locked	backends/chert/chert_database.cc	/^ChertDatabase::locked() const$/;"	f	class:ChertDatabase
locked	backends/database.cc	/^Database::Internal::locked() const$/;"	f	class:Xapian::Database::Internal
locked	backends/glass/glass_database.cc	/^GlassDatabase::locked() const$/;"	f	class:GlassDatabase
locked	backends/remote/remote-database.cc	/^RemoteDatabase::locked() const$/;"	f	class:RemoteDatabase
log2	common/log2.h	/^inline double log2(double x) { return std::log(x) \/ std::log(2.0); }$/;"	f
log_constant	include/xapian/weight.h	/^    double log_constant;$/;"	m	class:Xapian::DLHWeight
log_constant	include/xapian/weight.h	/^    double log_constant;$/;"	m	class:Xapian::DPHWeight
log_line	common/debuglog.cc	/^DebugLogger::log_line(debuglog_categories category, const string & msg)$/;"	f	class:DebugLogger
log_return_value	common/debuglog.h	/^    void log_return_value(const std::string & return_value) {$/;"	f	class:DebugLogFunc
lon1	geospatial/geoencode.h	/^    double lon1;$/;"	m	class:GeoEncode::DecoderWithBoundingBox
lon2	geospatial/geoencode.h	/^    double lon2;$/;"	m	class:GeoEncode::DecoderWithBoundingBox
long_opts	bin/xapian-progsrv.cc	/^static const struct option long_opts[] = {$/;"	v	typeref:struct:option	file:
long_opts	bin/xapian-tcpsrv.cc	/^static const struct option long_opts[] = {$/;"	v	typeref:struct:option	file:
longitude	include/xapian/geospatial.h	/^    double longitude;$/;"	m	struct:Xapian::LatLongCoord
look_for_name	languages/compiler/analyser.c	/^static struct name * look_for_name(struct analyser * a) {$/;"	f	file:
lookahead	queryparser/lemon.c	/^  int lookahead;             \/* Value of the lookahead token *\/$/;"	m	struct:lookahead_action	file:
lookahead_action	queryparser/lemon.c	/^struct lookahead_action {$/;"	s	file:
lookup_object	api/registry.cc	/^lookup_object(map<string, T*> registry, const string & name)$/;"	f	file:
loosenear1_testcases	tests/api_query.cc	/^positional_testcase loosenear1_testcases[] = {$/;"	v	file:
loosephrase1_testcases	tests/api_query.cc	/^positional_testcase loosephrase1_testcases[] = {$/;"	v	file:
lose_b	languages/compiler/space.c	/^extern void lose_b(symbol * p) {$/;"	f
lose_s	languages/steminternal.h	/^inline void lose_s(symbol * p) {$/;"	f
love	queryparser/queryparser_internal.cc	/^    Query* love = NULL;$/;"	m	struct:ProbQuery	file:
lower_bound	backends/valuestats.h	/^    std::string lower_bound;$/;"	m	struct:ValueStats
lower_bound	include/xapian/weight.h	/^    double lower_bound;$/;"	m	class:Xapian::DLHWeight
lower_bound	include/xapian/weight.h	/^    double lower_bound;$/;"	m	class:Xapian::DPHWeight
lower_bound	include/xapian/weight.h	/^    double lower_bound;$/;"	m	class:Xapian::PL2Weight
lsbs	backends/inmemory/KeyDomet.h	/^        HalfType lsbs;$/;"	m	struct:kdmt::KeyDometSize::kdmt128_t
lseek	config.h	467;"	d
lvalid	matcher/orpostlist.h	/^	bool lvalid, rvalid;$/;"	m	class:OrPostList
m4datadir	Makefile	/^m4datadir = $(datadir)\/aclocal$/;"	m
m_backward	languages/compiler/header.h	/^    m_forward = 0, m_backward \/*, m_integer *\/$/;"	e	enum:analyser_modes
m_end	languages/compiler/header.h	/^    int m_end;$/;"	m	struct:tokeniser
m_forward	languages/compiler/header.h	/^    m_forward = 0, m_backward \/*, m_integer *\/$/;"	e	enum:analyser_modes
m_pair	languages/compiler/header.h	/^struct m_pair {$/;"	s
m_pairs	languages/compiler/header.h	/^    struct m_pair * m_pairs;$/;"	m	struct:tokeniser	typeref:struct:tokeniser::m_pair
m_start	languages/compiler/header.h	/^    int m_start;$/;"	m	struct:tokeniser
main	bin/xapian-check.cc	/^main(int argc, char **argv)$/;"	f
main	bin/xapian-compact.cc	/^main(int argc, char **argv)$/;"	f
main	bin/xapian-delve.cc	/^main(int argc, char **argv) try {$/;"	f
main	bin/xapian-inspect.cc	/^main(int argc, char **argv)$/;"	f
main	bin/xapian-progsrv.cc	/^int main(int argc, char **argv)$/;"	f
main	bin/xapian-replicate-server.cc	/^main(int argc, char **argv)$/;"	f
main	bin/xapian-replicate.cc	/^main(int argc, char **argv)$/;"	f
main	bin/xapian-tcpsrv.cc	/^int main(int argc, char **argv) {$/;"	f
main	examples/copydatabase.cc	/^main(int argc, char **argv)$/;"	f
main	examples/quest.cc	/^main(int argc, char **argv)$/;"	f
main	examples/simpleexpand.cc	/^main(int argc, char **argv)$/;"	f
main	examples/simpleindex.cc	/^main(int argc, char **argv)$/;"	f
main	examples/simplesearch.cc	/^main(int argc, char **argv)$/;"	f
main	examples/xapian-metadata.cc	/^main(int argc, char **argv)$/;"	f
main	examples/xapian-pos.cc	/^main(int argc, char **argv)$/;"	f
main	languages/compiler/driver.c	/^extern int main(int argc, char * argv[]) {$/;"	f
main	queryparser/lemon.c	/^int main(int argc, char **argv)$/;"	f
main	testing-xapian/main.cpp	/^int main(int argc, char **argv) {$/;"	f
main	tests/apitest.cc	/^int main(int argc, char **argv)$/;"	f
main	tests/internaltest.cc	/^int main(int argc, char **argv)$/;"	f
main	tests/perftest/perftest.cc	/^int main(int argc, char **argv)$/;"	f
main	tests/soaktest/soaktest.cc	/^int main(int argc, char **argv)$/;"	f
main	tests/stemtest.cc	/^int main(int argc, char **argv)$/;"	f
main	tests/submitperftest	/^def main():$/;"	f
main	tests/submitperftest.in	/^def main():$/;"	f
main	tests/unittest.cc	/^int main(int argc, char **argv)$/;"	f
major	include/xapian/constinfo.h	/^    int major, minor, revision;$/;"	m	struct:Xapian::Internal::constinfo
major	queryparser/queryparser_internal.cc	/^  YYCODETYPE major;      \/* The major token value.  This is the code$/;"	m	struct:yyStackEntry	file:
major_version	include/xapian.h	/^inline int major_version() {$/;"	f	namespace:Xapian
make_all_tables	tests/api_compact.cc	/^make_all_tables(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
make_all_tables	tests/api_compactold.cc	/^make_all_tables(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
make_all_tables2	tests/api_compact.cc	/^make_all_tables2(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
make_all_tables2	tests/api_compactold.cc	/^make_all_tables2(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
make_among	languages/compiler/analyser.c	/^static void make_among(struct analyser * a, struct node * p, struct node * substring) {$/;"	f	file:
make_doc	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::make_doc(const string & docdata)$/;"	f	class:InMemoryDatabase
make_dummy_depfile	depcomp	/^make_dummy_depfile ()$/;"	f
make_key	backends/chert/chert_positionlist.h	/^    static string make_key(Xapian::docid did, const string & term) {$/;"	f	class:ChertPositionListTable
make_key	backends/chert/chert_postlist.h	/^	static string make_key(const string & term) {$/;"	f	class:ChertPostListTable
make_key	backends/chert/chert_postlist.h	/^	static string make_key(const string & term, Xapian::docid did) {$/;"	f	class:ChertPostListTable
make_key	backends/chert/chert_record.cc	/^make_key(Xapian::docid did)$/;"	f
make_key	backends/chert/chert_termlisttable.h	/^    static std::string make_key(Xapian::docid did) {$/;"	f	class:ChertTermListTable
make_key	backends/glass/glass_docdata.h	/^    static std::string make_key(Xapian::docid did) {$/;"	f	class:GlassDocDataTable
make_key	backends/glass/glass_positionlist.h	/^    static string make_key(Xapian::docid did, const string & term) {$/;"	f	class:GlassPositionListTable
make_key	backends/glass/glass_postlist.h	/^	static string make_key(const string & term) {$/;"	f	class:GlassPostListTable
make_key	backends/glass/glass_postlist.h	/^	static string make_key(const string & term, Xapian::docid did) {$/;"	f	class:GlassPostListTable
make_key	backends/glass/glass_termlisttable.h	/^    static std::string make_key(Xapian::docid did) {$/;"	f	class:GlassTermListTable
make_lang	languages/compiler/header.h	/^    enum { LANG_JAVA, LANG_C, LANG_CPLUSPLUS, LANG_CSHARP, LANG_PASCAL, LANG_PYTHON, LANG_JAVASCRIPT, LANG_RUST, LANG_GO } make_lang;$/;"	m	struct:options	typeref:enum:options::__anon27
make_matchspy2_db	tests/api_matchspy.cc	/^make_matchspy2_db(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
make_matchtimelimit1_db	tests/api_postingsource.cc	/^make_matchtimelimit1_db(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
make_missing_tables	tests/api_compact.cc	/^make_missing_tables(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
make_missing_tables	tests/api_compactold.cc	/^make_missing_tables(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
make_msize1_db	tests/api_backend.cc	/^make_msize1_db(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
make_msize2_db	tests/api_backend.cc	/^make_msize2_db(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
make_multichunk_db	tests/api_compact.cc	/^make_multichunk_db(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
make_multichunk_db	tests/api_compactold.cc	/^make_multichunk_db(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
make_orcheck_db	tests/api_backend.cc	/^make_orcheck_db(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
make_ordecay_db	tests/api_backend.cc	/^make_ordecay_db(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
make_phrasebug1_db	tests/api_backend.cc	/^make_phrasebug1_db(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
make_posting	backends/inmemory/inmemory_database.cc	/^void InMemoryDatabase::make_posting(InMemoryDoc * doc,$/;"	f	class:InMemoryDatabase
make_query	tests/soaktest/soaktest_queries.cc	/^    Xapian::Query make_query() {$/;"	f	class:QueryBuilder
make_singularvalue_db	tests/api_opvalue.cc	/^make_singularvalue_db(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
make_slot_key	backends/chert/chert_values.cc	/^make_slot_key(Xapian::docid did)$/;"	f	file:
make_slot_key	backends/glass/glass_values.cc	/^make_slot_key(Xapian::docid did)$/;"	f	file:
make_sparse_db	tests/api_compact.cc	/^make_sparse_db(Xapian::WritableDatabase &db, const string & s)$/;"	f	file:
make_sparse_db	tests/api_compactold.cc	/^make_sparse_db(Xapian::WritableDatabase &db, const string & s)$/;"	f	file:
make_start_of_chunk	backends/chert/chert_postlist.cc	/^make_start_of_chunk(bool new_is_last_chunk,$/;"	f	file:
make_start_of_chunk	backends/glass/glass_postlist.cc	/^make_start_of_chunk(bool new_is_last_chunk,$/;"	f	file:
make_start_of_first_chunk	backends/chert/chert_postlist.cc	/^make_start_of_first_chunk(Xapian::doccount entries,$/;"	f	file:
make_start_of_first_chunk	backends/glass/glass_postlist.cc	/^make_start_of_first_chunk(Xapian::doccount entries,$/;"	f	file:
make_synonym_postlist	matcher/localsubmatch.cc	/^LocalSubMatch::make_synonym_postlist(PostList * or_pl, MultiMatch * matcher,$/;"	f	class:LocalSubMatch
make_synonym_postlist	matcher/queryoptimiser.h	/^    PostList * make_synonym_postlist(PostList * pl,$/;"	f	class:QueryOptimiser
make_term	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::make_term(const string & tname)$/;"	f	class:InMemoryDatabase
make_term	queryparser/queryparser_internal.cc	/^Term::make_term(const string & prefix) const$/;"	f	class:Term
make_tg_db	tests/api_snippets.cc	/^make_tg_db(Xapian::WritableDatabase &db, const string & source)$/;"	f	file:
make_topercent7_db	tests/api_percentages.cc	/^make_topercent7_db(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
make_valprefixbounds_db	tests/api_opvalue.cc	/^make_valprefixbounds_db(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
make_valuechunk_key	backends/chert/chert_values.h	/^make_valuechunk_key(Xapian::valueno slot, Xapian::docid did)$/;"	f
make_valuechunk_key	backends/glass/glass_values.h	/^make_valuechunk_key(Xapian::valueno slot, Xapian::docid did)$/;"	f	namespace:Glass
make_valuerange5	tests/api_opvalue.cc	/^make_valuerange5(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
make_valuestats_key	backends/chert/chert_values.cc	/^make_valuestats_key(Xapian::valueno slot)$/;"	f	file:
make_valuestats_key	backends/glass/glass_values.cc	/^make_valuestats_key(Xapian::valueno slot)$/;"	f	file:
make_xordecay1_db	tests/api_backend.cc	/^make_xordecay1_db(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
man1dir	Makefile	/^man1dir = $(mandir)\/man1$/;"	m
mandir	Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	docs/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	tests/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
margin	languages/compiler/header.h	/^    int margin;$/;"	m	struct:generator
mark_block	backends/chert/chert_btreebase.cc	/^ChertTable_base::mark_block(uint4 n)$/;"	f	class:ChertTable_base
mark_block_unused	backends/glass/glass_freelist.cc	/^GlassFreeList::mark_block_unused(const GlassTable * B, uint4 block_size, uint4 blk)$/;"	f	class:GlassFreeList
mark_fd	tests/harness/fdtracker.cc	/^FDTracker::mark_fd(int fd)$/;"	f	class:FDTracker
mark_used	backends/glass/glass_freelist.h	/^    bool mark_used(uint4 n) {$/;"	f	class:GlassFreeListChecker
mark_used_in	languages/compiler/analyser.c	/^static void mark_used_in(struct analyser * a, struct name * q, struct node * p) {$/;"	f	file:
matcher	matcher/branchpostlist.h	/^	MultiMatch *matcher;$/;"	m	class:BranchPostList
matcher	matcher/extraweightpostlist.h	/^	MultiMatch * matcher;$/;"	m	class:ExtraWeightPostList
matcher	matcher/maxpostlist.h	/^    MultiMatch *matcher;$/;"	m	class:MaxPostList
matcher	matcher/mergepostlist.h	/^	MultiMatch *matcher;$/;"	m	class:MergePostList
matcher	matcher/multiandpostlist.h	/^    MultiMatch *matcher;$/;"	m	class:MultiAndPostList
matcher	matcher/multixorpostlist.h	/^    MultiMatch *matcher;$/;"	m	class:MultiXorPostList
matcher	matcher/queryoptimiser.h	/^    MultiMatch * matcher;$/;"	m	class:QueryOptimiser
matcher	matcher/synonympostlist.h	/^    MultiMatch * matcher;$/;"	m	class:SynonymPostList
matcher_	include/xapian/postingsource.h	/^    void * matcher_;$/;"	m	class:Xapian::PostingSource
matches_estimated	api/omenquireinternal.h	/^	Xapian::doccount matches_estimated;$/;"	m	class:Xapian::MSet::Internal
matches_lower_bound	api/omenquireinternal.h	/^	Xapian::doccount matches_lower_bound;$/;"	m	class:Xapian::MSet::Internal
matches_upper_bound	api/omenquireinternal.h	/^	Xapian::doccount matches_upper_bound;$/;"	m	class:Xapian::MSet::Internal
matchspies	api/registry.cc	/^    std::map<std::string, Xapian::MatchSpy *> matchspies;$/;"	m	class:Xapian::Registry::Internal	file:
matchspies	matcher/multimatch.h	/^	const vector<Xapian::Internal::opt_intrusive_ptr<Xapian::MatchSpy>> & matchspies;$/;"	m	class:MultiMatch
matchspies	matcher/remotesubmatch.h	/^    const vector<Xapian::Internal::opt_intrusive_ptr<Xapian::MatchSpy>> & matchspies;$/;"	m	class:RemoteSubMatch
maxAction	queryparser/lemon.c	/^  int maxAction;           \/* Maximum action value of any kind *\/$/;"	m	struct:lemon	file:
max_attained	api/omenquireinternal.h	/^	double max_attained;$/;"	m	class:Xapian::MSet::Internal
max_cached	matcher/maxpostlist.h	/^    double max_cached;$/;"	m	class:MaxPostList
max_changesets	backends/chert/chert_database.h	/^	unsigned int max_changesets;$/;"	m	class:ChertDatabase
max_changesets	backends/chert/chert_databasereplicator.h	/^	unsigned int max_changesets;$/;"	m	class:ChertDatabaseReplicator
max_changesets	backends/glass/glass_changes.h	/^    glass_revision_number_t max_changesets;$/;"	m	class:GlassChanges
max_expansion	api/queryinternal.h	/^    Xapian::termcount max_expansion;$/;"	m	class:Xapian::Internal::QueryWildcard
max_expansion	tests/api_query.cc	/^    Xapian::termcount max_expansion;$/;"	m	struct:wildcard_testcase	file:
max_item_size	backends/chert/chert_table.h	/^	size_t max_item_size;$/;"	m	class:ChertTable
max_item_size	backends/glass/glass_table.h	/^	size_t max_item_size;$/;"	m	class:GlassTable
max_label	languages/compiler/header.h	/^    int max_label;$/;"	m	struct:generator
max_lat	geospatial/geoencode.h	/^    double max_lat;$/;"	m	class:GeoEncode::DecoderWithBoundingBox
max_month_length	api/valuerangeproc.cc	/^static const char max_month_length[12] = {$/;"	m	namespace:Xapian	file:
max_part	weight/weightinternal.h	/^    double max_part;$/;"	m	struct:TermFreqs
max_partial_expansion	queryparser/queryparser_internal.h	/^    Xapian::termcount max_partial_expansion;$/;"	m	class:Xapian::QueryParser::Internal
max_partial_type	queryparser/queryparser_internal.h	/^    int max_partial_type;$/;"	m	class:Xapian::QueryParser::Internal
max_possible	api/omenquireinternal.h	/^	double max_possible;$/;"	m	class:Xapian::MSet::Internal
max_range	include/xapian/geospatial.h	/^    double max_range;$/;"	m	class:Xapian::LatLongDistancePostingSource
max_size	include/xapian/eset.h	/^    Xapian::doccount max_size() const { return size(); }$/;"	f	class:Xapian::ESet
max_size	include/xapian/mset.h	/^    Xapian::doccount max_size() const { return size(); }$/;"	f	class:Xapian::MSet
max_total	matcher/multiandpostlist.h	/^    double max_total;$/;"	m	class:MultiAndPostList
max_total	matcher/multixorpostlist.h	/^    double max_total;$/;"	m	class:MultiXorPostList
max_type	api/queryinternal.h	/^    int max_type;$/;"	m	class:Xapian::Internal::QueryWildcard
max_type	tests/api_query.cc	/^    char max_type;$/;"	m	struct:wildcard_testcase	file:
max_weight	matcher/extraweightpostlist.h	/^	double max_weight;$/;"	m	class:ExtraWeightPostList
max_weight_	include/xapian/postingsource.h	/^    double max_weight_;$/;"	m	class:Xapian::PostingSource
max_weight_in_map	include/xapian/postingsource.h	/^    double max_weight_in_map;$/;"	m	class:Xapian::ValueMapPostingSource
max_wildcard_expansion	queryparser/queryparser_internal.h	/^    Xapian::termcount max_wildcard_expansion;$/;"	m	class:Xapian::QueryParser::Internal
max_wildcard_type	queryparser/queryparser_internal.h	/^    int max_wildcard_type;$/;"	m	class:Xapian::QueryParser::Internal
max_word_length	queryparser/termgenerator_internal.h	/^    unsigned max_word_length;$/;"	m	class:Xapian::TermGenerator::Internal
max_wt	matcher/multiandpostlist.h	/^    double * max_wt;$/;"	m	class:MultiAndPostList
maxchildren	tests/soaktest/soaktest_queries.cc	/^    unsigned int maxchildren;$/;"	m	struct:QueryBuilderEnv	file:
maxdist	api/editdistance.cc	/^    int maxdist;$/;"	m	class:edist_state	file:
maxid_accessed	tests/api_postingsource.cc	/^    Xapian::docid maxid_accessed;$/;"	m	class:ChangeMaxweightPostingSource	file:
maxsteps	tests/soaktest/soaktest_queries.cc	/^    unsigned int maxsteps;$/;"	m	class:QueryBuilder	file:
maxtermsperfield	tests/soaktest/soaktest_queries.cc	/^    unsigned int maxtermsperfield;$/;"	m	struct:QueryBuilderEnv	file:
mean	include/xapian/weight.h	/^    double mean;$/;"	m	class:Xapian::PL2PlusWeight
memory_error	queryparser/lemon.c	/^void memory_error(void){$/;"	f
merge	api/omdocument.cc	/^OmDocumentTerm::merge() const$/;"	f	class:OmDocumentTerm
merge	backends/inmemory/inmemory_database.h	/^	void merge(const InMemoryPosting & post) {$/;"	f	class:InMemoryPosting
merge	backends/inmemory/inmemory_database.h	/^	void merge(const InMemoryTermEntry & post) {$/;"	f	class:InMemoryTermEntry
merge	queryparser/lemon.c	/^static char *merge($/;"	f	file:
merge_changes	backends/chert/chert_postlist.cc	/^ChertPostListTable::merge_changes($/;"	f	class:ChertPostListTable
merge_changes	backends/chert/chert_spelling.cc	/^ChertSpellingTable::merge_changes()$/;"	f	class:ChertSpellingTable
merge_changes	backends/chert/chert_synonym.cc	/^ChertSynonymTable::merge_changes()$/;"	f	class:ChertSynonymTable
merge_changes	backends/chert/chert_values.cc	/^ChertValueManager::merge_changes()$/;"	f	class:ChertValueManager
merge_changes	backends/glass/glass_postlist.cc	/^GlassPostListTable::merge_changes(const string &term,$/;"	f	class:GlassPostListTable
merge_changes	backends/glass/glass_spelling.cc	/^GlassSpellingTable::merge_changes()$/;"	f	class:GlassSpellingTable
merge_changes	backends/glass/glass_synonym.cc	/^GlassSynonymTable::merge_changes()$/;"	f	class:GlassSynonymTable
merge_changes	backends/glass/glass_values.cc	/^GlassValueManager::merge_changes()$/;"	f	class:GlassValueManager
merge_docid_keyed	backends/chert/chert_compact.cc	/^merge_docid_keyed(ChertTable *out, const vector<ChertTable*> & inputs,$/;"	f	namespace:ChertCompact
merge_docid_keyed	backends/glass/glass_compact.cc	/^merge_docid_keyed(GlassTable *out, const vector<GlassTable*> & inputs,$/;"	f	namespace:GlassCompact
merge_doclen_changes	backends/glass/glass_postlist.cc	/^GlassPostListTable::merge_doclen_changes(const map<Xapian::docid, Xapian::termcount> & doclens)$/;"	f	class:GlassPostListTable
merge_filters	queryparser/queryparser_internal.cc	/^    Query merge_filters() const {$/;"	f	struct:ProbQuery
merge_positions	backends/glass/glass_compact.cc	/^merge_positions(GlassTable *out, const vector<GlassTable*> & inputs,$/;"	f	namespace:GlassCompact
merge_postlists	backends/chert/chert_compact.cc	/^merge_postlists(Xapian::Compactor * compactor,$/;"	f	namespace:ChertCompact
merge_postlists	backends/glass/glass_compact.cc	/^merge_postlists(Xapian::Compactor * compactor,$/;"	f	namespace:GlassCompact
merge_results	api/matchspy.cc	/^MatchSpy::merge_results(const string &) {$/;"	f	class:MatchSpy
merge_results	api/matchspy.cc	/^ValueCountMatchSpy::merge_results(const string & s) {$/;"	f	class:ValueCountMatchSpy
merge_spellings	backends/chert/chert_compact.cc	/^merge_spellings(ChertTable * out,$/;"	f	namespace:ChertCompact
merge_spellings	backends/glass/glass_compact.cc	/^merge_spellings(GlassTable * out,$/;"	f	namespace:GlassCompact
merge_stats	backends/glass/glass_version.cc	/^GlassVersion::merge_stats(const GlassVersion & o)$/;"	f	class:GlassVersion
merge_synonyms	backends/chert/chert_compact.cc	/^merge_synonyms(ChertTable * out,$/;"	f	namespace:ChertCompact
merge_synonyms	backends/glass/glass_compact.cc	/^merge_synonyms(GlassTable * out,$/;"	f	namespace:GlassCompact
message	queryparser/lemon.c	/^  const char *message;$/;"	m	struct:s_options	file:
message	tests/harness/fdtracker.h	/^    std::string message;$/;"	m	class:FDTracker
message_type	net/remoteprotocol.h	/^enum message_type {$/;"	g
metadata	backends/inmemory/inmemory_database.h	/^    std::map<kdmtStr, string> metadata;$/;"	m	class:InMemoryDatabase
metadata_keys_begin	api/omdatabase.cc	/^Database::metadata_keys_begin(const std::string &prefix) const$/;"	f	class:Xapian::Database
metadata_keys_end	include/xapian/database.h	/^	Xapian::TermIterator XAPIAN_NOTHROW(metadata_keys_end(const std::string & = std::string()) const) {$/;"	f	class:Xapian::Database
metric	include/xapian/geospatial.h	/^    const LatLongMetric * metric;$/;"	m	class:Xapian::LatLongDistanceKeyMaker
metric	include/xapian/geospatial.h	/^    const LatLongMetric * metric;$/;"	m	class:Xapian::LatLongDistancePostingSource
mid_point	backends/chert/chert_table.cc	/^ChertTable::mid_point(uint8_t * p) const$/;"	f	class:ChertTable
mid_point	backends/glass/glass_table.cc	/^GlassTable::mid_point(uint8_t * p) const$/;"	f	class:GlassTable
minReduce	queryparser/lemon.c	/^  int minReduce;           \/* Minimum reduce action *\/$/;"	m	struct:lemon	file:
minShiftReduce	queryparser/lemon.c	/^  int minShiftReduce;      \/* Minimum shift-reduce action value *\/$/;"	m	struct:lemon	file:
min_lat	geospatial/geoencode.h	/^    double min_lat;$/;"	m	class:GeoEncode::DecoderWithBoundingBox
minimum_size_type	queryparser/lemon.c	/^static const char *minimum_size_type(int lwr, int upr, int *pnByte){$/;"	f	file:
minmax	matcher/orpostlist.h	/^	double lmax, rmax, minmax;$/;"	m	class:OrPostList
minor	include/xapian/constinfo.h	/^    int major, minor, revision;$/;"	m	struct:Xapian::Internal::constinfo
minor	queryparser/queryparser_internal.cc	/^  YYMINORTYPE minor;     \/* The user-supplied minor token value.  This$/;"	m	struct:yyStackEntry	file:
minor_version	include/xapian.h	/^inline int minor_version() {$/;"	f	namespace:Xapian
minutes	geospatial/geoencode.cc	/^    int minutes;$/;"	m	struct:DegreesMinutesSeconds	file:
mkdir	common/safesysstat.h	/^inline int (mkdir)(const char *pathname, mode_t \/*mode*\/) {$/;"	f
mkdir_p	Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	docs/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	tests/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkinstalldirs	Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	docs/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	tests/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mktmpdir	tests/api_replicate.cc	/^static void mktmpdir(const string & path) {$/;"	f	file:
mnAction	queryparser/lemon.c	/^  int mnAction;                \/* Action associated with mnLookahead *\/$/;"	m	struct:acttab	file:
mnLookahead	queryparser/lemon.c	/^  int mnLookahead;             \/* Minimum aLookahead[].lookahead *\/$/;"	m	struct:acttab	file:
mod_plists	backends/chert/chert_database.h	/^				pair<char, Xapian::termcount> > > mod_plists;$/;"	m	class:ChertWritableDatabase
mode	languages/compiler/header.h	/^    int mode;                   \/*    )_  for routines, externals *\/$/;"	m	struct:name
mode	languages/compiler/header.h	/^    int mode;$/;"	m	struct:analyser
mode	languages/compiler/header.h	/^    int mode;$/;"	m	struct:node
modifications_failed	backends/chert/chert_database.cc	/^ChertDatabase::modifications_failed(chert_revision_number_t old_revision,$/;"	f	class:ChertDatabase
modifications_failed	backends/glass/glass_database.cc	/^GlassDatabase::modifications_failed(glass_revision_number_t new_revision,$/;"	f	class:GlassDatabase
modified	backends/document.h	/^	bool modified() const {$/;"	f	class:Xapian::Document::Internal
modify_shortcut_docid	backends/chert/chert_database.h	/^	mutable Xapian::docid modify_shortcut_docid;$/;"	m	class:ChertWritableDatabase
modify_shortcut_docid	backends/glass/glass_database.h	/^	mutable Xapian::docid modify_shortcut_docid;$/;"	m	class:GlassWritableDatabase
modify_shortcut_document	backends/chert/chert_database.h	/^	mutable Xapian::Document::Internal * modify_shortcut_document;$/;"	m	class:ChertWritableDatabase
modify_shortcut_document	backends/glass/glass_database.h	/^	mutable Xapian::Document::Internal * modify_shortcut_document;$/;"	m	class:GlassWritableDatabase
modifyable	languages/compiler/header.h	/^    byte modifyable;          \/* false inside reverse(...) *\/$/;"	m	struct:analyser
mods	backends/chert/chert_modifiedpostlist.h	/^    map<Xapian::docid, pair<char, Xapian::termcount> > mods;$/;"	m	class:ChertModifiedPostList
move_forward_in_chunk_to_at_least	backends/chert/chert_postlist.cc	/^ChertPostList::move_forward_in_chunk_to_at_least(Xapian::docid desired_did)$/;"	f	class:ChertPostList
move_forward_in_chunk_to_at_least	backends/glass/glass_postlist.cc	/^GlassPostList::move_forward_in_chunk_to_at_least(Xapian::docid desired_did)$/;"	f	class:GlassPostList
move_to_b	languages/compiler/space.c	/^extern symbol * move_to_b(symbol * p, int n, const symbol * q) {$/;"	f
move_to_chunk_containing	backends/chert/chert_postlist.cc	/^ChertPostList::move_to_chunk_containing(Xapian::docid desired_did)$/;"	f	class:ChertPostList
move_to_chunk_containing	backends/glass/glass_postlist.cc	/^GlassPostList::move_to_chunk_containing(Xapian::docid desired_did)$/;"	f	class:GlassPostList
mru_slot	backends/chert/chert_values.h	/^    mutable Xapian::valueno mru_slot;$/;"	m	class:ChertValueManager
mru_slot	backends/glass/glass_values.h	/^    mutable Xapian::valueno mru_slot;$/;"	m	class:GlassValueManager
mru_slot	backends/remote/remote-database.h	/^    mutable Xapian::valueno mru_slot;$/;"	m	class:RemoteDatabase
mru_valstats	backends/chert/chert_values.h	/^    mutable ValueStats mru_valstats;$/;"	m	class:ChertValueManager
mru_valstats	backends/glass/glass_values.h	/^    mutable ValueStats mru_valstats;$/;"	m	class:GlassValueManager
mru_valstats	backends/remote/remote-database.h	/^    mutable ValueStats mru_valstats;$/;"	m	class:RemoteDatabase
mset	include/xapian/mset.h	/^    Xapian::MSet mset;$/;"	m	class:Xapian::MSetIterator
mset_expect_order	tests/harness/testutils.cc	/^mset_expect_order(const Xapian::MSet &A,$/;"	f
mset_expect_order_	tests/harness/testutils.cc	/^mset_expect_order_(const Xapian::MSet &A, bool beginning,$/;"	f	file:
mset_internal	matcher/msetpostlist.h	/^    Xapian::Internal::intrusive_ptr<Xapian::MSet::Internal> mset_internal;$/;"	m	class:MSetPostList
mset_range_is_same	tests/harness/testutils.cc	/^mset_range_is_same(const Xapian::MSet &mset1, unsigned int first1,$/;"	f
mset_range_is_same_weights	tests/harness/testutils.cc	/^mset_range_is_same_weights(const Xapian::MSet &mset1, unsigned int first1,$/;"	f
msetcmp_by_did	matcher/msetcmp.cc	/^msetcmp_by_did(const Xapian::Internal::MSetItem &a,$/;"	f	file:
msetcmp_by_relevance	matcher/msetcmp.cc	/^msetcmp_by_relevance(const Xapian::Internal::MSetItem &a,$/;"	f	file:
msetcmp_by_relevance_then_value	matcher/msetcmp.cc	/^msetcmp_by_relevance_then_value(const Xapian::Internal::MSetItem &a,$/;"	f	file:
msetcmp_by_value	matcher/msetcmp.cc	/^msetcmp_by_value(const Xapian::Internal::MSetItem &a,$/;"	f	file:
msetcmp_by_value_then_relevance	matcher/msetcmp.cc	/^msetcmp_by_value_then_relevance(const Xapian::Internal::MSetItem &a,$/;"	f	file:
msg	include/xapian/error.h	/^    std::string msg;$/;"	m	class:Xapian::Error
msg	net/length.cc	/^    const char * msg;$/;"	m	class:Xapian_NetworkError	file:
msg_adddocument	net/remoteserver.cc	/^RemoteServer::msg_adddocument(const string & message)$/;"	f	class:RemoteServer
msg_addspelling	net/remoteserver.cc	/^RemoteServer::msg_addspelling(const string & message)$/;"	f	class:RemoteServer
msg_allterms	net/remoteserver.cc	/^RemoteServer::msg_allterms(const string &message)$/;"	f	class:RemoteServer
msg_cancel	net/remoteserver.cc	/^RemoteServer::msg_cancel(const string &)$/;"	f	class:RemoteServer
msg_collfreq	net/remoteserver.cc	/^RemoteServer::msg_collfreq(const string &term)$/;"	f	class:RemoteServer
msg_commit	net/remoteserver.cc	/^RemoteServer::msg_commit(const string &)$/;"	f	class:RemoteServer
msg_deletedocument	net/remoteserver.cc	/^RemoteServer::msg_deletedocument(const string & message)$/;"	f	class:RemoteServer
msg_deletedocumentterm	net/remoteserver.cc	/^RemoteServer::msg_deletedocumentterm(const string & message)$/;"	f	class:RemoteServer
msg_doclength	net/remoteserver.cc	/^RemoteServer::msg_doclength(const string &message)$/;"	f	class:RemoteServer
msg_document	net/remoteserver.cc	/^RemoteServer::msg_document(const string &message)$/;"	f	class:RemoteServer
msg_freqs	net/remoteserver.cc	/^RemoteServer::msg_freqs(const string &term)$/;"	f	class:RemoteServer
msg_getmetadata	net/remoteserver.cc	/^RemoteServer::msg_getmetadata(const string & message)$/;"	f	class:RemoteServer
msg_keepalive	net/remoteserver.cc	/^RemoteServer::msg_keepalive(const string &)$/;"	f	class:RemoteServer
msg_openmetadatakeylist	net/remoteserver.cc	/^RemoteServer::msg_openmetadatakeylist(const string & message)$/;"	f	class:RemoteServer
msg_positionlist	net/remoteserver.cc	/^RemoteServer::msg_positionlist(const string &message)$/;"	f	class:RemoteServer
msg_postlist	net/remoteserver.cc	/^RemoteServer::msg_postlist(const string &message)$/;"	f	class:RemoteServer
msg_query	net/remoteserver.cc	/^RemoteServer::msg_query(const string &message_in)$/;"	f	class:RemoteServer
msg_removespelling	net/remoteserver.cc	/^RemoteServer::msg_removespelling(const string & message)$/;"	f	class:RemoteServer
msg_reopen	net/remoteserver.cc	/^RemoteServer::msg_reopen(const string & msg)$/;"	f	class:RemoteServer
msg_replacedocument	net/remoteserver.cc	/^RemoteServer::msg_replacedocument(const string & message)$/;"	f	class:RemoteServer
msg_replacedocumentterm	net/remoteserver.cc	/^RemoteServer::msg_replacedocumentterm(const string & message)$/;"	f	class:RemoteServer
msg_setmetadata	net/remoteserver.cc	/^RemoteServer::msg_setmetadata(const string & message)$/;"	f	class:RemoteServer
msg_termexists	net/remoteserver.cc	/^RemoteServer::msg_termexists(const string &term)$/;"	f	class:RemoteServer
msg_termfreq	net/remoteserver.cc	/^RemoteServer::msg_termfreq(const string &term)$/;"	f	class:RemoteServer
msg_termlist	net/remoteserver.cc	/^RemoteServer::msg_termlist(const string &message)$/;"	f	class:RemoteServer
msg_uniqueterms	net/remoteserver.cc	/^RemoteServer::msg_uniqueterms(const string &message)$/;"	f	class:RemoteServer
msg_update	net/remoteserver.cc	/^RemoteServer::msg_update(const string &)$/;"	f	class:RemoteServer
msg_valuestats	net/remoteserver.cc	/^RemoteServer::msg_valuestats(const string & message)$/;"	f	class:RemoteServer
msg_writeaccess	net/remoteserver.cc	/^RemoteServer::msg_writeaccess(const string & msg)$/;"	f	class:RemoteServer
msort	queryparser/lemon.c	/^static char *msort($/;"	f	file:
mul_overflows	common/overflow.h	/^mul_overflows(T1 a, T2 b, R& res) {$/;"	f
multimerge_postlists	backends/chert/chert_compact.cc	/^multimerge_postlists(Xapian::Compactor * compactor,$/;"	f	namespace:ChertCompact
multimerge_postlists	backends/glass/glass_compact.cc	/^multimerge_postlists(Xapian::Compactor * compactor,$/;"	f	namespace:GlassCompact
multiplier	backends/multi/multi_postlist.h	/^	Xapian::doccount multiplier;$/;"	m	class:MultiPostList
multiplier	backends/multivaluelist.h	/^    size_t multiplier;$/;"	m	class:MultiValueList
multiplier	expand/expandweight.h	/^    double multiplier;$/;"	m	class:Xapian::Internal::ExpandStats
munge_term	tests/harness/index_utils.cc	/^munge_term(const string &term)$/;"	f	file:
mutex	net/tcpserver.h	/^    HANDLE mutex;$/;"	m	class:SOCKET_INITIALIZER_MIXIN
mxLookahead	queryparser/lemon.c	/^  int mxLookahead;             \/* Maximum aLookahead[].lookahead *\/$/;"	m	struct:acttab	file:
my_errno	include/xapian/error.h	/^    int my_errno;$/;"	m	class:Xapian::Error
mypos	backends/inmemory/inmemory_positionlist.h	/^	vector<Xapian::termpos>::const_iterator mypos;$/;"	m	class:InMemoryPositionList
mypositions	backends/inmemory/inmemory_database.h	/^	InMemoryPositionList mypositions;$/;"	m	class:InMemoryPostList
n	backends/chert/chert_cursor.h	/^	uint4 n;$/;"	m	class:Cursor
n	backends/glass/glass_freelist.h	/^    uint4 n;$/;"	m	class:GlassFLCursor
n	tests/api_unicode.cc	/^    unsigned long n;$/;"	m	struct:testcase2	file:
nAction	queryparser/lemon.c	/^  int nAction;                 \/* Number of used slots in aAction[] *\/$/;"	m	struct:acttab	file:
nAction	queryparser/lemon.c	/^  int nAction;         \/* Number of actions *\/$/;"	m	struct:axset	file:
nActionAlloc	queryparser/lemon.c	/^  int nActionAlloc;            \/* Slots allocated for aAction[] *\/$/;"	m	struct:acttab	file:
nDefine	queryparser/lemon.c	/^static int nDefine = 0;      \/* Number of -D options on the command line *\/$/;"	v	file:
nLookahead	queryparser/lemon.c	/^  int nLookahead;              \/* Used slots in aLookahead[] *\/$/;"	m	struct:acttab	file:
nLookaheadAlloc	queryparser/lemon.c	/^  int nLookaheadAlloc;         \/* Slots allocated in aLookahead[] *\/$/;"	m	struct:acttab	file:
nNtAct	queryparser/lemon.c	/^  int nTknAct, nNtAct;     \/* Number of actions on terminals and nonterminals *\/$/;"	m	struct:state	file:
nTknAct	queryparser/lemon.c	/^  int nTknAct, nNtAct;     \/* Number of actions on terminals and nonterminals *\/$/;"	m	struct:state	file:
n_bits	common/bitstream.h	/^    int n_bits;$/;"	m	class:Xapian::BitReader
n_bits	common/bitstream.h	/^    int n_bits;$/;"	m	class:Xapian::BitWriter
n_flag_tab	examples/quest.cc	/^const int n_flag_tab = sizeof(flag_tab) \/ sizeof(flag_tab[0]);$/;"	v
n_kids	matcher/maxpostlist.h	/^    size_t n_kids;$/;"	m	class:MaxPostList
n_kids	matcher/multiandpostlist.h	/^    size_t n_kids;$/;"	m	class:MultiAndPostList
n_kids	matcher/multixorpostlist.h	/^    size_t n_kids;$/;"	m	class:MultiXorPostList
n_op_tab	examples/quest.cc	/^const int n_op_tab = sizeof(op_tab) \/ sizeof(op_tab[0]);$/;"	v
n_subqs	tests/api_opsynonym.cc	/^    unsigned n_subqs;$/;"	m	struct:synonym1_data_type	file:
n_wt_tab	examples/quest.cc	/^const int n_wt_tab = sizeof(wt_tab) \/ sizeof(wt_tab[0]);$/;"	v
nactiontab	queryparser/lemon.c	/^  int nactiontab;          \/* Number of entries in the yy_action[] table *\/$/;"	m	struct:lemon	file:
name	api/decvalwtsource.cc	/^DecreasingValueWeightPostingSource::name() const {$/;"	f	class:DecreasingValueWeightPostingSource
name	api/matchspy.cc	/^MatchSpy::name() const {$/;"	f	class:MatchSpy
name	api/matchspy.cc	/^ValueCountMatchSpy::name() const {$/;"	f	class:ValueCountMatchSpy
name	api/postingsource.cc	/^FixedWeightPostingSource::name() const$/;"	f	class:Xapian::FixedWeightPostingSource
name	api/postingsource.cc	/^PostingSource::name() const$/;"	f	class:Xapian::PostingSource
name	api/postingsource.cc	/^ValueMapPostingSource::name() const$/;"	f	class:Xapian::ValueMapPostingSource
name	api/postingsource.cc	/^ValueWeightPostingSource::name() const$/;"	f	class:Xapian::ValueWeightPostingSource
name	backends/chert/chert_table.h	/^	std::string name;$/;"	m	class:ChertTable
name	backends/dbcheck.cc	/^static const struct { char name[9]; } glass_tables[] = {$/;"	m	struct:__anon4	file:
name	backends/glass/glass_table.h	/^	std::string name;$/;"	m	class:GlassTable
name	common/gnu_getopt.h	/^    const char *name;$/;"	m	struct:option
name	common/msvc_dirent.cc	/^    char                *name;  \/* null-terminated char string *\/$/;"	m	struct:DIR	file:
name	geospatial/latlong_metrics.cc	/^GreatCircleMetric::name() const$/;"	f	class:GreatCircleMetric
name	geospatial/latlong_posting_source.cc	/^LatLongDistancePostingSource::name() const$/;"	f	class:LatLongDistancePostingSource
name	languages/compiler/header.h	/^    const char * name;$/;"	m	struct:options
name	languages/compiler/header.h	/^    struct name * name;       \/* so g->name->grouping == g *\/$/;"	m	struct:grouping	typeref:struct:grouping::name
name	languages/compiler/header.h	/^    struct name * name;$/;"	m	struct:node	typeref:struct:node::name
name	languages/compiler/header.h	/^    symbol * name;$/;"	m	struct:m_pair
name	languages/compiler/header.h	/^struct name {$/;"	s
name	matcher/localsubmatch.cc	/^LazyWeight::name() const$/;"	f	class:LazyWeight
name	queryparser/lemon.c	/^  char *name;              \/* Name of the generated parser *\/$/;"	m	struct:lemon	file:
name	queryparser/lemon.c	/^  const char *name;        \/* Name of the symbol *\/$/;"	m	struct:symbol	file:
name	queryparser/queryparser_internal.cc	/^    string name;$/;"	m	class:Term	file:
name	tests/api_db.cc	/^    std::string name() const { return "MyWeight"; }$/;"	f	class:MyWeight
name	tests/api_serialise.cc	/^    std::string name() const {$/;"	f	class:MyPostingSource2
name	tests/api_serialise.cc	/^    string name() const {$/;"	f	class:ExceptionalMatchSpy
name	tests/api_serialise.cc	/^    string name() const {$/;"	f	class:ExceptionalPostingSource
name	tests/api_serialise.cc	/^    string name() const {$/;"	f	class:ExceptionalWeight
name	tests/harness/testsuite.h	/^    const char *name;$/;"	m	struct:test_desc
name	weight/bb2weight.cc	/^BB2Weight::name() const$/;"	f	class:Xapian::BB2Weight
name	weight/bm25plusweight.cc	/^BM25PlusWeight::name() const$/;"	f	class:Xapian::BM25PlusWeight
name	weight/bm25weight.cc	/^BM25Weight::name() const$/;"	f	class:Xapian::BM25Weight
name	weight/boolweight.cc	/^BoolWeight::name() const$/;"	f	class:Xapian::BoolWeight
name	weight/coordweight.cc	/^CoordWeight::name() const$/;"	f	class:Xapian::CoordWeight
name	weight/dlhweight.cc	/^DLHWeight::name() const$/;"	f	class:Xapian::DLHWeight
name	weight/dphweight.cc	/^DPHWeight::name() const$/;"	f	class:Xapian::DPHWeight
name	weight/ifb2weight.cc	/^IfB2Weight::name() const$/;"	f	class:Xapian::IfB2Weight
name	weight/ineb2weight.cc	/^IneB2Weight::name() const$/;"	f	class:Xapian::IneB2Weight
name	weight/inl2weight.cc	/^InL2Weight::name() const$/;"	f	class:Xapian::InL2Weight
name	weight/lmweight.cc	/^LMWeight::name() const$/;"	f	class:Xapian::LMWeight
name	weight/pl2plusweight.cc	/^PL2PlusWeight::name() const$/;"	f	class:Xapian::PL2PlusWeight
name	weight/pl2weight.cc	/^PL2Weight::name() const$/;"	f	class:Xapian::PL2Weight
name	weight/tfidfweight.cc	/^TfIdfWeight::name() const$/;"	f	class:Xapian::TfIdfWeight
name	weight/tradweight.cc	/^TradWeight::name() const$/;"	f	class:Xapian::TradWeight
name	weight/weight.cc	/^Weight::name() const$/;"	f	class:Xapian::Weight
name_count	languages/compiler/header.h	/^    int name_count[t_size];   \/* name_count[i] counts the number of names of type i *\/$/;"	m	struct:analyser
name_of_mode	languages/compiler/analyser.c	/^static const char * name_of_mode(int n) {$/;"	f	file:
name_of_name_type	languages/compiler/analyser.c	/^static const char * name_of_name_type(int code) {$/;"	f	file:
name_of_token	languages/compiler/tokeniser.c	/^extern const char * name_of_token(int code) {$/;"	f
name_of_type	languages/compiler/analyser.c	/^static const char * name_of_type(int n) {$/;"	f	file:
name_to_node	languages/compiler/analyser.c	/^static void name_to_node(struct analyser * a, struct node * p, int type) {$/;"	f	file:
name_types	languages/compiler/header.h	/^enum name_types {$/;"	g
names	languages/compiler/header.h	/^    struct name * names;$/;"	m	struct:analyser	typeref:struct:analyser::name
namespaces	docs/apidoc/html/compactor_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/constants_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/constinfo_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/database_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/dbfactory_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/document_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/enquire_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/error_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/errorhandler_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/eset_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/expanddecider_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/geospatial_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/keymaker_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/matchspy_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/mset_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/namespaceXapian.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/positioniterator_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/postingiterator_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/postingsource_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/query_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/queryparser_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/registry_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/stem_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/termgenerator_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/termiterator_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/types_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/unicode_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/valueiterator_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/valuesetmatchdecider_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/weight_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/xapian_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
nconflict	queryparser/lemon.c	/^  int nconflict;           \/* Number of parsing conflicts *\/$/;"	m	struct:lemon	file:
need_copy_next	api/replication.cc	/^    bool need_copy_next;$/;"	m	class:DatabaseReplica::Internal	file:
need_doclength	api/leafpostlist.h	/^    bool need_doclength, need_unique_terms;$/;"	m	class:LeafPostList
need_explicit_dependencies	xapian-config	/^need_explicit_dependencies()$/;"	f
need_positions	matcher/queryoptimiser.h	/^    bool need_positions;$/;"	m	class:QueryOptimiser
need_positions	queryparser/queryparser_internal.cc	/^    void need_positions() {$/;"	f	class:Term
need_stat	include/xapian/weight.h	/^    void need_stat(stat_flags flag) {$/;"	f	class:Xapian::Weight
need_terms	api/omdocument.cc	/^Xapian::Document::Internal::need_terms() const$/;"	f	class:Xapian::Document::Internal
need_unique_terms	api/leafpostlist.h	/^    bool need_doclength, need_unique_terms;$/;"	m	class:LeafPostList
need_values	api/omdocument.cc	/^Xapian::Document::Internal::need_values() const$/;"	f	class:Xapian::Document::Internal
needle	tests/api_db.cc	/^    string needle;$/;"	m	class:GrepMatchDecider	file:
nested-classes	docs/apidoc/html/compactor_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/database_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/document_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/enquire_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/error_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/errorhandler_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/eset_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/expanddecider_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/geospatial_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/keymaker_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/matchspy_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/mset_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/namespaceXapian.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/positioniterator_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/postingiterator_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/postingsource_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/query_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/queryparser_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/registry_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/stem_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/termgenerator_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/termiterator_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/unicode_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/valueiterator_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/valuesetmatchdecider_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/weight_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
new	common/Tokeniseise.pm	/^sub new {$/;"	s
new_first_did	backends/chert/chert_values.cc	/^    Xapian::docid new_first_did;$/;"	m	class:ValueUpdater	file:
new_first_did	backends/glass/glass_values.cc	/^    Xapian::docid new_first_did;$/;"	m	class:Glass::ValueUpdater	file:
new_label	languages/compiler/generator.c	/^static int new_label(struct generator * g) {$/;"	f	file:
new_literalstring	languages/compiler/analyser.c	/^static symbol * new_literalstring(struct analyser * a) {$/;"	f	file:
new_min	matcher/multiandpostlist.h	/^    double new_min(double w_min, size_t n) {$/;"	f	class:MultiAndPostList
new_node	languages/compiler/analyser.c	/^static struct node * new_node(struct analyser * a, int type) {$/;"	f	file:
new_subdb	matcher/valuestreamdocument.cc	/^ValueStreamDocument::new_subdb(int n)$/;"	f	class:ValueStreamDocument
newconfig	queryparser/lemon.c	/^PRIVATE struct config *newconfig(void){$/;"	f
next	api/decvalwtsource.cc	/^DecreasingValueWeightPostingSource::next(double min_wt) {$/;"	f	class:DecreasingValueWeightPostingSource
next	api/documentvaluelist.cc	/^DocumentValueList::next()$/;"	f	class:DocumentValueList
next	api/emptypostlist.cc	/^EmptyPostList::next(double)$/;"	f	class:EmptyPostList
next	api/maptermlist.h	/^	TermList * next() {$/;"	f	class:MapTermList
next	api/matchspy.cc	/^    TermList * next() {$/;"	f	class:StringAndFreqTermList
next	api/matchspy.cc	/^    TermList * next() {$/;"	f	class:ValueCountTermList
next	api/postingsource.cc	/^FixedWeightPostingSource::next(double min_wt)$/;"	f	class:Xapian::FixedWeightPostingSource
next	api/postingsource.cc	/^ValuePostingSource::next(double min_wt)$/;"	f	class:Xapian::ValuePostingSource
next	api/postlist.h	/^    Internal * next() { return next(0.0); }$/;"	f	class:Xapian::PostingIterator::Internal
next	api/vectortermlist.cc	/^VectorTermList::next()$/;"	f	class:VectorTermList
next	backends/chert/chert_alldocsmodifiedpostlist.cc	/^ChertAllDocsModifiedPostList::next(double w_min)$/;"	f	class:ChertAllDocsModifiedPostList
next	backends/chert/chert_alltermslist.cc	/^ChertAllTermsList::next()$/;"	f	class:ChertAllTermsList
next	backends/chert/chert_compact.cc	/^    bool next() {$/;"	f	class:ChertCompact::PostlistCursor
next	backends/chert/chert_cursor.cc	/^ChertCursor::next()$/;"	f	class:ChertCursor
next	backends/chert/chert_metadata.cc	/^ChertMetadataTermList::next()$/;"	f	class:ChertMetadataTermList
next	backends/chert/chert_modifiedpostlist.cc	/^ChertModifiedPostList::next(double w_min)$/;"	f	class:ChertModifiedPostList
next	backends/chert/chert_positionlist.cc	/^ChertPositionList::next()$/;"	f	class:ChertPositionList
next	backends/chert/chert_postlist.cc	/^ChertPostList::next(double w_min)$/;"	f	class:ChertPostList
next	backends/chert/chert_postlist.cc	/^PostlistChunkReader::next()$/;"	f	class:PostlistChunkReader
next	backends/chert/chert_spelling.cc	/^ChertSpellingTermList::next()$/;"	f	class:ChertSpellingTermList
next	backends/chert/chert_spellingwordslist.cc	/^ChertSpellingWordsList::next()$/;"	f	class:ChertSpellingWordsList
next	backends/chert/chert_synonym.cc	/^ChertSynonymTermList::next()$/;"	f	class:ChertSynonymTermList
next	backends/chert/chert_table.h	/^	bool next(Cursor *C_, int j) const {$/;"	f	class:ChertTable
next	backends/chert/chert_termlist.cc	/^ChertTermList::next()$/;"	f	class:ChertTermList
next	backends/chert/chert_valuelist.cc	/^ChertValueList::next()$/;"	f	class:ChertValueList
next	backends/chert/chert_values.cc	/^ValueChunkReader::next()$/;"	f	class:ValueChunkReader
next	backends/contiguousalldocspostlist.cc	/^ContiguousAllDocsPostList::next(double)$/;"	f	class:ContiguousAllDocsPostList
next	backends/glass/glass_alltermslist.cc	/^GlassAllTermsList::next()$/;"	f	class:GlassAllTermsList
next	backends/glass/glass_compact.cc	/^    bool next() {$/;"	f	class:GlassCompact::PositionCursor
next	backends/glass/glass_compact.cc	/^    bool next() {$/;"	f	class:GlassCompact::PostlistCursor
next	backends/glass/glass_cursor.cc	/^GlassCursor::next()$/;"	f	class:GlassCursor
next	backends/glass/glass_metadata.cc	/^GlassMetadataTermList::next()$/;"	f	class:GlassMetadataTermList
next	backends/glass/glass_positionlist.cc	/^GlassPositionList::next()$/;"	f	class:GlassPositionList
next	backends/glass/glass_postlist.cc	/^GlassPostList::next(double w_min)$/;"	f	class:GlassPostList
next	backends/glass/glass_postlist.cc	/^PostlistChunkReader::next()$/;"	f	class:PostlistChunkReader
next	backends/glass/glass_spelling.cc	/^GlassSpellingTermList::next()$/;"	f	class:GlassSpellingTermList
next	backends/glass/glass_spellingwordslist.cc	/^GlassSpellingWordsList::next()$/;"	f	class:GlassSpellingWordsList
next	backends/glass/glass_synonym.cc	/^GlassSynonymTermList::next()$/;"	f	class:GlassSynonymTermList
next	backends/glass/glass_table.h	/^	bool next(Glass::Cursor *C_, int j) const {$/;"	f	class:GlassTable
next	backends/glass/glass_termlist.cc	/^GlassTermList::next()$/;"	f	class:GlassTermList
next	backends/glass/glass_valuelist.cc	/^GlassValueList::next()$/;"	f	class:GlassValueList
next	backends/glass/glass_values.cc	/^ValueChunkReader::next()$/;"	f	class:ValueChunkReader
next	backends/inmemory/inmemory_alltermslist.cc	/^InMemoryAllTermsList::next() {$/;"	f	class:InMemoryAllTermsList
next	backends/inmemory/inmemory_database.cc	/^InMemoryAllDocsPostList::next(double \/*w_min*\/)$/;"	f	class:InMemoryAllDocsPostList
next	backends/inmemory/inmemory_database.cc	/^InMemoryPostList::next(double \/*w_min*\/)$/;"	f	class:InMemoryPostList
next	backends/inmemory/inmemory_database.cc	/^InMemoryTermList::next()$/;"	f	class:InMemoryTermList
next	backends/inmemory/inmemory_positionlist.cc	/^InMemoryPositionList::next()$/;"	f	class:InMemoryPositionList
next	backends/multi/multi_alltermslist.cc	/^MultiAllTermsList::next()$/;"	f	class:MultiAllTermsList
next	backends/multi/multi_postlist.cc	/^MultiPostList::next(double w_min)$/;"	f	class:MultiPostList
next	backends/multi/multi_termlist.cc	/^TermList * MultiTermList::next()$/;"	f	class:MultiTermList
next	backends/multi/multi_valuelist.cc	/^    void next() {$/;"	f	struct:SubValueList
next	backends/multi/multi_valuelist.cc	/^MultiValueList::next()$/;"	f	class:MultiValueList
next	backends/remote/net_postlist.cc	/^NetworkPostList::next(double)$/;"	f	class:NetworkPostList
next	backends/remote/net_termlist.cc	/^NetworkTermList::next()$/;"	f	class:NetworkTermList
next	backends/slowvaluelist.cc	/^SlowValueList::next()$/;"	f	class:SlowValueList
next	examples/xapian-pos.cc	/^    bool next() {$/;"	f	class:Pos
next	expand/ortermlist.cc	/^OrTermList::next()$/;"	f	class:OrTermList
next	geospatial/latlong_posting_source.cc	/^LatLongDistancePostingSource::next(double min_wt)$/;"	f	class:LatLongDistancePostingSource
next	languages/compiler/header.h	/^    struct among * next;$/;"	m	struct:among	typeref:struct:among::among
next	languages/compiler/header.h	/^    struct grouping * next;$/;"	m	struct:grouping	typeref:struct:grouping::grouping
next	languages/compiler/header.h	/^    struct include * next;$/;"	m	struct:include	typeref:struct:include::include
next	languages/compiler/header.h	/^    struct input * next;$/;"	m	struct:input	typeref:struct:input::input
next	languages/compiler/header.h	/^    struct input * next;$/;"	m	struct:tokeniser	typeref:struct:tokeniser::input
next	languages/compiler/header.h	/^    struct literalstring * next;$/;"	m	struct:literalstring	typeref:struct:literalstring::literalstring
next	languages/compiler/header.h	/^    struct m_pair * next;$/;"	m	struct:m_pair	typeref:struct:m_pair::m_pair
next	languages/compiler/header.h	/^    struct name * next;$/;"	m	struct:name	typeref:struct:name::name
next	languages/compiler/header.h	/^    struct node * next;$/;"	m	struct:node	typeref:struct:node::node
next	matcher/andmaybepostlist.cc	/^AndMaybePostList::next(double w_min)$/;"	f	class:AndMaybePostList
next	matcher/andnotpostlist.cc	/^AndNotPostList::next(double w_min)$/;"	f	class:AndNotPostList
next	matcher/externalpostlist.cc	/^ExternalPostList::next(double w_min)$/;"	f	class:ExternalPostList
next	matcher/extraweightpostlist.h	/^	PostList *next(double w_min) {$/;"	f	class:ExtraWeightPostList
next	matcher/maxpostlist.cc	/^MaxPostList::next(double w_min)$/;"	f	class:MaxPostList
next	matcher/mergepostlist.cc	/^MergePostList::next(double w_min)$/;"	f	class:MergePostList
next	matcher/msetpostlist.cc	/^MSetPostList::next(double w_min)$/;"	f	class:MSetPostList
next	matcher/multiandpostlist.cc	/^MultiAndPostList::next(double w_min)$/;"	f	class:MultiAndPostList
next	matcher/multixorpostlist.cc	/^MultiXorPostList::next(double w_min)$/;"	f	class:MultiXorPostList
next	matcher/orpositionlist.cc	/^OrPositionList::next()$/;"	f	class:OrPositionList
next	matcher/orpospostlist.cc	/^OrPosPostList::next(double w_min)$/;"	f	class:OrPosPostList
next	matcher/orpostlist.cc	/^OrPostList::next(double w_min)$/;"	f	class:OrPostList
next	matcher/selectpostlist.cc	/^SelectPostList::next(double w_min)$/;"	f	class:SelectPostList
next	matcher/synonympostlist.cc	/^SynonymPostList::next(double w_min)$/;"	f	class:SynonymPostList
next	matcher/valuegepostlist.cc	/^ValueGePostList::next(double)$/;"	f	class:ValueGePostList
next	matcher/valuerangepostlist.cc	/^ValueRangePostList::next(double)$/;"	f	class:ValueRangePostList
next	queryparser/lemon.c	/^  struct action *next;     \/* Next action for this state *\/$/;"	m	struct:action	typeref:struct:action::action	file:
next	queryparser/lemon.c	/^  struct config *next;     \/* Next configuration in the state *\/$/;"	m	struct:config	typeref:struct:config::config	file:
next	queryparser/lemon.c	/^  struct plink *next;      \/* The next propagate link *\/$/;"	m	struct:plink	typeref:struct:plink::plink	file:
next	queryparser/lemon.c	/^  struct rule *next;       \/* Next rule in the global list *\/$/;"	m	struct:rule	typeref:struct:rule::rule	file:
next	queryparser/lemon.c	/^  struct s_x1node *next;   \/* Next entry with the same hash *\/$/;"	m	struct:s_x1node	typeref:struct:s_x1node::s_x1node	file:
next	queryparser/lemon.c	/^  struct s_x2node *next;   \/* Next entry with the same hash *\/$/;"	m	struct:s_x2node	typeref:struct:s_x2node::s_x2node	file:
next	queryparser/lemon.c	/^  struct s_x3node *next;   \/* Next entry with the same hash *\/$/;"	m	struct:s_x3node	typeref:struct:s_x3node::s_x3node	file:
next	queryparser/lemon.c	/^  struct s_x4node *next;   \/* Next entry with the same hash *\/$/;"	m	struct:s_x4node	typeref:struct:s_x4node::s_x4node	file:
next	tests/api_percentages.cc	/^    void next(double \/*wt*\/) {$/;"	f	class:MyPostingSource
next	tests/api_postingsource.cc	/^    void next(double min_wt) {$/;"	f	class:SlowDecreasingValueWeightPostingSource
next	tests/api_postingsource.cc	/^    void next(double wt) {$/;"	f	class:MyDontAskWeightPostingSource
next	tests/api_postingsource.cc	/^    void next(double wt) {$/;"	f	class:MyOddPostingSource
next	tests/api_postingsource.cc	/^    void next(double wt) {$/;"	f	class:MyOddWeightingPostingSource
next	tests/api_postingsource.cc	/^    void next(double) { }$/;"	f	class:CloneTestPostingSource
next	tests/api_postingsource.cc	/^    void next(double) {$/;"	f	class:ChangeMaxweightPostingSource
next	tests/api_serialise.cc	/^    void next(double) { }$/;"	f	class:ExceptionalPostingSource
next_best_weight	matcher/collapser.h	/^    double next_best_weight;$/;"	m	class:CollapseData
next_char	languages/compiler/tokeniser.c	/^static int next_char(struct tokeniser * t) {$/;"	f	file:
next_chunk	backends/chert/chert_postlist.cc	/^ChertPostList::next_chunk()$/;"	f	class:ChertPostList
next_chunk	backends/glass/glass_postlist.cc	/^GlassPostList::next_chunk()$/;"	f	class:GlassPostList
next_default	backends/chert/chert_table.cc	/^ChertTable::next_default(Cursor * C_, int j) const$/;"	f	class:ChertTable
next_default	backends/glass/glass_table.cc	/^GlassTable::next_default(Glass::Cursor * C_, int j) const$/;"	f	class:GlassTable
next_file	tests/harness/index_utils.cc	/^FileIndexer::next_file()$/;"	f	class:FileIndexer
next_for_sequential	backends/chert/chert_table.cc	/^ChertTable::next_for_sequential(Cursor * C_, int \/*dummy*\/) const$/;"	f	class:ChertTable
next_for_sequential	backends/glass/glass_table.cc	/^GlassTable::next_for_sequential(Glass::Cursor * C_, int \/*dummy*\/) const$/;"	f	class:GlassTable
next_free_block	backends/chert/chert_btreebase.cc	/^ChertTable_base::next_free_block()$/;"	f	class:ChertTable_base
next_handling_prune	matcher/branchpostlist.h	/^next_handling_prune(PostList * & pl, double w_min, MultiMatch *matcher)$/;"	f
next_helper	matcher/multiandpostlist.h	/^    void next_helper(size_t n, double w_min) {$/;"	f	class:MultiAndPostList
next_in_chunk	backends/chert/chert_postlist.cc	/^ChertPostList::next_in_chunk()$/;"	f	class:ChertPostList
next_in_chunk	backends/glass/glass_postlist.cc	/^GlassPostList::next_in_chunk()$/;"	f	class:GlassPostList
next_label	languages/compiler/header.h	/^    int next_label;$/;"	m	struct:generator
next_real_char	languages/compiler/tokeniser.c	/^static int next_real_char(struct tokeniser * t) {$/;"	f	file:
next_symbol	languages/compiler/analyser.c	/^static int next_symbol(symbol * p, symbol * W, int utf8) {$/;"	f	file:
next_token	languages/compiler/tokeniser.c	/^static int next_token(struct tokeniser * t) {$/;"	f	file:
nextchar	common/getopt.cc	/^static char *nextchar;$/;"	v	file:
nextlhs	queryparser/lemon.c	/^  struct rule *nextlhs;    \/* Next rule with the same LHS *\/$/;"	m	struct:rule	typeref:struct:rule::rule	file:
nlookaheadtab	queryparser/lemon.c	/^  int nlookaheadtab;       \/* Number of entries in yy_lookahead[] *\/$/;"	m	struct:lemon	file:
noAction	queryparser/lemon.c	/^  int noAction;            \/* No-op action value *\/$/;"	m	struct:lemon	file:
noCode	queryparser/lemon.c	/^  int noCode;              \/* True if this rule has no associated C code *\/$/;"	m	struct:rule	file:
no_argument	common/gnu_getopt.h	79;"	d
no_collapse_key	matcher/collapser.h	/^    Xapian::doccount no_collapse_key;$/;"	m	class:Collapser
no_subdatabases	api/omdatabase.cc	/^static void no_subdatabases()$/;"	f	file:
nocommand_count	languages/compiler/header.h	/^    int nocommand_count;      \/* number of "no command" entries in this among *\/$/;"	m	struct:among
node	languages/compiler/header.h	/^struct node {$/;"	s
nodes	languages/compiler/header.h	/^    struct node * nodes;$/;"	m	struct:analyser	typeref:struct:analyser::node
nodist_pkgconfig_DATA	Makefile	/^nodist_pkgconfig_DATA = pkgconfig\/xapian-core.pc$/;"	m
nodist_xapianinclude_HEADERS	Makefile	/^nodist_xapianinclude_HEADERS = \\$/;"	m
nodist_xapianinclude_HEADERS	include/Makefile.mk	/^nodist_xapianinclude_HEADERS =\\$/;"	m
noinst_HEADERS	Makefile	/^noinst_HEADERS = api\/documentterm.h api\/documentvaluelist.h \\$/;"	m
noinst_HEADERS	tests/Makefile	/^noinst_HEADERS = apitest.h dbcheck.h harness\/backendmanager.h \\$/;"	m
noinst_LTLIBRARIES	Makefile	/^noinst_LTLIBRARIES = libgetopt.la$/;"	m
noinst_PROGRAMS	Makefile	/^noinst_PROGRAMS = $(am__EXEEXT_3)$/;"	m
noinst_PROGRAMS	bin/Makefile.mk	/^noinst_PROGRAMS =$/;"	m
noinst_SCRIPTS	Makefile	/^noinst_SCRIPTS = xapian-config$/;"	m
nolinenosflag	queryparser/lemon.c	/^  int nolinenosflag;       \/* True if #line statements should not be printed *\/$/;"	m	struct:lemon	file:
non_zero_inits	tests/api_weight.cc	/^    unsigned & zero_inits, & non_zero_inits;$/;"	m	class:CheckInitWeight	file:
nonascii_to_utf8	unicode/utf8itor.cc	/^nonascii_to_utf8(unsigned ch, char * buf)$/;"	f	namespace:Xapian::Unicode
normalizations	include/xapian/weight.h	/^    std::string normalizations;$/;"	m	class:Xapian::TfIdfWeight
now	common/realtime.h	/^inline double now() {$/;"	f	namespace:RealTime
nrhs	queryparser/lemon.c	/^  int nrhs;                  \/* Number of right-hand side symbols seen *\/$/;"	m	struct:pstate	file:
nrhs	queryparser/lemon.c	/^  int nrhs;                \/* Number of RHS symbols *\/$/;"	m	struct:rule	file:
nrhs	queryparser/queryparser_internal.cc	/^  signed char nrhs;     \/* Negative of the number of RHS symbols in the rule *\/$/;"	m	struct:__anon34	file:
nrule	queryparser/lemon.c	/^  int nrule;               \/* Number of rules *\/$/;"	m	struct:lemon	file:
nstate	queryparser/lemon.c	/^  int nstate;              \/* Number of states *\/$/;"	m	struct:lemon	file:
nsubsym	queryparser/lemon.c	/^  int nsubsym;             \/* Number of constituent symbols in the MULTI *\/$/;"	m	struct:symbol	file:
nsymbol	queryparser/lemon.c	/^  int nsymbol;                 \/* total number of symbols *\/$/;"	m	struct:acttab	file:
nsymbol	queryparser/lemon.c	/^  int nsymbol;             \/* Number of terminal and nonterminal symbols *\/$/;"	m	struct:lemon	file:
nterminal	queryparser/lemon.c	/^  int nterminal;               \/* Number of terminal symbols *\/$/;"	m	struct:acttab	file:
nterminal	queryparser/lemon.c	/^  int nterminal;           \/* Number of terminal symbols *\/$/;"	m	struct:lemon	file:
num_docs	tests/api_postingsource.cc	/^    Xapian::doccount num_docs;$/;"	m	class:MyDontAskWeightPostingSource	file:
num_docs	tests/api_postingsource.cc	/^    Xapian::doccount num_docs;$/;"	m	class:MyOddPostingSource	file:
num_docs	tests/api_postingsource.cc	/^    Xapian::doccount num_docs;$/;"	m	class:MyOddWeightingPostingSource	file:
num_entries	backends/glass/glass_version.h	/^    glass_tablesize_t num_entries;$/;"	m	class:Glass::RootInfo
num_terms	api/vectortermlist.h	/^    Xapian::termcount num_terms;$/;"	m	class:VectorTermList
number	languages/compiler/header.h	/^    int number;               \/* amongs are numbered 0, 1, 2 ... *\/$/;"	m	struct:among
number	languages/compiler/header.h	/^    int number;               \/* groupings are numbered 0, 1, 2 ... *\/$/;"	m	struct:grouping
number	languages/compiler/header.h	/^    int number;$/;"	m	struct:node
number	languages/compiler/header.h	/^    int number;$/;"	m	struct:tokeniser
number_of_entries	backends/chert/chert_postlist.h	/^	Xapian::doccount number_of_entries;$/;"	m	class:ChertPostList
number_of_entries	backends/glass/glass_postlist.h	/^	Xapian::doccount number_of_entries;$/;"	m	class:GlassPostList
numfromstr	api/sortable-serialise.cc	/^numfromstr(const std::string & str, std::string::size_type pos)$/;"	f	file:
nxstate	queryparser/lemon.c	/^  int nxstate;             \/* nstate with tail degenerate states removed *\/$/;"	m	struct:lemon	file:
off_from_end	include/xapian/eset.h	/^    Xapian::ESet::size_type off_from_end;$/;"	m	class:Xapian::ESetIterator
off_from_end	include/xapian/mset.h	/^    Xapian::MSet::size_type off_from_end;$/;"	m	class:Xapian::MSetIterator
off_t	config.h	472;"	d
off_t_redefinition_typedef	config.h	/^typedef long long off_t_redefinition_typedef;$/;"	t
offline_needed_revision	api/replication.cc	/^    string offline_needed_revision;$/;"	m	class:DatabaseReplica::Internal	file:
offline_revision	api/replication.cc	/^    string offline_revision;$/;"	m	class:DatabaseReplica::Internal	file:
offline_uuid	api/replication.cc	/^    string offline_uuid;$/;"	m	class:DatabaseReplica::Internal	file:
offset	backends/chert/chert_compact.cc	/^    Xapian::docid offset;$/;"	m	class:ChertCompact::PostlistCursor	file:
offset	backends/glass/glass_compact.cc	/^    Xapian::docid offset;$/;"	m	class:GlassCompact::PositionCursor	file:
offset	backends/glass/glass_compact.cc	/^    Xapian::docid offset;$/;"	m	class:GlassCompact::PostlistCursor	file:
offset	backends/glass/glass_table.h	/^	off_t offset;$/;"	m	class:GlassTable
offset	backends/glass/glass_version.h	/^    off_t offset;$/;"	m	class:GlassVersion
old_handler	common/msvcignoreinvalidparam.h	/^    _invalid_parameter_handler old_handler;$/;"	m	class:MSVCIgnoreInvalidParameter
old_item	matcher/collapser.h	/^    Xapian::Internal::MSetItem old_item;$/;"	m	class:Collapser
old_report_mode	common/msvcignoreinvalidparam.h	/^    int old_report_mode;$/;"	m	class:MSVCIgnoreInvalidParameter
old_root	backends/glass/glass_version.h	/^    RootInfo old_root[Glass::MAX_];$/;"	m	class:GlassVersion
oldest_changeset	backends/glass/glass_changes.h	/^    glass_revision_number_t oldest_changeset;$/;"	m	class:GlassChanges
oldest_changeset	backends/glass/glass_version.h	/^    mutable glass_revision_number_t oldest_changeset;$/;"	m	class:GlassVersion
oldincludedir	Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	docs/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	tests/Makefile	/^oldincludedir = \/usr\/include$/;"	m
omission	languages/compiler/header.h	/^    int omission;$/;"	m	struct:tokeniser
omission_error	languages/compiler/analyser.c	/^static void omission_error(struct analyser * a, int n) {$/;"	f	file:
on_SIGCHLD	net/tcpserver.cc	/^on_SIGCHLD(int \/*sig*\/)$/;"	f	file:
on_SIGCHLD	tests/harness/backendmanager_remotetcp.cc	/^on_SIGCHLD(int \/*sig*\/)$/;"	f	file:
on_SIGTERM	net/tcpserver.cc	/^on_SIGTERM(int \/*sig*\/)$/;"	f	file:
op	include/xapian/query.h	/^    enum op {$/;"	g	class:Xapian::Query
op	queryparser/lemon.c	/^static const struct s_options *op;$/;"	v	typeref:struct:s_options	file:
op	tests/api_queryparser.cc	/^    Xapian::Query::op op;$/;"	m	struct:qp_default_op3_test	file:
op_	api/queryinternal.cc	/^	Xapian::Query::op op_;$/;"	m	class:Xapian::Internal::AndContext::PosFilter	file:
op_tab	examples/quest.cc	/^static const qp_op op_tab[] = {$/;"	v	file:
open	backends/chert/chert_postlist.h	/^	bool open(chert_revision_number_t revno) {$/;"	f	class:ChertPostListTable
open	backends/chert/chert_table.cc	/^ChertTable::open()$/;"	f	class:ChertTable
open	backends/chert/chert_table.cc	/^ChertTable::open(chert_revision_number_t revision)$/;"	f	class:ChertTable
open	backends/databasereplicator.cc	/^DatabaseReplicator::open(const string & path)$/;"	f	class:Xapian::DatabaseReplicator
open	backends/dbfactory_remote.cc	/^Remote::open(const string &host, unsigned int port, useconds_t timeout_,$/;"	f	class:Xapian::Remote
open	backends/dbfactory_remote.cc	/^Remote::open(const string &program, const string &args,$/;"	f	class:Xapian::Remote
open	backends/glass/glass_postlist.h	/^	void open(int flags_, const RootInfo & root_info,$/;"	f	class:GlassPostListTable
open	backends/glass/glass_table.cc	/^GlassTable::open(int flags_, const RootInfo & root_info,$/;"	f	class:GlassTable
open	common/safefcntl.h	/^inline int open(const char *filename, int flags) {$/;"	f
open	common/safefcntl.h	/^inline int open(const char *filename, int flags, mode_t mode) {$/;"	f
open	common/safefcntl.h	/^inline int open(const char *filename, int64_t flags, ...) {$/;"	f
open	common/safefcntl.h	64;"	d
open	include/xapian/dbfactory.h	/^open()$/;"	f	namespace:Xapian::InMemory
open	include/xapian/dbfactory.h	/^open(const std::string &dir)$/;"	f	namespace:Xapian::Chert
open	include/xapian/dbfactory.h	/^open(const std::string &dir, int action, int block_size)$/;"	f	namespace:Xapian::Chert
open	tests/perftest/perftest.cc	/^PerfTestLogger::open(const string & logpath)$/;"	f	class:PerfTestLogger
open_allterms	backends/chert/chert_database.cc	/^ChertDatabase::open_allterms(const string & prefix) const$/;"	f	class:ChertDatabase
open_allterms	backends/chert/chert_database.cc	/^ChertWritableDatabase::open_allterms(const string & prefix) const$/;"	f	class:ChertWritableDatabase
open_allterms	backends/glass/glass_database.cc	/^GlassDatabase::open_allterms(const string & prefix) const$/;"	f	class:GlassDatabase
open_allterms	backends/glass/glass_database.cc	/^GlassWritableDatabase::open_allterms(const string & prefix) const$/;"	f	class:GlassWritableDatabase
open_allterms	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::open_allterms(const string & prefix) const$/;"	f	class:InMemoryDatabase
open_allterms	backends/remote/remote-database.cc	/^RemoteDatabase::open_allterms(const string & prefix) const {$/;"	f	class:RemoteDatabase
open_document	backends/chert/chert_database.cc	/^ChertDatabase::open_document(Xapian::docid did, bool lazy) const$/;"	f	class:ChertDatabase
open_document	backends/chert/chert_database.cc	/^ChertWritableDatabase::open_document(Xapian::docid did, bool lazy) const$/;"	f	class:ChertWritableDatabase
open_document	backends/glass/glass_database.cc	/^GlassDatabase::open_document(Xapian::docid did, bool lazy) const$/;"	f	class:GlassDatabase
open_document	backends/glass/glass_database.cc	/^GlassWritableDatabase::open_document(Xapian::docid did, bool lazy) const$/;"	f	class:GlassWritableDatabase
open_document	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::open_document(Xapian::docid did, bool lazy) const$/;"	f	class:InMemoryDatabase
open_document	backends/remote/remote-database.cc	/^RemoteDatabase::open_document(Xapian::docid did, bool \/*lazy*\/) const$/;"	f	class:RemoteDatabase
open_lazy_post_list	matcher/queryoptimiser.h	/^    LeafPostList * open_lazy_post_list(const std::string& term,$/;"	f	class:QueryOptimiser
open_metadata_keylist	backends/chert/chert_database.cc	/^ChertDatabase::open_metadata_keylist(const std::string &prefix) const$/;"	f	class:ChertDatabase
open_metadata_keylist	backends/database.cc	/^Database::Internal::open_metadata_keylist(const string &) const$/;"	f	class:Xapian::Database::Internal
open_metadata_keylist	backends/glass/glass_database.cc	/^GlassDatabase::open_metadata_keylist(const std::string &prefix) const$/;"	f	class:GlassDatabase
open_metadata_keylist	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::open_metadata_keylist(const string &) const$/;"	f	class:InMemoryDatabase
open_metadata_keylist	backends/remote/remote-database.cc	/^RemoteDatabase::open_metadata_keylist(const std::string &prefix) const$/;"	f	class:RemoteDatabase
open_nearby_postlist	api/leafpostlist.cc	/^LeafPostList::open_nearby_postlist(const std::string &) const$/;"	f	class:LeafPostList
open_nearby_postlist	backends/glass/glass_postlist.cc	/^GlassPostList::open_nearby_postlist(const std::string & term_) const$/;"	f	class:GlassPostList
open_position_list	api/postlist.cc	/^PostList::open_position_list() const$/;"	f	class:Xapian::PostList
open_position_list	backends/chert/chert_alldocspostlist.cc	/^ChertAllDocsPostList::open_position_list() const$/;"	f	class:ChertAllDocsPostList
open_position_list	backends/chert/chert_database.cc	/^ChertDatabase::open_position_list(Xapian::docid did, const string & term) const$/;"	f	class:ChertDatabase
open_position_list	backends/chert/chert_modifiedpostlist.cc	/^ChertModifiedPostList::open_position_list() const$/;"	f	class:ChertModifiedPostList
open_position_list	backends/chert/chert_postlist.cc	/^ChertPostList::open_position_list() const$/;"	f	class:ChertPostList
open_position_list	backends/contiguousalldocspostlist.cc	/^ContiguousAllDocsPostList::open_position_list() const$/;"	f	class:ContiguousAllDocsPostList
open_position_list	backends/glass/glass_alldocspostlist.cc	/^GlassAllDocsPostList::open_position_list() const$/;"	f	class:GlassAllDocsPostList
open_position_list	backends/glass/glass_database.cc	/^GlassDatabase::open_position_list(Xapian::docid did, const string & term) const$/;"	f	class:GlassDatabase
open_position_list	backends/glass/glass_database.cc	/^GlassWritableDatabase::open_position_list(Xapian::docid did, const string & term) const$/;"	f	class:GlassWritableDatabase
open_position_list	backends/glass/glass_postlist.cc	/^GlassPostList::open_position_list() const$/;"	f	class:GlassPostList
open_position_list	backends/inmemory/inmemory_database.cc	/^InMemoryAllDocsPostList::open_position_list() const$/;"	f	class:InMemoryAllDocsPostList
open_position_list	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::open_position_list(Xapian::docid did,$/;"	f	class:InMemoryDatabase
open_position_list	backends/inmemory/inmemory_database.cc	/^InMemoryPostList::open_position_list() const$/;"	f	class:InMemoryPostList
open_position_list	backends/multi/multi_postlist.cc	/^MultiPostList::open_position_list() const$/;"	f	class:MultiPostList
open_position_list	backends/remote/net_postlist.cc	/^NetworkPostList::open_position_list() const$/;"	f	class:NetworkPostList
open_position_list	backends/remote/remote-database.cc	/^RemoteDatabase::open_position_list(Xapian::docid did, const string &term) const$/;"	f	class:RemoteDatabase
open_position_list	matcher/selectpostlist.h	/^	PositionList * open_position_list() const { return source->open_position_list(); }$/;"	f	class:SelectPostList
open_post_list	backends/chert/chert_database.cc	/^ChertDatabase::open_post_list(const string& term) const$/;"	f	class:ChertDatabase
open_post_list	backends/chert/chert_database.cc	/^ChertWritableDatabase::open_post_list(const string& tname) const$/;"	f	class:ChertWritableDatabase
open_post_list	backends/glass/glass_database.cc	/^GlassDatabase::open_post_list(const string& term) const$/;"	f	class:GlassDatabase
open_post_list	backends/glass/glass_database.cc	/^GlassWritableDatabase::open_post_list(const string& tname) const$/;"	f	class:GlassWritableDatabase
open_post_list	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::open_post_list(const string & tname) const$/;"	f	class:InMemoryDatabase
open_post_list	backends/remote/remote-database.cc	/^RemoteDatabase::open_post_list(const string &term) const$/;"	f	class:RemoteDatabase
open_post_list	matcher/localsubmatch.cc	/^LocalSubMatch::open_post_list(const string& term,$/;"	f	class:LocalSubMatch
open_post_list	matcher/queryoptimiser.h	/^    LeafPostList * open_post_list(const std::string& term,$/;"	f	class:QueryOptimiser
open_socket	net/remotetcpclient.cc	/^RemoteTcpClient::open_socket(const string & hostname, int port,$/;"	f	class:RemoteTcpClient
open_socket	net/replicatetcpclient.cc	/^ReplicateTcpClient::open_socket(const string & hostname, int port,$/;"	f	class:ReplicateTcpClient
open_socket	net/tcpclient.cc	/^TcpClient::open_socket(const std::string & hostname, int port,$/;"	f	class:TcpClient
open_spelling_termlist	backends/chert/chert_database.cc	/^ChertDatabase::open_spelling_termlist(const string & word) const$/;"	f	class:ChertDatabase
open_spelling_termlist	backends/database.cc	/^Database::Internal::open_spelling_termlist(const string &) const$/;"	f	class:Xapian::Database::Internal
open_spelling_termlist	backends/glass/glass_database.cc	/^GlassDatabase::open_spelling_termlist(const string & word) const$/;"	f	class:GlassDatabase
open_spelling_wordlist	backends/chert/chert_database.cc	/^ChertDatabase::open_spelling_wordlist() const$/;"	f	class:ChertDatabase
open_spelling_wordlist	backends/chert/chert_database.cc	/^ChertWritableDatabase::open_spelling_wordlist() const$/;"	f	class:ChertWritableDatabase
open_spelling_wordlist	backends/database.cc	/^Database::Internal::open_spelling_wordlist() const$/;"	f	class:Xapian::Database::Internal
open_spelling_wordlist	backends/glass/glass_database.cc	/^GlassDatabase::open_spelling_wordlist() const$/;"	f	class:GlassDatabase
open_spelling_wordlist	backends/glass/glass_database.cc	/^GlassWritableDatabase::open_spelling_wordlist() const$/;"	f	class:GlassWritableDatabase
open_stub	backends/dbfactory.cc	/^open_stub(Database &db, const string &file)$/;"	f	namespace:Xapian
open_stub	backends/dbfactory.cc	/^open_stub(WritableDatabase &db, const string &file, int flags)$/;"	f	namespace:Xapian
open_stub	include/xapian/dbfactory.h	/^open_stub(const std::string &file)$/;"	f	namespace:Xapian::Auto
open_stub	include/xapian/dbfactory.h	/^open_stub(const std::string &file, int action)$/;"	f	namespace:Xapian::Auto
open_synonym_keylist	backends/chert/chert_database.cc	/^ChertDatabase::open_synonym_keylist(const string & prefix) const$/;"	f	class:ChertDatabase
open_synonym_keylist	backends/chert/chert_database.cc	/^ChertWritableDatabase::open_synonym_keylist(const string & prefix) const$/;"	f	class:ChertWritableDatabase
open_synonym_keylist	backends/database.cc	/^Database::Internal::open_synonym_keylist(const string &) const$/;"	f	class:Xapian::Database::Internal
open_synonym_keylist	backends/glass/glass_database.cc	/^GlassDatabase::open_synonym_keylist(const string & prefix) const$/;"	f	class:GlassDatabase
open_synonym_keylist	backends/glass/glass_database.cc	/^GlassWritableDatabase::open_synonym_keylist(const string & prefix) const$/;"	f	class:GlassWritableDatabase
open_synonym_termlist	backends/chert/chert_database.cc	/^ChertDatabase::open_synonym_termlist(const string & term) const$/;"	f	class:ChertDatabase
open_synonym_termlist	backends/database.cc	/^Database::Internal::open_synonym_termlist(const string &) const$/;"	f	class:Xapian::Database::Internal
open_synonym_termlist	backends/glass/glass_database.cc	/^GlassDatabase::open_synonym_termlist(const string & term) const$/;"	f	class:GlassDatabase
open_tables	backends/chert/chert_database.cc	/^ChertDatabase::open_tables(chert_revision_number_t revision)$/;"	f	class:ChertDatabase
open_tables	backends/glass/glass_database.cc	/^GlassDatabase::open_tables(int flags)$/;"	f	class:GlassDatabase
open_tables_consistent	backends/chert/chert_database.cc	/^ChertDatabase::open_tables_consistent()$/;"	f	class:ChertDatabase
open_term_list	api/omdocument.cc	/^Xapian::Document::Internal::open_term_list() const$/;"	f	class:Xapian::Document::Internal
open_term_list	backends/chert/chert_database.cc	/^ChertDatabase::open_term_list(Xapian::docid did) const$/;"	f	class:ChertDatabase
open_term_list	backends/glass/glass_database.cc	/^GlassDatabase::open_term_list(Xapian::docid did) const$/;"	f	class:GlassDatabase
open_term_list	backends/glass/glass_database.cc	/^GlassWritableDatabase::open_term_list(Xapian::docid did) const$/;"	f	class:GlassWritableDatabase
open_term_list	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::open_term_list(Xapian::docid did) const$/;"	f	class:InMemoryDatabase
open_term_list	backends/remote/remote-database.cc	/^RemoteDatabase::open_term_list(Xapian::docid did) const$/;"	f	class:RemoteDatabase
open_termlist	backends/chert/chert_spelling.cc	/^ChertSpellingTable::open_termlist(const string & word)$/;"	f	class:ChertSpellingTable
open_termlist	backends/chert/chert_synonym.cc	/^ChertSynonymTable::open_termlist(const string & term)$/;"	f	class:ChertSynonymTable
open_termlist	backends/glass/glass_spelling.cc	/^GlassSpellingTable::open_termlist(const string & word)$/;"	f	class:GlassSpellingTable
open_termlist	backends/glass/glass_synonym.cc	/^GlassSynonymTable::open_termlist(const string & term)$/;"	f	class:GlassSynonymTable
open_value_list	backends/chert/chert_database.cc	/^ChertDatabase::open_value_list(Xapian::valueno slot) const$/;"	f	class:ChertDatabase
open_value_list	backends/chert/chert_database.cc	/^ChertWritableDatabase::open_value_list(Xapian::valueno slot) const$/;"	f	class:ChertWritableDatabase
open_value_list	backends/database.cc	/^Database::Internal::open_value_list(Xapian::valueno slot) const$/;"	f	class:Xapian::Database::Internal
open_value_list	backends/glass/glass_database.cc	/^GlassDatabase::open_value_list(Xapian::valueno slot) const$/;"	f	class:GlassDatabase
open_value_list	backends/glass/glass_database.cc	/^GlassWritableDatabase::open_value_list(Xapian::valueno slot) const$/;"	f	class:GlassWritableDatabase
open_writable	backends/dbfactory_remote.cc	/^Remote::open_writable(const string &host, unsigned int port,$/;"	f	class:Xapian::Remote
open_writable	backends/dbfactory_remote.cc	/^Remote::open_writable(const string &program, const string &args,$/;"	f	class:Xapian::Remote
opendir	common/msvc_dirent.cc	/^DIR *opendir(const char *name)$/;"	f
operator !=	api/smallvector.h	/^	bool operator!=(const const_iterator& o) const { return !(*this == o); }$/;"	f	class:Xapian::SmallVector::const_iterator
operator !=	backends/chert/chert_table.h	/^    bool operator!=(Key key2) const { return !(*this == key2); }$/;"	f	class:Key
operator !=	backends/glass/glass_freelist.h	/^    bool operator!=(const GlassFLCursor & o) const {$/;"	f	class:GlassFLCursor
operator !=	backends/inmemory/KeyDomet.h	/^        bool operator!=(const KeyDomet<SIZE>& other) const$/;"	f	class:kdmt::KeyDometSize::KeyDomet
operator !=	backends/inmemory/KeyDomet.h	/^        constexpr bool operator!=(const kdmt128_t& other) const$/;"	f	struct:kdmt::KeyDometSize::kdmt128_t
operator !=	include/xapian/geospatial.h	/^operator!=(const LatLongCoordsIterator &a, const LatLongCoordsIterator &b)$/;"	f	namespace:Xapian
operator !=	include/xapian/intrusive_ptr.h	/^template<class T, class U> inline bool operator!=(T * a, intrusive_ptr<U> const & b)$/;"	f	namespace:Xapian::Internal
operator !=	include/xapian/intrusive_ptr.h	/^template<class T, class U> inline bool operator!=(T * a, opt_intrusive_ptr<U> const & b)$/;"	f	namespace:Xapian::Internal
operator !=	include/xapian/intrusive_ptr.h	/^template<class T, class U> inline bool operator!=(intrusive_ptr<T> const & a, U * b)$/;"	f	namespace:Xapian::Internal
operator !=	include/xapian/intrusive_ptr.h	/^template<class T, class U> inline bool operator!=(intrusive_ptr<T> const & a, intrusive_ptr<U> const & b)$/;"	f	namespace:Xapian::Internal
operator !=	include/xapian/intrusive_ptr.h	/^template<class T, class U> inline bool operator!=(opt_intrusive_ptr<T> const & a, U * b)$/;"	f	namespace:Xapian::Internal
operator !=	include/xapian/intrusive_ptr.h	/^template<class T, class U> inline bool operator!=(opt_intrusive_ptr<T> const & a, opt_intrusive_ptr<U> const & b)$/;"	f	namespace:Xapian::Internal
operator !=	net/resolver.h	/^	bool operator!=(const const_iterator& o) {$/;"	f	class:Resolver::const_iterator
operator !=	queryparser/cjk-tokenizer.h	/^operator!=(const CJKTokenIterator & a, const CJKTokenIterator & b)$/;"	f
operator !=	queryparser/queryparser_internal.cc	/^    bool operator!=(const SynonymIterator & o) const {$/;"	f	class:SynonymIterator
operator !=	tests/harness/testutils.h	/^inline bool operator!=(const Xapian::MSet &first, const Xapian::MSet &second)$/;"	f
operator &	backends/inmemory/KeyDomet.h	/^        constexpr kdmt128_t operator&(const kdmt128_t& other) const$/;"	f	struct:kdmt::KeyDometSize::kdmt128_t
operator &	include/xapian/query.h	/^operator&(const Query & a, const InvertedQuery_ & b)$/;"	f	namespace:Xapian
operator &	include/xapian/query.h	/^operator&(const Query & a, const Query & b)$/;"	f	namespace:Xapian
operator &=	include/xapian/query.h	/^    const Query operator&=(const Query & o) {$/;"	f	class:Xapian::Query
operator ()	api/compactor.cc	/^    bool operator()(size_t a, size_t b) const {$/;"	f	class:CmpByFirstUsed
operator ()	api/errorhandler.cc	/^Xapian::ErrorHandler::operator()(Xapian::Error & error)$/;"	f	class:Xapian::ErrorHandler
operator ()	api/expanddecider.cc	/^ExpandDeciderAnd::operator()(const string &term) const$/;"	f	class:Xapian::ExpandDeciderAnd
operator ()	api/expanddecider.cc	/^ExpandDeciderFilterPrefix::operator()(const string &term) const$/;"	f	class:Xapian::ExpandDeciderFilterPrefix
operator ()	api/expanddecider.cc	/^ExpandDeciderFilterTerms::operator()(const string &term) const$/;"	f	class:Xapian::ExpandDeciderFilterTerms
operator ()	api/keymaker.cc	/^MultiValueKeyMaker::operator()(const Xapian::Document & doc) const$/;"	f	class:Xapian::MultiValueKeyMaker
operator ()	api/matchspy.cc	/^    bool operator()(const StringAndFrequency &a,$/;"	f	class:StringAndFreqCmpByFreq
operator ()	api/matchspy.cc	/^ValueCountMatchSpy::operator()(const Document &doc, double) {$/;"	f	class:ValueCountMatchSpy
operator ()	api/omenquire.cc	/^    bool operator()(const string &left,$/;"	f	class:Xapian::ByQueryIndexCmp
operator ()	api/queryinternal.cc	/^    bool operator()(const PostList *a, const PostList *b) const {$/;"	f	struct:Xapian::Internal::ComparePostListTermFreqAscending
operator ()	api/queryinternal.cc	/^    bool operator()(const PostList *a, const PostList *b) {$/;"	f	struct:Xapian::Internal::CmpMaxOrTerms
operator ()	api/queryinternal.cc	/^    bool operator()(const Xapian::Query & q) const {$/;"	f	struct:Xapian::Internal::is_matchnothing
operator ()	api/queryinternal.cc	/^    void operator()(CLASS *p) const { delete p; }$/;"	f	struct:delete_ptr
operator ()	api/valuerangeproc.cc	/^DateRangeProcessor::operator()(const string& b, const string& e)$/;"	f	class:Xapian::DateRangeProcessor
operator ()	api/valuerangeproc.cc	/^DateValueRangeProcessor::operator()(string &begin, string &end)$/;"	f	class:Xapian::DateValueRangeProcessor
operator ()	api/valuerangeproc.cc	/^NumberRangeProcessor::operator()(const string& b, const string& e)$/;"	f	class:Xapian::NumberRangeProcessor
operator ()	api/valuerangeproc.cc	/^NumberValueRangeProcessor::operator()(string &begin, string &end)$/;"	f	class:Xapian::NumberValueRangeProcessor
operator ()	api/valuerangeproc.cc	/^RangeProcessor::operator()(const string& b, const string& e)$/;"	f	class:Xapian::RangeProcessor
operator ()	api/valuerangeproc.cc	/^StringValueRangeProcessor::operator()(string &begin, string &end)$/;"	f	class:Xapian::StringValueRangeProcessor
operator ()	api/valuesetmatchdecider.cc	/^ValueSetMatchDecider::operator()(const Xapian::Document& doc) const$/;"	f	class:Xapian::ValueSetMatchDecider
operator ()	backends/byte_length_strings.h	/^    bool operator()(const ByteLengthPrefixedStringItor *a,$/;"	f	struct:ByteLengthPrefixedStringItorGt
operator ()	backends/chert/chert_compact.cc	/^    bool operator()(const ChertCursor *a, const ChertCursor *b) const {$/;"	f	struct:ChertCompact::CursorGt
operator ()	backends/chert/chert_compact.cc	/^    bool operator()(const PostlistCursor *a, const PostlistCursor *b) const {$/;"	f	class:ChertCompact::PostlistCursorGt
operator ()	backends/chert/chert_spelling.cc	/^    bool operator()(const TermList *a, const TermList *b) const {$/;"	f	struct:TermListGreaterApproxSize
operator ()	backends/glass/glass_compact.cc	/^    bool operator()(const GlassCursor *a, const GlassCursor *b) const {$/;"	f	struct:GlassCompact::CursorGt
operator ()	backends/glass/glass_compact.cc	/^    bool operator()(const PositionCursor *a, const PositionCursor *b) const {$/;"	f	class:GlassCompact::PositionCursorGt
operator ()	backends/glass/glass_compact.cc	/^    bool operator()(const PostlistCursor *a, const PostlistCursor *b) const {$/;"	f	class:GlassCompact::PostlistCursorGt
operator ()	backends/glass/glass_spelling.cc	/^    bool operator()(const TermList *a, const TermList *b) const {$/;"	f	struct:TermListGreaterApproxSize
operator ()	backends/inmemory/KeyDomet.h	/^        bool operator()(const KeyDometStr<StrImp, Size>& lhs, const KeyDometStr<StrImp, Size>& rhs) const$/;"	f	struct:kdmt::KeyDometSize::KeyDometComparator
operator ()	backends/inmemory/KeyDomet.h	/^        size_t operator()(const KeyDometStr<StrImp, Size>& k) const$/;"	f	struct:kdmt::KeyDometSize::KeyDometHasher
operator ()	backends/inmemory/inmemory_database.h	/^	int operator() (const InMemoryPosting &p1,$/;"	f	class:InMemoryPostingLessThan
operator ()	backends/inmemory/inmemory_database.h	/^	int operator() (const InMemoryTermEntry&p1,$/;"	f	class:InMemoryTermEntryLessThan
operator ()	backends/multi/multi_alltermslist.cc	/^    bool operator()(const TermList *a, const TermList *b) const {$/;"	f	struct:CompareTermListsByTerm
operator ()	backends/multi/multi_alltermslist.cc	/^    void operator()(CLASS *p) const { delete p; }$/;"	f	struct:delete_ptr
operator ()	backends/multi/multi_valuelist.cc	/^    bool operator()(const SubValueList *a, const SubValueList *b) const {$/;"	f	struct:CompareSubValueListsByDocId
operator ()	backends/multi/multi_valuelist.cc	/^    void operator()(CLASS *p) const { delete p; }$/;"	f	struct:delete_ptr
operator ()	backends/prefix_compressed_strings.h	/^    bool operator()(const PrefixCompressedStringItor *a,$/;"	f	struct:PrefixCompressedStringItorGt
operator ()	examples/xapian-pos.cc	/^    bool operator()(const Pos* a, const Pos* b) {$/;"	f	struct:PosCmp
operator ()	expand/esetinternal.cc	/^    bool operator()(const TermList *a, const TermList *b) const {$/;"	f	struct:Xapian::CompareTermListSizeAscending
operator ()	expand/esetinternal.cc	/^    void operator()(CLASS *p) const { delete p; }$/;"	f	struct:Xapian::delete_ptr
operator ()	geospatial/latlong_distance_keymaker.cc	/^LatLongDistanceKeyMaker::operator()(const Document &doc) const$/;"	f	class:LatLongDistanceKeyMaker
operator ()	geospatial/latlong_metrics.cc	/^LatLongMetric::operator()(const LatLongCoords & a,$/;"	f	class:LatLongMetric
operator ()	include/xapian/geospatial.h	/^    double operator()(const LatLongCoords & a, const std::string & b) const$/;"	f	class:Xapian::LatLongMetric
operator ()	include/xapian/queryparser.h	/^    virtual bool operator()(const std::string & term) const {$/;"	f	class:Xapian::SimpleStopper
operator ()	languages/stem.cc	/^Stem::operator()(const std::string &word) const$/;"	f	class:Xapian::Stem
operator ()	languages/steminternal.cc	/^SnowballStemImplementation::operator()(const string & word)$/;"	f	class:Xapian::SnowballStemImplementation
operator ()	matcher/exactphrasepostlist.cc	/^    bool operator()(unsigned a, unsigned b) const {$/;"	f	class:TermCompare
operator ()	matcher/multiandpostlist.h	/^	bool operator()(const PostList *a, const PostList *b) const {$/;"	f	struct:MultiAndPostList::ComparePostListTermFreqAscending
operator ()	matcher/multimatch.cc	/^MultipleMatchSpy::operator()(const Xapian::Document &doc, double wt) {$/;"	f	class:MultipleMatchSpy
operator ()	matcher/nearpostlist.cc	/^    bool operator()(const PositionList * a, const PositionList * b) const {$/;"	f	struct:Cmp
operator ()	matcher/nearpostlist.cc	/^    bool operator()(const PostList * a, const PostList * b) const {$/;"	f	struct:TermCmp
operator ()	tests/api_anydb.cc	/^	bool operator()(const string & tname) const {$/;"	f	class:EvenParityExpandFunctor
operator ()	tests/api_backend.cc	/^    bool operator()(const Xapian::Document &) const {$/;"	f	class:CheckMatchDecider
operator ()	tests/api_db.cc	/^    bool operator()(const Xapian::Document &doc) const {$/;"	f	class:GrepMatchDecider
operator ()	tests/api_matchspy.cc	/^    void operator()(const Xapian::Document &, double) {$/;"	f	class:MySpy	file:
operator ()	tests/api_matchspy.cc	/^    void operator()(const Xapian::Document &doc, double) {$/;"	f	class:SimpleMatchSpy
operator ()	tests/api_none.cc	/^    Xapian::Query operator()(const std::string&, const std::string&)$/;"	f	class:TestRangeProcessor
operator ()	tests/api_none.cc	/^    Xapian::Query operator()(const string &str) {$/;"	f	class:TestFieldProcessor
operator ()	tests/api_none.cc	/^    Xapian::valueno operator()(std::string &, std::string &) {$/;"	f	class:TestValueRangeProcessor
operator ()	tests/api_none.cc	/^    bool operator()(const std::string&) const { return true; }$/;"	f	class:TestStopper
operator ()	tests/api_none.cc	/^    bool operator()(const string&) const { return true; }$/;"	f	class:TestExpandDecider
operator ()	tests/api_none.cc	/^    string operator()(const Xapian::Document&) const { return string(); }$/;"	f	class:TestKeyMaker
operator ()	tests/api_none.cc	/^    void operator()(const Xapian::Document &, double) { }$/;"	f	class:TestMatchSpy
operator ()	tests/api_queryparser.cc	/^    Xapian::Query operator()(const std::string & str) {$/;"	f	class:DateRangeFieldProcessor	file:
operator ()	tests/api_queryparser.cc	/^    Xapian::Query operator()(const std::string & str) {$/;"	f	class:HostFieldProcessor	file:
operator ()	tests/api_queryparser.cc	/^    Xapian::Query operator()(const std::string & str) {$/;"	f	class:TitleFieldProcessor	file:
operator ()	tests/api_queryparser.cc	/^    Xapian::Query operator()(const std::string& b, const std::string& e)$/;"	f	struct:AuthorRangeProcessor
operator ()	tests/api_queryparser.cc	/^    Xapian::valueno operator()(std::string &begin, std::string &end) {$/;"	f	struct:AuthorValueRangeProcessor
operator ()	tests/api_serialise.cc	/^    void operator()(const Xapian::Document &, double) {$/;"	f	class:ExceptionalMatchSpy
operator ()	tests/api_sorting.cc	/^    std::string operator() (const Xapian::Document &) const$/;"	f	class:NeverUseMeKeyMaker
operator ()	tests/api_stem.cc	/^    string operator()(const string & word) {$/;"	f	class:MyStemImpl	file:
operator *	api/omenquire.cc	/^MSetIterator::operator*() const$/;"	f	class:Xapian::MSetIterator
operator *	api/positioniterator.cc	/^PositionIterator::operator*() const$/;"	f	class:Xapian::PositionIterator
operator *	api/postingiterator.cc	/^PostingIterator::operator*() const$/;"	f	class:Xapian::PostingIterator
operator *	api/smallvector.h	/^	T operator*() const {$/;"	f	class:Xapian::SmallVector::const_iterator
operator *	api/termiterator.cc	/^TermIterator::operator*() const$/;"	f	class:Xapian::TermIterator
operator *	api/valueiterator.cc	/^ValueIterator::operator*() const$/;"	f	class:Xapian::ValueIterator
operator *	backends/byte_length_strings.h	/^    std::string operator*() const {$/;"	f	class:ByteLengthPrefixedStringItor
operator *	backends/prefix_compressed_strings.h	/^    const std::string & operator*() const {$/;"	f	class:PrefixCompressedStringItor
operator *	expand/esetinternal.cc	/^ESetIterator::operator*() const$/;"	f	class:Xapian::ESetIterator
operator *	include/xapian/derefwrapper.h	/^    const T & operator*() const { return res; }$/;"	f	class:Xapian::DerefWrapper_
operator *	include/xapian/geospatial.h	/^    const LatLongCoord & operator*() const {$/;"	f	class:Xapian::LatLongCoordsIterator
operator *	include/xapian/intrusive_ptr.h	/^    T & operator*() const$/;"	f	class:Xapian::Internal::intrusive_ptr
operator *	include/xapian/intrusive_ptr.h	/^    T & operator*() const$/;"	f	class:Xapian::Internal::opt_intrusive_ptr
operator *	include/xapian/query.h	/^operator*(const Query & q, double factor)$/;"	f	namespace:Xapian
operator *	include/xapian/query.h	/^operator*(double factor, const Query & q)$/;"	f	namespace:Xapian
operator *	net/resolver.h	/^	struct addrinfo& operator*() const {$/;"	f	class:Resolver::const_iterator
operator *	queryparser/cjk-tokenizer.cc	/^CJKTokenIterator::operator*() const$/;"	f	class:CJKTokenIterator
operator *	queryparser/queryparser_internal.cc	/^    const Xapian::Query operator*() const {$/;"	f	class:SynonymIterator
operator *=	include/xapian/query.h	/^    const Query operator*=(double factor) {$/;"	f	class:Xapian::Query
operator +	api/smallvector.h	/^	const_iterator operator+(int n) { return const_iterator(ptr + n); }$/;"	f	class:Xapian::SmallVector::const_iterator
operator +	include/xapian/eset.h	/^    ESetIterator operator+(difference_type n) const {$/;"	f	class:Xapian::ESetIterator
operator +	include/xapian/eset.h	/^operator+(ESetIterator::difference_type n, const ESetIterator& it)$/;"	f	namespace:Xapian
operator +	include/xapian/mset.h	/^    MSetIterator operator+(difference_type n) const {$/;"	f	class:Xapian::MSetIterator
operator +	include/xapian/mset.h	/^operator+(MSetIterator::difference_type n, const MSetIterator& it)$/;"	f	namespace:Xapian
operator ++	api/positioniterator.cc	/^PositionIterator::operator++()$/;"	f	class:Xapian::PositionIterator
operator ++	api/postingiterator.cc	/^PostingIterator::operator++()$/;"	f	class:Xapian::PostingIterator
operator ++	api/smallvector.h	/^	const_iterator & operator++() { ++ptr; return *this; }$/;"	f	class:Xapian::SmallVector::const_iterator
operator ++	api/smallvector.h	/^	const_iterator operator++(int) { return const_iterator(ptr++); }$/;"	f	class:Xapian::SmallVector::const_iterator
operator ++	api/termiterator.cc	/^TermIterator::operator++()$/;"	f	class:Xapian::TermIterator
operator ++	api/valueiterator.cc	/^ValueIterator::operator++()$/;"	f	class:Xapian::ValueIterator
operator ++	backends/byte_length_strings.h	/^    ByteLengthPrefixedStringItor & operator++() {$/;"	f	class:ByteLengthPrefixedStringItor
operator ++	backends/byte_length_strings.h	/^    ByteLengthPrefixedStringItor operator++(int) {$/;"	f	class:ByteLengthPrefixedStringItor
operator ++	backends/prefix_compressed_strings.h	/^    PrefixCompressedStringItor & operator++() {$/;"	f	class:PrefixCompressedStringItor
operator ++	backends/prefix_compressed_strings.h	/^    PrefixCompressedStringItor operator++(int) {$/;"	f	class:PrefixCompressedStringItor
operator ++	include/xapian/eset.h	/^    ESetIterator & operator++() {$/;"	f	class:Xapian::ESetIterator
operator ++	include/xapian/eset.h	/^    ESetIterator operator++(int) {$/;"	f	class:Xapian::ESetIterator
operator ++	include/xapian/geospatial.h	/^    DerefWrapper_<LatLongCoord> operator++(int) {$/;"	f	class:Xapian::LatLongCoordsIterator
operator ++	include/xapian/geospatial.h	/^    LatLongCoordsIterator & operator++() {$/;"	f	class:Xapian::LatLongCoordsIterator
operator ++	include/xapian/mset.h	/^    MSetIterator & operator++() {$/;"	f	class:Xapian::MSetIterator
operator ++	include/xapian/mset.h	/^    MSetIterator operator++(int) {$/;"	f	class:Xapian::MSetIterator
operator ++	include/xapian/positioniterator.h	/^    DerefWrapper_<Xapian::termpos> operator++(int) {$/;"	f	class:Xapian::PositionIterator
operator ++	include/xapian/postingiterator.h	/^    DerefWrapper_<Xapian::docid> operator++(int) {$/;"	f	class:Xapian::PostingIterator
operator ++	include/xapian/termiterator.h	/^    DerefWrapper_<std::string> operator++(int) {$/;"	f	class:Xapian::TermIterator
operator ++	include/xapian/unicode.h	/^    Utf8Iterator & operator++() {$/;"	f	class:Xapian::Utf8Iterator
operator ++	include/xapian/unicode.h	/^    Utf8Iterator operator++(int) {$/;"	f	class:Xapian::Utf8Iterator
operator ++	include/xapian/valueiterator.h	/^    DerefWrapper_<std::string> operator++(int) {$/;"	f	class:Xapian::ValueIterator
operator ++	net/resolver.h	/^	const_iterator operator++(int) {$/;"	f	class:Resolver::const_iterator
operator ++	net/resolver.h	/^	void operator++() {$/;"	f	class:Resolver::const_iterator
operator ++	queryparser/cjk-tokenizer.cc	/^CJKTokenIterator::operator++()$/;"	f	class:CJKTokenIterator
operator ++	queryparser/queryparser_internal.cc	/^    SynonymIterator & operator++() {$/;"	f	class:SynonymIterator
operator +=	include/xapian/eset.h	/^    ESetIterator & operator+=(difference_type n) {$/;"	f	class:Xapian::ESetIterator
operator +=	include/xapian/mset.h	/^    MSetIterator & operator+=(difference_type n) {$/;"	f	class:Xapian::MSetIterator
operator +=	tests/harness/testsuite.h	/^	    result & operator+=(const result & o) {$/;"	f	struct:test_driver::result
operator +=	weight/weightinternal.cc	/^Weight::Internal::operator+=(const Weight::Internal & inc)$/;"	f	class:Xapian::Weight::Internal
operator +=	weight/weightinternal.h	/^    void operator+=(const TermFreqs & other) {$/;"	f	struct:TermFreqs
operator -	include/xapian/eset.h	/^    ESetIterator operator-(difference_type n) const {$/;"	f	class:Xapian::ESetIterator
operator -	include/xapian/eset.h	/^    difference_type operator-(const ESetIterator& o) const {$/;"	f	class:Xapian::ESetIterator
operator -	include/xapian/mset.h	/^    MSetIterator operator-(difference_type n) const {$/;"	f	class:Xapian::MSetIterator
operator -	include/xapian/mset.h	/^    difference_type operator-(const MSetIterator& o) const {$/;"	f	class:Xapian::MSetIterator
operator --	include/xapian/eset.h	/^    ESetIterator & operator--() {$/;"	f	class:Xapian::ESetIterator
operator --	include/xapian/eset.h	/^    ESetIterator operator--(int) {$/;"	f	class:Xapian::ESetIterator
operator --	include/xapian/mset.h	/^    MSetIterator & operator--() {$/;"	f	class:Xapian::MSetIterator
operator --	include/xapian/mset.h	/^    MSetIterator operator--(int) {$/;"	f	class:Xapian::MSetIterator
operator -=	include/xapian/eset.h	/^    ESetIterator & operator-=(difference_type n) {$/;"	f	class:Xapian::ESetIterator
operator -=	include/xapian/mset.h	/^    MSetIterator & operator-=(difference_type n) {$/;"	f	class:Xapian::MSetIterator
operator ->	include/xapian/intrusive_ptr.h	/^    T * operator->() const$/;"	f	class:Xapian::Internal::intrusive_ptr
operator ->	include/xapian/intrusive_ptr.h	/^    T * operator->() const$/;"	f	class:Xapian::Internal::opt_intrusive_ptr
operator /	include/xapian/query.h	/^operator\/(const Query & q, double factor)$/;"	f	namespace:Xapian
operator /=	include/xapian/query.h	/^    const Query operator\/=(double factor) {$/;"	f	class:Xapian::Query
operator <	backends/chert/chert_spelling.h	/^inline bool operator<(const fragment &a, const fragment &b) {$/;"	f
operator <	backends/chert/chert_table.cc	/^bool Key::operator<(Key key2) const$/;"	f	class:Key
operator <	backends/glass/glass_spelling.h	/^    bool operator<(const fragment &b) const {$/;"	f	struct:Glass::fragment
operator <	backends/inmemory/KeyDomet.h	/^        bool operator<(const KeyDomet<SIZE>& other) const$/;"	f	class:kdmt::KeyDometSize::KeyDomet
operator <	backends/inmemory/KeyDomet.h	/^        bool operator<(const KeyDometStr<Imp, Size_>& other) const$/;"	f	class:kdmt::KeyDometSize::KeyDometStr
operator <	backends/inmemory/KeyDomet.h	/^        constexpr bool operator<(const kdmt128_t& other) const$/;"	f	struct:kdmt::KeyDometSize::kdmt128_t
operator <	examples/quest.cc	/^static inline bool operator<(const qp_flag& f1, const qp_flag& f2) {$/;"	f	file:
operator <	examples/quest.cc	/^static inline bool operator<(const qp_op& f1, const qp_op& f2) {$/;"	f	file:
operator <	examples/quest.cc	/^static inline bool operator<(const wt& f1, const wt& f2) {$/;"	f	file:
operator <	expand/esetinternal.h	/^    bool operator<(const ExpandTerm & o) const {$/;"	f	class:Xapian::Internal::ExpandTerm
operator <<	backends/inmemory/KeyDomet.h	/^    inline std::ostream& operator<<(std::ostream& os, const KeyDometStr<StrImp, Size>& hk)$/;"	f	class:kdmt::KeyDometSize
operator <<	backends/inmemory/KeyDomet.h	/^    inline std::ostream& operator<<(std::ostream& os, const kdmt128_t& val)$/;"	f	class:kdmt::KeyDometSize
operator <<	common/debuglog.h	/^inline std::ostream & operator<<(std::ostream &o, Xapian::NoArguments_) {$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, Xapian::Internal::intrusive_ptr<const T> t) {$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, Xapian::termcount * p)$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, bool b)$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, const Literal & t)$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, const RemoteConnection &) {$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, const T & t)$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, const T * t)$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, const T ** t)$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, const Xapian::Database::Internal *p) {$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, const Xapian::Weight *p) {$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, const char * str)$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, const std::list<T> &) {$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, const std::map<K, V> & m) {$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, const std::string & str)$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, const std::vector<T> & v) {$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, const void * t)$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, std::list<T> &) {$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, std::map<K, V> &) {$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, std::map<K, V> *) {$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, std::string &)$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, std::string *)$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, unsigned char ch)$/;"	f
operator <<	tests/harness/testutils.cc	/^operator<<(ostream &os, const vector<Xapian::docid> &ints)$/;"	f
operator <=	backends/chert/chert_table.h	/^    bool operator<=(Key key2) const { return !(key2 < *this); }$/;"	f	class:Key
operator <=	backends/inmemory/KeyDomet.h	/^        bool operator<=(const KeyDometStr<Imp, Size_>& other) const$/;"	f	class:kdmt::KeyDometSize::KeyDometStr
operator =	api/omdatabase.cc	/^Database::operator=(const Database &other)$/;"	f	class:Xapian::Database
operator =	api/omdatabase.cc	/^WritableDatabase::operator=(const WritableDatabase &other)$/;"	f	class:Xapian::WritableDatabase
operator =	api/omdocument.cc	/^Document::operator=(const Document &other)$/;"	f	class:Xapian::Document
operator =	api/omenquire.cc	/^Enquire::operator=(const Enquire & other)$/;"	f	class:Xapian::Enquire
operator =	api/omenquire.cc	/^MSet::operator=(const MSet &other)$/;"	f	class:Xapian::MSet
operator =	api/omenquire.cc	/^RSet::operator=(const RSet &other)$/;"	f	class:Xapian::RSet
operator =	api/positioniterator.cc	/^PositionIterator::operator=(const PositionIterator & o)$/;"	f	class:Xapian::PositionIterator
operator =	api/postingiterator.cc	/^PostingIterator::operator=(const PostingIterator & o)$/;"	f	class:Xapian::PostingIterator
operator =	api/registry.cc	/^Registry::operator=(const Registry & other)$/;"	f	class:Xapian::Registry
operator =	api/termiterator.cc	/^TermIterator::operator=(const TermIterator & o)$/;"	f	class:Xapian::TermIterator
operator =	api/valueiterator.cc	/^ValueIterator::operator=(const ValueIterator & o)$/;"	f	class:Xapian::ValueIterator
operator =	common/bitstream.h	/^	void operator=(const DIStack & o) {$/;"	f	struct:Xapian::BitReader::DIState
operator =	common/fd.h	/^    FD & operator=(int fd_) {$/;"	f	class:FD
operator =	expand/esetinternal.cc	/^ESet::operator=(const ESet & o)$/;"	f	class:Xapian::ESet
operator =	include/xapian/database.h	/^	WritableDatabase& operator=(WritableDatabase&& o) {$/;"	f	class:Xapian::WritableDatabase
operator =	include/xapian/intrusive_ptr.h	/^    intrusive_ptr & operator=(T * rhs)$/;"	f	class:Xapian::Internal::intrusive_ptr
operator =	include/xapian/intrusive_ptr.h	/^    intrusive_ptr & operator=(intrusive_ptr && rhs)$/;"	f	class:Xapian::Internal::intrusive_ptr
operator =	include/xapian/intrusive_ptr.h	/^    intrusive_ptr & operator=(intrusive_ptr const & rhs)$/;"	f	class:Xapian::Internal::intrusive_ptr
operator =	include/xapian/intrusive_ptr.h	/^    intrusive_ptr & operator=(intrusive_ptr<U> && rhs)$/;"	f	class:Xapian::Internal::intrusive_ptr
operator =	include/xapian/intrusive_ptr.h	/^    opt_intrusive_base& operator=(const opt_intrusive_base&) {$/;"	f	class:Xapian::Internal::opt_intrusive_base
operator =	include/xapian/intrusive_ptr.h	/^    opt_intrusive_ptr & operator=(T * rhs)$/;"	f	class:Xapian::Internal::opt_intrusive_ptr
operator =	include/xapian/intrusive_ptr.h	/^    opt_intrusive_ptr & operator=(opt_intrusive_ptr && rhs)$/;"	f	class:Xapian::Internal::opt_intrusive_ptr
operator =	include/xapian/intrusive_ptr.h	/^    opt_intrusive_ptr & operator=(opt_intrusive_ptr const & rhs)$/;"	f	class:Xapian::Internal::opt_intrusive_ptr
operator =	include/xapian/intrusive_ptr.h	/^    opt_intrusive_ptr & operator=(opt_intrusive_ptr<U> && rhs)$/;"	f	class:Xapian::Internal::opt_intrusive_ptr
operator =	include/xapian/positioniterator.h	/^    PositionIterator & operator=(PositionIterator && o) {$/;"	f	class:Xapian::PositionIterator
operator =	include/xapian/postingiterator.h	/^    PostingIterator & operator=(PostingIterator && o) {$/;"	f	class:Xapian::PostingIterator
operator =	include/xapian/query.h	/^    Query & operator=(const Query & o) { internal = o.internal; return *this; }$/;"	f	class:Xapian::Query
operator =	include/xapian/termiterator.h	/^    TermIterator & operator=(TermIterator && o) {$/;"	f	class:Xapian::TermIterator
operator =	include/xapian/valueiterator.h	/^    ValueIterator & operator=(ValueIterator && o) {$/;"	f	class:Xapian::ValueIterator
operator =	languages/stem.cc	/^Stem::operator=(const Stem & o)$/;"	f	class:Xapian::Stem
operator =	queryparser/queryparser.cc	/^QueryParser::operator=(const QueryParser & o)$/;"	f	class:QueryParser
operator =	queryparser/termgenerator.cc	/^TermGenerator::operator=(const TermGenerator & o) {$/;"	f	class:TermGenerator
operator ==	api/smallvector.h	/^	bool operator==(const const_iterator& o) const { return ptr == o.ptr; }$/;"	f	class:Xapian::SmallVector::const_iterator
operator ==	backends/chert/chert_table.cc	/^bool Key::operator==(Key key2) const$/;"	f	class:Key
operator ==	backends/glass/glass_freelist.h	/^    bool operator==(const GlassFLCursor & o) const {$/;"	f	class:GlassFLCursor
operator ==	backends/inmemory/KeyDomet.h	/^        bool operator==(const KeyDomet<SIZE>& other) const$/;"	f	class:kdmt::KeyDometSize::KeyDomet
operator ==	backends/inmemory/KeyDomet.h	/^        bool operator==(const KeyDometStr<Imp, Size_>& other) const$/;"	f	class:kdmt::KeyDometSize::KeyDometStr
operator ==	backends/inmemory/KeyDomet.h	/^        constexpr bool operator==(const kdmt128_t& other) const$/;"	f	struct:kdmt::KeyDometSize::kdmt128_t
operator ==	include/xapian/geospatial.h	/^    bool operator==(const LatLongCoordsIterator &other) const$/;"	f	class:Xapian::LatLongCoordsIterator
operator ==	include/xapian/intrusive_ptr.h	/^template<class T, class U> inline bool operator==(T * a, intrusive_ptr<U> const & b)$/;"	f	namespace:Xapian::Internal
operator ==	include/xapian/intrusive_ptr.h	/^template<class T, class U> inline bool operator==(T * a, opt_intrusive_ptr<U> const & b)$/;"	f	namespace:Xapian::Internal
operator ==	include/xapian/intrusive_ptr.h	/^template<class T, class U> inline bool operator==(intrusive_ptr<T> const & a, U * b)$/;"	f	namespace:Xapian::Internal
operator ==	include/xapian/intrusive_ptr.h	/^template<class T, class U> inline bool operator==(intrusive_ptr<T> const & a, intrusive_ptr<U> const & b)$/;"	f	namespace:Xapian::Internal
operator ==	include/xapian/intrusive_ptr.h	/^template<class T, class U> inline bool operator==(opt_intrusive_ptr<T> const & a, U * b)$/;"	f	namespace:Xapian::Internal
operator ==	include/xapian/intrusive_ptr.h	/^template<class T, class U> inline bool operator==(opt_intrusive_ptr<T> const & a, opt_intrusive_ptr<U> const & b)$/;"	f	namespace:Xapian::Internal
operator ==	net/resolver.h	/^	bool operator==(const const_iterator& o) {$/;"	f	class:Resolver::const_iterator
operator ==	queryparser/cjk-tokenizer.h	/^operator==(const CJKTokenIterator & a, const CJKTokenIterator & b)$/;"	f
operator ==	queryparser/queryparser_internal.cc	/^    bool operator==(const SynonymIterator & o) const {$/;"	f	class:SynonymIterator
operator ==	tests/harness/testutils.cc	/^bool operator==(const Xapian::MSet &first, const Xapian::MSet &second)$/;"	f
operator >	backends/chert/chert_table.h	/^    bool operator>(Key key2) const { return key2 < *this; }$/;"	f	class:Key
operator >=	backends/chert/chert_table.h	/^    bool operator>=(Key key2) const { return !(*this < key2); }$/;"	f	class:Key
operator Query	include/xapian/query.h	/^    operator Query() const {$/;"	f	class:Xapian::InvertedQuery_
operator []	api/smallvector.h	/^	T operator[](size_type idx) const {$/;"	f	class:Xapian::SmallVector::const_iterator
operator []	api/smallvector.h	/^    T operator[](size_type idx) const {$/;"	f	class:Xapian::SmallVector
operator []	backends/chert/chert_spelling.h	/^    char & operator[] (unsigned i) { return data[i]; }$/;"	f	struct:fragment
operator []	backends/chert/chert_spelling.h	/^    const char & operator[] (unsigned i) const { return data[i]; }$/;"	f	struct:fragment
operator []	backends/chert/chert_table.h	/^    char operator[](size_t i) const {$/;"	f	class:Key
operator []	backends/glass/glass_spelling.h	/^    char & operator[] (unsigned i) { return data[i]; }$/;"	f	struct:Glass::fragment
operator []	backends/glass/glass_spelling.h	/^    const char & operator[] (unsigned i) const { return data[i]; }$/;"	f	struct:Glass::fragment
operator []	backends/glass/glass_table.h	/^    char operator[](size_t i) const {$/;"	f	class:Glass::Key
operator []	include/xapian/eset.h	/^ESet::operator[](Xapian::doccount i) const {$/;"	f	class:Xapian::ESet
operator []	include/xapian/mset.h	/^MSet::operator[](Xapian::doccount i) const {$/;"	f	class:Xapian::MSet
operator ^	include/xapian/query.h	/^operator^(const Query & a, const Query & b)$/;"	f	namespace:Xapian
operator ^=	include/xapian/query.h	/^    const Query operator^=(const Query & o) {$/;"	f	class:Xapian::Query
operator bool	backends/flint_lock.h	/^    operator bool() const {$/;"	f	class:FlintLock
operator bool	matcher/collapser.h	/^    operator bool() const { return collapse_max != 0; }$/;"	f	class:Collapser
operator const BItem	backends/glass/glass_table.h	/^    operator const BItem() const { return BItem(p); }$/;"	f	class:Glass::BItem_wr
operator const LeafItem	backends/glass/glass_table.h	/^    operator const LeafItem() const { return LeafItem(p); }$/;"	f	class:Glass::LeafItem_wr
operator int	common/fd.h	/^    operator int() const { return fd; }$/;"	f	class:FD
operator std::string	backends/chert/chert_spelling.h	/^    operator std::string () const {$/;"	f	struct:fragment
operator std::string	backends/glass/glass_spelling.h	/^    operator std::string() const {$/;"	f	struct:Glass::fragment
operator |	common/pretty.h	/^    template<typename T> PrettyOStream & operator|(const T & t) {$/;"	f	struct:PrettyOStream
operator |	include/xapian/query.h	/^operator|(const Query & a, const Query & b)$/;"	f	namespace:Xapian
operator |=	include/xapian/query.h	/^    const Query operator|=(const Query & o) {$/;"	f	class:Xapian::Query
operator ~	include/xapian/query.h	/^operator~(const Query &q)$/;"	f	namespace:Xapian
opt_help	tests/harness/testsuite.cc	/^string test_driver::opt_help;$/;"	m	class:test_driver	file:
opt_help	tests/harness/testsuite.h	/^	static std::string opt_help;$/;"	m	class:test_driver
opt_intrusive_base	include/xapian/intrusive_ptr.h	/^    opt_intrusive_base() : _refs(0) { }$/;"	f	class:Xapian::Internal::opt_intrusive_base
opt_intrusive_base	include/xapian/intrusive_ptr.h	/^    opt_intrusive_base(const opt_intrusive_base&) : _refs(0) { }$/;"	f	class:Xapian::Internal::opt_intrusive_base
opt_intrusive_base	include/xapian/intrusive_ptr.h	/^class XAPIAN_VISIBILITY_DEFAULT opt_intrusive_base {$/;"	c	namespace:Xapian::Internal
opt_intrusive_ptr	include/xapian/intrusive_ptr.h	/^    opt_intrusive_ptr( T * p): px( p ), counting( px != 0 && px->_refs )$/;"	f	class:Xapian::Internal::opt_intrusive_ptr
opt_intrusive_ptr	include/xapian/intrusive_ptr.h	/^    opt_intrusive_ptr( opt_intrusive_ptr<U> const & rhs )$/;"	f	class:Xapian::Internal::opt_intrusive_ptr
opt_intrusive_ptr	include/xapian/intrusive_ptr.h	/^    opt_intrusive_ptr(): px( 0 ), counting( false )$/;"	f	class:Xapian::Internal::opt_intrusive_ptr
opt_intrusive_ptr	include/xapian/intrusive_ptr.h	/^    opt_intrusive_ptr(opt_intrusive_ptr && rhs)$/;"	f	class:Xapian::Internal::opt_intrusive_ptr
opt_intrusive_ptr	include/xapian/intrusive_ptr.h	/^    opt_intrusive_ptr(opt_intrusive_ptr const & rhs)$/;"	f	class:Xapian::Internal::opt_intrusive_ptr
opt_intrusive_ptr	include/xapian/intrusive_ptr.h	/^    opt_intrusive_ptr(opt_intrusive_ptr<U> && rhs)$/;"	f	class:Xapian::Internal::opt_intrusive_ptr
opt_intrusive_ptr	include/xapian/intrusive_ptr.h	/^template<class T> class opt_intrusive_ptr$/;"	c	namespace:Xapian::Internal
optarg	common/getopt.cc	/^char *optarg;$/;"	v
opterr	common/getopt.cc	/^int opterr = 1;$/;"	v
optind	common/getopt.cc	/^int optind = 1;$/;"	v
option	common/gnu_getopt.h	/^struct option {$/;"	s
option_type	queryparser/lemon.c	/^enum option_type { OPT_FLAG=1,  OPT_INT,  OPT_DBL,  OPT_STR,$/;"	g	file:
optional_argument	common/gnu_getopt.h	81;"	d
options	languages/compiler/header.h	/^    struct options * options;$/;"	m	struct:generator	typeref:struct:generator::options
options	languages/compiler/header.h	/^struct options {$/;"	s
options	tests/api_termgen.cc	/^    const char *options;$/;"	m	struct:test	file:
options	tests/soaktest/soaktest_queries.cc	/^    vector<QueryStep> options;$/;"	m	class:QueryBuilder	file:
optopt	common/getopt.cc	/^int optopt = '?';$/;"	v
opts	bin/xapian-progsrv.cc	/^static const char * opts = "t:w";$/;"	v	file:
opts	bin/xapian-tcpsrv.cc	/^static const char * opts = "I:p:a:i:t:oqw";$/;"	v	file:
order	api/omenquireinternal.h	/^	Xapian::Enquire::docid_order order;$/;"	m	class:Xapian::Enquire::Internal
order	matcher/exactphrasepostlist.h	/^    unsigned * order;$/;"	m	class:ExactPhrasePostList
order	matcher/multimatch.h	/^	Xapian::Enquire::docid_order order;$/;"	m	class:MultiMatch
ordering	common/getopt.cc	/^} ordering;$/;"	v	typeref:enum:__anon11	file:
orig_key	backends/chert/chert_postlist.cc	/^	string orig_key;$/;"	m	class:Chert::PostlistChunkWriter	file:
orig_key	backends/glass/glass_postlist.cc	/^	string orig_key;$/;"	m	class:Glass::PostlistChunkWriter	file:
os	common/pretty.h	/^    S & os;$/;"	m	struct:PrettyOStream
other_base_letter	backends/chert/chert_table.h	/^	char other_base_letter() const {$/;"	f	class:ChertTable
out	backends/chert/chert_check.h	/^	std::ostream *out;$/;"	m	class:ChertTableCheck
out	backends/glass/glass_check.h	/^	std::ostream *out;$/;"	m	class:GlassTableCheck
out	backends/prefix_compressed_strings.h	/^    std::string & out;$/;"	m	class:PrefixCompressedStringWriter
out	common/compression_stream.h	/^    char* out;$/;"	m	class:CompressionStream
out	tests/harness/testsuite.h	/^	std::ostream out;$/;"	m	class:test_driver
out	tests/perftest/perftest.h	/^    std::ofstream out;$/;"	m	class:PerfTestLogger
out_grouping_U	languages/steminternal.cc	/^SnowballStemImplementation::out_grouping_U(const unsigned char * s, int min,$/;"	f	class:Xapian::SnowballStemImplementation
out_grouping_b_U	languages/steminternal.cc	/^SnowballStemImplementation::out_grouping_b_U(const unsigned char * s, int min,$/;"	f	class:Xapian::SnowballStemImplementation
out_len	common/compression_stream.h	/^    size_t out_len;$/;"	m	class:CompressionStream
outbuf	languages/compiler/header.h	/^    struct str * outbuf;       \/* temporary str to store output *\/$/;"	m	struct:generator	typeref:struct:generator::str
outdent	common/debuglog.h	/^    void outdent() {$/;"	f	class:DebugLogger
outname	queryparser/lemon.c	/^  char *outname;           \/* Name of the current output file *\/$/;"	m	struct:lemon	file:
outof	common/bitstream.h	/^	Xapian::termpos outof() const {$/;"	f	struct:Xapian::BitReader::DIState
output_file	languages/compiler/header.h	/^    const char * output_file;$/;"	m	struct:options
output_filename	queryparser/lemon.c	/^static char *output_filename = 0;  \/* Output filename from -o *\/$/;"	v	file:
output_h	languages/compiler/header.h	/^    FILE * output_h;$/;"	m	struct:options
output_header_filename	queryparser/lemon.c	/^static char *output_header_filename = 0;  \/* Output filename from -h *\/$/;"	v	file:
output_src	languages/compiler/header.h	/^    FILE * output_src;$/;"	m	struct:options
output_str	languages/compiler/space.c	/^extern void output_str(FILE * outfile, struct str * str) {$/;"	f
overflow	queryparser/lemon.c	/^  char *overflow;          \/* Code to execute on a stack overflow *\/$/;"	m	struct:lemon	file:
overlapped	net/remoteconnection.h	/^    WSAOVERLAPPED overlapped;$/;"	m	class:RemoteConnection
p	api/smallvector.h	/^    void * p[2];$/;"	m	class:Xapian::SmallVector_
p	api/vectortermlist.h	/^    const char * p;$/;"	m	class:VectorTermList
p	backends/byte_length_strings.h	/^    const unsigned char * p;$/;"	m	class:ByteLengthPrefixedStringItor
p	backends/chert/chert_cursor.h	/^	uint8_t * p;$/;"	m	class:Cursor
p	backends/chert/chert_spelling.h	/^    unsigned p;$/;"	m	class:ChertSpellingTermList
p	backends/chert/chert_table.h	/^    T p;$/;"	m	class:Item_base
p	backends/chert/chert_table.h	/^    const uint8_t *p;$/;"	m	class:Key
p	backends/chert/chert_values.h	/^    const char *p;$/;"	m	class:ValueChunkReader
p	backends/glass/glass_freelist.h	/^    uint8_t * p;$/;"	m	class:GlassFreeList
p	backends/glass/glass_spelling.h	/^    unsigned p;$/;"	m	class:GlassSpellingTermList
p	backends/glass/glass_table.h	/^    T p;$/;"	m	class:Glass::BItem_base
p	backends/glass/glass_table.h	/^    T p;$/;"	m	class:Glass::LeafItem_base
p	backends/glass/glass_table.h	/^    const uint8_t *p;$/;"	m	class:Glass::Key
p	backends/glass/glass_values.h	/^    const char *p;$/;"	m	class:Glass::ValueChunkReader
p	backends/prefix_compressed_strings.h	/^    const unsigned char * p;$/;"	m	class:PrefixCompressedStringItor
p	examples/xapian-pos.cc	/^    Xapian::PositionIterator p;$/;"	m	class:Pos	file:
p	include/xapian/unicode.h	/^    const unsigned char *p;$/;"	m	class:Xapian::Utf8Iterator
p	languages/compiler/header.h	/^    symbol * p;$/;"	m	struct:input
p	languages/compiler/header.h	/^    symbol * p;$/;"	m	struct:tokeniser
p	languages/steminternal.h	/^    symbol * p;$/;"	m	class:Xapian::SnowballStemImplementation
p	net/resolver.h	/^	struct addrinfo* p;$/;"	m	class:Resolver::const_iterator	typeref:struct:Resolver::const_iterator::addrinfo
p	queryparser/cjk-tokenizer.h	/^    mutable Xapian::Utf8Iterator p;$/;"	m	class:CJKTokenIterator
pDfltReduce	queryparser/lemon.c	/^  struct rule *pDfltReduce;\/* The default REDUCE rule. *\/$/;"	m	struct:state	typeref:struct:state::rule	file:
pShutdownSocket	net/tcpserver.cc	/^static const int *pShutdownSocket = NULL;$/;"	v	file:
pack	backends/glass/glass_freelist.h	/^    void pack(std::string & buf) {$/;"	f	class:GlassFLCursor
pack	backends/glass/glass_freelist.h	/^    void pack(std::string & buf) {$/;"	f	class:GlassFreeList
pack	backends/glass/glass_positionlist.cc	/^GlassPositionListTable::pack(string & s,$/;"	f	class:GlassPositionListTable
pack_bool	common/pack.h	/^pack_bool(std::string & s, bool value)$/;"	f
pack_chert_postlist_key	common/pack.h	/^pack_chert_postlist_key(const std::string &term)$/;"	f
pack_chert_postlist_key	common/pack.h	/^pack_chert_postlist_key(const std::string &term, Xapian::docid did)$/;"	f
pack_glass_postlist_key	common/pack.h	/^pack_glass_postlist_key(const std::string &term)$/;"	f
pack_glass_postlist_key	common/pack.h	/^pack_glass_postlist_key(const std::string &term, Xapian::docid did)$/;"	f
pack_string	common/pack.h	/^pack_string(std::string & s, const char * ptr)$/;"	f
pack_string	common/pack.h	/^pack_string(std::string & s, const std::string & value)$/;"	f
pack_string_preserving_sort	common/pack.h	/^pack_string_preserving_sort(std::string & s, const std::string & value,$/;"	f
pack_uint	common/pack.h	/^pack_uint(std::string & s, U value)$/;"	f
pack_uint	common/pack.h	/^pack_uint(std::string & s, bool value)$/;"	f
pack_uint_last	common/pack.h	/^pack_uint_last(std::string & s, U value)$/;"	f
pack_uint_preserving_sort	common/pack.h	/^pack_uint_preserving_sort(std::string & s, U value)$/;"	f
package	languages/compiler/header.h	/^    const char * package;$/;"	m	struct:options
pageMap	unicode/unicode-data.cc	/^static const unsigned char pageMap[] = {$/;"	v	file:
param_b	include/xapian/weight.h	/^    double param_k1, param_k2, param_k3, param_b;$/;"	m	class:Xapian::BM25PlusWeight
param_b	include/xapian/weight.h	/^    double param_k1, param_k2, param_k3, param_b;$/;"	m	class:Xapian::BM25Weight
param_c	include/xapian/weight.h	/^    double param_c;$/;"	m	class:Xapian::BB2Weight
param_c	include/xapian/weight.h	/^    double param_c;$/;"	m	class:Xapian::IfB2Weight
param_c	include/xapian/weight.h	/^    double param_c;$/;"	m	class:Xapian::InL2Weight
param_c	include/xapian/weight.h	/^    double param_c;$/;"	m	class:Xapian::IneB2Weight
param_c	include/xapian/weight.h	/^    double param_c;$/;"	m	class:Xapian::PL2PlusWeight
param_c	include/xapian/weight.h	/^    double param_c;$/;"	m	class:Xapian::PL2Weight
param_delta	include/xapian/weight.h	/^    double param_delta;$/;"	m	class:Xapian::BM25PlusWeight
param_delta	include/xapian/weight.h	/^    double param_delta;$/;"	m	class:Xapian::PL2PlusWeight
param_k	include/xapian/weight.h	/^    double param_k;$/;"	m	class:Xapian::TradWeight
param_k1	include/xapian/weight.h	/^    double param_k1, param_k2, param_k3, param_b;$/;"	m	class:Xapian::BM25PlusWeight
param_k1	include/xapian/weight.h	/^    double param_k1, param_k2, param_k3, param_b;$/;"	m	class:Xapian::BM25Weight
param_k2	include/xapian/weight.h	/^    double param_k1, param_k2, param_k3, param_b;$/;"	m	class:Xapian::BM25PlusWeight
param_k2	include/xapian/weight.h	/^    double param_k1, param_k2, param_k3, param_b;$/;"	m	class:Xapian::BM25Weight
param_k3	include/xapian/weight.h	/^    double param_k1, param_k2, param_k3, param_b;$/;"	m	class:Xapian::BM25PlusWeight
param_k3	include/xapian/weight.h	/^    double param_k1, param_k2, param_k3, param_b;$/;"	m	class:Xapian::BM25Weight
param_log	include/xapian/weight.h	/^    double param_log, param_smoothing1, param_smoothing2;$/;"	m	class:Xapian::LMWeight
param_min_normlen	include/xapian/weight.h	/^    Xapian::doclength param_min_normlen;$/;"	m	class:Xapian::BM25PlusWeight
param_min_normlen	include/xapian/weight.h	/^    Xapian::doclength param_min_normlen;$/;"	m	class:Xapian::BM25Weight
param_smoothing1	include/xapian/weight.h	/^    double param_log, param_smoothing1, param_smoothing2;$/;"	m	class:Xapian::LMWeight
param_smoothing2	include/xapian/weight.h	/^    double param_log, param_smoothing1, param_smoothing2;$/;"	m	class:Xapian::LMWeight
parent_class_name	languages/compiler/header.h	/^    const char * parent_class_name;$/;"	m	struct:options
parse	backends/uuids.cc	/^Uuid::parse(const char* in)$/;"	f	class:Uuid
parse	backends/uuids.h	/^    void parse(const std::string& in) { return parse(in.data()); }$/;"	f	class:Uuid
parse_command_line	tests/harness/testsuite.cc	/^test_driver::parse_command_line(int argc, char **argv)$/;"	f	class:test_driver
parse_makefile_am	preautoreconf	/^sub parse_makefile_am {$/;"	s
parse_query	queryparser/queryparser.cc	/^QueryParser::parse_query(const string &query_string, unsigned flags,$/;"	f	class:QueryParser
parse_query	queryparser/queryparser_internal.cc	/^QueryParser::Internal::parse_query(const string &qs, unsigned flags,$/;"	f	class:QueryParser::Internal
parse_term	queryparser/queryparser_internal.cc	/^QueryParser::Internal::parse_term(Utf8Iterator &it, const Utf8Iterator &end,$/;"	f	class:QueryParser::Internal
parse_terms	queryparser/termgenerator_internal.cc	/^parse_terms(Utf8Iterator itor, bool cjk_ngram, bool with_positions, ACTION action)$/;"	f	namespace:Xapian
parseonetoken	queryparser/lemon.c	/^static void parseonetoken(struct pstate *psp)$/;"	f	file:
path	api/replication.cc	/^    string path;$/;"	m	class:DatabaseReplica::Internal	file:
path	api/replication.h	/^    std::string path;$/;"	m	class:Xapian::DatabaseMaster
path	net/replicatetcpserver.h	/^    std::string path;$/;"	m	class:ReplicateTcpServer
path_exists	common/filetests.h	/^inline bool path_exists(const char * path) {$/;"	f
path_exists	common/filetests.h	/^inline bool path_exists(const std::string & path) {$/;"	f
pathsearch	queryparser/lemon.c	/^PRIVATE char *pathsearch(char *argv0, char *name, int modemask)$/;"	f
pattern	api/queryinternal.h	/^    std::string pattern;$/;"	m	class:Xapian::Internal::QueryWildcard
pattern	tests/api_query.cc	/^    const char * pattern;$/;"	m	struct:wildcard_testcase	file:
pclose	tests/perftest/runprocess.cc	32;"	d	file:
pdfdir	Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	docs/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	tests/Makefile	/^pdfdir = ${docdir}$/;"	m
pending	preautoreconf	/^pending:$/;"	l
percent_cutoff	api/omenquireinternal.h	/^	int percent_cutoff;$/;"	m	class:Xapian::Enquire::Internal
percent_cutoff	matcher/multimatch.h	/^	int percent_cutoff;$/;"	m	class:MultiMatch
percent_factor	api/omenquireinternal.h	/^	double percent_factor;$/;"	m	class:Xapian::MSet::Internal
percent_factor	matcher/remotesubmatch.h	/^    double percent_factor;$/;"	m	class:RemoteSubMatch
perform	tests/api_closedb.cc	/^    int perform() {$/;"	f	struct:closedb1_iterators
perftest_perftest_DEPENDENCIES	tests/Makefile	/^perftest_perftest_DEPENDENCIES = ..\/libgetopt.la ..\/$(libxapian_la)$/;"	m
perftest_perftest_LDADD	tests/Makefile	/^perftest_perftest_LDADD = ..\/libgetopt.la ..\/$(libxapian_la)$/;"	m
perftest_perftest_LDADD	tests/perftest/Makefile.mk	/^perftest_perftest_LDADD = ..\/libgetopt.la ..\/$(libxapian_la)$/;"	m
perftest_perftest_LDFLAGS	tests/Makefile	/^perftest_perftest_LDFLAGS = $(NO_INSTALL) $(ldflags)$/;"	m
perftest_perftest_LDFLAGS	tests/perftest/Makefile.mk	/^perftest_perftest_LDFLAGS = $(NO_INSTALL) $(ldflags)$/;"	m
perftest_perftest_LINK	tests/Makefile	/^perftest_perftest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \\$/;"	m
perftest_perftest_OBJECTS	tests/Makefile	/^perftest_perftest_OBJECTS = $(am_perftest_perftest_OBJECTS)$/;"	m
perftest_perftest_SOURCES	tests/Makefile	/^perftest_perftest_SOURCES = perftest\/perftest.cc $(collated_perftest_sources) \\$/;"	m
perftest_perftest_SOURCES	tests/perftest/Makefile.mk	/^perftest_perftest_SOURCES = perftest\/perftest.cc $(collated_perftest_sources) \\$/;"	m
phrase_len	queryparser/termgenerator_internal.cc	/^    size_t phrase_len = 0;$/;"	m	class:Xapian::SnipPipe	file:
pick	tests/soaktest/soaktest_queries.cc	/^    list<Xapian::Query>::iterator pick(unsigned int num) {$/;"	f	struct:QueryBuilderEnv
pid	backends/flint_lock.h	/^    pid_t pid;$/;"	m	class:FlintLock
pid	net/progclient.h	/^    pid_t pid;$/;"	m	class:ProgClient
pid	tests/harness/backendmanager_remotetcp.cc	/^    pid_t pid;$/;"	m	struct:pid_fd	file:
pid_fd	tests/harness/backendmanager_remotetcp.cc	/^struct pid_fd {$/;"	s	file:
pid_to_fd	tests/harness/backendmanager_remotetcp.cc	/^static pid_fd pid_to_fd[16];$/;"	v	file:
pieces	tests/soaktest/soaktest_queries.cc	/^    list<Xapian::Query> pieces;$/;"	m	struct:QueryBuilderEnv	file:
pil1	tests/api_closedb.cc	/^    Xapian::PositionIterator pil1;$/;"	m	struct:closedb1_iterators	file:
pilend	tests/api_closedb.cc	/^    Xapian::PositionIterator pilend;$/;"	m	struct:closedb1_iterators	file:
pipe	queryparser/termgenerator_internal.cc	/^    deque<Sniplet> pipe;$/;"	m	class:Xapian::SnipPipe	file:
pkgconfigdir	Makefile	/^pkgconfigdir = $(libdir)\/pkgconfig$/;"	m
pkgdatadir	Makefile	/^pkgdatadir = $(datadir)\/xapian-core$/;"	m
pkgdatadir	docs/Makefile	/^pkgdatadir = $(datadir)\/xapian-core$/;"	m
pkgdatadir	tests/Makefile	/^pkgdatadir = $(datadir)\/xapian-core$/;"	m
pkgincludedir	Makefile	/^pkgincludedir = $(includedir)\/xapian-core$/;"	m
pkgincludedir	docs/Makefile	/^pkgincludedir = $(includedir)\/xapian-core$/;"	m
pkgincludedir	tests/Makefile	/^pkgincludedir = $(includedir)\/xapian-core$/;"	m
pkglibdir	Makefile	/^pkglibdir = $(libdir)\/xapian-core$/;"	m
pkglibdir	docs/Makefile	/^pkglibdir = $(libdir)\/xapian-core$/;"	m
pkglibdir	tests/Makefile	/^pkglibdir = $(libdir)\/xapian-core$/;"	m
pkglibexecdir	Makefile	/^pkglibexecdir = $(libexecdir)\/xapian-core$/;"	m
pkglibexecdir	docs/Makefile	/^pkglibexecdir = $(libexecdir)\/xapian-core$/;"	m
pkglibexecdir	tests/Makefile	/^pkglibexecdir = $(libexecdir)\/xapian-core$/;"	m
pl	matcher/extraweightpostlist.h	/^	PostList * pl;$/;"	m	class:ExtraWeightPostList
pl	matcher/localsubmatch.cc	/^    LeafPostList * pl;$/;"	m	class:LazyWeight	file:
pl	matcher/orpospostlist.h	/^    PostList* pl;$/;"	m	class:OrPosPostList
pl1	tests/api_closedb.cc	/^    Xapian::PostingIterator pl1;$/;"	m	struct:closedb1_iterators	file:
pl1end	tests/api_closedb.cc	/^    Xapian::PostingIterator pl1end;$/;"	m	struct:closedb1_iterators	file:
pl2	tests/api_closedb.cc	/^    Xapian::PostingIterator pl2;$/;"	m	struct:closedb1_iterators	file:
pl2end	tests/api_closedb.cc	/^    Xapian::PostingIterator pl2end;$/;"	m	struct:closedb1_iterators	file:
pl_changes	backends/glass/glass_inverter.h	/^	std::map<Xapian::docid, Xapian::termcount> pl_changes;$/;"	m	class:Inverter::PostingChanges
plink	queryparser/lemon.c	/^struct plink {$/;"	s	file:
plink_freelist	queryparser/lemon.c	/^static struct plink *plink_freelist = 0;$/;"	v	typeref:struct:plink	file:
plist	matcher/maxpostlist.h	/^    PostList ** plist;$/;"	m	class:MaxPostList
plist	matcher/multiandpostlist.h	/^    PostList ** plist;$/;"	m	class:MultiAndPostList
plist	matcher/multixorpostlist.h	/^    PostList ** plist;$/;"	m	class:MultiXorPostList
plists	matcher/mergepostlist.h	/^	vector<PostList *> plists;$/;"	m	class:MergePostList
pls	api/queryinternal.cc	/^    vector<PostList*> pls;$/;"	m	class:Xapian::Internal::Context	file:
pls	matcher/orpositionlist.h	/^    std::vector<PositionList*> pls;$/;"	m	class:OrPositionList
pointer	include/xapian/eset.h	/^    typedef std::string * pointer;$/;"	t	class:Xapian::ESetIterator
pointer	include/xapian/eset.h	/^    typedef value_type * pointer;$/;"	t	class:Xapian::ESet
pointer	include/xapian/geospatial.h	/^    typedef LatLongCoord * pointer;$/;"	t	class:Xapian::LatLongCoordsIterator
pointer	include/xapian/mset.h	/^    typedef std::string * pointer;$/;"	t	class:Xapian::MSetIterator
pointer	include/xapian/mset.h	/^    typedef value_type * pointer;$/;"	t	class:Xapian::MSet
pointer	include/xapian/positioniterator.h	/^    typedef Xapian::termpos * pointer;$/;"	t	class:Xapian::PositionIterator
pointer	include/xapian/postingiterator.h	/^    typedef Xapian::docid * pointer;$/;"	t	class:Xapian::PostingIterator
pointer	include/xapian/termiterator.h	/^    typedef std::string * pointer;$/;"	t	class:Xapian::TermIterator
pointer	include/xapian/unicode.h	/^    typedef const unsigned * pointer;$/;"	t	class:Xapian::Utf8Iterator
pointer	include/xapian/valueiterator.h	/^    typedef std::string * pointer;$/;"	t	class:Xapian::ValueIterator
pointer	queryparser/queryparser_internal.cc	/^    typedef Xapian::Query * pointer;$/;"	t	class:SynonymIterator	file:
pointwise_distance	geospatial/latlong_metrics.cc	/^GreatCircleMetric::pointwise_distance(const LatLongCoord & a,$/;"	f	class:GreatCircleMetric
pool_size	languages/compiler/generator.c	/^static unsigned pool_size = 0;$/;"	v	file:
pop	tests/soaktest/soaktest_queries.cc	/^    Xapian::Query pop() {$/;"	f	struct:QueryBuilderEnv
popen	tests/perftest/runprocess.cc	31;"	d	file:
pos	api/queryinternal.h	/^    Xapian::termpos pos;$/;"	m	class:Xapian::Internal::QueryTerm
pos	backends/chert/chert_postlist.cc	/^    const char *pos;$/;"	m	class:Chert::PostlistChunkReader	file:
pos	backends/chert/chert_postlist.h	/^	const char * pos;$/;"	m	class:ChertPostList
pos	backends/chert/chert_termlist.h	/^    const char *pos;$/;"	m	class:ChertTermList
pos	backends/glass/glass_postlist.cc	/^    const char *pos;$/;"	m	class:Glass::PostlistChunkReader	file:
pos	backends/glass/glass_postlist.h	/^	const char * pos;$/;"	m	class:GlassPostList
pos	backends/glass/glass_termlist.h	/^    const char *pos;$/;"	m	class:GlassTermList
pos	backends/inmemory/inmemory_database.h	/^	vector<InMemoryPosting>::const_iterator pos;$/;"	m	class:InMemoryPostList
pos	backends/inmemory/inmemory_database.h	/^	vector<InMemoryTermEntry>::const_iterator pos;$/;"	m	class:InMemoryTermList
pos	backends/remote/net_postlist.h	/^    const char * pos;$/;"	m	class:NetworkPostList
pos	examples/xapian-pos.cc	/^    Xapian::termpos pos;$/;"	m	class:Pos	file:
pos	queryparser/queryparser_internal.cc	/^    Xapian::termpos pos;$/;"	m	class:SynonymIterator	file:
pos	queryparser/queryparser_internal.cc	/^    termpos pos;$/;"	m	class:Term	file:
pos_changes	backends/glass/glass_inverter.h	/^    std::map<std::string, std::map<Xapian::docid, std::string>> pos_changes;$/;"	m	class:Inverter
pos_end	backends/remote/net_postlist.h	/^    const char * pos_end;$/;"	m	class:NetworkPostList
pos_filters	api/queryinternal.cc	/^    list<PosFilter> pos_filters;$/;"	m	class:Xapian::Internal::AndContext	file:
pos_j	common/bitstream.h	/^	Xapian::termpos pos_j;$/;"	m	struct:Xapian::BitReader::DIState
pos_k	common/bitstream.h	/^	Xapian::termpos pos_k;$/;"	m	struct:Xapian::BitReader::DIStack
position_list	matcher/orpospostlist.h	/^    OrPositionList position_list;$/;"	m	class:OrPosPostList
position_table	backends/chert/chert_database.h	/^	ChertPositionListTable position_table;$/;"	m	class:ChertDatabase
position_table	backends/glass/glass_database.h	/^	mutable GlassPositionListTable position_table;$/;"	m	class:GlassDatabase
positional_testcase	tests/api_query.cc	/^struct positional_testcase {$/;"	s	file:
positionlist	backends/chert/chert_postlist.h	/^	ChertPositionList positionlist;$/;"	m	class:ChertPostList
positionlist	backends/glass/glass_postlist.h	/^	GlassPositionList positionlist;$/;"	m	class:GlassPostList
positionlist_begin	api/maptermlist.h	/^	Xapian::PositionIterator positionlist_begin() const {$/;"	f	class:MapTermList
positionlist_begin	api/matchspy.cc	/^    Xapian::PositionIterator positionlist_begin() const {$/;"	f	class:StringAndFreqTermList
positionlist_begin	api/matchspy.cc	/^    Xapian::PositionIterator positionlist_begin() const {$/;"	f	class:ValueCountTermList
positionlist_begin	api/omdatabase.cc	/^Database::positionlist_begin(Xapian::docid did, const string &tname) const$/;"	f	class:Xapian::Database
positionlist_begin	api/postingiterator.cc	/^PostingIterator::positionlist_begin() const$/;"	f	class:Xapian::PostingIterator
positionlist_begin	api/termiterator.cc	/^TermIterator::positionlist_begin() const$/;"	f	class:Xapian::TermIterator
positionlist_begin	api/vectortermlist.cc	/^VectorTermList::positionlist_begin() const$/;"	f	class:VectorTermList
positionlist_begin	backends/alltermslist.cc	/^AllTermsList::positionlist_begin() const$/;"	f	class:AllTermsList
positionlist_begin	backends/chert/chert_spelling.cc	/^ChertSpellingTermList::positionlist_begin() const$/;"	f	class:ChertSpellingTermList
positionlist_begin	backends/chert/chert_termlist.cc	/^ChertTermList::positionlist_begin() const$/;"	f	class:ChertTermList
positionlist_begin	backends/glass/glass_spelling.cc	/^GlassSpellingTermList::positionlist_begin() const$/;"	f	class:GlassSpellingTermList
positionlist_begin	backends/glass/glass_termlist.cc	/^GlassTermList::positionlist_begin() const$/;"	f	class:GlassTermList
positionlist_begin	backends/inmemory/inmemory_database.cc	/^InMemoryTermList::positionlist_begin() const$/;"	f	class:InMemoryTermList
positionlist_begin	backends/multi/multi_termlist.cc	/^MultiTermList::positionlist_begin() const$/;"	f	class:MultiTermList
positionlist_begin	backends/remote/net_termlist.cc	/^NetworkTermList::positionlist_begin() const$/;"	f	class:NetworkTermList
positionlist_begin	expand/ortermlist.cc	/^OrTermList::positionlist_begin() const$/;"	f	class:OrTermList
positionlist_count	api/documentterm.h	/^    Xapian::termcount positionlist_count() const {$/;"	f	class:OmDocumentTerm
positionlist_count	api/maptermlist.h	/^	Xapian::termcount positionlist_count() const {$/;"	f	class:MapTermList
positionlist_count	api/matchspy.cc	/^    Xapian::termcount positionlist_count() const { unsupported_method(); return 0; }$/;"	f	class:StringAndFreqTermList
positionlist_count	api/matchspy.cc	/^    Xapian::termcount positionlist_count() const { unsupported_method(); return 0; }$/;"	f	class:ValueCountTermList
positionlist_count	api/termiterator.cc	/^TermIterator::positionlist_count() const$/;"	f	class:Xapian::TermIterator
positionlist_count	api/vectortermlist.cc	/^VectorTermList::positionlist_count() const$/;"	f	class:VectorTermList
positionlist_count	backends/alltermslist.cc	/^AllTermsList::positionlist_count() const$/;"	f	class:AllTermsList
positionlist_count	backends/chert/chert_positionlist.cc	/^ChertPositionListTable::positionlist_count(Xapian::docid did,$/;"	f	class:ChertPositionListTable
positionlist_count	backends/chert/chert_spelling.cc	/^ChertSpellingTermList::positionlist_count() const$/;"	f	class:ChertSpellingTermList
positionlist_count	backends/chert/chert_termlist.cc	/^ChertTermList::positionlist_count() const$/;"	f	class:ChertTermList
positionlist_count	backends/glass/glass_positionlist.cc	/^GlassPositionListTable::positionlist_count(Xapian::docid did,$/;"	f	class:GlassPositionListTable
positionlist_count	backends/glass/glass_spelling.cc	/^GlassSpellingTermList::positionlist_count() const$/;"	f	class:GlassSpellingTermList
positionlist_count	backends/glass/glass_termlist.cc	/^GlassTermList::positionlist_count() const$/;"	f	class:GlassTermList
positionlist_count	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::positionlist_count(Xapian::docid did,$/;"	f	class:InMemoryDatabase
positionlist_count	backends/inmemory/inmemory_database.cc	/^InMemoryTermList::positionlist_count() const$/;"	f	class:InMemoryTermList
positionlist_count	backends/multi/multi_termlist.cc	/^MultiTermList::positionlist_count() const$/;"	f	class:MultiTermList
positionlist_count	backends/remote/net_termlist.cc	/^NetworkTermList::positionlist_count() const$/;"	f	class:NetworkTermList
positionlist_count	expand/ortermlist.cc	/^OrTermList::positionlist_count() const$/;"	f	class:OrTermList
positionlist_end	include/xapian/database.h	/^	PositionIterator XAPIAN_NOTHROW(positionlist_end(Xapian::docid, const std::string &) const) {$/;"	f	class:Xapian::Database
positionlist_end	include/xapian/postingiterator.h	/^    PositionIterator XAPIAN_NOTHROW(positionlist_end() const) {$/;"	f	class:Xapian::PostingIterator
positionlist_end	include/xapian/termiterator.h	/^    PositionIterator XAPIAN_NOTHROW(positionlist_end() const) {$/;"	f	class:Xapian::TermIterator
positions	api/documentterm.h	/^    mutable term_positions positions;$/;"	m	class:OmDocumentTerm
positions	backends/inmemory/inmemory_database.h	/^	vector<Xapian::termpos> positions; \/\/ Sorted vector of positions$/;"	m	class:InMemoryPosting
positions	backends/inmemory/inmemory_database.h	/^	vector<Xapian::termpos> positions; \/\/ Sorted vector of positions$/;"	m	class:InMemoryTermEntry
positions	backends/inmemory/inmemory_positionlist.h	/^	vector<Xapian::termpos> positions;$/;"	m	class:InMemoryPositionList
positions_modified	backends/document.h	/^	mutable bool positions_modified;$/;"	m	class:Xapian::Document::Internal
positions_present	backends/inmemory/inmemory_database.h	/^    bool positions_present;$/;"	m	class:InMemoryDatabase
positions_to_string	tests/dbcheck.cc	/^positions_to_string(Xapian::PositionIterator & it,$/;"	f
posixly_correct	common/getopt.cc	/^static char *posixly_correct;$/;"	v	file:
posixy_open	common/posixy_wrapper.cc	/^posixy_open(const char *filename, int flags)$/;"	f
posixy_open	common/posixy_wrapper.h	/^posixy_open(const char *filename, int flags, int)$/;"	f
posixy_open	common/posixy_wrapper.h	45;"	d
posixy_rename	common/posixy_wrapper.cc	/^posixy_rename(const char *from, const char *to)$/;"	f
posixy_rename	common/posixy_wrapper.h	46;"	d
posixy_unlink	common/posixy_wrapper.cc	/^posixy_unlink(const char * filename)$/;"	f
posixy_unlink	common/posixy_wrapper.h	56;"	d
poslist	backends/chert/chert_modifiedpostlist.h	/^    PositionList * poslist;$/;"	m	class:ChertModifiedPostList
poslists	matcher/exactphrasepostlist.h	/^    PositionList ** poslists;$/;"	m	class:ExactPhrasePostList
poslists	matcher/nearpostlist.h	/^    PositionList ** poslists;$/;"	m	class:NearPostList
poslists	matcher/phrasepostlist.h	/^    PositionList ** poslists;$/;"	m	class:PhrasePostList
possibly_make_offline_live	api/replication.cc	/^DatabaseReplica::Internal::possibly_make_offline_live()$/;"	f	class:DatabaseReplica::Internal
post_advance	api/postingiterator.cc	/^PostingIterator::post_advance(Internal * res)$/;"	f	class:Xapian::PostingIterator
post_advance	api/termiterator.cc	/^TermIterator::post_advance(Internal * res)$/;"	f	class:Xapian::TermIterator
postings	backends/remote/net_postlist.h	/^    string postings;$/;"	m	class:NetworkPostList
postingsources	api/registry.cc	/^    std::map<std::string, Xapian::PostingSource *> postingsources;$/;"	m	class:Xapian::Registry::Internal	file:
postlist	api/queryinternal.cc	/^AndContext::PosFilter::postlist(PostList * pl, const vector<PostList*>& pls) const$/;"	f	class:Xapian::Internal::AndContext::PosFilter
postlist	api/queryinternal.cc	/^AndContext::postlist()$/;"	f	class:Xapian::Internal::AndContext
postlist	api/queryinternal.cc	/^OrContext::postlist()$/;"	f	class:Xapian::Internal::OrContext
postlist	api/queryinternal.cc	/^QueryAndLike::postlist(QueryOptimiser * qopt, double factor) const$/;"	f	class:Xapian::Internal::QueryAndLike
postlist	api/queryinternal.cc	/^QueryAndMaybe::postlist(QueryOptimiser * qopt, double factor) const$/;"	f	class:Xapian::Internal::QueryAndMaybe
postlist	api/queryinternal.cc	/^QueryAndNot::postlist(QueryOptimiser * qopt, double factor) const$/;"	f	class:Xapian::Internal::QueryAndNot
postlist	api/queryinternal.cc	/^QueryEliteSet::postlist(QueryOptimiser * qopt, double factor) const$/;"	f	class:Xapian::Internal::QueryEliteSet
postlist	api/queryinternal.cc	/^QueryFilter::postlist(QueryOptimiser * qopt, double factor) const$/;"	f	class:Xapian::Internal::QueryFilter
postlist	api/queryinternal.cc	/^QueryInvalid::postlist(QueryOptimiser *, double) const$/;"	f	class:Xapian::Internal::QueryInvalid
postlist	api/queryinternal.cc	/^QueryMax::postlist(QueryOptimiser * qopt, double factor) const$/;"	f	class:Xapian::Internal::QueryMax
postlist	api/queryinternal.cc	/^QueryOr::postlist(QueryOptimiser * qopt, double factor) const$/;"	f	class:Xapian::Internal::QueryOr
postlist	api/queryinternal.cc	/^QueryPostingSource::postlist(QueryOptimiser * qopt, double factor) const$/;"	f	class:Xapian::Internal::QueryPostingSource
postlist	api/queryinternal.cc	/^QueryScaleWeight::postlist(QueryOptimiser * qopt, double factor) const$/;"	f	class:Xapian::Internal::QueryScaleWeight
postlist	api/queryinternal.cc	/^QuerySynonym::postlist(QueryOptimiser * qopt, double factor) const$/;"	f	class:Xapian::Internal::QuerySynonym
postlist	api/queryinternal.cc	/^QueryTerm::postlist(QueryOptimiser * qopt, double factor) const$/;"	f	class:Xapian::Internal::QueryTerm
postlist	api/queryinternal.cc	/^QueryValueGE::postlist(QueryOptimiser *qopt, double factor) const$/;"	f	class:Xapian::Internal::QueryValueGE
postlist	api/queryinternal.cc	/^QueryValueLE::postlist(QueryOptimiser *qopt, double factor) const$/;"	f	class:Xapian::Internal::QueryValueLE
postlist	api/queryinternal.cc	/^QueryValueRange::postlist(QueryOptimiser *qopt, double factor) const$/;"	f	class:Xapian::Internal::QueryValueRange
postlist	api/queryinternal.cc	/^QueryWildcard::postlist(QueryOptimiser * qopt, double factor) const$/;"	f	class:Xapian::Internal::QueryWildcard
postlist	api/queryinternal.cc	/^QueryXor::postlist(QueryOptimiser * qopt, double factor) const$/;"	f	class:Xapian::Internal::QueryXor
postlist	api/queryinternal.cc	/^XorContext::postlist()$/;"	f	class:Xapian::Internal::XorContext
postlist_begin	api/omdatabase.cc	/^Database::postlist_begin(const string &tname) const$/;"	f	class:Xapian::Database
postlist_changes	backends/glass/glass_inverter.h	/^    std::map<std::string, PostingChanges> postlist_changes;$/;"	m	class:Inverter
postlist_end	include/xapian/database.h	/^	PostingIterator XAPIAN_NOTHROW(postlist_end(const std::string &) const) {$/;"	f	class:Xapian::Database
postlist_max	api/queryinternal.cc	/^OrContext::postlist_max()$/;"	f	class:Xapian::Internal::OrContext
postlist_sub_and_like	api/queryinternal.cc	/^Query::Internal::postlist_sub_and_like(AndContext& ctx,$/;"	f	class:Xapian::Query::Internal
postlist_sub_and_like	api/queryinternal.cc	/^QueryAndLike::postlist_sub_and_like(AndContext& ctx, QueryOptimiser * qopt, double factor) const$/;"	f	class:Xapian::Internal::QueryAndLike
postlist_sub_and_like	api/queryinternal.cc	/^QueryFilter::postlist_sub_and_like(AndContext& ctx, QueryOptimiser * qopt, double factor) const$/;"	f	class:Xapian::Internal::QueryFilter
postlist_sub_and_like	api/queryinternal.cc	/^QueryNear::postlist_sub_and_like(AndContext & ctx, QueryOptimiser * qopt, double factor) const$/;"	f	class:Xapian::Internal::QueryNear
postlist_sub_and_like	api/queryinternal.cc	/^QueryPhrase::postlist_sub_and_like(AndContext & ctx, QueryOptimiser * qopt, double factor) const$/;"	f	class:Xapian::Internal::QueryPhrase
postlist_sub_or_like	api/queryinternal.cc	/^Query::Internal::postlist_sub_or_like(OrContext& ctx,$/;"	f	class:Xapian::Query::Internal
postlist_sub_or_like	api/queryinternal.cc	/^QueryEliteSet::postlist_sub_or_like(OrContext& ctx, QueryOptimiser * qopt, double factor) const$/;"	f	class:Xapian::Internal::QueryEliteSet
postlist_sub_or_like	api/queryinternal.cc	/^QueryOr::postlist_sub_or_like(OrContext& ctx, QueryOptimiser * qopt, double factor) const$/;"	f	class:Xapian::Internal::QueryOr
postlist_sub_xor	api/queryinternal.cc	/^Query::Internal::postlist_sub_xor(XorContext& ctx,$/;"	f	class:Xapian::Query::Internal
postlist_sub_xor	api/queryinternal.cc	/^QueryXor::postlist_sub_xor(XorContext& ctx, QueryOptimiser * qopt, double factor) const$/;"	f	class:Xapian::Internal::QueryXor
postlist_table	backends/chert/chert_database.h	/^	mutable ChertPostListTable postlist_table;$/;"	m	class:ChertDatabase
postlist_table	backends/chert/chert_values.h	/^    ChertPostListTable * postlist_table;$/;"	m	class:ChertValueManager
postlist_table	backends/glass/glass_database.h	/^	mutable GlassPostListTable postlist_table;$/;"	m	class:GlassDatabase
postlist_table	backends/glass/glass_values.h	/^    GlassPostListTable * postlist_table;$/;"	m	class:GlassValueManager
postlist_to_string	tests/dbcheck.cc	/^postlist_to_string(const Xapian::Database & db, const string & tname)$/;"	f
postlist_windowed	api/queryinternal.cc	/^QueryWindowed::postlist_windowed(Query::op op, AndContext& ctx, QueryOptimiser * qopt, double factor) const$/;"	f	class:Xapian::Internal::QueryWindowed
postlists	backends/inmemory/inmemory_database.h	/^    map<kdmtStr, InMemoryTerm> postlists;$/;"	m	class:InMemoryDatabase
postlists	backends/multi/multi_postlist.h	/^	std::vector<LeafPostList *> postlists;$/;"	m	class:MultiPostList
prec	queryparser/lemon.c	/^  int prec;                \/* Precedence if defined (-1 otherwise) *\/$/;"	m	struct:symbol	file:
preccounter	queryparser/lemon.c	/^  int preccounter;           \/* Assign this precedence to decl arguments *\/$/;"	m	struct:pstate	file:
precsym	queryparser/lemon.c	/^  struct symbol *precsym;  \/* Precedence symbol for this rule *\/$/;"	m	struct:rule	typeref:struct:rule::symbol	file:
prefer_mdy	include/xapian/queryparser.h	/^    bool prefer_mdy;$/;"	m	class:Xapian::DateValueRangeProcessor
prefix	Makefile	/^prefix = \/usr\/local$/;"	m
prefix	backends/chert/chert_alltermslist.h	/^    std::string prefix;$/;"	m	class:ChertAllTermsList
prefix	backends/chert/chert_metadata.h	/^    std::string prefix;$/;"	m	class:ChertMetadataTermList
prefix	backends/chert/chert_synonym.h	/^    string prefix;$/;"	m	class:ChertSynonymTermList
prefix	backends/glass/glass_alltermslist.h	/^    std::string prefix;$/;"	m	class:GlassAllTermsList
prefix	backends/glass/glass_metadata.h	/^    std::string prefix;$/;"	m	class:GlassMetadataTermList
prefix	backends/glass/glass_synonym.h	/^    string prefix;$/;"	m	class:GlassSynonymTermList
prefix	backends/inmemory/KeyDomet.h	/^        KeyDomet<Size_> prefix;$/;"	m	class:kdmt::KeyDometSize::KeyDometStr
prefix	backends/inmemory/inmemory_alltermslist.h	/^	kdmtStr prefix;$/;"	m	class:InMemoryAllTermsList
prefix	docs/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	include/xapian/expanddecider.h	/^    std::string prefix;$/;"	m	class:Xapian::ExpandDeciderFilterPrefix
prefix	include/xapian/queryparser.h	/^    bool prefix;$/;"	m	class:Xapian::StringValueRangeProcessor
prefix	tests/Makefile	/^prefix = \/usr\/local$/;"	m
prefix_needs_colon	queryparser/queryparser_internal.cc	/^prefix_needs_colon(const string & prefix, unsigned ch)$/;"	f
prefixes	queryparser/queryparser_internal.cc	/^    const list<string> * prefixes;$/;"	m	class:Terms	file:
prefixes	queryparser/queryparser_internal.h	/^    list<string> prefixes;$/;"	m	struct:FieldInfo
prepare_match	matcher/localsubmatch.cc	/^LocalSubMatch::prepare_match(bool nowait,$/;"	f	class:LocalSubMatch
prepare_match	matcher/remotesubmatch.cc	/^RemoteSubMatch::prepare_match(bool nowait,$/;"	f	class:RemoteSubMatch
prepare_sub_matches	matcher/multimatch.cc	/^prepare_sub_matches(vector<intrusive_ptr<SubMatch> > & leaves,$/;"	f	file:
preprocess_input	queryparser/lemon.c	/^static void preprocess_input(char *z){$/;"	f	file:
prev	backends/chert/chert_cursor.cc	/^ChertCursor::prev()$/;"	f	class:ChertCursor
prev	backends/chert/chert_table.h	/^	bool prev(Cursor *C_, int j) const {$/;"	f	class:ChertTable
prev	backends/glass/glass_table.h	/^	bool prev(Glass::Cursor *C_, int j) const {$/;"	f	class:GlassTable
prev_default	backends/chert/chert_table.cc	/^ChertTable::prev_default(Cursor * C_, int j) const$/;"	f	class:ChertTable
prev_default	backends/glass/glass_table.cc	/^GlassTable::prev_default(Glass::Cursor * C_, int j) const$/;"	f	class:GlassTable
prev_did	backends/chert/chert_values.cc	/^    Xapian::docid prev_did;$/;"	m	class:ValueUpdater	file:
prev_did	backends/glass/glass_values.cc	/^    Xapian::docid prev_did;$/;"	m	class:Glass::ValueUpdater	file:
prev_for_sequential	backends/chert/chert_table.cc	/^ChertTable::prev_for_sequential(Cursor * C_, int \/*dummy*\/) const$/;"	f	class:ChertTable
prev_for_sequential	backends/glass/glass_table.cc	/^GlassTable::prev_for_sequential(Glass::Cursor * C_, int \/*dummy*\/) const$/;"	f	class:GlassTable
previous_token	languages/compiler/header.h	/^    int previous_token;$/;"	m	struct:tokeniser
prevrule	queryparser/lemon.c	/^  struct rule *prevrule;     \/* Previous rule parsed *\/$/;"	m	struct:pstate	typeref:struct:pstate::rule	file:
print_arglist	languages/compiler/driver.c	/^static void print_arglist(void) {$/;"	f	file:
print_bytes	backends/chert/chert_check.cc	/^void ChertTableCheck::print_bytes(int n, const uint8_t * p) const$/;"	f	class:ChertTableCheck
print_bytes	backends/glass/glass_check.cc	/^void GlassTableCheck::print_bytes(int n, const uint8_t * p) const$/;"	f	class:GlassTableCheck
print_key	backends/chert/chert_check.cc	/^void ChertTableCheck::print_key(const uint8_t * p, int c, int j) const$/;"	f	class:ChertTableCheck
print_key	backends/glass/glass_check.cc	/^void GlassTableCheck::print_key(const uint8_t * p, int c, int j) const$/;"	f	class:GlassTableCheck
print_mset_percentages	tests/api_anydb.cc	/^print_mset_percentages(const Xapian::MSet &mset)$/;"	f	file:
print_mset_weights	tests/api_anydb.cc	/^print_mset_weights(const Xapian::MSet &mset)$/;"	f	file:
print_node_	languages/compiler/analyser.c	/^static void print_node_(struct node * p, int n, const char * s) {$/;"	f	file:
print_program	languages/compiler/analyser.c	/^extern void print_program(struct analyser * a) {$/;"	f
print_spaces	backends/chert/chert_check.cc	/^void ChertTableCheck::print_spaces(int n) const$/;"	f	class:ChertTableCheck
print_spaces	backends/glass/glass_check.cc	/^void GlassTableCheck::print_spaces(int n) const$/;"	f	class:GlassTableCheck
print_stack_union	queryparser/lemon.c	/^void print_stack_union($/;"	f
print_tag	backends/chert/chert_check.cc	/^void ChertTableCheck::print_tag(const uint8_t * p, int c, int j) const$/;"	f	class:ChertTableCheck
print_tag	backends/glass/glass_check.cc	/^void GlassTableCheck::print_tag(const uint8_t * p, int c, int j) const$/;"	f	class:GlassTableCheck
pro-attribs	docs/apidoc/html/classXapian_1_1DecreasingValueWeightPostingSource.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"><\/a>$/;"	a
pro-attribs	docs/apidoc/html/classXapian_1_1RangeProcessor.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"><\/a>$/;"	a
pro-attribs	docs/apidoc/html/classXapian_1_1StringValueRangeProcessor.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"><\/a>$/;"	a
pro-attribs	docs/apidoc/html/classXapian_1_1ValuePostingSource.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"><\/a>$/;"	a
pro-methods	docs/apidoc/html/classXapian_1_1DecreasingValueWeightPostingSource.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"><\/a>$/;"	a
pro-methods	docs/apidoc/html/classXapian_1_1Weight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"><\/a>$/;"	a
pro-types	docs/apidoc/html/classXapian_1_1Weight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-types"><\/a>$/;"	a
proc	queryparser/queryparser_internal.h	/^    Xapian::Internal::opt_intrusive_ptr<RangeProcessor> proc;$/;"	m	struct:Xapian::RangeProc
process	matcher/collapser.cc	/^Collapser::process(Xapian::Internal::MSetItem & item,$/;"	f	class:Collapser
process_changeset_chunk_base	backends/chert/chert_databasereplicator.cc	/^ChertDatabaseReplicator::process_changeset_chunk_base(const string & tablename,$/;"	f	class:ChertDatabaseReplicator
process_changeset_chunk_blocks	backends/chert/chert_databasereplicator.cc	/^ChertDatabaseReplicator::process_changeset_chunk_blocks(const string & tablename,$/;"	f	class:ChertDatabaseReplicator
process_changeset_chunk_blocks	backends/glass/glass_databasereplicator.cc	/^GlassDatabaseReplicator::process_changeset_chunk_blocks(Glass::table_type table,$/;"	f	class:GlassDatabaseReplicator
process_changeset_chunk_version	backends/glass/glass_databasereplicator.cc	/^GlassDatabaseReplicator::process_changeset_chunk_version(string & buf,$/;"	f	class:GlassDatabaseReplicator
process_next_or_skip_to	matcher/andmaybepostlist.cc	/^AndMaybePostList::process_next_or_skip_to(double w_min, PostList *ret)$/;"	f	class:AndMaybePostList
procs	queryparser/queryparser_internal.h	/^    list<Xapian::Internal::opt_intrusive_ptr<Xapian::FieldProcessor>> procs;$/;"	m	struct:FieldInfo
program	languages/compiler/header.h	/^    struct node * program;$/;"	m	struct:analyser	typeref:struct:analyser::node
program_details	missing	/^program_details ()$/;"	f
program_end	languages/compiler/header.h	/^    struct node * program_end;$/;"	m	struct:analyser	typeref:struct:analyser::node
program_transform_name	Makefile	/^program_transform_name = s&$$&&$/;"	m
program_transform_name	docs/Makefile	/^program_transform_name = s&$$&&$/;"	m
program_transform_name	tests/Makefile	/^program_transform_name = s&$$&&$/;"	m
properties	tests/harness/testrunner.h	/^    unsigned properties;$/;"	m	class:TestRunner
prototypes	configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
psdir	Makefile	/^psdir = ${docdir}$/;"	m
psdir	docs/Makefile	/^psdir = ${docdir}$/;"	m
psdir	tests/Makefile	/^psdir = ${docdir}$/;"	m
pstate	queryparser/lemon.c	/^struct pstate {$/;"	s	file:
ptr	api/editdistance.cc	/^    const CHR * ptr;$/;"	m	struct:edist_seq	file:
ptr	api/smallvector.h	/^	void * const * ptr;$/;"	m	class:Xapian::SmallVector::const_iterator
pub-attribs	docs/apidoc/html/structXapian_1_1LatLongCoord.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1AssertionError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1BB2Weight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1BM25PlusWeight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1BM25Weight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1BoolWeight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1Compactor.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1CoordWeight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1DLHWeight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1DPHWeight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1Database.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1DatabaseCorruptError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1DatabaseCreateError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1DatabaseError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1DatabaseLockError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1DatabaseModifiedError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1DatabaseOpeningError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1DatabaseVersionError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1DateRangeProcessor.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1DateValueRangeProcessor.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1DecreasingValueWeightPostingSource.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1DocNotFoundError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1Document.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1ESet.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1ESetIterator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1Enquire.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1Error.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1ErrorHandler.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1ExpandDecider.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1ExpandDeciderAnd.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1ExpandDeciderFilterPrefix.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1ExpandDeciderFilterTerms.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1FeatureUnavailableError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1FieldProcessor.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1FixedWeightPostingSource.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1GreatCircleMetric.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1IfB2Weight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1InL2Weight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1IneB2Weight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1InternalError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1InvalidArgumentError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1InvalidOperationError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1KeyMaker.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1LMWeight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1LatLongCoords.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1LatLongCoordsIterator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1LatLongDistanceKeyMaker.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1LatLongDistancePostingSource.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1LatLongMetric.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1MSet.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1MSetIterator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1MatchDecider.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1MatchSpy.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1MultiValueKeyMaker.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1NetworkError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1NetworkTimeoutError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1NumberRangeProcessor.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1NumberValueRangeProcessor.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1PL2PlusWeight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1PL2Weight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1PositionIterator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1PostingIterator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1PostingSource.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1Query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1QueryParser.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1QueryParserError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1RSet.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1RangeError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1RangeProcessor.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1Registry.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1SerialisationError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1SimpleStopper.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1Stem.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1StemImplementation.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1Stopper.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1StringValueRangeProcessor.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1TermGenerator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1TermIterator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1TfIdfWeight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1TradWeight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1UnimplementedError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1Utf8Iterator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1ValueCountMatchSpy.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1ValueIterator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1ValueMapPostingSource.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1ValuePostingSource.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1ValueRangeProcessor.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1ValueSetMatchDecider.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1ValueWeightPostingSource.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1Weight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1WildcardError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1WritableDatabase.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/structXapian_1_1LatLongCoord.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-static-attribs	docs/apidoc/html/classXapian_1_1Enquire.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-attribs"><\/a>$/;"	a
pub-static-attribs	docs/apidoc/html/classXapian_1_1Query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-attribs"><\/a>$/;"	a
pub-static-methods	docs/apidoc/html/classXapian_1_1Database.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"><\/a>$/;"	a
pub-static-methods	docs/apidoc/html/classXapian_1_1Document.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"><\/a>$/;"	a
pub-static-methods	docs/apidoc/html/classXapian_1_1Query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"><\/a>$/;"	a
pub-static-methods	docs/apidoc/html/classXapian_1_1Stem.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"><\/a>$/;"	a
pub-types	docs/apidoc/html/classXapian_1_1Compactor.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
pub-types	docs/apidoc/html/classXapian_1_1Enquire.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
pub-types	docs/apidoc/html/classXapian_1_1MSet.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
pub-types	docs/apidoc/html/classXapian_1_1Query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
pub-types	docs/apidoc/html/classXapian_1_1QueryParser.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
pub-types	docs/apidoc/html/classXapian_1_1TermGenerator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
pub-types	docs/apidoc/html/classXapian_1_1Utf8Iterator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
pub-types	docs/apidoc/html/classXapian_1_1Weight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
pump	queryparser/termgenerator_internal.cc	/^SnipPipe::pump(double* r, size_t t, size_t h, unsigned flags)$/;"	f	class:Xapian::SnipPipe
push_back	api/smallvector.h	/^    void push_back(const T & elt) {$/;"	f	class:Xapian::SmallVector
push_leaf_N	tests/soaktest/soaktest_queries.cc	/^static void push_leaf_N(QueryBuilderEnv & env)$/;"	f	file:
put_utf8	languages/compiler/space.c	/^extern int put_utf8(int ch, symbol * p) {$/;"	f
pw	backends/glass/glass_freelist.h	/^    uint8_t * pw;$/;"	m	class:GlassFreeList
px	include/xapian/intrusive_ptr.h	/^    T * px;$/;"	m	class:Xapian::Internal::intrusive_ptr
px	include/xapian/intrusive_ptr.h	/^    T * px;$/;"	m	class:Xapian::Internal::opt_intrusive_ptr
qlen	api/omenquireinternal.h	/^	termcount qlen;$/;"	m	class:Xapian::Enquire::Internal
qlen	matcher/localsubmatch.cc	/^    Xapian::termcount qlen;$/;"	m	class:LazyWeight	file:
qlen	matcher/localsubmatch.h	/^    Xapian::termcount qlen;$/;"	m	class:LocalSubMatch
qopt	api/queryinternal.cc	/^    QueryOptimiser* qopt;$/;"	m	class:Xapian::Internal::Context	file:
qp_default_op3_test	tests/api_queryparser.cc	/^struct qp_default_op3_test {$/;"	s	file:
qp_flag	examples/quest.cc	/^struct qp_flag { const char * s; unsigned f; };$/;"	s	file:
qp_op	examples/quest.cc	/^struct qp_op { const char * s; unsigned f; };$/;"	s	file:
qp_scale1_helper	tests/api_queryparser.cc	/^qp_scale1_helper(const Xapian::Database &db, const string & q, unsigned n,$/;"	f	file:
qpi	queryparser/queryparser_internal.cc	/^    QueryParser::Internal * qpi;$/;"	m	class:State	file:
query	api/omenquireinternal.h	/^	Query query;$/;"	m	class:Xapian::Enquire::Internal
query	include/xapian/query.h	/^    const Query & query;$/;"	m	class:Xapian::InvertedQuery_
query	matcher/localsubmatch.h	/^    Xapian::Query query;$/;"	m	class:LocalSubMatch
query	matcher/multimatch.h	/^	Xapian::Query query;$/;"	m	class:MultiMatch
query	queryparser/queryparser_internal.cc	/^    Query query;$/;"	m	class:State	file:
query	queryparser/queryparser_internal.cc	/^    Query query;$/;"	m	class:Term	file:
query	queryparser/queryparser_internal.cc	/^    Query* query = NULL;$/;"	m	struct:ProbQuery	file:
query	tests/api_anydb.cc	/^query(Xapian::Query::op op, Xapian::termcount parameter,$/;"	f	file:
query	tests/api_anydb.cc	/^query(Xapian::Query::op op,$/;"	f	file:
query	tests/api_anydb.cc	/^query(const string &t)$/;"	f	file:
query	tests/api_db.cc	/^query(const string &t)$/;"	f	file:
query	tests/api_qpbackend.cc	/^    const char *query;$/;"	m	struct:test	file:
query	tests/api_queryparser.cc	/^    const char *query;$/;"	m	struct:test	file:
query	weight/weightinternal.h	/^    Xapian::Query query;$/;"	m	class:Xapian::Weight::Internal
query_length_	include/xapian/weight.h	/^    Xapian::termcount query_length_;$/;"	m	class:Xapian::Weight
querypairwise1_helper	tests/api_scalability.cc	/^querypairwise1_helper(unsigned num_subqs)$/;"	f	file:
quiet	bin/xapian-compact.cc	/^    bool quiet;$/;"	m	class:MyCompactor	file:
r	matcher/branchpostlist.h	/^	PostList *r;$/;"	m	class:BranchPostList
r_A	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_A() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_AA	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_AA() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_B	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_B() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_BB	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_BB() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_C	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::r_C() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
r_C	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_C() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_CC	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_CC() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_Checks1	languages/arabic.cc	/^int Xapian::InternalStemArabic::r_Checks1() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemArabic
r_D	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_D() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_E	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_E() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_F	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_F() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_G	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_G() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_H	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_H() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_I	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_I() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_J	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_J() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_K	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_K() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_KER	languages/indonesian.cc	/^int Xapian::InternalStemIndonesian::r_KER() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemIndonesian
r_L	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_L() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_LONG	languages/finnish.cc	/^int Xapian::InternalStemFinnish::r_LONG() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFinnish
r_Lose_infix	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::r_Lose_infix() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
r_Lose_prefix	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::r_Lose_prefix() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
r_M	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_M() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_N	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_N() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_Normalize_post	languages/arabic.cc	/^int Xapian::InternalStemArabic::r_Normalize_post() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemArabic
r_Normalize_pre	languages/arabic.cc	/^int Xapian::InternalStemArabic::r_Normalize_pre() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemArabic
r_O	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_O() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_P	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_P() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_Prefix_Step1	languages/arabic.cc	/^int Xapian::InternalStemArabic::r_Prefix_Step1() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemArabic
r_Prefix_Step2	languages/arabic.cc	/^int Xapian::InternalStemArabic::r_Prefix_Step2() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemArabic
r_Prefix_Step3_Verb	languages/arabic.cc	/^int Xapian::InternalStemArabic::r_Prefix_Step3_Verb() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemArabic
r_Prefix_Step3a_Noun	languages/arabic.cc	/^int Xapian::InternalStemArabic::r_Prefix_Step3a_Noun() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemArabic
r_Prefix_Step3b_Noun	languages/arabic.cc	/^int Xapian::InternalStemArabic::r_Prefix_Step3b_Noun() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemArabic
r_Prefix_Step4_Verb	languages/arabic.cc	/^int Xapian::InternalStemArabic::r_Prefix_Step4_Verb() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemArabic
r_Q	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_Q() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_R	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_R() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_R1	languages/basque.cc	/^int Xapian::InternalStemBasque::r_R1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemBasque
r_R1	languages/catalan.cc	/^int Xapian::InternalStemCatalan::r_R1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemCatalan
r_R1	languages/dutch.cc	/^int Xapian::InternalStemDutch::r_R1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemDutch
r_R1	languages/earlyenglish.cc	/^int Xapian::InternalStemEarlyenglish::r_R1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemEarlyenglish
r_R1	languages/english.cc	/^int Xapian::InternalStemEnglish::r_R1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemEnglish
r_R1	languages/french.cc	/^int Xapian::InternalStemFrench::r_R1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFrench
r_R1	languages/german.cc	/^int Xapian::InternalStemGerman::r_R1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemGerman
r_R1	languages/german2.cc	/^int Xapian::InternalStemGerman2::r_R1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemGerman2
r_R1	languages/hungarian.cc	/^int Xapian::InternalStemHungarian::r_R1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemHungarian
r_R1	languages/irish.cc	/^int Xapian::InternalStemIrish::r_R1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemIrish
r_R1	languages/italian.cc	/^int Xapian::InternalStemItalian::r_R1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemItalian
r_R1	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::r_R1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
r_R1	languages/lithuanian.cc	/^int Xapian::InternalStemLithuanian::r_R1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLithuanian
r_R1	languages/porter.cc	/^int Xapian::InternalStemPorter::r_R1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPorter
r_R1	languages/portuguese.cc	/^int Xapian::InternalStemPortuguese::r_R1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPortuguese
r_R1	languages/romanian.cc	/^int Xapian::InternalStemRomanian::r_R1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRomanian
r_R1	languages/spanish.cc	/^int Xapian::InternalStemSpanish::r_R1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemSpanish
r_R2	languages/armenian.cc	/^int Xapian::InternalStemArmenian::r_R2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemArmenian
r_R2	languages/basque.cc	/^int Xapian::InternalStemBasque::r_R2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemBasque
r_R2	languages/catalan.cc	/^int Xapian::InternalStemCatalan::r_R2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemCatalan
r_R2	languages/dutch.cc	/^int Xapian::InternalStemDutch::r_R2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemDutch
r_R2	languages/earlyenglish.cc	/^int Xapian::InternalStemEarlyenglish::r_R2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemEarlyenglish
r_R2	languages/english.cc	/^int Xapian::InternalStemEnglish::r_R2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemEnglish
r_R2	languages/finnish.cc	/^int Xapian::InternalStemFinnish::r_R2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFinnish
r_R2	languages/french.cc	/^int Xapian::InternalStemFrench::r_R2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFrench
r_R2	languages/german.cc	/^int Xapian::InternalStemGerman::r_R2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemGerman
r_R2	languages/german2.cc	/^int Xapian::InternalStemGerman2::r_R2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemGerman2
r_R2	languages/irish.cc	/^int Xapian::InternalStemIrish::r_R2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemIrish
r_R2	languages/italian.cc	/^int Xapian::InternalStemItalian::r_R2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemItalian
r_R2	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::r_R2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
r_R2	languages/porter.cc	/^int Xapian::InternalStemPorter::r_R2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPorter
r_R2	languages/portuguese.cc	/^int Xapian::InternalStemPortuguese::r_R2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPortuguese
r_R2	languages/romanian.cc	/^int Xapian::InternalStemRomanian::r_R2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRomanian
r_R2	languages/russian.cc	/^int Xapian::InternalStemRussian::r_R2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRussian
r_R2	languages/spanish.cc	/^int Xapian::InternalStemSpanish::r_R2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemSpanish
r_RV	languages/basque.cc	/^int Xapian::InternalStemBasque::r_RV() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemBasque
r_RV	languages/french.cc	/^int Xapian::InternalStemFrench::r_RV() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFrench
r_RV	languages/irish.cc	/^int Xapian::InternalStemIrish::r_RV() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemIrish
r_RV	languages/italian.cc	/^int Xapian::InternalStemItalian::r_RV() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemItalian
r_RV	languages/portuguese.cc	/^int Xapian::InternalStemPortuguese::r_RV() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPortuguese
r_RV	languages/romanian.cc	/^int Xapian::InternalStemRomanian::r_RV() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRomanian
r_RV	languages/spanish.cc	/^int Xapian::InternalStemSpanish::r_RV() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemSpanish
r_S	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_S() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_SUFFIX_AN_OK	languages/indonesian.cc	/^int Xapian::InternalStemIndonesian::r_SUFFIX_AN_OK() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemIndonesian
r_SUFFIX_I_OK	languages/indonesian.cc	/^int Xapian::InternalStemIndonesian::r_SUFFIX_I_OK() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemIndonesian
r_SUFFIX_KAN_OK	languages/indonesian.cc	/^int Xapian::InternalStemIndonesian::r_SUFFIX_KAN_OK() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemIndonesian
r_Step_1	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::r_Step_1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
r_Step_1a	languages/earlyenglish.cc	/^int Xapian::InternalStemEarlyenglish::r_Step_1a() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemEarlyenglish
r_Step_1a	languages/english.cc	/^int Xapian::InternalStemEnglish::r_Step_1a() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemEnglish
r_Step_1a	languages/porter.cc	/^int Xapian::InternalStemPorter::r_Step_1a() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPorter
r_Step_1b	languages/earlyenglish.cc	/^int Xapian::InternalStemEarlyenglish::r_Step_1b() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemEarlyenglish
r_Step_1b	languages/english.cc	/^int Xapian::InternalStemEnglish::r_Step_1b() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemEnglish
r_Step_1b	languages/porter.cc	/^int Xapian::InternalStemPorter::r_Step_1b() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPorter
r_Step_1c	languages/earlyenglish.cc	/^int Xapian::InternalStemEarlyenglish::r_Step_1c() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemEarlyenglish
r_Step_1c	languages/english.cc	/^int Xapian::InternalStemEnglish::r_Step_1c() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemEnglish
r_Step_1c	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::r_Step_1c() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
r_Step_1c	languages/porter.cc	/^int Xapian::InternalStemPorter::r_Step_1c() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPorter
r_Step_2	languages/earlyenglish.cc	/^int Xapian::InternalStemEarlyenglish::r_Step_2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemEarlyenglish
r_Step_2	languages/english.cc	/^int Xapian::InternalStemEnglish::r_Step_2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemEnglish
r_Step_2	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::r_Step_2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
r_Step_2	languages/porter.cc	/^int Xapian::InternalStemPorter::r_Step_2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPorter
r_Step_3	languages/earlyenglish.cc	/^int Xapian::InternalStemEarlyenglish::r_Step_3() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemEarlyenglish
r_Step_3	languages/english.cc	/^int Xapian::InternalStemEnglish::r_Step_3() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemEnglish
r_Step_3	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::r_Step_3() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
r_Step_3	languages/porter.cc	/^int Xapian::InternalStemPorter::r_Step_3() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPorter
r_Step_4	languages/earlyenglish.cc	/^int Xapian::InternalStemEarlyenglish::r_Step_4() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemEarlyenglish
r_Step_4	languages/english.cc	/^int Xapian::InternalStemEnglish::r_Step_4() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemEnglish
r_Step_4	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::r_Step_4() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
r_Step_4	languages/porter.cc	/^int Xapian::InternalStemPorter::r_Step_4() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPorter
r_Step_5	languages/english.cc	/^int Xapian::InternalStemEnglish::r_Step_5() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemEnglish
r_Step_5a	languages/earlyenglish.cc	/^int Xapian::InternalStemEarlyenglish::r_Step_5a() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemEarlyenglish
r_Step_5a	languages/porter.cc	/^int Xapian::InternalStemPorter::r_Step_5a() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPorter
r_Step_5b	languages/earlyenglish.cc	/^int Xapian::InternalStemEarlyenglish::r_Step_5b() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemEarlyenglish
r_Step_5b	languages/porter.cc	/^int Xapian::InternalStemPorter::r_Step_5b() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPorter
r_Step_6	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::r_Step_6() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
r_Step_7	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::r_Step_7() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
r_Suffix_All_alef_maqsura	languages/arabic.cc	/^int Xapian::InternalStemArabic::r_Suffix_All_alef_maqsura() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemArabic
r_Suffix_Noun_Step1a	languages/arabic.cc	/^int Xapian::InternalStemArabic::r_Suffix_Noun_Step1a() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemArabic
r_Suffix_Noun_Step1b	languages/arabic.cc	/^int Xapian::InternalStemArabic::r_Suffix_Noun_Step1b() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemArabic
r_Suffix_Noun_Step2a	languages/arabic.cc	/^int Xapian::InternalStemArabic::r_Suffix_Noun_Step2a() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemArabic
r_Suffix_Noun_Step2b	languages/arabic.cc	/^int Xapian::InternalStemArabic::r_Suffix_Noun_Step2b() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemArabic
r_Suffix_Noun_Step2c1	languages/arabic.cc	/^int Xapian::InternalStemArabic::r_Suffix_Noun_Step2c1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemArabic
r_Suffix_Noun_Step2c2	languages/arabic.cc	/^int Xapian::InternalStemArabic::r_Suffix_Noun_Step2c2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemArabic
r_Suffix_Noun_Step3	languages/arabic.cc	/^int Xapian::InternalStemArabic::r_Suffix_Noun_Step3() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemArabic
r_Suffix_Verb_Step1	languages/arabic.cc	/^int Xapian::InternalStemArabic::r_Suffix_Verb_Step1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemArabic
r_Suffix_Verb_Step2a	languages/arabic.cc	/^int Xapian::InternalStemArabic::r_Suffix_Verb_Step2a() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemArabic
r_Suffix_Verb_Step2b	languages/arabic.cc	/^int Xapian::InternalStemArabic::r_Suffix_Verb_Step2b() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemArabic
r_Suffix_Verb_Step2c	languages/arabic.cc	/^int Xapian::InternalStemArabic::r_Suffix_Verb_Step2c() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemArabic
r_T	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_T() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_U	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_U() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_V	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::r_V() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
r_V	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_V() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_VI	languages/finnish.cc	/^int Xapian::InternalStemFinnish::r_VI() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFinnish
r_VOWEL	languages/indonesian.cc	/^int Xapian::InternalStemIndonesian::r_VOWEL() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemIndonesian
r_VX	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::r_VX() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
r_W	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_W() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_X	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_X() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_Y	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_Y() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_Z	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_Z() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_aditzak	languages/basque.cc	/^int Xapian::InternalStemBasque::r_aditzak() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemBasque
r_adjectival	languages/russian.cc	/^int Xapian::InternalStemRussian::r_adjectival() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRussian
r_adjective	languages/armenian.cc	/^int Xapian::InternalStemArmenian::r_adjective() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemArmenian
r_adjective	languages/russian.cc	/^int Xapian::InternalStemRussian::r_adjective() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRussian
r_adjetiboak	languages/basque.cc	/^int Xapian::InternalStemBasque::r_adjetiboak() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemBasque
r_append_U_to_stems_ending_with_d_or_g	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_append_U_to_stems_ending_with_d_or_g() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_attached_pronoun	languages/catalan.cc	/^int Xapian::InternalStemCatalan::r_attached_pronoun() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemCatalan
r_attached_pronoun	languages/italian.cc	/^int Xapian::InternalStemItalian::r_attached_pronoun() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemItalian
r_attached_pronoun	languages/spanish.cc	/^int Xapian::InternalStemSpanish::r_attached_pronoun() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemSpanish
r_case	languages/hungarian.cc	/^int Xapian::InternalStemHungarian::r_case() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemHungarian
r_case_ending	languages/finnish.cc	/^int Xapian::InternalStemFinnish::r_case_ending() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFinnish
r_case_other	languages/hungarian.cc	/^int Xapian::InternalStemHungarian::r_case_other() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemHungarian
r_case_special	languages/hungarian.cc	/^int Xapian::InternalStemHungarian::r_case_special() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemHungarian
r_check_category_2	languages/nepali.cc	/^int Xapian::InternalStemNepali::r_check_category_2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemNepali
r_check_vowel_harmony	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_check_vowel_harmony() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_cleaning	languages/catalan.cc	/^int Xapian::InternalStemCatalan::r_cleaning() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemCatalan
r_combo_suffix	languages/romanian.cc	/^int Xapian::InternalStemRomanian::r_combo_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRomanian
r_consonant_pair	languages/danish.cc	/^int Xapian::InternalStemDanish::r_consonant_pair() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemDanish
r_consonant_pair	languages/norwegian.cc	/^int Xapian::InternalStemNorwegian::r_consonant_pair() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemNorwegian
r_consonant_pair	languages/swedish.cc	/^int Xapian::InternalStemSwedish::r_consonant_pair() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemSwedish
r_deriv	languages/irish.cc	/^int Xapian::InternalStemIrish::r_deriv() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemIrish
r_derivational	languages/russian.cc	/^int Xapian::InternalStemRussian::r_derivational() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRussian
r_double	languages/hungarian.cc	/^int Xapian::InternalStemHungarian::r_double() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemHungarian
r_e_ending	languages/dutch.cc	/^int Xapian::InternalStemDutch::r_e_ending() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemDutch
r_en_ending	languages/dutch.cc	/^int Xapian::InternalStemDutch::r_en_ending() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemDutch
r_ending	languages/armenian.cc	/^int Xapian::InternalStemArmenian::r_ending() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemArmenian
r_endings	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_endings() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_exception1	languages/english.cc	/^int Xapian::InternalStemEnglish::r_exception1() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemEnglish
r_exception2	languages/english.cc	/^int Xapian::InternalStemEnglish::r_exception2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemEnglish
r_factive	languages/hungarian.cc	/^int Xapian::InternalStemHungarian::r_factive() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemHungarian
r_fix_chdz	languages/lithuanian.cc	/^int Xapian::InternalStemLithuanian::r_fix_chdz() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLithuanian
r_fix_conflicts	languages/lithuanian.cc	/^int Xapian::InternalStemLithuanian::r_fix_conflicts() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLithuanian
r_fix_ending	languages/tamil.cc	/^int Xapian::InternalStemTamil::r_fix_ending() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemTamil
r_fix_endings	languages/tamil.cc	/^int Xapian::InternalStemTamil::r_fix_endings() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemTamil
r_fix_gd	languages/lithuanian.cc	/^int Xapian::InternalStemLithuanian::r_fix_gd() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLithuanian
r_fix_va_start	languages/tamil.cc	/^int Xapian::InternalStemTamil::r_fix_va_start() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemTamil
r_has_min_length	languages/tamil.cc	/^int Xapian::InternalStemTamil::r_has_min_length() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemTamil
r_i_plural	languages/finnish.cc	/^int Xapian::InternalStemFinnish::r_i_plural() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFinnish
r_i_verb_suffix	languages/french.cc	/^int Xapian::InternalStemFrench::r_i_verb_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFrench
r_initial_morph	languages/irish.cc	/^int Xapian::InternalStemIrish::r_initial_morph() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemIrish
r_instrum	languages/hungarian.cc	/^int Xapian::InternalStemHungarian::r_instrum() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemHungarian
r_is_reserved_word	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_is_reserved_word() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_izenak	languages/basque.cc	/^int Xapian::InternalStemBasque::r_izenak() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemBasque
r_lengthen_V	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::r_lengthen_V() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
r_main_suffix	languages/danish.cc	/^int Xapian::InternalStemDanish::r_main_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemDanish
r_main_suffix	languages/norwegian.cc	/^int Xapian::InternalStemNorwegian::r_main_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemNorwegian
r_main_suffix	languages/swedish.cc	/^int Xapian::InternalStemSwedish::r_main_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemSwedish
r_mark_DA	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_DA() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_DAn	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_DAn() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_DUr	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_DUr() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_cAsInA	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_cAsInA() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_ki	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_ki() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_lAr	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_lAr() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_lArI	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_lArI() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_nA	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_nA() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_nU	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_nU() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_nUn	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_nUn() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_nUz	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_nUz() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_ncA	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_ncA() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_ndA	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_ndA() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_ndAn	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_ndAn() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_possessives	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_possessives() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_regions	languages/armenian.cc	/^int Xapian::InternalStemArmenian::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemArmenian
r_mark_regions	languages/basque.cc	/^int Xapian::InternalStemBasque::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemBasque
r_mark_regions	languages/catalan.cc	/^int Xapian::InternalStemCatalan::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemCatalan
r_mark_regions	languages/danish.cc	/^int Xapian::InternalStemDanish::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemDanish
r_mark_regions	languages/dutch.cc	/^int Xapian::InternalStemDutch::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemDutch
r_mark_regions	languages/english.cc	/^int Xapian::InternalStemEnglish::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemEnglish
r_mark_regions	languages/finnish.cc	/^int Xapian::InternalStemFinnish::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemFinnish
r_mark_regions	languages/french.cc	/^int Xapian::InternalStemFrench::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemFrench
r_mark_regions	languages/german.cc	/^int Xapian::InternalStemGerman::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemGerman
r_mark_regions	languages/german2.cc	/^int Xapian::InternalStemGerman2::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemGerman2
r_mark_regions	languages/hungarian.cc	/^int Xapian::InternalStemHungarian::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemHungarian
r_mark_regions	languages/irish.cc	/^int Xapian::InternalStemIrish::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemIrish
r_mark_regions	languages/italian.cc	/^int Xapian::InternalStemItalian::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemItalian
r_mark_regions	languages/norwegian.cc	/^int Xapian::InternalStemNorwegian::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemNorwegian
r_mark_regions	languages/portuguese.cc	/^int Xapian::InternalStemPortuguese::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemPortuguese
r_mark_regions	languages/romanian.cc	/^int Xapian::InternalStemRomanian::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemRomanian
r_mark_regions	languages/russian.cc	/^int Xapian::InternalStemRussian::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemRussian
r_mark_regions	languages/spanish.cc	/^int Xapian::InternalStemSpanish::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemSpanish
r_mark_regions	languages/swedish.cc	/^int Xapian::InternalStemSwedish::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemSwedish
r_mark_sU	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_sU() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_sUn	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_sUn() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_sUnUz	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_sUnUz() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_suffix_with_optional_U_vowel	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_suffix_with_optional_U_vowel() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_suffix_with_optional_n_consonant	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_suffix_with_optional_n_consonant() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_suffix_with_optional_s_consonant	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_suffix_with_optional_s_consonant() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_suffix_with_optional_y_consonant	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_suffix_with_optional_y_consonant() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_yA	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_yA() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_yDU	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_yDU() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_yU	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_yU() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_yUm	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_yUm() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_yUz	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_yUz() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_yken	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_yken() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_ylA	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_ylA() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_ymUs_	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_ymUs_() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_ysA	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_ysA() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_measure	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::r_measure() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
r_more_than_one_syllable_word	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_more_than_one_syllable_word() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_noun	languages/armenian.cc	/^int Xapian::InternalStemArmenian::r_noun() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemArmenian
r_noun	languages/russian.cc	/^int Xapian::InternalStemRussian::r_noun() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRussian
r_noun_sfx	languages/irish.cc	/^int Xapian::InternalStemIrish::r_noun_sfx() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemIrish
r_other_endings	languages/finnish.cc	/^int Xapian::InternalStemFinnish::r_other_endings() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFinnish
r_other_suffix	languages/danish.cc	/^int Xapian::InternalStemDanish::r_other_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemDanish
r_other_suffix	languages/norwegian.cc	/^int Xapian::InternalStemNorwegian::r_other_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemNorwegian
r_other_suffix	languages/swedish.cc	/^int Xapian::InternalStemSwedish::r_other_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemSwedish
r_owned	languages/hungarian.cc	/^int Xapian::InternalStemHungarian::r_owned() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemHungarian
r_particle_etc	languages/finnish.cc	/^int Xapian::InternalStemFinnish::r_particle_etc() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFinnish
r_perfective_gerund	languages/russian.cc	/^int Xapian::InternalStemRussian::r_perfective_gerund() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRussian
r_plur_owner	languages/hungarian.cc	/^int Xapian::InternalStemHungarian::r_plur_owner() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemHungarian
r_plural	languages/hungarian.cc	/^int Xapian::InternalStemHungarian::r_plural() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemHungarian
r_possessive	languages/finnish.cc	/^int Xapian::InternalStemFinnish::r_possessive() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFinnish
r_post_process_last_consonants	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_post_process_last_consonants() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_postlude	languages/dutch.cc	/^int Xapian::InternalStemDutch::r_postlude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemDutch
r_postlude	languages/english.cc	/^int Xapian::InternalStemEnglish::r_postlude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemEnglish
r_postlude	languages/french.cc	/^int Xapian::InternalStemFrench::r_postlude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemFrench
r_postlude	languages/german.cc	/^int Xapian::InternalStemGerman::r_postlude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemGerman
r_postlude	languages/german2.cc	/^int Xapian::InternalStemGerman2::r_postlude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemGerman2
r_postlude	languages/italian.cc	/^int Xapian::InternalStemItalian::r_postlude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemItalian
r_postlude	languages/portuguese.cc	/^int Xapian::InternalStemPortuguese::r_postlude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemPortuguese
r_postlude	languages/romanian.cc	/^int Xapian::InternalStemRomanian::r_postlude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemRomanian
r_postlude	languages/spanish.cc	/^int Xapian::InternalStemSpanish::r_postlude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemSpanish
r_postlude	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_postlude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_prelude	languages/dutch.cc	/^int Xapian::InternalStemDutch::r_prelude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemDutch
r_prelude	languages/english.cc	/^int Xapian::InternalStemEnglish::r_prelude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemEnglish
r_prelude	languages/french.cc	/^int Xapian::InternalStemFrench::r_prelude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemFrench
r_prelude	languages/german.cc	/^int Xapian::InternalStemGerman::r_prelude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemGerman
r_prelude	languages/german2.cc	/^int Xapian::InternalStemGerman2::r_prelude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemGerman2
r_prelude	languages/italian.cc	/^int Xapian::InternalStemItalian::r_prelude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemItalian
r_prelude	languages/portuguese.cc	/^int Xapian::InternalStemPortuguese::r_prelude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemPortuguese
r_prelude	languages/romanian.cc	/^int Xapian::InternalStemRomanian::r_prelude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemRomanian
r_r_p	tests/unittest.cc	/^r_r_p(string a, const string & b)$/;"	f	file:
r_reflexive	languages/russian.cc	/^int Xapian::InternalStemRussian::r_reflexive() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRussian
r_remove_category_1	languages/nepali.cc	/^int Xapian::InternalStemNepali::r_remove_category_1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemNepali
r_remove_category_2	languages/nepali.cc	/^int Xapian::InternalStemNepali::r_remove_category_2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemNepali
r_remove_category_3	languages/nepali.cc	/^int Xapian::InternalStemNepali::r_remove_category_3() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemNepali
r_remove_command_suffixes	languages/tamil.cc	/^int Xapian::InternalStemTamil::r_remove_command_suffixes() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemTamil
r_remove_common_word_endings	languages/tamil.cc	/^int Xapian::InternalStemTamil::r_remove_common_word_endings() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemTamil
r_remove_first_order_prefix	languages/indonesian.cc	/^int Xapian::InternalStemIndonesian::r_remove_first_order_prefix() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemIndonesian
r_remove_particle	languages/indonesian.cc	/^int Xapian::InternalStemIndonesian::r_remove_particle() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemIndonesian
r_remove_plural_suffix	languages/tamil.cc	/^int Xapian::InternalStemTamil::r_remove_plural_suffix() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemTamil
r_remove_possessive_pronoun	languages/indonesian.cc	/^int Xapian::InternalStemIndonesian::r_remove_possessive_pronoun() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemIndonesian
r_remove_pronoun_prefixes	languages/tamil.cc	/^int Xapian::InternalStemTamil::r_remove_pronoun_prefixes() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemTamil
r_remove_question_prefixes	languages/tamil.cc	/^int Xapian::InternalStemTamil::r_remove_question_prefixes() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemTamil
r_remove_question_suffixes	languages/tamil.cc	/^int Xapian::InternalStemTamil::r_remove_question_suffixes() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemTamil
r_remove_second_order_prefix	languages/indonesian.cc	/^int Xapian::InternalStemIndonesian::r_remove_second_order_prefix() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemIndonesian
r_remove_suffix	languages/indonesian.cc	/^int Xapian::InternalStemIndonesian::r_remove_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemIndonesian
r_remove_tense_suffix	languages/tamil.cc	/^int Xapian::InternalStemTamil::r_remove_tense_suffix() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemTamil
r_remove_tense_suffixes	languages/tamil.cc	/^int Xapian::InternalStemTamil::r_remove_tense_suffixes() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemTamil
r_remove_um	languages/tamil.cc	/^int Xapian::InternalStemTamil::r_remove_um() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemTamil
r_remove_vetrumai_urupukal	languages/tamil.cc	/^int Xapian::InternalStemTamil::r_remove_vetrumai_urupukal() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemTamil
r_residual_form	languages/portuguese.cc	/^int Xapian::InternalStemPortuguese::r_residual_form() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPortuguese
r_residual_suffix	languages/catalan.cc	/^int Xapian::InternalStemCatalan::r_residual_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemCatalan
r_residual_suffix	languages/french.cc	/^int Xapian::InternalStemFrench::r_residual_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFrench
r_residual_suffix	languages/portuguese.cc	/^int Xapian::InternalStemPortuguese::r_residual_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPortuguese
r_residual_suffix	languages/spanish.cc	/^int Xapian::InternalStemSpanish::r_residual_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemSpanish
r_respell	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_respell() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_shortv	languages/earlyenglish.cc	/^int Xapian::InternalStemEarlyenglish::r_shortv() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemEarlyenglish
r_shortv	languages/english.cc	/^int Xapian::InternalStemEnglish::r_shortv() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemEnglish
r_shortv	languages/porter.cc	/^int Xapian::InternalStemPorter::r_shortv() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPorter
r_sing_owner	languages/hungarian.cc	/^int Xapian::InternalStemHungarian::r_sing_owner() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemHungarian
r_standard_suffix	languages/catalan.cc	/^int Xapian::InternalStemCatalan::r_standard_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemCatalan
r_standard_suffix	languages/dutch.cc	/^int Xapian::InternalStemDutch::r_standard_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemDutch
r_standard_suffix	languages/french.cc	/^int Xapian::InternalStemFrench::r_standard_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFrench
r_standard_suffix	languages/german.cc	/^int Xapian::InternalStemGerman::r_standard_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemGerman
r_standard_suffix	languages/german2.cc	/^int Xapian::InternalStemGerman2::r_standard_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemGerman2
r_standard_suffix	languages/italian.cc	/^int Xapian::InternalStemItalian::r_standard_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemItalian
r_standard_suffix	languages/portuguese.cc	/^int Xapian::InternalStemPortuguese::r_standard_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPortuguese
r_standard_suffix	languages/romanian.cc	/^int Xapian::InternalStemRomanian::r_standard_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRomanian
r_standard_suffix	languages/spanish.cc	/^int Xapian::InternalStemSpanish::r_standard_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemSpanish
r_stem_nominal_verb_suffixes	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_stem_nominal_verb_suffixes() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_stem_noun_suffixes	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_stem_noun_suffixes() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_stem_suffix_chain_before_ki	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_stem_suffix_chain_before_ki() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_step1	languages/lithuanian.cc	/^int Xapian::InternalStemLithuanian::r_step1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLithuanian
r_step2	languages/lithuanian.cc	/^int Xapian::InternalStemLithuanian::r_step2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLithuanian
r_step_0	languages/romanian.cc	/^int Xapian::InternalStemRomanian::r_step_0() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRomanian
r_t_plural	languages/finnish.cc	/^int Xapian::InternalStemFinnish::r_t_plural() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFinnish
r_tidy	languages/finnish.cc	/^int Xapian::InternalStemFinnish::r_tidy() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFinnish
r_tidy_up	languages/russian.cc	/^int Xapian::InternalStemRussian::r_tidy_up() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRussian
r_un_accent	languages/french.cc	/^int Xapian::InternalStemFrench::r_un_accent() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFrench
r_un_double	languages/french.cc	/^int Xapian::InternalStemFrench::r_un_double() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFrench
r_undouble	languages/danish.cc	/^int Xapian::InternalStemDanish::r_undouble() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemDanish
r_undouble	languages/dutch.cc	/^int Xapian::InternalStemDutch::r_undouble() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemDutch
r_undouble	languages/hungarian.cc	/^int Xapian::InternalStemHungarian::r_undouble() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemHungarian
r_undouble	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_undouble() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_v_ending	languages/hungarian.cc	/^int Xapian::InternalStemHungarian::r_v_ending() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemHungarian
r_verb	languages/armenian.cc	/^int Xapian::InternalStemArmenian::r_verb() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemArmenian
r_verb	languages/russian.cc	/^int Xapian::InternalStemRussian::r_verb() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRussian
r_verb_sfx	languages/irish.cc	/^int Xapian::InternalStemIrish::r_verb_sfx() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemIrish
r_verb_suffix	languages/catalan.cc	/^int Xapian::InternalStemCatalan::r_verb_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemCatalan
r_verb_suffix	languages/french.cc	/^int Xapian::InternalStemFrench::r_verb_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFrench
r_verb_suffix	languages/italian.cc	/^int Xapian::InternalStemItalian::r_verb_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemItalian
r_verb_suffix	languages/portuguese.cc	/^int Xapian::InternalStemPortuguese::r_verb_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPortuguese
r_verb_suffix	languages/romanian.cc	/^int Xapian::InternalStemRomanian::r_verb_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRomanian
r_verb_suffix	languages/spanish.cc	/^int Xapian::InternalStemSpanish::r_verb_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemSpanish
r_vowel_suffix	languages/italian.cc	/^int Xapian::InternalStemItalian::r_vowel_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemItalian
r_vowel_suffix	languages/romanian.cc	/^int Xapian::InternalStemRomanian::r_vowel_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRomanian
r_y_verb_suffix	languages/spanish.cc	/^int Xapian::InternalStemSpanish::r_y_verb_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemSpanish
radius	include/xapian/geospatial.h	/^    double radius;$/;"	m	class:Xapian::GreatCircleMetric
rand_01	tests/perftest/perftest_randomidx.cc	/^rand_01()$/;"	f	file:
rand_int	tests/perftest/perftest_randomidx.cc	/^rand_int(unsigned int min, unsigned int max)$/;"	f	file:
rand_int	tests/perftest/perftest_randomidx.cc	/^rand_int(unsigned int range)$/;"	f	file:
randint	tests/soaktest/soaktest.cc	/^extern unsigned int randint(unsigned int s)$/;"	f
range	queryparser/queryparser_internal.cc	/^    Term * range(const string &a, const string &b) {$/;"	f	class:State
range_end	include/xapian/postingsource.h	/^    Xapian::docid range_end;$/;"	m	class:Xapian::DecreasingValueWeightPostingSource
range_start	include/xapian/postingsource.h	/^    Xapian::docid range_start;$/;"	m	class:Xapian::DecreasingValueWeightPostingSource
rangeprocs	queryparser/queryparser_internal.h	/^    list<RangeProc> rangeprocs;$/;"	m	class:Xapian::QueryParser::Internal
rare	config.h	507;"	d
rare	config.h	510;"	d
raw	include/xapian/unicode.h	/^    const char * raw() const {$/;"	f	class:Xapian::Utf8Iterator
raw_append	backends/chert/chert_postlist.cc	/^	void raw_append(Xapian::docid first_did_, Xapian::docid current_did_,$/;"	f	class:Chert::PostlistChunkWriter
raw_append	backends/glass/glass_postlist.cc	/^	void raw_append(Xapian::docid first_did_, Xapian::docid current_did_,$/;"	f	class:Glass::PostlistChunkWriter
rcollection_freq	expand/expandweight.h	/^    Xapian::termcount rcollection_freq;$/;"	m	class:Xapian::Internal::ExpandStats
rd	backends/chert/chert_positionlist.h	/^    BitReader rd;$/;"	m	class:ChertPositionList
rd	backends/glass/glass_positionlist.h	/^    BitReader rd;$/;"	m	class:GlassPositionList
read	backends/chert/chert_btreebase.cc	/^ChertTable_base::read(const string & name, char ch, bool read_bitmap,$/;"	f	class:ChertTable_base
read	backends/chert/chert_dbstats.cc	/^ChertDatabaseStats::read(ChertPostListTable & postlist_table)$/;"	f	class:ChertDatabaseStats
read	backends/chert/chert_table.h	/^    void read(std::string * key) const {$/;"	f	class:Key
read	backends/glass/glass_table.h	/^    void read(std::string * key) const {$/;"	f	class:Glass::Key
read	backends/glass/glass_version.cc	/^GlassVersion::read()$/;"	f	class:GlassVersion
readFile	testing-xapian/main.cpp	/^string readFile(const string &fileName)$/;"	f
read_AE	languages/compiler/analyser.c	/^static struct node * read_AE(struct analyser * a, int B) {$/;"	f	file:
read_AE_test	languages/compiler/analyser.c	/^static int read_AE_test(struct analyser * a) {$/;"	f	file:
read_C	languages/compiler/analyser.c	/^static struct node * read_C(struct analyser * a) {$/;"	f	file:
read_C_connection	languages/compiler/analyser.c	/^static struct node * read_C_connection(struct analyser * a, struct node * q, int op) {$/;"	f	file:
read_C_list	languages/compiler/analyser.c	/^static struct node * read_C_list(struct analyser * a) {$/;"	f	file:
read_among	languages/compiler/analyser.c	/^static struct node * read_among(struct analyser * a) {$/;"	f	file:
read_and_check	backends/chert/chert_version.cc	/^ChertVersion::read_and_check()$/;"	f	class:ChertVersion
read_at_least	net/remoteconnection.cc	/^RemoteConnection::read_at_least(size_t min_len, double end_time)$/;"	f	class:RemoteConnection
read_backwardmode	languages/compiler/analyser.c	/^static void read_backwardmode(struct analyser * a) {$/;"	f	file:
read_bits	common/bitstream.cc	/^BitReader::read_bits(int count)$/;"	f	class:Xapian::BitReader
read_block	backends/chert/chert_table.cc	/^ChertTable::read_block(uint4 n, uint8_t * p) const$/;"	f	class:ChertTable
read_block	backends/glass/glass_freelist.cc	/^GlassFreeList::read_block(const GlassTable * B, uint4 n, uint8_t * ptr)$/;"	f	class:GlassFreeList
read_block	backends/glass/glass_table.cc	/^GlassTable::read_block(uint4 n, uint8_t * p) const$/;"	f	class:GlassTable
read_chars	languages/compiler/tokeniser.c	/^static void read_chars(struct tokeniser * t) {$/;"	f	file:
read_data	backends/chert/chert_positionlist.cc	/^ChertPositionList::read_data(const ChertTable * table, Xapian::docid did,$/;"	f	class:ChertPositionList
read_data	backends/glass/glass_positionlist.cc	/^GlassPositionList::read_data(const GlassTable * table, Xapian::docid did,$/;"	f	class:GlassPositionList
read_data	backends/glass/glass_positionlist.cc	/^GlassPositionList::read_data(const string & data)$/;"	f	class:GlassPositionList
read_define	languages/compiler/analyser.c	/^static void read_define(struct analyser * a) {$/;"	f	file:
read_define_grouping	languages/compiler/analyser.c	/^static void read_define_grouping(struct analyser * a, struct name * q) {$/;"	f	file:
read_define_routine	languages/compiler/analyser.c	/^static void read_define_routine(struct analyser * a, struct name * q) {$/;"	f	file:
read_did_increase	backends/chert/chert_postlist.cc	/^read_did_increase(const char ** posptr, const char * end,$/;"	f	file:
read_did_increase	backends/glass/glass_postlist.cc	/^read_did_increase(const char ** posptr, const char * end,$/;"	f	file:
read_doc	api/omenquire.cc	/^Enquire::Internal::read_doc(const Xapian::Internal::MSetItem &item) const$/;"	f	class:Xapian::Enquire::Internal
read_docs	api/omenquire.cc	/^MSet::Internal::read_docs() const$/;"	f	class:Xapian::MSet::Internal
read_literal_string	languages/compiler/tokeniser.c	/^static int read_literal_string(struct tokeniser * t, int c) {$/;"	f	file:
read_literalstring	languages/compiler/analyser.c	/^static struct node * read_literalstring(struct analyser * a) {$/;"	f	file:
read_names	languages/compiler/analyser.c	/^static void read_names(struct analyser * a, int type) {$/;"	f	file:
read_number_of_entries	backends/chert/chert_postlist.cc	/^void ChertPostList::read_number_of_entries(const char ** posptr,$/;"	f	class:ChertPostList
read_number_of_entries	backends/glass/glass_postlist.cc	/^void GlassPostList::read_number_of_entries(const char ** posptr,$/;"	f	class:GlassPostList
read_options	languages/compiler/driver.c	/^static int read_options(struct options * o, int argc, char * argv[]) {$/;"	f	file:
read_position_list	api/postlist.cc	/^PostList::read_position_list()$/;"	f	class:Xapian::PostList
read_position_list	backends/chert/chert_alldocspostlist.cc	/^ChertAllDocsPostList::read_position_list()$/;"	f	class:ChertAllDocsPostList
read_position_list	backends/chert/chert_modifiedpostlist.cc	/^ChertModifiedPostList::read_position_list()$/;"	f	class:ChertModifiedPostList
read_position_list	backends/chert/chert_postlist.cc	/^ChertPostList::read_position_list()$/;"	f	class:ChertPostList
read_position_list	backends/contiguousalldocspostlist.cc	/^ContiguousAllDocsPostList::read_position_list()$/;"	f	class:ContiguousAllDocsPostList
read_position_list	backends/glass/glass_alldocspostlist.cc	/^GlassAllDocsPostList::read_position_list()$/;"	f	class:GlassAllDocsPostList
read_position_list	backends/glass/glass_postlist.cc	/^GlassPostList::read_position_list()$/;"	f	class:GlassPostList
read_position_list	backends/inmemory/inmemory_database.cc	/^InMemoryAllDocsPostList::read_position_list()$/;"	f	class:InMemoryAllDocsPostList
read_position_list	backends/inmemory/inmemory_database.cc	/^InMemoryPostList::read_position_list()$/;"	f	class:InMemoryPostList
read_position_list	backends/remote/net_postlist.cc	/^NetworkPostList::read_position_list()$/;"	f	class:NetworkPostList
read_position_list	matcher/externalpostlist.cc	/^ExternalPostList::read_position_list()$/;"	f	class:ExternalPostList
read_position_list	matcher/maxpostlist.h	/^    PositionList * read_position_list() {$/;"	f	class:MaxPostList
read_position_list	matcher/multixorpostlist.h	/^    PositionList * read_position_list() {$/;"	f	class:MultiXorPostList
read_position_list	matcher/orpospostlist.cc	/^OrPosPostList::read_position_list()$/;"	f	class:OrPosPostList
read_position_list	matcher/selectpostlist.h	/^	PositionList * read_position_list() { return source->read_position_list(); }$/;"	f	class:SelectPostList
read_position_list	matcher/valuerangepostlist.cc	/^ValueRangePostList::read_position_list()$/;"	f	class:ValueRangePostList
read_post_list	backends/remote/remote-database.cc	/^RemoteDatabase::read_post_list(const string &term, NetworkPostList & pl) const$/;"	f	class:RemoteDatabase
read_program	languages/compiler/analyser.c	/^extern void read_program(struct analyser * a) {$/;"	f
read_program_	languages/compiler/analyser.c	/^static void read_program_(struct analyser * a, int terminator) {$/;"	f	file:
read_root	backends/chert/chert_table.cc	/^ChertTable::read_root()$/;"	f	class:ChertTable
read_root	backends/glass/glass_table.cc	/^GlassTable::read_root()$/;"	f	class:GlassTable
read_start_of_chunk	backends/chert/chert_postlist.cc	/^read_start_of_chunk(const char ** posptr,$/;"	f	file:
read_start_of_chunk	backends/glass/glass_postlist.cc	/^read_start_of_chunk(const char ** posptr,$/;"	f	file:
read_start_of_first_chunk	backends/chert/chert_postlist.cc	/^read_start_of_first_chunk(const char ** posptr,$/;"	f	file:
read_start_of_first_chunk	backends/glass/glass_postlist.cc	/^read_start_of_first_chunk(const char ** posptr,$/;"	f	file:
read_substring	languages/compiler/analyser.c	/^static struct node * read_substring(struct analyser * a) {$/;"	f	file:
read_tag	backends/chert/chert_cursor.cc	/^ChertCursor::read_tag(bool keep_compressed)$/;"	f	class:ChertCursor
read_tag	backends/chert/chert_table.cc	/^ChertTable::read_tag(Cursor * C_, string *tag, bool keep_compressed) const$/;"	f	class:ChertTable
read_tag	backends/glass/glass_cursor.cc	/^GlassCursor::read_tag(bool keep_compressed)$/;"	f	class:GlassCursor
read_tag	backends/glass/glass_table.cc	/^GlassTable::read_tag(Glass::Cursor * C_, string *tag, bool keep_compressed) const$/;"	f	class:GlassTable
read_termfreq_and_collfreq	backends/chert/chert_alltermslist.cc	/^ChertAllTermsList::read_termfreq_and_collfreq() const$/;"	f	class:ChertAllTermsList
read_termfreq_and_collfreq	backends/glass/glass_alltermslist.cc	/^GlassAllTermsList::read_termfreq_and_collfreq() const$/;"	f	class:GlassAllTermsList
read_token	languages/compiler/tokeniser.c	/^extern int read_token(struct tokeniser * t) {$/;"	f
read_value_stats	backends/remote/remote-database.cc	/^RemoteDatabase::read_value_stats(Xapian::valueno slot) const$/;"	f	class:RemoteDatabase
read_wdf	backends/chert/chert_postlist.cc	/^read_wdf(const char ** posptr, const char * end, Xapian::termcount * wdf_ptr)$/;"	f	file:
read_wdf	backends/glass/glass_postlist.cc	/^read_wdf(const char ** posptr, const char * end, Xapian::termcount * wdf_ptr)$/;"	f	file:
readahead_for_document	backends/glass/glass_docdata.h	/^    void readahead_for_document(Xapian::docid did) const {$/;"	f	class:GlassDocDataTable
readahead_for_query	backends/chert/chert_database.cc	/^ChertDatabase::readahead_for_query(const Xapian::Query &query)$/;"	f	class:ChertDatabase
readahead_for_query	backends/database.cc	/^Database::Internal::readahead_for_query(const Xapian::Query &)$/;"	f	class:Xapian::Database::Internal
readahead_for_query	backends/glass/glass_database.cc	/^GlassDatabase::readahead_for_query(const Xapian::Query &query)$/;"	f	class:GlassDatabase
readahead_for_record	backends/chert/chert_record.cc	/^ChertRecordTable::readahead_for_record(Xapian::docid did) const$/;"	f	class:ChertRecordTable
readahead_key	backends/chert/chert_table.cc	/^ChertTable::readahead_key(const string &key) const$/;"	f	class:ChertTable
readahead_key	backends/glass/glass_table.cc	/^GlassTable::readahead_key(const string &key) const$/;"	f	class:GlassTable
readdir	common/msvc_dirent.cc	/^struct dirent *readdir(DIR *dir)$/;"	f
reader	backends/chert/chert_valuelist.h	/^    ValueChunkReader reader;$/;"	m	class:ChertValueList
reader	backends/chert/chert_values.cc	/^    ValueChunkReader reader;$/;"	m	class:ValueUpdater	file:
reader	backends/glass/glass_valuelist.h	/^    Glass::ValueChunkReader reader;$/;"	m	class:GlassValueList
reader	backends/glass/glass_values.cc	/^    ValueChunkReader reader;$/;"	m	class:Glass::ValueUpdater	file:
readonly	backends/chert/chert_database.h	/^	bool readonly;$/;"	m	class:ChertDatabase
readonly	backends/glass/glass_database.h	/^	bool readonly;$/;"	m	class:GlassDatabase
ready_to_read	net/remoteconnection.cc	/^RemoteConnection::ready_to_read() const$/;"	f	class:RemoteConnection
real_db	include/xapian/postingsource.h	/^    Xapian::Database real_db;$/;"	m	class:Xapian::ValuePostingSource
real_deflate	tests/zlib-vg.c	/^static int (*real_deflate)(z_streamp, int) = NULL;$/;"	v	file:
real_slot	include/xapian/postingsource.h	/^    Xapian::valueno real_slot;$/;"	m	class:Xapian::ValuePostingSource
real_started	include/xapian/postingsource.h	/^    bool real_started;$/;"	m	class:Xapian::ValuePostingSource
real_termfreq_est	include/xapian/postingsource.h	/^    Xapian::doccount real_termfreq_est;$/;"	m	class:Xapian::ValuePostingSource
real_termfreq_max	include/xapian/postingsource.h	/^    Xapian::doccount real_termfreq_max;$/;"	m	class:Xapian::ValuePostingSource
real_termfreq_min	include/xapian/postingsource.h	/^    Xapian::doccount real_termfreq_min;$/;"	m	class:Xapian::ValuePostingSource
real_value_it	include/xapian/postingsource.h	/^    Xapian::ValueIterator real_value_it;$/;"	m	class:Xapian::ValuePostingSource
real_wt	matcher/localsubmatch.cc	/^    Xapian::Weight * real_wt;$/;"	m	class:LazyWeight	file:
really_empty	backends/chert/chert_table.cc	/^ChertTable::really_empty() const$/;"	f	class:ChertTable
reason	backends/flint_lock.h	/^    } reason;$/;"	t	class:FlintLock	typeref:enum:FlintLock::__anon2
rebuild	backends/chert/chert_cursor.cc	/^ChertCursor::rebuild()$/;"	f	class:ChertCursor
rebuild	backends/glass/glass_cursor.cc	/^GlassCursor::rebuild()$/;"	f	class:GlassCursor
recalc_maxweight	api/emptypostlist.cc	/^EmptyPostList::recalc_maxweight()$/;"	f	class:EmptyPostList
recalc_maxweight	api/leafpostlist.cc	/^LeafPostList::recalc_maxweight()$/;"	f	class:LeafPostList
recalc_maxweight	backends/multi/multi_postlist.cc	/^MultiPostList::recalc_maxweight()$/;"	f	class:MultiPostList
recalc_maxweight	matcher/andmaybepostlist.cc	/^AndMaybePostList::recalc_maxweight()$/;"	f	class:AndMaybePostList
recalc_maxweight	matcher/andnotpostlist.cc	/^AndNotPostList::recalc_maxweight()$/;"	f	class:AndNotPostList
recalc_maxweight	matcher/externalpostlist.cc	/^ExternalPostList::recalc_maxweight()$/;"	f	class:ExternalPostList
recalc_maxweight	matcher/extraweightpostlist.h	/^	double recalc_maxweight() {$/;"	f	class:ExtraWeightPostList
recalc_maxweight	matcher/maxpostlist.cc	/^MaxPostList::recalc_maxweight()$/;"	f	class:MaxPostList
recalc_maxweight	matcher/mergepostlist.cc	/^MergePostList::recalc_maxweight()$/;"	f	class:MergePostList
recalc_maxweight	matcher/msetpostlist.cc	/^MSetPostList::recalc_maxweight()$/;"	f	class:MSetPostList
recalc_maxweight	matcher/multiandpostlist.cc	/^MultiAndPostList::recalc_maxweight()$/;"	f	class:MultiAndPostList
recalc_maxweight	matcher/multimatch.h	/^	void recalc_maxweight() {$/;"	f	class:MultiMatch
recalc_maxweight	matcher/multixorpostlist.cc	/^MultiXorPostList::recalc_maxweight()$/;"	f	class:MultiXorPostList
recalc_maxweight	matcher/orpospostlist.cc	/^OrPosPostList::recalc_maxweight()$/;"	f	class:OrPosPostList
recalc_maxweight	matcher/orpostlist.cc	/^OrPostList::recalc_maxweight()$/;"	f	class:OrPostList
recalc_maxweight	matcher/selectpostlist.h	/^	double recalc_maxweight() { return source->recalc_maxweight(); }$/;"	f	class:SelectPostList
recalc_maxweight	matcher/synonympostlist.cc	/^SynonymPostList::recalc_maxweight()$/;"	f	class:SynonymPostList
recalc_maxweight	matcher/valuerangepostlist.cc	/^ValueRangePostList::recalc_maxweight()$/;"	f	class:ValueRangePostList
recalculate_w_max	matcher/multimatch.h	/^	bool recalculate_w_max;$/;"	m	class:MultiMatch
receive_file	net/remoteconnection.cc	/^RemoteConnection::receive_file(const string &file, double end_time)$/;"	f	class:RemoteConnection
record_table	backends/chert/chert_database.h	/^	ChertRecordTable record_table;$/;"	m	class:ChertDatabase
record_table	backends/chert/chert_document.h	/^    const ChertRecordTable *record_table;$/;"	m	class:ChertDocument
ref	include/xapian/intrusive_ptr.h	/^    void ref() const {$/;"	f	class:Xapian::Internal::opt_intrusive_base
reference	include/xapian/eset.h	/^    typedef std::string & reference;$/;"	t	class:Xapian::ESetIterator
reference	include/xapian/eset.h	/^    typedef value_type & reference;$/;"	t	class:Xapian::ESet
reference	include/xapian/geospatial.h	/^    typedef LatLongCoord & reference;$/;"	t	class:Xapian::LatLongCoordsIterator
reference	include/xapian/mset.h	/^    typedef std::string & reference;$/;"	t	class:Xapian::MSetIterator
reference	include/xapian/mset.h	/^    typedef value_type & reference;$/;"	t	class:Xapian::MSet
reference	include/xapian/positioniterator.h	/^    typedef Xapian::termpos & reference;$/;"	t	class:Xapian::PositionIterator
reference	include/xapian/postingiterator.h	/^    typedef Xapian::docid & reference;$/;"	t	class:Xapian::PostingIterator
reference	include/xapian/termiterator.h	/^    typedef std::string & reference;$/;"	t	class:Xapian::TermIterator
reference	include/xapian/unicode.h	/^    typedef const unsigned & reference;$/;"	t	class:Xapian::Utf8Iterator
reference	include/xapian/valueiterator.h	/^    typedef std::string & reference;$/;"	t	class:Xapian::ValueIterator
reference	queryparser/queryparser_internal.cc	/^    typedef Xapian::Query & reference;$/;"	t	class:SynonymIterator	file:
referenced	languages/compiler/header.h	/^    byte referenced;$/;"	m	struct:name
refs	backends/glass/glass_cursor.h	/^	uint4 & refs() const {$/;"	f	class:Glass::Cursor
reg	net/remoteserver.h	/^    Xapian::Registry reg;$/;"	m	class:RemoteServer
reg	net/remotetcpserver.h	/^    Xapian::Registry reg;$/;"	m	class:RemoteTcpServer
register_lat_long_metric	api/registry.cc	/^Registry::register_lat_long_metric(const Xapian::LatLongMetric &metric)$/;"	f	class:Xapian::Registry
register_match_spy	api/registry.cc	/^Registry::register_match_spy(const Xapian::MatchSpy &spy)$/;"	f	class:Xapian::Registry
register_matcher_	include/xapian/postingsource.h	/^    void register_matcher_(void * matcher) { matcher_ = matcher; }$/;"	f	class:Xapian::PostingSource
register_object	api/registry.cc	/^register_object(map<string, T*> & registry, const T & obj)$/;"	f	file:
register_posting_source	api/registry.cc	/^Registry::register_posting_source(const Xapian::PostingSource &source)$/;"	f	class:Xapian::Registry
register_user_weighting_schemes	bin/xapian-tcpsrv.cc	/^static void register_user_weighting_schemes(RemoteTcpServer &server) {$/;"	f	file:
register_weighting_scheme	api/registry.cc	/^Registry::register_weighting_scheme(const Xapian::Weight &wt)$/;"	f	class:Xapian::Registry
rejects	include/xapian/expanddecider.h	/^    std::set<std::string> rejects;$/;"	m	class:Xapian::ExpandDeciderFilterTerms
release	backends/flint_lock.cc	/^FlintLock::release() {$/;"	f	class:FlintLock
release	include/xapian/errorhandler.h	/^    ErrorHandler * release() {$/;"	f	class:Xapian::ErrorHandler
release	include/xapian/errorhandler.h	/^    const ErrorHandler * release() const {$/;"	f	class:Xapian::ErrorHandler
release	include/xapian/expanddecider.h	/^    ExpandDecider * release() {$/;"	f	class:Xapian::ExpandDecider
release	include/xapian/expanddecider.h	/^    const ExpandDecider * release() const {$/;"	f	class:Xapian::ExpandDecider
release	include/xapian/intrusive_ptr.h	/^    void release() const {$/;"	f	class:Xapian::Internal::opt_intrusive_base
release	include/xapian/keymaker.h	/^    KeyMaker * release() {$/;"	f	class:Xapian::KeyMaker
release	include/xapian/keymaker.h	/^    const KeyMaker * release() const {$/;"	f	class:Xapian::KeyMaker
release	include/xapian/matchspy.h	/^    MatchSpy * release() {$/;"	f	class:Xapian::MatchSpy
release	include/xapian/matchspy.h	/^    const MatchSpy * release() const {$/;"	f	class:Xapian::MatchSpy
release	include/xapian/postingsource.h	/^    PostingSource * release() {$/;"	f	class:Xapian::PostingSource
release	include/xapian/postingsource.h	/^    const PostingSource * release() const {$/;"	f	class:Xapian::PostingSource
release	include/xapian/queryparser.h	/^    FieldProcessor * release() {$/;"	f	class:Xapian::FieldProcessor
release	include/xapian/queryparser.h	/^    RangeProcessor * release() {$/;"	f	class:Xapian::RangeProcessor
release	include/xapian/queryparser.h	/^    Stopper * release() {$/;"	f	class:Xapian::Stopper
release	include/xapian/queryparser.h	/^    ValueRangeProcessor * release() {$/;"	f	class:Xapian::ValueRangeProcessor
release	include/xapian/queryparser.h	/^    const FieldProcessor * release() const {$/;"	f	class:Xapian::FieldProcessor
release	include/xapian/queryparser.h	/^    const RangeProcessor * release() const {$/;"	f	class:Xapian::RangeProcessor
release	include/xapian/queryparser.h	/^    const Stopper * release() const {$/;"	f	class:Xapian::Stopper
release	include/xapian/queryparser.h	/^    const ValueRangeProcessor * release() const {$/;"	f	class:Xapian::ValueRangeProcessor
release	tests/unittest.cc	/^    B * release() {$/;"	f	class:B
relevance	queryparser/termgenerator_internal.cc	/^    double* relevance;$/;"	m	struct:Xapian::Sniplet	file:
reltermfreq	weight/weightinternal.h	/^    Xapian::doccount reltermfreq;$/;"	m	struct:TermFreqs
reltermfreq_	include/xapian/weight.h	/^    Xapian::doccount reltermfreq_;$/;"	m	class:Xapian::Weight
remconn	net/replicatetcpclient.h	/^    RemoteConnection remconn;$/;"	m	class:SOCKET_INITIALIZER_MIXIN
remote_type	tests/harness/backendmanager_remote.h	/^    std::string remote_type;$/;"	m	class:BackendManagerRemote
remove	api/documentterm.h	/^    void remove() {$/;"	f	class:OmDocumentTerm
remove_document	api/omenquire.cc	/^RSet::remove_document(Xapian::docid did)$/;"	f	class:Xapian::RSet
remove_document	include/xapian/enquire.h	/^	void remove_document(const Xapian::MSetIterator & i) { remove_document(*i); }$/;"	f	class:Xapian::RSet
remove_offline_db	api/replication.cc	/^DatabaseReplica::Internal::remove_offline_db()$/;"	f	class:DatabaseReplica::Internal
remove_position	api/omdocument.cc	/^OmDocumentTerm::remove_position(Xapian::termpos tpos)$/;"	f	class:OmDocumentTerm
remove_positions	api/omdocument.cc	/^OmDocumentTerm::remove_positions(Xapian::termpos termpos_first,$/;"	f	class:OmDocumentTerm
remove_posting	api/omdocument.cc	/^Document::remove_posting(const string & tname, Xapian::termpos tpos,$/;"	f	class:Xapian::Document
remove_posting	api/omdocument.cc	/^Xapian::Document::Internal::remove_posting(const string & tname,$/;"	f	class:Xapian::Document::Internal
remove_posting	backends/glass/glass_inverter.h	/^	void remove_posting(Xapian::docid did, Xapian::termcount wdf) {$/;"	f	class:Inverter::PostingChanges
remove_posting	backends/glass/glass_inverter.h	/^    void remove_posting(Xapian::docid did, const std::string & term,$/;"	f	class:Inverter
remove_postings	api/omdocument.cc	/^Document::remove_postings(const string& term,$/;"	f	class:Xapian::Document
remove_postings	api/omdocument.cc	/^Xapian::Document::Internal::remove_postings(const string& term,$/;"	f	class:Xapian::Document::Internal
remove_spelling	api/omdatabase.cc	/^WritableDatabase::remove_spelling(const std::string & word,$/;"	f	class:Xapian::WritableDatabase
remove_spelling	backends/chert/chert_database.cc	/^ChertWritableDatabase::remove_spelling(const string & word,$/;"	f	class:ChertWritableDatabase
remove_spelling	backends/database.cc	/^Database::Internal::remove_spelling(const string &, Xapian::termcount) const$/;"	f	class:Xapian::Database::Internal
remove_spelling	backends/glass/glass_database.cc	/^GlassWritableDatabase::remove_spelling(const string & word,$/;"	f	class:GlassWritableDatabase
remove_spelling	backends/remote/remote-database.cc	/^RemoteDatabase::remove_spelling(const string & word,$/;"	f	class:RemoteDatabase
remove_synonym	api/omdatabase.cc	/^WritableDatabase::remove_synonym(const std::string & term,$/;"	f	class:Xapian::WritableDatabase
remove_synonym	backends/chert/chert_database.cc	/^ChertWritableDatabase::remove_synonym(const string & term,$/;"	f	class:ChertWritableDatabase
remove_synonym	backends/chert/chert_synonym.cc	/^ChertSynonymTable::remove_synonym(const string & term, const string & synonym)$/;"	f	class:ChertSynonymTable
remove_synonym	backends/database.cc	/^Database::Internal::remove_synonym(const string &, const string &) const$/;"	f	class:Xapian::Database::Internal
remove_synonym	backends/glass/glass_database.cc	/^GlassWritableDatabase::remove_synonym(const string & term,$/;"	f	class:GlassWritableDatabase
remove_synonym	backends/glass/glass_synonym.cc	/^GlassSynonymTable::remove_synonym(const string & term, const string & synonym)$/;"	f	class:GlassSynonymTable
remove_term	api/omdocument.cc	/^Document::remove_term(const string & tname)$/;"	f	class:Xapian::Document
remove_term	api/omdocument.cc	/^Xapian::Document::Internal::remove_term(const string & tname)$/;"	f	class:Xapian::Document::Internal
remove_value	api/omdocument.cc	/^Document::remove_value(Xapian::valueno slot)$/;"	f	class:Xapian::Document
remove_value	api/omdocument.cc	/^Xapian::Document::Internal::remove_value(Xapian::valueno slot)$/;"	f	class:Xapian::Document::Internal
remove_value	backends/chert/chert_values.cc	/^ChertValueManager::remove_value(Xapian::docid did, Xapian::valueno slot)$/;"	f	class:ChertValueManager
remove_value	backends/glass/glass_values.cc	/^GlassValueManager::remove_value(Xapian::docid did, Xapian::valueno slot)$/;"	f	class:GlassValueManager
remove_value	include/xapian/valuesetmatchdecider.h	/^    void remove_value(const std::string& value)$/;"	f	class:Xapian::ValueSetMatchDecider
remove_word	backends/chert/chert_spelling.cc	/^ChertSpellingTable::remove_word(const string & word, Xapian::termcount freqdec)$/;"	f	class:ChertSpellingTable
remove_word	backends/glass/glass_spelling.cc	/^GlassSpellingTable::remove_word(const string & word, Xapian::termcount freqdec)$/;"	f	class:GlassSpellingTable
removedir	common/fileutils.cc	/^removedir(const string &dirname)$/;"	f
reopen	api/omdatabase.cc	/^Database::reopen()$/;"	f	class:Xapian::Database
reopen	backends/chert/chert_database.cc	/^ChertDatabase::reopen()$/;"	f	class:ChertDatabase
reopen	backends/database.cc	/^Database::Internal::reopen()$/;"	f	class:Xapian::Database::Internal
reopen	backends/glass/glass_database.cc	/^GlassDatabase::reopen()$/;"	f	class:GlassDatabase
reopen	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::reopen()$/;"	f	class:InMemoryDatabase
reopen	backends/remote/remote-database.cc	/^RemoteDatabase::reopen()$/;"	f	class:RemoteDatabase
repeat_restore	languages/compiler/generator.c	/^extern int repeat_restore(struct generator * g, struct node * p) {$/;"	f
repeat_score	languages/compiler/generator.c	/^static int repeat_score(struct generator * g, struct node * p, int call_depth) {$/;"	f	file:
repetition_begin	tests/perftest/perftest.cc	/^PerfTestLogger::repetition_begin(int num)$/;"	f	class:PerfTestLogger
repetition_end	tests/perftest/perftest.cc	/^PerfTestLogger::repetition_end()$/;"	f	class:PerfTestLogger
repetition_number	tests/perftest/perftest.h	/^    int repetition_number;$/;"	m	class:PerfTestLogger
repetitions	tests/perftest/perftest.cc	/^    mutable int repetitions;$/;"	m	class:PerfTestRunner	file:
repetitions_parsed	tests/perftest/perftest.cc	/^    mutable bool repetitions_parsed;$/;"	m	class:PerfTestRunner	file:
repetitions_string	tests/perftest/perftest.cc	/^    string repetitions_string;$/;"	m	class:PerfTestRunner	file:
replace_document	api/omdatabase.cc	/^WritableDatabase::replace_document(Xapian::docid did, const Document & document)$/;"	f	class:Xapian::WritableDatabase
replace_document	api/omdatabase.cc	/^WritableDatabase::replace_document(const std::string & unique_term,$/;"	f	class:Xapian::WritableDatabase
replace_document	backends/chert/chert_database.cc	/^ChertWritableDatabase::replace_document(Xapian::docid did,$/;"	f	class:ChertWritableDatabase
replace_document	backends/chert/chert_values.cc	/^ChertValueManager::replace_document(Xapian::docid did,$/;"	f	class:ChertValueManager
replace_document	backends/database.cc	/^Database::Internal::replace_document(Xapian::docid, const Xapian::Document &)$/;"	f	class:Xapian::Database::Internal
replace_document	backends/database.cc	/^Database::Internal::replace_document(const string & unique_term,$/;"	f	class:Xapian::Database::Internal
replace_document	backends/glass/glass_database.cc	/^GlassWritableDatabase::replace_document(Xapian::docid did,$/;"	f	class:GlassWritableDatabase
replace_document	backends/glass/glass_values.cc	/^GlassValueManager::replace_document(Xapian::docid did,$/;"	f	class:GlassValueManager
replace_document	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::replace_document(Xapian::docid did,$/;"	f	class:InMemoryDatabase
replace_document	backends/remote/remote-database.cc	/^RemoteDatabase::replace_document(Xapian::docid did,$/;"	f	class:RemoteDatabase
replace_document	backends/remote/remote-database.cc	/^RemoteDatabase::replace_document(const std::string & unique_term,$/;"	f	class:RemoteDatabase
replace_document_data	backends/glass/glass_docdata.h	/^    void replace_document_data(Xapian::docid did, const std::string & data) {$/;"	f	class:GlassDocDataTable
replace_record	backends/chert/chert_record.cc	/^ChertRecordTable::replace_record(const string & data, Xapian::docid did)$/;"	f	class:ChertRecordTable
replace_s	languages/steminternal.cc	/^SnowballStemImplementation::replace_s(int c_bra, int c_ket, int s_size,$/;"	f	class:Xapian::SnowballStemImplementation
replicate	tests/api_replicate.cc	/^replicate(Xapian::DatabaseMaster & master,$/;"	f	file:
replicate_reply_type	common/replicationprotocol.h	/^enum replicate_reply_type {$/;"	g
replicate_with_brokenness	tests/api_replicate.cc	/^replicate_with_brokenness(Xapian::DatabaseMaster & master,$/;"	f	file:
reply_type	net/remoteprotocol.h	/^enum reply_type {$/;"	g
report	tests/harness/testsuite.cc	/^test_driver::report(const test_driver::result &r, const string &desc)$/;"	f	class:test_driver
report_b	languages/compiler/space.c	/^extern void report_b(FILE * out, const symbol * p) {$/;"	f
report_block	backends/chert/chert_check.cc	/^void ChertTableCheck::report_block(int m, int n, const uint8_t * p) const$/;"	f	class:ChertTableCheck
report_block	backends/glass/glass_check.cc	/^void GlassTableCheck::report_block(int m, int n, const uint8_t * p) const$/;"	f	class:GlassTableCheck
report_block_full	backends/chert/chert_check.cc	/^void ChertTableCheck::report_block_full(int m, int n, const uint8_t * p) const$/;"	f	class:ChertTableCheck
report_block_full	backends/glass/glass_check.cc	/^void GlassTableCheck::report_block_full(int m, int n, const uint8_t * p) const$/;"	f	class:GlassTableCheck
report_cursor	backends/chert/chert_check.cc	/^void ChertTableCheck::report_cursor(int N, const Cursor * C_) const$/;"	f	class:ChertTableCheck
report_cursor	backends/glass/glass_check.cc	/^void GlassTableCheck::report_cursor(int N, const Glass::Cursor * C_) const$/;"	f	class:GlassTableCheck
report_read_error	backends/chert/chert_postlist.cc	/^static void report_read_error(const char * position)$/;"	f	file:
report_read_error	backends/glass/glass_postlist.cc	/^static void report_read_error(const char * position)$/;"	f	file:
report_totals	tests/harness/testsuite.cc	/^report_totals(void)$/;"	f	file:
request_doc	api/omenquire.cc	/^Enquire::Internal::request_doc(const Xapian::Internal::MSetItem &item) const$/;"	f	class:Xapian::Enquire::Internal
request_document	backends/chert/chert_database.cc	/^ChertDatabase::request_document(Xapian::docid did) const$/;"	f	class:ChertDatabase
request_document	backends/database.cc	/^Database::Internal::request_document(Xapian::docid \/*did*\/) const$/;"	f	class:Xapian::Database::Internal
request_document	backends/glass/glass_database.cc	/^GlassDatabase::request_document(Xapian::docid did) const$/;"	f	class:GlassDatabase
requested_docs	api/omenquireinternal.h	/^	mutable set<Xapian::doccount> requested_docs;$/;"	m	class:Xapian::MSet::Internal
required_argument	common/gnu_getopt.h	80;"	d
res	include/xapian/derefwrapper.h	/^    T res;$/;"	m	class:Xapian::DerefWrapper_
reserve	api/smallvector.h	/^    void reserve(size_type n) {$/;"	f	class:Xapian::SmallVector
reserve_doclens	backends/dbcheck.cc	/^reserve_doclens(vector<Xapian::termcount>& doclens, Xapian::docid last_docid,$/;"	f	file:
reset	backends/chert/chert_values.h	/^    void reset() {$/;"	f	class:ChertValueManager
reset	backends/glass/glass_freelist.h	/^    void reset() {$/;"	f	class:GlassFreeList
reset	backends/glass/glass_values.h	/^    void reset() {$/;"	f	class:GlassValueManager
reset	tests/harness/testsuite.h	/^	    void reset() {$/;"	f	struct:test_driver::result
resolve_conflict	queryparser/lemon.c	/^static int resolve_conflict($/;"	f	file:
resolve_duplicate_metadata	api/compactor.cc	/^Compactor::resolve_duplicate_metadata(const string & key,$/;"	f	class:Xapian::Compactor
resolve_duplicate_metadata	bin/xapian-compact.cc	/^MyCompactor::resolve_duplicate_metadata(const string & key,$/;"	f	class:MyCompactor
resolve_lazy_termweight	api/leafpostlist.h	/^    double resolve_lazy_termweight(Xapian::Weight * weight_,$/;"	f	class:LeafPostList
resolve_relative_path	common/fileutils.cc	/^resolve_relative_path(string & path, const string & base)$/;"	f
result	common/msvc_dirent.cc	/^    struct dirent       result; \/* d_name null iff first time *\/$/;"	m	struct:DIR	typeref:struct:DIR::dirent	file:
result	languages/compiler/header.h	/^    int result;      \/* the numeric result for the case *\/$/;"	m	struct:amongvec
result	languages/steminternal.h	/^    int result;		\/* result of the lookup *\/$/;"	m	struct:among
result	net/resolver.h	/^    struct addrinfo* result = NULL;$/;"	m	class:Resolver	typeref:struct:Resolver::addrinfo
result	tests/api_query.cc	/^    Xapian::docid result;$/;"	m	struct:positional_testcase	file:
result	tests/harness/testsuite.h	/^	struct result {$/;"	s	class:test_driver
result_so_far	tests/harness/testrunner.h	/^    int result_so_far;$/;"	m	class:TestRunner
rev	backends/glass/glass_version.h	/^    glass_revision_number_t rev;$/;"	m	class:GlassVersion
rev	include/xapian/types.h	/^typedef XAPIAN_REVISION_TYPE rev;$/;"	t	namespace:Xapian
reverse	include/xapian/keymaker.h	/^	bool reverse;$/;"	m	struct:Xapian::MultiValueKeyMaker::KeySpec
reverse_b	languages/compiler/analyser.c	/^static void reverse_b(symbol * b) {$/;"	f	file:
revision	backends/chert/chert_btreebase.h	/^	uint4 revision;$/;"	m	class:ChertTable_base
revision	backends/glass/glass_freelist.h	/^    uint4 revision;$/;"	m	class:GlassFreeList
revision	include/xapian.h	/^inline int revision() {$/;"	f	namespace:Xapian
revision	include/xapian/constinfo.h	/^    int major, minor, revision;$/;"	m	struct:Xapian::Internal::constinfo
revision_number	backends/chert/chert_table.h	/^	chert_revision_number_t revision_number;$/;"	m	class:ChertTable
revision_number	backends/glass/glass_table.h	/^	glass_revision_number_t revision_number;$/;"	m	class:GlassTable
rewinddir	common/msvc_dirent.cc	/^void rewinddir(DIR *dir)$/;"	f
rewrite	backends/chert/chert_cursor.h	/^	bool rewrite;$/;"	m	class:Cursor
rewrite	backends/glass/glass_cursor.h	/^	bool rewrite;$/;"	m	class:Glass::Cursor
rhead	matcher/andmaybepostlist.h	/^	Xapian::docid lhead, rhead;$/;"	m	class:AndMaybePostList
rhead	matcher/andnotpostlist.h	/^	Xapian::docid lhead, rhead;$/;"	m	class:AndNotPostList
rhead	matcher/orpostlist.h	/^	Xapian::docid lhead, rhead;$/;"	m	class:OrPostList
rhs	queryparser/lemon.c	/^  struct symbol **rhs;     \/* The RHS symbols *\/$/;"	m	struct:rule	typeref:struct:rule::symbol	file:
rhs	queryparser/lemon.c	/^  struct symbol *rhs[MAXRHS];  \/* RHS symbols *\/$/;"	m	struct:pstate	typeref:struct:pstate::symbol	file:
rhsalias	queryparser/lemon.c	/^  const char **rhsalias;   \/* An alias for each RHS symbol (NULL if none) *\/$/;"	m	struct:rule	file:
right	expand/ortermlist.h	/^    TermList *left, *right;$/;"	m	class:OrTermList
right	languages/compiler/header.h	/^    struct node * right;$/;"	m	struct:node	typeref:struct:node::node
right_current	expand/ortermlist.h	/^    std::string left_current, right_current;$/;"	m	class:OrTermList
rm_rf	tests/harness/unixcmds.cc	/^void rm_rf(const string &filename) {$/;"	f
rm_rf_nftw_helper	tests/harness/unixcmds.cc	/^rm_rf_nftw_helper(const char* path,$/;"	f	file:
rmax	matcher/andmaybepostlist.h	/^	double lmax, rmax;$/;"	m	class:AndMaybePostList
rmax	matcher/orpostlist.h	/^	double lmax, rmax, minmax;$/;"	m	class:OrPostList
rmtmpdir	tests/api_replicate.cc	/^static void rmtmpdir(const string & path) {$/;"	f	file:
root	backends/chert/chert_btreebase.h	/^	uint4 root;$/;"	m	class:ChertTable_base
root	backends/chert/chert_table.h	/^	uint4 root;$/;"	m	class:ChertTable
root	backends/glass/glass_table.h	/^	uint4 root;$/;"	m	class:GlassTable
root	backends/glass/glass_version.h	/^    RootInfo root[Glass::MAX_];$/;"	m	class:GlassVersion
root	backends/glass/glass_version.h	/^    glass_block_t root;$/;"	m	class:Glass::RootInfo
root_is_fake	backends/glass/glass_version.h	/^    bool root_is_fake;$/;"	m	class:Glass::RootInfo
root_to_set	backends/glass/glass_version.h	/^    RootInfo * root_to_set(Glass::table_type tbl) {$/;"	f	class:GlassVersion
rp	queryparser/lemon.c	/^    struct rule *rp;       \/* The rule, if a reduce *\/$/;"	m	union:action::__anon32	typeref:struct:action::__anon32::rule	file:
rp	queryparser/lemon.c	/^  struct rule *rp;         \/* The rule upon which the configuration is based *\/$/;"	m	struct:config	typeref:struct:config::rule	file:
rset	matcher/localsubmatch.h	/^    Xapian::RSet rset;$/;"	m	class:LocalSubMatch
rset_size	weight/weightinternal.h	/^    Xapian::doccount rset_size;$/;"	m	class:Xapian::Weight::Internal
rset_size_	include/xapian/weight.h	/^    Xapian::doccount rset_size_;$/;"	m	class:Xapian::Weight
rsize	expand/expandweight.h	/^    Xapian::doccount rsize;$/;"	m	class:Xapian::Internal::ExpandWeight
rtermfreq	expand/expandweight.h	/^    Xapian::doccount rtermfreq;$/;"	m	class:Xapian::Internal::ExpandStats
rule	queryparser/lemon.c	/^  struct rule *rule;       \/* Linked list of rules of this (if an NT) *\/$/;"	m	struct:symbol	typeref:struct:symbol::rule	file:
rule	queryparser/lemon.c	/^  struct rule *rule;       \/* List of all rules *\/$/;"	m	struct:lemon	typeref:struct:lemon::rule	file:
rule	queryparser/lemon.c	/^struct rule {$/;"	s	file:
rule_print	queryparser/lemon.c	/^void rule_print(FILE *out, struct rule *rp){$/;"	f
ruleline	queryparser/lemon.c	/^  int ruleline;            \/* Line number for the rule *\/$/;"	m	struct:rule	file:
run	net/remoteserver.cc	/^RemoteServer::run()$/;"	f	class:RemoteServer
run	net/tcpserver.cc	/^TcpServer::run()$/;"	f	class:TcpServer
run	tests/apitest.cc	/^    int run() const {$/;"	f	class:ApiTestRunner
run	tests/harness/testsuite.cc	/^test_driver::run(const test_desc *tests)$/;"	f	class:test_driver
run	tests/harness/testsuite.h	/^    test_func run;$/;"	m	struct:test_desc
run	tests/perftest/perftest.cc	/^    int run() const {$/;"	f	class:PerfTestRunner
run	tests/soaktest/soaktest.cc	/^    int run() const {$/;"	f	class:SoakTestRunner
run_command	tests/perftest/get_machine_info	/^sub run_command {$/;"	s
run_once	net/tcpserver.cc	/^TcpServer::run_once()$/;"	f	class:TcpServer
run_program	net/progclient.cc	/^ProgClient::run_program(const string &progname, const string &args$/;"	f	class:ProgClient
run_tests	tests/harness/testrunner.cc	/^TestRunner::run_tests(int argc, char ** argv)$/;"	f	class:TestRunner
run_tests	tests/harness/testsuite.cc	/^test_driver::run_tests()$/;"	f	class:test_driver
run_tests	tests/harness/testsuite.cc	/^test_driver::run_tests(vector<string>::const_iterator b,$/;"	f	class:test_driver
run_thread	net/tcpserver.cc	/^run_thread(void * param_)$/;"	f	file:
runs	tests/harness/testsuite.cc	/^int test_driver::runs = 0;$/;"	m	class:test_driver	file:
runs	tests/harness/testsuite.h	/^	static int runs;$/;"	m	class:test_driver
runtest	tests/harness/testsuite.cc	/^test_driver::runtest(const test_desc *test)$/;"	f	class:test_driver
runtime_path	languages/compiler/header.h	/^    const char * runtime_path;$/;"	m	struct:options
rvalid	matcher/orpostlist.h	/^	bool lvalid, rvalid;$/;"	m	class:OrPostList
s	examples/quest.cc	/^struct qp_flag { const char * s; unsigned f; };$/;"	m	struct:qp_flag	file:
s	examples/quest.cc	/^struct qp_op { const char * s; unsigned f; };$/;"	m	struct:qp_op	file:
s	examples/quest.cc	/^struct wt { const char * s; int f; };$/;"	m	struct:wt	file:
s	languages/compiler/tokeniser.c	/^    const byte * s;  \/* pointer to the system word *\/$/;"	m	struct:system_word	file:
s	languages/steminternal.h	/^    unsigned s;		\/* offset in pool to search string *\/$/;"	m	struct:among
s_0	languages/arabic.cc	/^static const symbol s_0[] = { '0' };$/;"	v	file:
s_0	languages/basque.cc	/^static const symbol s_0[] = { 'a', 't', 's', 'e', 'd', 'e', 'n' };$/;"	v	file:
s_0	languages/catalan.cc	/^static const symbol s_0[] = { 'a' };$/;"	v	file:
s_0	languages/danish.cc	/^static const symbol s_0[] = { 's', 't' };$/;"	v	file:
s_0	languages/dutch.cc	/^static const symbol s_0[] = { 'a' };$/;"	v	file:
s_0	languages/earlyenglish.cc	/^static const symbol s_0[] = { 's', 's' };$/;"	v	file:
s_0	languages/english.cc	/^static const symbol s_0[] = { 'Y' };$/;"	v	file:
s_0	languages/finnish.cc	/^static const symbol s_0[] = { 'k', 's', 'e' };$/;"	v	file:
s_0	languages/french.cc	/^static const symbol s_0[] = { 'U' };$/;"	v	file:
s_0	languages/german.cc	/^static const symbol s_0[] = { 0xC3, 0x9F };$/;"	v	file:
s_0	languages/german2.cc	/^static const symbol s_0[] = { 'U' };$/;"	v	file:
s_0	languages/hungarian.cc	/^static const symbol s_0[] = { 'a' };$/;"	v	file:
s_0	languages/indonesian.cc	/^static const symbol s_0[] = { 'e', 'r' };$/;"	v	file:
s_0	languages/irish.cc	/^static const symbol s_0[] = { 'f' };$/;"	v	file:
s_0	languages/italian.cc	/^static const symbol s_0[] = { 0xC3, 0xA0 };$/;"	v	file:
s_0	languages/kraaij_pohlmann.cc	/^static const symbol s_0[] = { 'i', 'j' };$/;"	v	file:
s_0	languages/lithuanian.cc	/^static const symbol s_0[] = { 'a', 'i', 't', 0xC4, 0x97 };$/;"	v	file:
s_0	languages/lovins.cc	/^static const symbol s_0[] = { 'l', 'l' };$/;"	v	file:
s_0	languages/nepali.cc	/^static const symbol s_0[] = { 0xE0, 0xA4, 0x8F };$/;"	v	file:
s_0	languages/norwegian.cc	/^static const symbol s_0[] = { 'e', 'r' };$/;"	v	file:
s_0	languages/porter.cc	/^static const symbol s_0[] = { 's', 's' };$/;"	v	file:
s_0	languages/portuguese.cc	/^static const symbol s_0[] = { 'a', '~' };$/;"	v	file:
s_0	languages/romanian.cc	/^static const symbol s_0[] = { 'U' };$/;"	v	file:
s_0	languages/russian.cc	/^static const symbol s_0[] = { 0xD0, 0xB0 };$/;"	v	file:
s_0	languages/spanish.cc	/^static const symbol s_0[] = { 'a' };$/;"	v	file:
s_0	languages/swedish.cc	/^static const symbol s_0[] = { 'l', 0xC3, 0xB6, 's' };$/;"	v	file:
s_0	languages/tamil.cc	/^static const symbol s_0[] = { 0xE0, 0xAE, 0xB5, 0xE0, 0xAF, 0x8B };$/;"	v	file:
s_0	languages/turkish.cc	/^static const symbol s_0[] = { 0xC4, 0xB1 };$/;"	v	file:
s_0_0	languages/arabic.cc	9;"	d	file:
s_0_0	languages/armenian.cc	9;"	d	file:
s_0_0	languages/basque.cc	8;"	d	file:
s_0_0	languages/danish.cc	8;"	d	file:
s_0_0	languages/earlyenglish.cc	8;"	d	file:
s_0_0	languages/english.cc	9;"	d	file:
s_0_0	languages/finnish.cc	23;"	d	file:
s_0_0	languages/french.cc	9;"	d	file:
s_0_0	languages/hungarian.cc	9;"	d	file:
s_0_0	languages/indonesian.cc	38;"	d	file:
s_0_0	languages/irish.cc	9;"	d	file:
s_0_0	languages/kraaij_pohlmann.cc	9;"	d	file:
s_0_0	languages/lithuanian.cc	8;"	d	file:
s_0_0	languages/lovins.cc	158;"	d	file:
s_0_0	languages/nepali.cc	9;"	d	file:
s_0_0	languages/norwegian.cc	8;"	d	file:
s_0_0	languages/porter.cc	8;"	d	file:
s_0_0	languages/russian.cc	8;"	d	file:
s_0_0	languages/swedish.cc	8;"	d	file:
s_0_0	languages/tamil.cc	9;"	d	file:
s_0_0	languages/turkish.cc	8;"	d	file:
s_0_1	languages/arabic.cc	11;"	d	file:
s_0_1	languages/armenian.cc	11;"	d	file:
s_0_1	languages/basque.cc	10;"	d	file:
s_0_1	languages/catalan.cc	9;"	d	file:
s_0_1	languages/danish.cc	10;"	d	file:
s_0_1	languages/dutch.cc	9;"	d	file:
s_0_1	languages/earlyenglish.cc	10;"	d	file:
s_0_1	languages/english.cc	11;"	d	file:
s_0_1	languages/finnish.cc	25;"	d	file:
s_0_1	languages/french.cc	11;"	d	file:
s_0_1	languages/german.cc	9;"	d	file:
s_0_1	languages/german2.cc	9;"	d	file:
s_0_1	languages/hungarian.cc	11;"	d	file:
s_0_1	languages/indonesian.cc	40;"	d	file:
s_0_1	languages/irish.cc	11;"	d	file:
s_0_1	languages/italian.cc	9;"	d	file:
s_0_1	languages/kraaij_pohlmann.cc	11;"	d	file:
s_0_1	languages/lithuanian.cc	9;"	d	file:
s_0_1	languages/lovins.cc	160;"	d	file:
s_0_1	languages/nepali.cc	11;"	d	file:
s_0_1	languages/norwegian.cc	9;"	d	file:
s_0_1	languages/porter.cc	10;"	d	file:
s_0_1	languages/portuguese.cc	9;"	d	file:
s_0_1	languages/romanian.cc	9;"	d	file:
s_0_1	languages/russian.cc	10;"	d	file:
s_0_1	languages/spanish.cc	9;"	d	file:
s_0_1	languages/swedish.cc	9;"	d	file:
s_0_1	languages/tamil.cc	11;"	d	file:
s_0_1	languages/turkish.cc	9;"	d	file:
s_0_10	languages/arabic.cc	29;"	d	file:
s_0_10	languages/armenian.cc	28;"	d	file:
s_0_10	languages/basque.cc	28;"	d	file:
s_0_10	languages/catalan.cc	27;"	d	file:
s_0_10	languages/danish.cc	21;"	d	file:
s_0_10	languages/dutch.cc	27;"	d	file:
s_0_10	languages/irish.cc	26;"	d	file:
s_0_10	languages/lithuanian.cc	23;"	d	file:
s_0_10	languages/nepali.cc	28;"	d	file:
s_0_10	languages/norwegian.cc	22;"	d	file:
s_0_10	languages/swedish.cc	21;"	d	file:
s_0_100	languages/arabic.cc	209;"	d	file:
s_0_100	languages/basque.cc	161;"	d	file:
s_0_100	languages/lithuanian.cc	159;"	d	file:
s_0_101	languages/arabic.cc	211;"	d	file:
s_0_101	languages/basque.cc	162;"	d	file:
s_0_101	languages/lithuanian.cc	160;"	d	file:
s_0_102	languages/arabic.cc	213;"	d	file:
s_0_102	languages/basque.cc	164;"	d	file:
s_0_102	languages/lithuanian.cc	161;"	d	file:
s_0_103	languages/arabic.cc	215;"	d	file:
s_0_103	languages/basque.cc	166;"	d	file:
s_0_103	languages/lithuanian.cc	162;"	d	file:
s_0_104	languages/arabic.cc	217;"	d	file:
s_0_104	languages/basque.cc	168;"	d	file:
s_0_104	languages/lithuanian.cc	163;"	d	file:
s_0_105	languages/arabic.cc	219;"	d	file:
s_0_105	languages/basque.cc	169;"	d	file:
s_0_105	languages/lithuanian.cc	164;"	d	file:
s_0_106	languages/arabic.cc	221;"	d	file:
s_0_106	languages/basque.cc	170;"	d	file:
s_0_106	languages/lithuanian.cc	165;"	d	file:
s_0_107	languages/arabic.cc	223;"	d	file:
s_0_107	languages/basque.cc	172;"	d	file:
s_0_107	languages/lithuanian.cc	166;"	d	file:
s_0_108	languages/arabic.cc	225;"	d	file:
s_0_108	languages/basque.cc	173;"	d	file:
s_0_108	languages/lithuanian.cc	168;"	d	file:
s_0_109	languages/arabic.cc	227;"	d	file:
s_0_109	languages/lithuanian.cc	169;"	d	file:
s_0_11	languages/arabic.cc	31;"	d	file:
s_0_11	languages/armenian.cc	29;"	d	file:
s_0_11	languages/basque.cc	30;"	d	file:
s_0_11	languages/catalan.cc	29;"	d	file:
s_0_11	languages/danish.cc	22;"	d	file:
s_0_11	languages/irish.cc	28;"	d	file:
s_0_11	languages/lithuanian.cc	24;"	d	file:
s_0_11	languages/nepali.cc	30;"	d	file:
s_0_11	languages/norwegian.cc	23;"	d	file:
s_0_11	languages/swedish.cc	22;"	d	file:
s_0_110	languages/arabic.cc	229;"	d	file:
s_0_110	languages/lithuanian.cc	171;"	d	file:
s_0_111	languages/arabic.cc	231;"	d	file:
s_0_111	languages/lithuanian.cc	172;"	d	file:
s_0_112	languages/arabic.cc	233;"	d	file:
s_0_112	languages/lithuanian.cc	174;"	d	file:
s_0_113	languages/arabic.cc	235;"	d	file:
s_0_113	languages/lithuanian.cc	176;"	d	file:
s_0_114	languages/arabic.cc	237;"	d	file:
s_0_114	languages/lithuanian.cc	177;"	d	file:
s_0_115	languages/arabic.cc	239;"	d	file:
s_0_115	languages/lithuanian.cc	178;"	d	file:
s_0_116	languages/arabic.cc	241;"	d	file:
s_0_116	languages/lithuanian.cc	180;"	d	file:
s_0_117	languages/arabic.cc	243;"	d	file:
s_0_117	languages/lithuanian.cc	181;"	d	file:
s_0_118	languages/arabic.cc	245;"	d	file:
s_0_118	languages/lithuanian.cc	182;"	d	file:
s_0_119	languages/arabic.cc	247;"	d	file:
s_0_119	languages/lithuanian.cc	183;"	d	file:
s_0_12	languages/arabic.cc	33;"	d	file:
s_0_12	languages/armenian.cc	31;"	d	file:
s_0_12	languages/basque.cc	32;"	d	file:
s_0_12	languages/catalan.cc	31;"	d	file:
s_0_12	languages/danish.cc	23;"	d	file:
s_0_12	languages/irish.cc	30;"	d	file:
s_0_12	languages/lithuanian.cc	26;"	d	file:
s_0_12	languages/nepali.cc	32;"	d	file:
s_0_12	languages/norwegian.cc	25;"	d	file:
s_0_12	languages/swedish.cc	24;"	d	file:
s_0_120	languages/arabic.cc	249;"	d	file:
s_0_120	languages/lithuanian.cc	184;"	d	file:
s_0_121	languages/arabic.cc	251;"	d	file:
s_0_121	languages/lithuanian.cc	185;"	d	file:
s_0_122	languages/arabic.cc	253;"	d	file:
s_0_122	languages/lithuanian.cc	186;"	d	file:
s_0_123	languages/arabic.cc	255;"	d	file:
s_0_123	languages/lithuanian.cc	187;"	d	file:
s_0_124	languages/arabic.cc	257;"	d	file:
s_0_124	languages/lithuanian.cc	188;"	d	file:
s_0_125	languages/arabic.cc	259;"	d	file:
s_0_125	languages/lithuanian.cc	189;"	d	file:
s_0_126	languages/arabic.cc	261;"	d	file:
s_0_126	languages/lithuanian.cc	191;"	d	file:
s_0_127	languages/arabic.cc	263;"	d	file:
s_0_127	languages/lithuanian.cc	192;"	d	file:
s_0_128	languages/arabic.cc	265;"	d	file:
s_0_128	languages/lithuanian.cc	193;"	d	file:
s_0_129	languages/arabic.cc	267;"	d	file:
s_0_129	languages/lithuanian.cc	195;"	d	file:
s_0_13	languages/arabic.cc	35;"	d	file:
s_0_13	languages/armenian.cc	33;"	d	file:
s_0_13	languages/basque.cc	33;"	d	file:
s_0_13	languages/danish.cc	24;"	d	file:
s_0_13	languages/irish.cc	32;"	d	file:
s_0_13	languages/lithuanian.cc	28;"	d	file:
s_0_13	languages/nepali.cc	34;"	d	file:
s_0_13	languages/norwegian.cc	26;"	d	file:
s_0_13	languages/swedish.cc	25;"	d	file:
s_0_130	languages/arabic.cc	269;"	d	file:
s_0_130	languages/lithuanian.cc	196;"	d	file:
s_0_131	languages/arabic.cc	271;"	d	file:
s_0_131	languages/lithuanian.cc	198;"	d	file:
s_0_132	languages/arabic.cc	273;"	d	file:
s_0_132	languages/lithuanian.cc	200;"	d	file:
s_0_133	languages/arabic.cc	275;"	d	file:
s_0_133	languages/lithuanian.cc	202;"	d	file:
s_0_134	languages/arabic.cc	277;"	d	file:
s_0_134	languages/lithuanian.cc	204;"	d	file:
s_0_135	languages/arabic.cc	279;"	d	file:
s_0_135	languages/lithuanian.cc	206;"	d	file:
s_0_136	languages/arabic.cc	281;"	d	file:
s_0_136	languages/lithuanian.cc	208;"	d	file:
s_0_137	languages/arabic.cc	283;"	d	file:
s_0_137	languages/lithuanian.cc	209;"	d	file:
s_0_138	languages/arabic.cc	285;"	d	file:
s_0_138	languages/lithuanian.cc	211;"	d	file:
s_0_139	languages/arabic.cc	287;"	d	file:
s_0_139	languages/lithuanian.cc	213;"	d	file:
s_0_14	languages/arabic.cc	37;"	d	file:
s_0_14	languages/armenian.cc	35;"	d	file:
s_0_14	languages/basque.cc	35;"	d	file:
s_0_14	languages/danish.cc	25;"	d	file:
s_0_14	languages/irish.cc	34;"	d	file:
s_0_14	languages/lithuanian.cc	29;"	d	file:
s_0_14	languages/nepali.cc	35;"	d	file:
s_0_14	languages/norwegian.cc	28;"	d	file:
s_0_14	languages/swedish.cc	27;"	d	file:
s_0_140	languages/arabic.cc	289;"	d	file:
s_0_140	languages/lithuanian.cc	214;"	d	file:
s_0_141	languages/arabic.cc	291;"	d	file:
s_0_141	languages/lithuanian.cc	216;"	d	file:
s_0_142	languages/arabic.cc	293;"	d	file:
s_0_142	languages/lithuanian.cc	218;"	d	file:
s_0_143	languages/arabic.cc	295;"	d	file:
s_0_143	languages/lithuanian.cc	219;"	d	file:
s_0_144	languages/arabic.cc	297;"	d	file:
s_0_144	languages/lithuanian.cc	221;"	d	file:
s_0_145	languages/arabic.cc	299;"	d	file:
s_0_145	languages/lithuanian.cc	223;"	d	file:
s_0_146	languages/arabic.cc	301;"	d	file:
s_0_146	languages/lithuanian.cc	225;"	d	file:
s_0_147	languages/arabic.cc	303;"	d	file:
s_0_147	languages/lithuanian.cc	227;"	d	file:
s_0_148	languages/arabic.cc	305;"	d	file:
s_0_148	languages/lithuanian.cc	228;"	d	file:
s_0_149	languages/arabic.cc	307;"	d	file:
s_0_149	languages/lithuanian.cc	229;"	d	file:
s_0_15	languages/arabic.cc	39;"	d	file:
s_0_15	languages/armenian.cc	36;"	d	file:
s_0_15	languages/basque.cc	37;"	d	file:
s_0_15	languages/danish.cc	27;"	d	file:
s_0_15	languages/irish.cc	36;"	d	file:
s_0_15	languages/lithuanian.cc	31;"	d	file:
s_0_15	languages/nepali.cc	37;"	d	file:
s_0_15	languages/norwegian.cc	29;"	d	file:
s_0_15	languages/swedish.cc	28;"	d	file:
s_0_150	languages/arabic.cc	309;"	d	file:
s_0_150	languages/lithuanian.cc	230;"	d	file:
s_0_151	languages/arabic.cc	311;"	d	file:
s_0_151	languages/lithuanian.cc	231;"	d	file:
s_0_152	languages/arabic.cc	313;"	d	file:
s_0_152	languages/lithuanian.cc	233;"	d	file:
s_0_153	languages/arabic.cc	315;"	d	file:
s_0_153	languages/lithuanian.cc	234;"	d	file:
s_0_154	languages/arabic.cc	317;"	d	file:
s_0_154	languages/lithuanian.cc	235;"	d	file:
s_0_155	languages/arabic.cc	319;"	d	file:
s_0_155	languages/lithuanian.cc	236;"	d	file:
s_0_156	languages/arabic.cc	321;"	d	file:
s_0_156	languages/lithuanian.cc	238;"	d	file:
s_0_157	languages/arabic.cc	323;"	d	file:
s_0_157	languages/lithuanian.cc	239;"	d	file:
s_0_158	languages/arabic.cc	325;"	d	file:
s_0_158	languages/lithuanian.cc	240;"	d	file:
s_0_159	languages/arabic.cc	327;"	d	file:
s_0_159	languages/lithuanian.cc	241;"	d	file:
s_0_16	languages/arabic.cc	41;"	d	file:
s_0_16	languages/armenian.cc	38;"	d	file:
s_0_16	languages/basque.cc	39;"	d	file:
s_0_16	languages/danish.cc	29;"	d	file:
s_0_16	languages/irish.cc	38;"	d	file:
s_0_16	languages/lithuanian.cc	32;"	d	file:
s_0_16	languages/nepali.cc	39;"	d	file:
s_0_16	languages/norwegian.cc	30;"	d	file:
s_0_16	languages/swedish.cc	29;"	d	file:
s_0_160	languages/arabic.cc	329;"	d	file:
s_0_160	languages/lithuanian.cc	242;"	d	file:
s_0_161	languages/lithuanian.cc	244;"	d	file:
s_0_162	languages/lithuanian.cc	245;"	d	file:
s_0_163	languages/lithuanian.cc	246;"	d	file:
s_0_164	languages/lithuanian.cc	248;"	d	file:
s_0_165	languages/lithuanian.cc	249;"	d	file:
s_0_166	languages/lithuanian.cc	251;"	d	file:
s_0_167	languages/lithuanian.cc	253;"	d	file:
s_0_168	languages/lithuanian.cc	255;"	d	file:
s_0_169	languages/lithuanian.cc	256;"	d	file:
s_0_17	languages/arabic.cc	43;"	d	file:
s_0_17	languages/armenian.cc	40;"	d	file:
s_0_17	languages/basque.cc	41;"	d	file:
s_0_17	languages/danish.cc	30;"	d	file:
s_0_17	languages/irish.cc	40;"	d	file:
s_0_17	languages/lithuanian.cc	34;"	d	file:
s_0_17	languages/norwegian.cc	31;"	d	file:
s_0_17	languages/swedish.cc	30;"	d	file:
s_0_170	languages/lithuanian.cc	258;"	d	file:
s_0_171	languages/lithuanian.cc	259;"	d	file:
s_0_172	languages/lithuanian.cc	261;"	d	file:
s_0_173	languages/lithuanian.cc	263;"	d	file:
s_0_174	languages/lithuanian.cc	265;"	d	file:
s_0_175	languages/lithuanian.cc	266;"	d	file:
s_0_176	languages/lithuanian.cc	268;"	d	file:
s_0_177	languages/lithuanian.cc	270;"	d	file:
s_0_178	languages/lithuanian.cc	272;"	d	file:
s_0_179	languages/lithuanian.cc	273;"	d	file:
s_0_18	languages/arabic.cc	45;"	d	file:
s_0_18	languages/armenian.cc	42;"	d	file:
s_0_18	languages/basque.cc	42;"	d	file:
s_0_18	languages/danish.cc	32;"	d	file:
s_0_18	languages/irish.cc	42;"	d	file:
s_0_18	languages/lithuanian.cc	35;"	d	file:
s_0_18	languages/norwegian.cc	33;"	d	file:
s_0_18	languages/swedish.cc	31;"	d	file:
s_0_180	languages/lithuanian.cc	274;"	d	file:
s_0_181	languages/lithuanian.cc	275;"	d	file:
s_0_182	languages/lithuanian.cc	276;"	d	file:
s_0_183	languages/lithuanian.cc	277;"	d	file:
s_0_184	languages/lithuanian.cc	278;"	d	file:
s_0_185	languages/lithuanian.cc	279;"	d	file:
s_0_186	languages/lithuanian.cc	280;"	d	file:
s_0_187	languages/lithuanian.cc	281;"	d	file:
s_0_188	languages/lithuanian.cc	282;"	d	file:
s_0_189	languages/lithuanian.cc	283;"	d	file:
s_0_19	languages/arabic.cc	47;"	d	file:
s_0_19	languages/armenian.cc	44;"	d	file:
s_0_19	languages/basque.cc	44;"	d	file:
s_0_19	languages/danish.cc	33;"	d	file:
s_0_19	languages/irish.cc	44;"	d	file:
s_0_19	languages/lithuanian.cc	37;"	d	file:
s_0_19	languages/norwegian.cc	35;"	d	file:
s_0_19	languages/swedish.cc	32;"	d	file:
s_0_190	languages/lithuanian.cc	284;"	d	file:
s_0_191	languages/lithuanian.cc	285;"	d	file:
s_0_192	languages/lithuanian.cc	286;"	d	file:
s_0_193	languages/lithuanian.cc	287;"	d	file:
s_0_194	languages/lithuanian.cc	288;"	d	file:
s_0_195	languages/lithuanian.cc	289;"	d	file:
s_0_196	languages/lithuanian.cc	290;"	d	file:
s_0_197	languages/lithuanian.cc	291;"	d	file:
s_0_198	languages/lithuanian.cc	293;"	d	file:
s_0_199	languages/lithuanian.cc	294;"	d	file:
s_0_2	languages/arabic.cc	13;"	d	file:
s_0_2	languages/armenian.cc	12;"	d	file:
s_0_2	languages/basque.cc	12;"	d	file:
s_0_2	languages/catalan.cc	11;"	d	file:
s_0_2	languages/danish.cc	12;"	d	file:
s_0_2	languages/dutch.cc	11;"	d	file:
s_0_2	languages/earlyenglish.cc	12;"	d	file:
s_0_2	languages/english.cc	13;"	d	file:
s_0_2	languages/finnish.cc	27;"	d	file:
s_0_2	languages/french.cc	13;"	d	file:
s_0_2	languages/german.cc	11;"	d	file:
s_0_2	languages/german2.cc	11;"	d	file:
s_0_2	languages/hungarian.cc	13;"	d	file:
s_0_2	languages/indonesian.cc	42;"	d	file:
s_0_2	languages/irish.cc	12;"	d	file:
s_0_2	languages/italian.cc	11;"	d	file:
s_0_2	languages/kraaij_pohlmann.cc	13;"	d	file:
s_0_2	languages/lithuanian.cc	10;"	d	file:
s_0_2	languages/lovins.cc	162;"	d	file:
s_0_2	languages/nepali.cc	13;"	d	file:
s_0_2	languages/norwegian.cc	10;"	d	file:
s_0_2	languages/porter.cc	12;"	d	file:
s_0_2	languages/portuguese.cc	11;"	d	file:
s_0_2	languages/romanian.cc	11;"	d	file:
s_0_2	languages/russian.cc	12;"	d	file:
s_0_2	languages/spanish.cc	11;"	d	file:
s_0_2	languages/swedish.cc	10;"	d	file:
s_0_2	languages/tamil.cc	13;"	d	file:
s_0_2	languages/turkish.cc	11;"	d	file:
s_0_20	languages/arabic.cc	49;"	d	file:
s_0_20	languages/armenian.cc	46;"	d	file:
s_0_20	languages/basque.cc	45;"	d	file:
s_0_20	languages/danish.cc	34;"	d	file:
s_0_20	languages/irish.cc	46;"	d	file:
s_0_20	languages/lithuanian.cc	39;"	d	file:
s_0_20	languages/norwegian.cc	36;"	d	file:
s_0_20	languages/swedish.cc	33;"	d	file:
s_0_200	languages/lithuanian.cc	296;"	d	file:
s_0_201	languages/lithuanian.cc	298;"	d	file:
s_0_202	languages/lithuanian.cc	299;"	d	file:
s_0_203	languages/lithuanian.cc	301;"	d	file:
s_0_21	languages/arabic.cc	51;"	d	file:
s_0_21	languages/armenian.cc	48;"	d	file:
s_0_21	languages/basque.cc	47;"	d	file:
s_0_21	languages/danish.cc	36;"	d	file:
s_0_21	languages/irish.cc	48;"	d	file:
s_0_21	languages/lithuanian.cc	41;"	d	file:
s_0_21	languages/norwegian.cc	38;"	d	file:
s_0_21	languages/swedish.cc	34;"	d	file:
s_0_22	languages/arabic.cc	53;"	d	file:
s_0_22	languages/armenian.cc	50;"	d	file:
s_0_22	languages/basque.cc	49;"	d	file:
s_0_22	languages/danish.cc	38;"	d	file:
s_0_22	languages/irish.cc	50;"	d	file:
s_0_22	languages/lithuanian.cc	42;"	d	file:
s_0_22	languages/norwegian.cc	39;"	d	file:
s_0_22	languages/swedish.cc	35;"	d	file:
s_0_23	languages/arabic.cc	55;"	d	file:
s_0_23	languages/basque.cc	51;"	d	file:
s_0_23	languages/danish.cc	40;"	d	file:
s_0_23	languages/irish.cc	52;"	d	file:
s_0_23	languages/lithuanian.cc	44;"	d	file:
s_0_23	languages/norwegian.cc	41;"	d	file:
s_0_23	languages/swedish.cc	36;"	d	file:
s_0_24	languages/arabic.cc	57;"	d	file:
s_0_24	languages/basque.cc	52;"	d	file:
s_0_24	languages/danish.cc	42;"	d	file:
s_0_24	languages/lithuanian.cc	46;"	d	file:
s_0_24	languages/norwegian.cc	43;"	d	file:
s_0_24	languages/swedish.cc	38;"	d	file:
s_0_25	languages/arabic.cc	59;"	d	file:
s_0_25	languages/basque.cc	54;"	d	file:
s_0_25	languages/danish.cc	43;"	d	file:
s_0_25	languages/lithuanian.cc	48;"	d	file:
s_0_25	languages/norwegian.cc	45;"	d	file:
s_0_25	languages/swedish.cc	40;"	d	file:
s_0_26	languages/arabic.cc	61;"	d	file:
s_0_26	languages/basque.cc	56;"	d	file:
s_0_26	languages/danish.cc	45;"	d	file:
s_0_26	languages/lithuanian.cc	49;"	d	file:
s_0_26	languages/norwegian.cc	46;"	d	file:
s_0_26	languages/swedish.cc	42;"	d	file:
s_0_27	languages/arabic.cc	63;"	d	file:
s_0_27	languages/basque.cc	58;"	d	file:
s_0_27	languages/danish.cc	47;"	d	file:
s_0_27	languages/lithuanian.cc	51;"	d	file:
s_0_27	languages/norwegian.cc	47;"	d	file:
s_0_27	languages/swedish.cc	43;"	d	file:
s_0_28	languages/arabic.cc	65;"	d	file:
s_0_28	languages/basque.cc	60;"	d	file:
s_0_28	languages/danish.cc	49;"	d	file:
s_0_28	languages/lithuanian.cc	52;"	d	file:
s_0_28	languages/norwegian.cc	48;"	d	file:
s_0_28	languages/swedish.cc	45;"	d	file:
s_0_29	languages/arabic.cc	67;"	d	file:
s_0_29	languages/basque.cc	61;"	d	file:
s_0_29	languages/danish.cc	50;"	d	file:
s_0_29	languages/lithuanian.cc	54;"	d	file:
s_0_29	languages/swedish.cc	47;"	d	file:
s_0_3	languages/arabic.cc	15;"	d	file:
s_0_3	languages/armenian.cc	14;"	d	file:
s_0_3	languages/basque.cc	14;"	d	file:
s_0_3	languages/catalan.cc	13;"	d	file:
s_0_3	languages/danish.cc	13;"	d	file:
s_0_3	languages/dutch.cc	13;"	d	file:
s_0_3	languages/earlyenglish.cc	14;"	d	file:
s_0_3	languages/finnish.cc	29;"	d	file:
s_0_3	languages/german.cc	13;"	d	file:
s_0_3	languages/german2.cc	13;"	d	file:
s_0_3	languages/hungarian.cc	15;"	d	file:
s_0_3	languages/irish.cc	14;"	d	file:
s_0_3	languages/italian.cc	13;"	d	file:
s_0_3	languages/kraaij_pohlmann.cc	14;"	d	file:
s_0_3	languages/lithuanian.cc	11;"	d	file:
s_0_3	languages/lovins.cc	164;"	d	file:
s_0_3	languages/nepali.cc	15;"	d	file:
s_0_3	languages/norwegian.cc	12;"	d	file:
s_0_3	languages/porter.cc	14;"	d	file:
s_0_3	languages/russian.cc	14;"	d	file:
s_0_3	languages/spanish.cc	13;"	d	file:
s_0_3	languages/swedish.cc	12;"	d	file:
s_0_3	languages/tamil.cc	15;"	d	file:
s_0_3	languages/turkish.cc	13;"	d	file:
s_0_30	languages/arabic.cc	69;"	d	file:
s_0_30	languages/basque.cc	62;"	d	file:
s_0_30	languages/danish.cc	52;"	d	file:
s_0_30	languages/lithuanian.cc	55;"	d	file:
s_0_30	languages/swedish.cc	48;"	d	file:
s_0_31	languages/arabic.cc	71;"	d	file:
s_0_31	languages/basque.cc	64;"	d	file:
s_0_31	languages/danish.cc	53;"	d	file:
s_0_31	languages/lithuanian.cc	57;"	d	file:
s_0_31	languages/swedish.cc	50;"	d	file:
s_0_32	languages/arabic.cc	73;"	d	file:
s_0_32	languages/basque.cc	66;"	d	file:
s_0_32	languages/lithuanian.cc	58;"	d	file:
s_0_32	languages/swedish.cc	52;"	d	file:
s_0_33	languages/arabic.cc	75;"	d	file:
s_0_33	languages/basque.cc	68;"	d	file:
s_0_33	languages/lithuanian.cc	60;"	d	file:
s_0_33	languages/swedish.cc	54;"	d	file:
s_0_34	languages/arabic.cc	77;"	d	file:
s_0_34	languages/basque.cc	69;"	d	file:
s_0_34	languages/lithuanian.cc	62;"	d	file:
s_0_34	languages/swedish.cc	56;"	d	file:
s_0_35	languages/arabic.cc	79;"	d	file:
s_0_35	languages/basque.cc	71;"	d	file:
s_0_35	languages/lithuanian.cc	64;"	d	file:
s_0_35	languages/swedish.cc	58;"	d	file:
s_0_36	languages/arabic.cc	81;"	d	file:
s_0_36	languages/basque.cc	73;"	d	file:
s_0_36	languages/lithuanian.cc	65;"	d	file:
s_0_36	languages/swedish.cc	59;"	d	file:
s_0_37	languages/arabic.cc	83;"	d	file:
s_0_37	languages/basque.cc	75;"	d	file:
s_0_37	languages/lithuanian.cc	67;"	d	file:
s_0_38	languages/arabic.cc	85;"	d	file:
s_0_38	languages/basque.cc	77;"	d	file:
s_0_38	languages/lithuanian.cc	68;"	d	file:
s_0_39	languages/arabic.cc	87;"	d	file:
s_0_39	languages/basque.cc	79;"	d	file:
s_0_39	languages/lithuanian.cc	70;"	d	file:
s_0_4	languages/arabic.cc	17;"	d	file:
s_0_4	languages/armenian.cc	16;"	d	file:
s_0_4	languages/basque.cc	16;"	d	file:
s_0_4	languages/catalan.cc	15;"	d	file:
s_0_4	languages/danish.cc	14;"	d	file:
s_0_4	languages/dutch.cc	15;"	d	file:
s_0_4	languages/finnish.cc	31;"	d	file:
s_0_4	languages/german.cc	15;"	d	file:
s_0_4	languages/german2.cc	15;"	d	file:
s_0_4	languages/hungarian.cc	17;"	d	file:
s_0_4	languages/irish.cc	16;"	d	file:
s_0_4	languages/italian.cc	15;"	d	file:
s_0_4	languages/kraaij_pohlmann.cc	16;"	d	file:
s_0_4	languages/lithuanian.cc	13;"	d	file:
s_0_4	languages/lovins.cc	166;"	d	file:
s_0_4	languages/nepali.cc	17;"	d	file:
s_0_4	languages/norwegian.cc	14;"	d	file:
s_0_4	languages/russian.cc	15;"	d	file:
s_0_4	languages/spanish.cc	15;"	d	file:
s_0_4	languages/swedish.cc	14;"	d	file:
s_0_4	languages/tamil.cc	17;"	d	file:
s_0_4	languages/turkish.cc	15;"	d	file:
s_0_40	languages/arabic.cc	89;"	d	file:
s_0_40	languages/basque.cc	80;"	d	file:
s_0_40	languages/lithuanian.cc	72;"	d	file:
s_0_41	languages/arabic.cc	91;"	d	file:
s_0_41	languages/basque.cc	82;"	d	file:
s_0_41	languages/lithuanian.cc	74;"	d	file:
s_0_42	languages/arabic.cc	93;"	d	file:
s_0_42	languages/basque.cc	84;"	d	file:
s_0_42	languages/lithuanian.cc	76;"	d	file:
s_0_43	languages/arabic.cc	95;"	d	file:
s_0_43	languages/basque.cc	85;"	d	file:
s_0_43	languages/lithuanian.cc	77;"	d	file:
s_0_44	languages/arabic.cc	97;"	d	file:
s_0_44	languages/basque.cc	87;"	d	file:
s_0_44	languages/lithuanian.cc	79;"	d	file:
s_0_45	languages/arabic.cc	99;"	d	file:
s_0_45	languages/basque.cc	88;"	d	file:
s_0_45	languages/lithuanian.cc	80;"	d	file:
s_0_46	languages/arabic.cc	101;"	d	file:
s_0_46	languages/basque.cc	90;"	d	file:
s_0_46	languages/lithuanian.cc	81;"	d	file:
s_0_47	languages/arabic.cc	103;"	d	file:
s_0_47	languages/basque.cc	92;"	d	file:
s_0_47	languages/lithuanian.cc	82;"	d	file:
s_0_48	languages/arabic.cc	105;"	d	file:
s_0_48	languages/basque.cc	94;"	d	file:
s_0_48	languages/lithuanian.cc	84;"	d	file:
s_0_49	languages/arabic.cc	107;"	d	file:
s_0_49	languages/basque.cc	95;"	d	file:
s_0_49	languages/lithuanian.cc	85;"	d	file:
s_0_5	languages/arabic.cc	19;"	d	file:
s_0_5	languages/armenian.cc	18;"	d	file:
s_0_5	languages/basque.cc	18;"	d	file:
s_0_5	languages/catalan.cc	17;"	d	file:
s_0_5	languages/danish.cc	16;"	d	file:
s_0_5	languages/dutch.cc	17;"	d	file:
s_0_5	languages/finnish.cc	33;"	d	file:
s_0_5	languages/german.cc	17;"	d	file:
s_0_5	languages/german2.cc	17;"	d	file:
s_0_5	languages/hungarian.cc	19;"	d	file:
s_0_5	languages/irish.cc	18;"	d	file:
s_0_5	languages/italian.cc	17;"	d	file:
s_0_5	languages/kraaij_pohlmann.cc	17;"	d	file:
s_0_5	languages/lithuanian.cc	15;"	d	file:
s_0_5	languages/lovins.cc	168;"	d	file:
s_0_5	languages/nepali.cc	19;"	d	file:
s_0_5	languages/norwegian.cc	15;"	d	file:
s_0_5	languages/russian.cc	16;"	d	file:
s_0_5	languages/spanish.cc	17;"	d	file:
s_0_5	languages/swedish.cc	15;"	d	file:
s_0_5	languages/tamil.cc	19;"	d	file:
s_0_5	languages/turkish.cc	17;"	d	file:
s_0_50	languages/arabic.cc	109;"	d	file:
s_0_50	languages/basque.cc	96;"	d	file:
s_0_50	languages/lithuanian.cc	86;"	d	file:
s_0_51	languages/arabic.cc	111;"	d	file:
s_0_51	languages/basque.cc	97;"	d	file:
s_0_51	languages/lithuanian.cc	87;"	d	file:
s_0_52	languages/arabic.cc	113;"	d	file:
s_0_52	languages/basque.cc	98;"	d	file:
s_0_52	languages/lithuanian.cc	88;"	d	file:
s_0_53	languages/arabic.cc	115;"	d	file:
s_0_53	languages/basque.cc	99;"	d	file:
s_0_53	languages/lithuanian.cc	90;"	d	file:
s_0_54	languages/arabic.cc	117;"	d	file:
s_0_54	languages/basque.cc	101;"	d	file:
s_0_54	languages/lithuanian.cc	91;"	d	file:
s_0_55	languages/arabic.cc	119;"	d	file:
s_0_55	languages/basque.cc	103;"	d	file:
s_0_55	languages/lithuanian.cc	93;"	d	file:
s_0_56	languages/arabic.cc	121;"	d	file:
s_0_56	languages/basque.cc	104;"	d	file:
s_0_56	languages/lithuanian.cc	94;"	d	file:
s_0_57	languages/arabic.cc	123;"	d	file:
s_0_57	languages/basque.cc	105;"	d	file:
s_0_57	languages/lithuanian.cc	95;"	d	file:
s_0_58	languages/arabic.cc	125;"	d	file:
s_0_58	languages/basque.cc	106;"	d	file:
s_0_58	languages/lithuanian.cc	97;"	d	file:
s_0_59	languages/arabic.cc	127;"	d	file:
s_0_59	languages/basque.cc	107;"	d	file:
s_0_59	languages/lithuanian.cc	98;"	d	file:
s_0_6	languages/arabic.cc	21;"	d	file:
s_0_6	languages/armenian.cc	20;"	d	file:
s_0_6	languages/basque.cc	20;"	d	file:
s_0_6	languages/catalan.cc	19;"	d	file:
s_0_6	languages/danish.cc	17;"	d	file:
s_0_6	languages/dutch.cc	19;"	d	file:
s_0_6	languages/finnish.cc	35;"	d	file:
s_0_6	languages/hungarian.cc	21;"	d	file:
s_0_6	languages/irish.cc	19;"	d	file:
s_0_6	languages/italian.cc	19;"	d	file:
s_0_6	languages/kraaij_pohlmann.cc	19;"	d	file:
s_0_6	languages/lithuanian.cc	16;"	d	file:
s_0_6	languages/lovins.cc	170;"	d	file:
s_0_6	languages/nepali.cc	21;"	d	file:
s_0_6	languages/norwegian.cc	17;"	d	file:
s_0_6	languages/russian.cc	17;"	d	file:
s_0_6	languages/swedish.cc	16;"	d	file:
s_0_6	languages/tamil.cc	21;"	d	file:
s_0_6	languages/turkish.cc	19;"	d	file:
s_0_60	languages/arabic.cc	129;"	d	file:
s_0_60	languages/basque.cc	108;"	d	file:
s_0_60	languages/lithuanian.cc	99;"	d	file:
s_0_61	languages/arabic.cc	131;"	d	file:
s_0_61	languages/basque.cc	109;"	d	file:
s_0_61	languages/lithuanian.cc	101;"	d	file:
s_0_62	languages/arabic.cc	133;"	d	file:
s_0_62	languages/basque.cc	110;"	d	file:
s_0_62	languages/lithuanian.cc	102;"	d	file:
s_0_63	languages/arabic.cc	135;"	d	file:
s_0_63	languages/basque.cc	112;"	d	file:
s_0_63	languages/lithuanian.cc	104;"	d	file:
s_0_64	languages/arabic.cc	137;"	d	file:
s_0_64	languages/basque.cc	113;"	d	file:
s_0_64	languages/lithuanian.cc	105;"	d	file:
s_0_65	languages/arabic.cc	139;"	d	file:
s_0_65	languages/basque.cc	114;"	d	file:
s_0_65	languages/lithuanian.cc	107;"	d	file:
s_0_66	languages/arabic.cc	141;"	d	file:
s_0_66	languages/basque.cc	115;"	d	file:
s_0_66	languages/lithuanian.cc	109;"	d	file:
s_0_67	languages/arabic.cc	143;"	d	file:
s_0_67	languages/basque.cc	116;"	d	file:
s_0_67	languages/lithuanian.cc	110;"	d	file:
s_0_68	languages/arabic.cc	145;"	d	file:
s_0_68	languages/basque.cc	117;"	d	file:
s_0_68	languages/lithuanian.cc	112;"	d	file:
s_0_69	languages/arabic.cc	147;"	d	file:
s_0_69	languages/basque.cc	118;"	d	file:
s_0_69	languages/lithuanian.cc	113;"	d	file:
s_0_7	languages/arabic.cc	23;"	d	file:
s_0_7	languages/armenian.cc	22;"	d	file:
s_0_7	languages/basque.cc	22;"	d	file:
s_0_7	languages/catalan.cc	21;"	d	file:
s_0_7	languages/danish.cc	18;"	d	file:
s_0_7	languages/dutch.cc	21;"	d	file:
s_0_7	languages/finnish.cc	37;"	d	file:
s_0_7	languages/hungarian.cc	23;"	d	file:
s_0_7	languages/irish.cc	21;"	d	file:
s_0_7	languages/lithuanian.cc	18;"	d	file:
s_0_7	languages/lovins.cc	172;"	d	file:
s_0_7	languages/nepali.cc	23;"	d	file:
s_0_7	languages/norwegian.cc	18;"	d	file:
s_0_7	languages/russian.cc	18;"	d	file:
s_0_7	languages/swedish.cc	17;"	d	file:
s_0_7	languages/tamil.cc	23;"	d	file:
s_0_7	languages/turkish.cc	21;"	d	file:
s_0_70	languages/arabic.cc	149;"	d	file:
s_0_70	languages/basque.cc	120;"	d	file:
s_0_70	languages/lithuanian.cc	114;"	d	file:
s_0_71	languages/arabic.cc	151;"	d	file:
s_0_71	languages/basque.cc	121;"	d	file:
s_0_71	languages/lithuanian.cc	116;"	d	file:
s_0_72	languages/arabic.cc	153;"	d	file:
s_0_72	languages/basque.cc	123;"	d	file:
s_0_72	languages/lithuanian.cc	117;"	d	file:
s_0_73	languages/arabic.cc	155;"	d	file:
s_0_73	languages/basque.cc	124;"	d	file:
s_0_73	languages/lithuanian.cc	118;"	d	file:
s_0_74	languages/arabic.cc	157;"	d	file:
s_0_74	languages/basque.cc	125;"	d	file:
s_0_74	languages/lithuanian.cc	120;"	d	file:
s_0_75	languages/arabic.cc	159;"	d	file:
s_0_75	languages/basque.cc	126;"	d	file:
s_0_75	languages/lithuanian.cc	122;"	d	file:
s_0_76	languages/arabic.cc	161;"	d	file:
s_0_76	languages/basque.cc	128;"	d	file:
s_0_76	languages/lithuanian.cc	124;"	d	file:
s_0_77	languages/arabic.cc	163;"	d	file:
s_0_77	languages/basque.cc	129;"	d	file:
s_0_77	languages/lithuanian.cc	125;"	d	file:
s_0_78	languages/arabic.cc	165;"	d	file:
s_0_78	languages/basque.cc	130;"	d	file:
s_0_78	languages/lithuanian.cc	127;"	d	file:
s_0_79	languages/arabic.cc	167;"	d	file:
s_0_79	languages/basque.cc	132;"	d	file:
s_0_79	languages/lithuanian.cc	128;"	d	file:
s_0_8	languages/arabic.cc	25;"	d	file:
s_0_8	languages/armenian.cc	24;"	d	file:
s_0_8	languages/basque.cc	24;"	d	file:
s_0_8	languages/catalan.cc	23;"	d	file:
s_0_8	languages/danish.cc	19;"	d	file:
s_0_8	languages/dutch.cc	23;"	d	file:
s_0_8	languages/finnish.cc	39;"	d	file:
s_0_8	languages/irish.cc	23;"	d	file:
s_0_8	languages/lithuanian.cc	20;"	d	file:
s_0_8	languages/lovins.cc	174;"	d	file:
s_0_8	languages/nepali.cc	25;"	d	file:
s_0_8	languages/norwegian.cc	19;"	d	file:
s_0_8	languages/russian.cc	19;"	d	file:
s_0_8	languages/swedish.cc	18;"	d	file:
s_0_8	languages/tamil.cc	25;"	d	file:
s_0_8	languages/turkish.cc	23;"	d	file:
s_0_80	languages/arabic.cc	169;"	d	file:
s_0_80	languages/basque.cc	134;"	d	file:
s_0_80	languages/lithuanian.cc	130;"	d	file:
s_0_81	languages/arabic.cc	171;"	d	file:
s_0_81	languages/basque.cc	136;"	d	file:
s_0_81	languages/lithuanian.cc	132;"	d	file:
s_0_82	languages/arabic.cc	173;"	d	file:
s_0_82	languages/basque.cc	138;"	d	file:
s_0_82	languages/lithuanian.cc	133;"	d	file:
s_0_83	languages/arabic.cc	175;"	d	file:
s_0_83	languages/basque.cc	139;"	d	file:
s_0_83	languages/lithuanian.cc	135;"	d	file:
s_0_84	languages/arabic.cc	177;"	d	file:
s_0_84	languages/basque.cc	140;"	d	file:
s_0_84	languages/lithuanian.cc	136;"	d	file:
s_0_85	languages/arabic.cc	179;"	d	file:
s_0_85	languages/basque.cc	141;"	d	file:
s_0_85	languages/lithuanian.cc	138;"	d	file:
s_0_86	languages/arabic.cc	181;"	d	file:
s_0_86	languages/basque.cc	143;"	d	file:
s_0_86	languages/lithuanian.cc	139;"	d	file:
s_0_87	languages/arabic.cc	183;"	d	file:
s_0_87	languages/basque.cc	144;"	d	file:
s_0_87	languages/lithuanian.cc	141;"	d	file:
s_0_88	languages/arabic.cc	185;"	d	file:
s_0_88	languages/basque.cc	145;"	d	file:
s_0_88	languages/lithuanian.cc	143;"	d	file:
s_0_89	languages/arabic.cc	187;"	d	file:
s_0_89	languages/basque.cc	146;"	d	file:
s_0_89	languages/lithuanian.cc	144;"	d	file:
s_0_9	languages/arabic.cc	27;"	d	file:
s_0_9	languages/armenian.cc	26;"	d	file:
s_0_9	languages/basque.cc	26;"	d	file:
s_0_9	languages/catalan.cc	25;"	d	file:
s_0_9	languages/danish.cc	20;"	d	file:
s_0_9	languages/dutch.cc	25;"	d	file:
s_0_9	languages/finnish.cc	41;"	d	file:
s_0_9	languages/irish.cc	25;"	d	file:
s_0_9	languages/lithuanian.cc	22;"	d	file:
s_0_9	languages/nepali.cc	26;"	d	file:
s_0_9	languages/norwegian.cc	21;"	d	file:
s_0_9	languages/swedish.cc	19;"	d	file:
s_0_9	languages/tamil.cc	27;"	d	file:
s_0_9	languages/turkish.cc	25;"	d	file:
s_0_90	languages/arabic.cc	189;"	d	file:
s_0_90	languages/basque.cc	147;"	d	file:
s_0_90	languages/lithuanian.cc	146;"	d	file:
s_0_91	languages/arabic.cc	191;"	d	file:
s_0_91	languages/basque.cc	148;"	d	file:
s_0_91	languages/lithuanian.cc	148;"	d	file:
s_0_92	languages/arabic.cc	193;"	d	file:
s_0_92	languages/basque.cc	150;"	d	file:
s_0_92	languages/lithuanian.cc	150;"	d	file:
s_0_93	languages/arabic.cc	195;"	d	file:
s_0_93	languages/basque.cc	152;"	d	file:
s_0_93	languages/lithuanian.cc	151;"	d	file:
s_0_94	languages/arabic.cc	197;"	d	file:
s_0_94	languages/basque.cc	154;"	d	file:
s_0_94	languages/lithuanian.cc	152;"	d	file:
s_0_95	languages/arabic.cc	199;"	d	file:
s_0_95	languages/basque.cc	155;"	d	file:
s_0_95	languages/lithuanian.cc	154;"	d	file:
s_0_96	languages/arabic.cc	201;"	d	file:
s_0_96	languages/basque.cc	156;"	d	file:
s_0_96	languages/lithuanian.cc	155;"	d	file:
s_0_97	languages/arabic.cc	203;"	d	file:
s_0_97	languages/basque.cc	158;"	d	file:
s_0_97	languages/lithuanian.cc	156;"	d	file:
s_0_98	languages/arabic.cc	205;"	d	file:
s_0_98	languages/basque.cc	159;"	d	file:
s_0_98	languages/lithuanian.cc	157;"	d	file:
s_0_99	languages/arabic.cc	207;"	d	file:
s_0_99	languages/basque.cc	160;"	d	file:
s_0_99	languages/lithuanian.cc	158;"	d	file:
s_1	languages/arabic.cc	/^static const symbol s_1[] = { '1' };$/;"	v	file:
s_1	languages/basque.cc	/^static const symbol s_1[] = { 'a', 'r', 'a', 'b', 'e', 'r', 'a' };$/;"	v	file:
s_1	languages/catalan.cc	/^static const symbol s_1[] = { 'e' };$/;"	v	file:
s_1	languages/danish.cc	/^static const symbol s_1[] = { 'i', 'g' };$/;"	v	file:
s_1	languages/dutch.cc	/^static const symbol s_1[] = { 'e' };$/;"	v	file:
s_1	languages/earlyenglish.cc	/^static const symbol s_1[] = { 'i' };$/;"	v	file:
s_1	languages/english.cc	/^static const symbol s_1[] = { 'Y' };$/;"	v	file:
s_1	languages/finnish.cc	/^static const symbol s_1[] = { 'k', 's', 'i' };$/;"	v	file:
s_1	languages/french.cc	/^static const symbol s_1[] = { 'I' };$/;"	v	file:
s_1	languages/german.cc	/^static const symbol s_1[] = { 's', 's' };$/;"	v	file:
s_1	languages/german2.cc	/^static const symbol s_1[] = { 'Y' };$/;"	v	file:
s_1	languages/hungarian.cc	/^static const symbol s_1[] = { 'e' };$/;"	v	file:
s_1	languages/indonesian.cc	/^static const symbol s_1[] = { 's' };$/;"	v	file:
s_1	languages/irish.cc	/^static const symbol s_1[] = { 's' };$/;"	v	file:
s_1	languages/italian.cc	/^static const symbol s_1[] = { 0xC3, 0xA8 };$/;"	v	file:
s_1	languages/kraaij_pohlmann.cc	/^static const symbol s_1[] = { 'i', 'j' };$/;"	v	file:
s_1	languages/lithuanian.cc	/^static const symbol s_1[] = { 'u', 'o', 't', 0xC4, 0x97 };$/;"	v	file:
s_1	languages/lovins.cc	/^static const symbol s_1[] = { 'd', 'r' };$/;"	v	file:
s_1	languages/nepali.cc	/^static const symbol s_1[] = { 0xE0, 0xA5, 0x87 };$/;"	v	file:
s_1	languages/porter.cc	/^static const symbol s_1[] = { 'i' };$/;"	v	file:
s_1	languages/portuguese.cc	/^static const symbol s_1[] = { 'o', '~' };$/;"	v	file:
s_1	languages/romanian.cc	/^static const symbol s_1[] = { 'I' };$/;"	v	file:
s_1	languages/russian.cc	/^static const symbol s_1[] = { 0xD1, 0x8F };$/;"	v	file:
s_1	languages/spanish.cc	/^static const symbol s_1[] = { 'e' };$/;"	v	file:
s_1	languages/swedish.cc	/^static const symbol s_1[] = { 'f', 'u', 'l', 'l' };$/;"	v	file:
s_1	languages/tamil.cc	/^static const symbol s_1[] = { 0xE0, 0xAE, 0xB5, 0xE0, 0xAF, 0x8B };$/;"	v	file:
s_1	languages/turkish.cc	/^static const symbol s_1[] = { 0xC3, 0xB6 };$/;"	v	file:
s_10	languages/arabic.cc	/^static const symbol s_10[] = { 0xD8, 0xA1 };$/;"	v	file:
s_10	languages/basque.cc	/^static const symbol s_10[] = { 'z' };$/;"	v	file:
s_10	languages/dutch.cc	/^static const symbol s_10[] = { 'g', 'e', 'm' };$/;"	v	file:
s_10	languages/earlyenglish.cc	/^static const symbol s_10[] = { 'e', 'n', 't' };$/;"	v	file:
s_10	languages/english.cc	/^static const symbol s_10[] = { 'e', 'n', 'c', 'e' };$/;"	v	file:
s_10	languages/french.cc	/^static const symbol s_10[] = { 'l', 'o', 'g' };$/;"	v	file:
s_10	languages/german.cc	/^static const symbol s_10[] = { 'e', 'r' };$/;"	v	file:
s_10	languages/german2.cc	/^static const symbol s_10[] = { 'n', 'i', 's' };$/;"	v	file:
s_10	languages/hungarian.cc	/^static const symbol s_10[] = { 'a' };$/;"	v	file:
s_10	languages/irish.cc	/^static const symbol s_10[] = { 'g', 'i', 'n' };$/;"	v	file:
s_10	languages/italian.cc	/^static const symbol s_10[] = { 'e' };$/;"	v	file:
s_10	languages/kraaij_pohlmann.cc	/^static const symbol s_10[] = { 'n', 'd' };$/;"	v	file:
s_10	languages/lithuanian.cc	/^static const symbol s_10[] = { 'g' };$/;"	v	file:
s_10	languages/lovins.cc	/^static const symbol s_10[] = { 'i', 's', 't', 'e', 'r' };$/;"	v	file:
s_10	languages/porter.cc	/^static const symbol s_10[] = { 'e', 'n', 't' };$/;"	v	file:
s_10	languages/portuguese.cc	/^static const symbol s_10[] = { 'c' };$/;"	v	file:
s_10	languages/romanian.cc	/^static const symbol s_10[] = { 'a', 0xC5, 0xA3, 'i' };$/;"	v	file:
s_10	languages/spanish.cc	/^static const symbol s_10[] = { 'i', 'c' };$/;"	v	file:
s_10	languages/tamil.cc	/^static const symbol s_10[] = { 0xE0, 0xAE, 0xB5, 0xE0, 0xAF, 0x82 };$/;"	v	file:
s_10	languages/turkish.cc	/^static const symbol s_10[] = { 0xC4, 0xB1 };$/;"	v	file:
s_100	languages/tamil.cc	/^static const symbol s_100[] = { 0xE0, 0xAF, 0x80 };$/;"	v	file:
s_101	languages/tamil.cc	/^static const symbol s_101[] = { 0xE0, 0xAE, 0xBF };$/;"	v	file:
s_102	languages/tamil.cc	/^static const symbol s_102[] = { 0xE0, 0xAE, 0xBF, 0xE0, 0xAE, 0xA9, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_103	languages/tamil.cc	/^static const symbol s_103[] = { 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_104	languages/tamil.cc	/^static const symbol s_104[] = { 0xE0, 0xAE, 0xAE, 0xE0, 0xAE, 0xBE, 0xE0, 0xAE, 0xB0, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_105	languages/tamil.cc	/^static const symbol s_105[] = { 0xE0, 0xAE, 0xAE, 0xE0, 0xAE, 0xBF, 0xE0, 0xAE, 0xA9, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_106	languages/tamil.cc	/^static const symbol s_106[] = { 0xE0, 0xAE, 0xA9, 0xE0, 0xAE, 0xA9, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_107	languages/tamil.cc	/^static const symbol s_107[] = { 0xE0, 0xAE, 0xA9, 0xE0, 0xAE, 0xBE, 0xE0, 0xAE, 0xA9, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_108	languages/tamil.cc	/^static const symbol s_108[] = { 0xE0, 0xAE, 0xA9, 0xE0, 0xAE, 0xBE, 0xE0, 0xAE, 0xB3, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_109	languages/tamil.cc	/^static const symbol s_109[] = { 0xE0, 0xAE, 0xA9, 0xE0, 0xAE, 0xBE, 0xE0, 0xAE, 0xB0, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_10_0	languages/arabic.cc	398;"	d	file:
s_10_0	languages/english.cc	176;"	d	file:
s_10_0	languages/hungarian.cc	201;"	d	file:
s_10_0	languages/tamil.cc	120;"	d	file:
s_10_0	languages/turkish.cc	79;"	d	file:
s_10_1	languages/arabic.cc	399;"	d	file:
s_10_1	languages/english.cc	178;"	d	file:
s_10_1	languages/hungarian.cc	202;"	d	file:
s_10_1	languages/tamil.cc	122;"	d	file:
s_10_1	languages/turkish.cc	81;"	d	file:
s_10_10	languages/english.cc	196;"	d	file:
s_10_10	languages/hungarian.cc	218;"	d	file:
s_10_11	languages/english.cc	198;"	d	file:
s_10_11	languages/hungarian.cc	220;"	d	file:
s_10_12	languages/english.cc	200;"	d	file:
s_10_12	languages/hungarian.cc	221;"	d	file:
s_10_13	languages/english.cc	202;"	d	file:
s_10_13	languages/hungarian.cc	223;"	d	file:
s_10_14	languages/english.cc	204;"	d	file:
s_10_14	languages/hungarian.cc	225;"	d	file:
s_10_15	languages/english.cc	206;"	d	file:
s_10_15	languages/hungarian.cc	227;"	d	file:
s_10_16	languages/english.cc	208;"	d	file:
s_10_16	languages/hungarian.cc	229;"	d	file:
s_10_17	languages/english.cc	210;"	d	file:
s_10_17	languages/hungarian.cc	230;"	d	file:
s_10_18	languages/hungarian.cc	231;"	d	file:
s_10_19	languages/hungarian.cc	233;"	d	file:
s_10_2	languages/arabic.cc	400;"	d	file:
s_10_2	languages/english.cc	180;"	d	file:
s_10_2	languages/hungarian.cc	204;"	d	file:
s_10_2	languages/tamil.cc	124;"	d	file:
s_10_20	languages/hungarian.cc	234;"	d	file:
s_10_21	languages/hungarian.cc	235;"	d	file:
s_10_22	languages/hungarian.cc	237;"	d	file:
s_10_23	languages/hungarian.cc	238;"	d	file:
s_10_24	languages/hungarian.cc	240;"	d	file:
s_10_25	languages/hungarian.cc	242;"	d	file:
s_10_26	languages/hungarian.cc	244;"	d	file:
s_10_27	languages/hungarian.cc	246;"	d	file:
s_10_28	languages/hungarian.cc	248;"	d	file:
s_10_29	languages/hungarian.cc	249;"	d	file:
s_10_3	languages/arabic.cc	401;"	d	file:
s_10_3	languages/english.cc	182;"	d	file:
s_10_3	languages/hungarian.cc	205;"	d	file:
s_10_3	languages/tamil.cc	126;"	d	file:
s_10_30	languages/hungarian.cc	250;"	d	file:
s_10_4	languages/arabic.cc	403;"	d	file:
s_10_4	languages/english.cc	184;"	d	file:
s_10_4	languages/hungarian.cc	207;"	d	file:
s_10_4	languages/tamil.cc	128;"	d	file:
s_10_5	languages/arabic.cc	404;"	d	file:
s_10_5	languages/english.cc	186;"	d	file:
s_10_5	languages/hungarian.cc	209;"	d	file:
s_10_5	languages/tamil.cc	130;"	d	file:
s_10_6	languages/arabic.cc	406;"	d	file:
s_10_6	languages/english.cc	188;"	d	file:
s_10_6	languages/hungarian.cc	211;"	d	file:
s_10_6	languages/tamil.cc	132;"	d	file:
s_10_7	languages/arabic.cc	408;"	d	file:
s_10_7	languages/english.cc	190;"	d	file:
s_10_7	languages/hungarian.cc	213;"	d	file:
s_10_7	languages/tamil.cc	134;"	d	file:
s_10_8	languages/arabic.cc	410;"	d	file:
s_10_8	languages/english.cc	192;"	d	file:
s_10_8	languages/hungarian.cc	215;"	d	file:
s_10_9	languages/arabic.cc	412;"	d	file:
s_10_9	languages/english.cc	194;"	d	file:
s_10_9	languages/hungarian.cc	217;"	d	file:
s_11	languages/arabic.cc	/^static const symbol s_11[] = { 0xD8, 0xA3 };$/;"	v	file:
s_11	languages/dutch.cc	/^static const symbol s_11[] = { 'h', 'e', 'i', 'd' };$/;"	v	file:
s_11	languages/earlyenglish.cc	/^static const symbol s_11[] = { 'e' };$/;"	v	file:
s_11	languages/english.cc	/^static const symbol s_11[] = { 'a', 'n', 'c', 'e' };$/;"	v	file:
s_11	languages/french.cc	/^static const symbol s_11[] = { 'u' };$/;"	v	file:
s_11	languages/german.cc	/^static const symbol s_11[] = { 'e', 'n' };$/;"	v	file:
s_11	languages/german2.cc	/^static const symbol s_11[] = { 'i', 'g' };$/;"	v	file:
s_11	languages/hungarian.cc	/^static const symbol s_11[] = { 'e' };$/;"	v	file:
s_11	languages/irish.cc	/^static const symbol s_11[] = { 'g', 'r', 'a', 'f' };$/;"	v	file:
s_11	languages/italian.cc	/^static const symbol s_11[] = { 'i', 'c' };$/;"	v	file:
s_11	languages/kraaij_pohlmann.cc	/^static const symbol s_11[] = { 'n', 'd' };$/;"	v	file:
s_11	languages/lovins.cc	/^static const symbol s_11[] = { 'm', 'e', 't', 'e', 'r' };$/;"	v	file:
s_11	languages/porter.cc	/^static const symbol s_11[] = { 'e' };$/;"	v	file:
s_11	languages/romanian.cc	/^static const symbol s_11[] = { 'a', 'b', 'i', 'l' };$/;"	v	file:
s_11	languages/spanish.cc	/^static const symbol s_11[] = { 'l', 'o', 'g' };$/;"	v	file:
s_11	languages/tamil.cc	/^static const symbol s_11[] = { 0xE0, 0xAE, 0x8A };$/;"	v	file:
s_11	languages/turkish.cc	/^static const symbol s_11[] = { 'i' };$/;"	v	file:
s_110	languages/tamil.cc	/^static const symbol s_110[] = { 0xE0, 0xAE, 0xB5, 0xE0, 0xAE, 0xA9, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_111	languages/tamil.cc	/^static const symbol s_111[] = { 0xE0, 0xAE, 0xA9, 0xE0, 0xAE, 0xB3, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_112	languages/tamil.cc	/^static const symbol s_112[] = { 0xE0, 0xAE, 0xB5, 0xE0, 0xAE, 0xB3, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_113	languages/tamil.cc	/^static const symbol s_113[] = { 0xE0, 0xAE, 0xA9, 0xE0, 0xAE, 0xB0, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_114	languages/tamil.cc	/^static const symbol s_114[] = { 0xE0, 0xAE, 0xB5, 0xE0, 0xAE, 0xB0, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_115	languages/tamil.cc	/^static const symbol s_115[] = { 0xE0, 0xAE, 0xA9 };$/;"	v	file:
s_116	languages/tamil.cc	/^static const symbol s_116[] = { 0xE0, 0xAE, 0xAA };$/;"	v	file:
s_117	languages/tamil.cc	/^static const symbol s_117[] = { 0xE0, 0xAE, 0x95 };$/;"	v	file:
s_118	languages/tamil.cc	/^static const symbol s_118[] = { 0xE0, 0xAE, 0xA4 };$/;"	v	file:
s_119	languages/tamil.cc	/^static const symbol s_119[] = { 0xE0, 0xAE, 0xAF };$/;"	v	file:
s_11_0	languages/arabic.cc	414;"	d	file:
s_11_0	languages/hungarian.cc	251;"	d	file:
s_11_0	languages/tamil.cc	136;"	d	file:
s_11_0	languages/turkish.cc	83;"	d	file:
s_11_1	languages/hungarian.cc	252;"	d	file:
s_11_1	languages/tamil.cc	138;"	d	file:
s_11_1	languages/turkish.cc	85;"	d	file:
s_11_10	languages/hungarian.cc	265;"	d	file:
s_11_11	languages/hungarian.cc	266;"	d	file:
s_11_12	languages/hungarian.cc	267;"	d	file:
s_11_13	languages/hungarian.cc	268;"	d	file:
s_11_14	languages/hungarian.cc	269;"	d	file:
s_11_15	languages/hungarian.cc	270;"	d	file:
s_11_16	languages/hungarian.cc	271;"	d	file:
s_11_17	languages/hungarian.cc	273;"	d	file:
s_11_18	languages/hungarian.cc	275;"	d	file:
s_11_19	languages/hungarian.cc	276;"	d	file:
s_11_2	languages/hungarian.cc	253;"	d	file:
s_11_2	languages/tamil.cc	140;"	d	file:
s_11_20	languages/hungarian.cc	277;"	d	file:
s_11_21	languages/hungarian.cc	279;"	d	file:
s_11_22	languages/hungarian.cc	280;"	d	file:
s_11_23	languages/hungarian.cc	282;"	d	file:
s_11_24	languages/hungarian.cc	284;"	d	file:
s_11_25	languages/hungarian.cc	286;"	d	file:
s_11_26	languages/hungarian.cc	287;"	d	file:
s_11_27	languages/hungarian.cc	288;"	d	file:
s_11_28	languages/hungarian.cc	290;"	d	file:
s_11_29	languages/hungarian.cc	291;"	d	file:
s_11_3	languages/hungarian.cc	255;"	d	file:
s_11_30	languages/hungarian.cc	293;"	d	file:
s_11_31	languages/hungarian.cc	295;"	d	file:
s_11_32	languages/hungarian.cc	297;"	d	file:
s_11_33	languages/hungarian.cc	298;"	d	file:
s_11_34	languages/hungarian.cc	300;"	d	file:
s_11_35	languages/hungarian.cc	302;"	d	file:
s_11_36	languages/hungarian.cc	303;"	d	file:
s_11_37	languages/hungarian.cc	304;"	d	file:
s_11_38	languages/hungarian.cc	306;"	d	file:
s_11_39	languages/hungarian.cc	307;"	d	file:
s_11_4	languages/hungarian.cc	256;"	d	file:
s_11_40	languages/hungarian.cc	309;"	d	file:
s_11_41	languages/hungarian.cc	311;"	d	file:
s_11_5	languages/hungarian.cc	258;"	d	file:
s_11_6	languages/hungarian.cc	260;"	d	file:
s_11_7	languages/hungarian.cc	262;"	d	file:
s_11_8	languages/hungarian.cc	263;"	d	file:
s_11_9	languages/hungarian.cc	264;"	d	file:
s_12	languages/arabic.cc	/^static const symbol s_12[] = { 0xD8, 0xA5 };$/;"	v	file:
s_12	languages/dutch.cc	/^static const symbol s_12[] = { 'h', 'e', 'i', 'd' };$/;"	v	file:
s_12	languages/earlyenglish.cc	/^static const symbol s_12[] = { 'i', 'z', 'e' };$/;"	v	file:
s_12	languages/english.cc	/^static const symbol s_12[] = { 'a', 'b', 'l', 'e' };$/;"	v	file:
s_12	languages/french.cc	/^static const symbol s_12[] = { 'e', 'n', 't' };$/;"	v	file:
s_12	languages/german2.cc	/^static const symbol s_12[] = { 'e', 'r' };$/;"	v	file:
s_12	languages/hungarian.cc	/^static const symbol s_12[] = { 'a' };$/;"	v	file:
s_12	languages/irish.cc	/^static const symbol s_12[] = { 'p', 'a', 'i', 't', 'e' };$/;"	v	file:
s_12	languages/italian.cc	/^static const symbol s_12[] = { 'l', 'o', 'g' };$/;"	v	file:
s_12	languages/kraaij_pohlmann.cc	/^static const symbol s_12[] = { '\\'', 't' };$/;"	v	file:
s_12	languages/lovins.cc	/^static const symbol s_12[] = { 'o', 'l', 'u', 't' };$/;"	v	file:
s_12	languages/porter.cc	/^static const symbol s_12[] = { 'i', 'z', 'e' };$/;"	v	file:
s_12	languages/romanian.cc	/^static const symbol s_12[] = { 'i', 'b', 'i', 'l' };$/;"	v	file:
s_12	languages/spanish.cc	/^static const symbol s_12[] = { 'u' };$/;"	v	file:
s_12	languages/tamil.cc	/^static const symbol s_12[] = { 0xE0, 0xAE, 0x8E };$/;"	v	file:
s_12	languages/turkish.cc	/^static const symbol s_12[] = { 'u' };$/;"	v	file:
s_120	languages/tamil.cc	/^static const symbol s_120[] = { 0xE0, 0xAE, 0xAA, 0xE0, 0xAE, 0xA9, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_121	languages/tamil.cc	/^static const symbol s_121[] = { 0xE0, 0xAE, 0xAA, 0xE0, 0xAE, 0xB3, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_122	languages/tamil.cc	/^static const symbol s_122[] = { 0xE0, 0xAE, 0xAA, 0xE0, 0xAE, 0xB0, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_123	languages/tamil.cc	/^static const symbol s_123[] = { 0xE0, 0xAE, 0xA4, 0xE0, 0xAF, 0x81 };$/;"	v	file:
s_124	languages/tamil.cc	/^static const symbol s_124[] = { 0xE0, 0xAE, 0xBF, 0xE0, 0xAE, 0xB1, 0xE0, 0xAF, 0x8D, 0xE0, 0xAE, 0xB1, 0xE0, 0xAF, 0x81 };$/;"	v	file:
s_125	languages/tamil.cc	/^static const symbol s_125[] = { 0xE0, 0xAE, 0xAA, 0xE0, 0xAE, 0xAE, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_126	languages/tamil.cc	/^static const symbol s_126[] = { 0xE0, 0xAE, 0xA9, 0xE0, 0xAE, 0xAE, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_127	languages/tamil.cc	/^static const symbol s_127[] = { 0xE0, 0xAE, 0xA4, 0xE0, 0xAF, 0x81, 0xE0, 0xAE, 0xAE, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_128	languages/tamil.cc	/^static const symbol s_128[] = { 0xE0, 0xAE, 0xB1, 0xE0, 0xAF, 0x81, 0xE0, 0xAE, 0xAE, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_129	languages/tamil.cc	/^static const symbol s_129[] = { 0xE0, 0xAE, 0x95, 0xE0, 0xAF, 0x81, 0xE0, 0xAE, 0xAE, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_12_0	languages/arabic.cc	416;"	d	file:
s_12_0	languages/tamil.cc	142;"	d	file:
s_12_0	languages/turkish.cc	87;"	d	file:
s_12_1	languages/arabic.cc	418;"	d	file:
s_12_1	languages/tamil.cc	144;"	d	file:
s_12_1	languages/turkish.cc	89;"	d	file:
s_12_2	languages/arabic.cc	420;"	d	file:
s_12_2	languages/tamil.cc	146;"	d	file:
s_12_2	languages/turkish.cc	91;"	d	file:
s_12_3	languages/tamil.cc	148;"	d	file:
s_12_3	languages/turkish.cc	93;"	d	file:
s_12_4	languages/tamil.cc	150;"	d	file:
s_12_5	languages/tamil.cc	152;"	d	file:
s_12_6	languages/tamil.cc	154;"	d	file:
s_12_7	languages/tamil.cc	156;"	d	file:
s_12_8	languages/tamil.cc	158;"	d	file:
s_12_9	languages/tamil.cc	160;"	d	file:
s_13	languages/arabic.cc	/^static const symbol s_13[] = { 0xD8, 0xA6 };$/;"	v	file:
s_13	languages/dutch.cc	/^static const symbol s_13[] = { 'e', 'n' };$/;"	v	file:
s_13	languages/earlyenglish.cc	/^static const symbol s_13[] = { 'a', 't', 'e' };$/;"	v	file:
s_13	languages/english.cc	/^static const symbol s_13[] = { 'e', 'n', 't' };$/;"	v	file:
s_13	languages/french.cc	/^static const symbol s_13[] = { 'a', 't' };$/;"	v	file:
s_13	languages/german2.cc	/^static const symbol s_13[] = { 'e', 'n' };$/;"	v	file:
s_13	languages/hungarian.cc	/^static const symbol s_13[] = { 'e' };$/;"	v	file:
s_13	languages/irish.cc	/^static const symbol s_13[] = { 0xC3, 0xB3, 'i', 'd' };$/;"	v	file:
s_13	languages/italian.cc	/^static const symbol s_13[] = { 'u' };$/;"	v	file:
s_13	languages/kraaij_pohlmann.cc	/^static const symbol s_13[] = { 'e', 't' };$/;"	v	file:
s_13	languages/lovins.cc	/^static const symbol s_13[] = { 'l' };$/;"	v	file:
s_13	languages/porter.cc	/^static const symbol s_13[] = { 'a', 't', 'e' };$/;"	v	file:
s_13	languages/romanian.cc	/^static const symbol s_13[] = { 'i', 'v' };$/;"	v	file:
s_13	languages/spanish.cc	/^static const symbol s_13[] = { 'e', 'n', 't', 'e' };$/;"	v	file:
s_13	languages/tamil.cc	/^static const symbol s_13[] = { 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_13	languages/turkish.cc	/^static const symbol s_13[] = { 0xC3, 0xB6 };$/;"	v	file:
s_130	languages/tamil.cc	/^static const symbol s_130[] = { 0xE0, 0xAE, 0xA9, 0xE0, 0xAF, 0x86, 0xE0, 0xAE, 0xA9, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_131	languages/tamil.cc	/^static const symbol s_131[] = { 0xE0, 0xAE, 0xA9, 0xE0, 0xAF, 0x88 };$/;"	v	file:
s_132	languages/tamil.cc	/^static const symbol s_132[] = { 0xE0, 0xAE, 0xB5, 0xE0, 0xAF, 0x88 };$/;"	v	file:
s_133	languages/tamil.cc	/^static const symbol s_133[] = { 0xE0, 0xAE, 0xBE, 0xE0, 0xAE, 0xA9, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_134	languages/tamil.cc	/^static const symbol s_134[] = { 0xE0, 0xAE, 0x9A };$/;"	v	file:
s_135	languages/tamil.cc	/^static const symbol s_135[] = { 0xE0, 0xAE, 0xBE, 0xE0, 0xAE, 0xB3, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_136	languages/tamil.cc	/^static const symbol s_136[] = { 0xE0, 0xAE, 0xBE, 0xE0, 0xAE, 0xB0, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_137	languages/tamil.cc	/^static const symbol s_137[] = { 0xE0, 0xAF, 0x87, 0xE0, 0xAE, 0xA9, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_138	languages/tamil.cc	/^static const symbol s_138[] = { 0xE0, 0xAE, 0xBE };$/;"	v	file:
s_139	languages/tamil.cc	/^static const symbol s_139[] = { 0xE0, 0xAE, 0xBE, 0xE0, 0xAE, 0xAE, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_13_0	languages/arabic.cc	422;"	d	file:
s_13_0	languages/tamil.cc	162;"	d	file:
s_13_0	languages/turkish.cc	95;"	d	file:
s_13_1	languages/tamil.cc	164;"	d	file:
s_13_1	languages/turkish.cc	97;"	d	file:
s_13_2	languages/tamil.cc	166;"	d	file:
s_13_2	languages/turkish.cc	99;"	d	file:
s_13_3	languages/tamil.cc	168;"	d	file:
s_13_3	languages/turkish.cc	101;"	d	file:
s_13_4	languages/tamil.cc	170;"	d	file:
s_13_5	languages/tamil.cc	172;"	d	file:
s_14	languages/arabic.cc	/^static const symbol s_14[] = { 0xD8, 0xA2 };$/;"	v	file:
s_14	languages/dutch.cc	/^static const symbol s_14[] = { 'i', 'g' };$/;"	v	file:
s_14	languages/earlyenglish.cc	/^static const symbol s_14[] = { 'a', 'l' };$/;"	v	file:
s_14	languages/english.cc	/^static const symbol s_14[] = { 'i', 'z', 'e' };$/;"	v	file:
s_14	languages/french.cc	/^static const symbol s_14[] = { 'e', 'u', 'x' };$/;"	v	file:
s_14	languages/italian.cc	/^static const symbol s_14[] = { 'e', 'n', 't', 'e' };$/;"	v	file:
s_14	languages/kraaij_pohlmann.cc	/^static const symbol s_14[] = { 'r', 'n', 't' };$/;"	v	file:
s_14	languages/lovins.cc	/^static const symbol s_14[] = { 'b', 'i', 'c' };$/;"	v	file:
s_14	languages/porter.cc	/^static const symbol s_14[] = { 'a', 'l' };$/;"	v	file:
s_14	languages/romanian.cc	/^static const symbol s_14[] = { 'i', 'c' };$/;"	v	file:
s_14	languages/spanish.cc	/^static const symbol s_14[] = { 'a', 't' };$/;"	v	file:
s_14	languages/tamil.cc	/^static const symbol s_14[] = { 0xE0, 0xAE, 0xAF, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_14	languages/turkish.cc	/^static const symbol s_14[] = { 0xC3, 0xBC };$/;"	v	file:
s_140	languages/tamil.cc	/^static const symbol s_140[] = { 0xE0, 0xAF, 0x86, 0xE0, 0xAE, 0xAE, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_141	languages/tamil.cc	/^static const symbol s_141[] = { 0xE0, 0xAF, 0x87, 0xE0, 0xAE, 0xAE, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_142	languages/tamil.cc	/^static const symbol s_142[] = { 0xE0, 0xAF, 0x8B, 0xE0, 0xAE, 0xAE, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_143	languages/tamil.cc	/^static const symbol s_143[] = { 0xE0, 0xAE, 0x95, 0xE0, 0xAF, 0x81, 0xE0, 0xAE, 0xAE, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_144	languages/tamil.cc	/^static const symbol s_144[] = { 0xE0, 0xAE, 0xA4, 0xE0, 0xAF, 0x81, 0xE0, 0xAE, 0xAE, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_145	languages/tamil.cc	/^static const symbol s_145[] = { 0xE0, 0xAE, 0x9F, 0xE0, 0xAF, 0x81, 0xE0, 0xAE, 0xAE, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_146	languages/tamil.cc	/^static const symbol s_146[] = { 0xE0, 0xAE, 0xB1, 0xE0, 0xAF, 0x81, 0xE0, 0xAE, 0xAE, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_147	languages/tamil.cc	/^static const symbol s_147[] = { 0xE0, 0xAE, 0xBE, 0xE0, 0xAE, 0xAF, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_148	languages/tamil.cc	/^static const symbol s_148[] = { 0xE0, 0xAE, 0xA9, 0xE0, 0xAF, 0x86, 0xE0, 0xAE, 0xA9, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_149	languages/tamil.cc	/^static const symbol s_149[] = { 0xE0, 0xAE, 0xA9, 0xE0, 0xAE, 0xBF, 0xE0, 0xAE, 0xB0, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_14_0	languages/arabic.cc	424;"	d	file:
s_14_0	languages/tamil.cc	174;"	d	file:
s_14_0	languages/turkish.cc	103;"	d	file:
s_14_1	languages/tamil.cc	176;"	d	file:
s_14_1	languages/turkish.cc	105;"	d	file:
s_14_2	languages/tamil.cc	178;"	d	file:
s_14_2	languages/turkish.cc	107;"	d	file:
s_14_3	languages/turkish.cc	109;"	d	file:
s_15	languages/arabic.cc	/^static const symbol s_15[] = { 0xD8, 0xA4 };$/;"	v	file:
s_15	languages/earlyenglish.cc	/^static const symbol s_15[] = { 'f', 'u', 'l' };$/;"	v	file:
s_15	languages/english.cc	/^static const symbol s_15[] = { 'a', 't', 'e' };$/;"	v	file:
s_15	languages/french.cc	/^static const symbol s_15[] = { 'i' };$/;"	v	file:
s_15	languages/italian.cc	/^static const symbol s_15[] = { 'a', 't' };$/;"	v	file:
s_15	languages/kraaij_pohlmann.cc	/^static const symbol s_15[] = { 'r', 'n' };$/;"	v	file:
s_15	languages/lovins.cc	/^static const symbol s_15[] = { 'd', 'i', 'c' };$/;"	v	file:
s_15	languages/porter.cc	/^static const symbol s_15[] = { 'f', 'u', 'l' };$/;"	v	file:
s_15	languages/romanian.cc	/^static const symbol s_15[] = { 'a', 't' };$/;"	v	file:
s_15	languages/spanish.cc	/^static const symbol s_15[] = { 'a', 't' };$/;"	v	file:
s_15	languages/tamil.cc	/^static const symbol s_15[] = { 0xE0, 0xAE, 0x9F, 0xE0, 0xAF, 0x8D, 0xE0, 0xAE, 0xAA, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_15	languages/turkish.cc	/^static const symbol s_15[] = { 0xC3, 0xBC };$/;"	v	file:
s_150	languages/tamil.cc	/^static const symbol s_150[] = { 0xE0, 0xAF, 0x80, 0xE0, 0xAE, 0xB0, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_151	languages/tamil.cc	/^static const symbol s_151[] = { 0xE0, 0xAF, 0x80, 0xE0, 0xAE, 0xAF, 0xE0, 0xAE, 0xB0, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_152	languages/tamil.cc	/^static const symbol s_152[] = { 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_153	languages/tamil.cc	/^static const symbol s_153[] = { 0xE0, 0xAE, 0x95, 0xE0, 0xAF, 0x81 };$/;"	v	file:
s_154	languages/tamil.cc	/^static const symbol s_154[] = { 0xE0, 0xAE, 0xA4, 0xE0, 0xAF, 0x81 };$/;"	v	file:
s_155	languages/tamil.cc	/^static const symbol s_155[] = { 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_15_0	languages/arabic.cc	426;"	d	file:
s_15_0	languages/tamil.cc	180;"	d	file:
s_15_0	languages/turkish.cc	111;"	d	file:
s_15_1	languages/tamil.cc	182;"	d	file:
s_15_1	languages/turkish.cc	113;"	d	file:
s_15_2	languages/turkish.cc	115;"	d	file:
s_15_3	languages/turkish.cc	117;"	d	file:
s_16	languages/arabic.cc	/^static const symbol s_16[] = { 0xD8, 0xA7 };$/;"	v	file:
s_16	languages/earlyenglish.cc	/^static const symbol s_16[] = { 'o', 'u', 's' };$/;"	v	file:
s_16	languages/english.cc	/^static const symbol s_16[] = { 'a', 'l' };$/;"	v	file:
s_16	languages/french.cc	/^static const symbol s_16[] = { 'a', 'b', 'l' };$/;"	v	file:
s_16	languages/italian.cc	/^static const symbol s_16[] = { 'a', 't' };$/;"	v	file:
s_16	languages/kraaij_pohlmann.cc	/^static const symbol s_16[] = { 'i', 'n', 'k' };$/;"	v	file:
s_16	languages/lovins.cc	/^static const symbol s_16[] = { 'p', 'i', 'c' };$/;"	v	file:
s_16	languages/porter.cc	/^static const symbol s_16[] = { 'o', 'u', 's' };$/;"	v	file:
s_16	languages/romanian.cc	/^static const symbol s_16[] = { 'i', 't' };$/;"	v	file:
s_16	languages/tamil.cc	/^static const symbol s_16[] = { 0xE0, 0xAE, 0x9F, 0xE0, 0xAF, 0x8D, 0xE0, 0xAE, 0x95, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_16	languages/turkish.cc	/^static const symbol s_16[] = { 'a', 'd' };$/;"	v	file:
s_16_0	languages/arabic.cc	428;"	d	file:
s_16_0	languages/tamil.cc	184;"	d	file:
s_16_0	languages/turkish.cc	119;"	d	file:
s_16_1	languages/tamil.cc	186;"	d	file:
s_16_1	languages/turkish.cc	121;"	d	file:
s_16_2	languages/tamil.cc	188;"	d	file:
s_16_3	languages/tamil.cc	190;"	d	file:
s_16_4	languages/tamil.cc	192;"	d	file:
s_16_5	languages/tamil.cc	194;"	d	file:
s_16_6	languages/tamil.cc	196;"	d	file:
s_16_7	languages/tamil.cc	198;"	d	file:
s_17	languages/arabic.cc	/^static const symbol s_17[] = { 0xD8, 0xA8 };$/;"	v	file:
s_17	languages/earlyenglish.cc	/^static const symbol s_17[] = { 'i', 'v', 'e' };$/;"	v	file:
s_17	languages/english.cc	/^static const symbol s_17[] = { 'f', 'u', 'l' };$/;"	v	file:
s_17	languages/french.cc	/^static const symbol s_17[] = { 'i', 'q', 'U' };$/;"	v	file:
s_17	languages/italian.cc	/^static const symbol s_17[] = { 'i', 'c' };$/;"	v	file:
s_17	languages/kraaij_pohlmann.cc	/^static const symbol s_17[] = { 'i', 'n', 'g' };$/;"	v	file:
s_17	languages/lovins.cc	/^static const symbol s_17[] = { 't', 'i', 'c' };$/;"	v	file:
s_17	languages/porter.cc	/^static const symbol s_17[] = { 'i', 'v', 'e' };$/;"	v	file:
s_17	languages/romanian.cc	/^static const symbol s_17[] = { 0xC5, 0xA3 };$/;"	v	file:
s_17	languages/tamil.cc	/^static const symbol s_17[] = { 0xE0, 0xAE, 0xB3, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_17	languages/turkish.cc	/^static const symbol s_17[] = { 's', 'o', 'y' };$/;"	v	file:
s_17_0	languages/arabic.cc	430;"	d	file:
s_17_0	languages/tamil.cc	200;"	d	file:
s_17_0	languages/turkish.cc	123;"	d	file:
s_17_1	languages/arabic.cc	431;"	d	file:
s_17_1	languages/tamil.cc	202;"	d	file:
s_17_1	languages/turkish.cc	125;"	d	file:
s_17_10	languages/arabic.cc	446;"	d	file:
s_17_10	languages/tamil.cc	218;"	d	file:
s_17_11	languages/arabic.cc	448;"	d	file:
s_17_11	languages/tamil.cc	220;"	d	file:
s_17_12	languages/tamil.cc	221;"	d	file:
s_17_2	languages/arabic.cc	432;"	d	file:
s_17_2	languages/tamil.cc	204;"	d	file:
s_17_2	languages/turkish.cc	127;"	d	file:
s_17_3	languages/arabic.cc	433;"	d	file:
s_17_3	languages/tamil.cc	206;"	d	file:
s_17_3	languages/turkish.cc	129;"	d	file:
s_17_4	languages/arabic.cc	435;"	d	file:
s_17_4	languages/tamil.cc	208;"	d	file:
s_17_5	languages/arabic.cc	437;"	d	file:
s_17_5	languages/tamil.cc	210;"	d	file:
s_17_6	languages/arabic.cc	438;"	d	file:
s_17_6	languages/tamil.cc	212;"	d	file:
s_17_7	languages/arabic.cc	440;"	d	file:
s_17_7	languages/tamil.cc	213;"	d	file:
s_17_8	languages/arabic.cc	442;"	d	file:
s_17_8	languages/tamil.cc	215;"	d	file:
s_17_9	languages/arabic.cc	444;"	d	file:
s_17_9	languages/tamil.cc	216;"	d	file:
s_18	languages/arabic.cc	/^static const symbol s_18[] = { 0xD8, 0xA9 };$/;"	v	file:
s_18	languages/earlyenglish.cc	/^static const symbol s_18[] = { 'b', 'l', 'e' };$/;"	v	file:
s_18	languages/english.cc	/^static const symbol s_18[] = { 'o', 'u', 's' };$/;"	v	file:
s_18	languages/french.cc	/^static const symbol s_18[] = { 'a', 't' };$/;"	v	file:
s_18	languages/kraaij_pohlmann.cc	/^static const symbol s_18[] = { 'm', 'p' };$/;"	v	file:
s_18	languages/lovins.cc	/^static const symbol s_18[] = { 'a', 'c' };$/;"	v	file:
s_18	languages/porter.cc	/^static const symbol s_18[] = { 'b', 'l', 'e' };$/;"	v	file:
s_18	languages/romanian.cc	/^static const symbol s_18[] = { 't' };$/;"	v	file:
s_18	languages/tamil.cc	/^static const symbol s_18[] = { 0xE0, 0xAE, 0xA9, 0xE0, 0xAF, 0x8D, 0xE0, 0xAE, 0xB1, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_18_0	languages/arabic.cc	450;"	d	file:
s_18_0	languages/tamil.cc	223;"	d	file:
s_18_0	languages/turkish.cc	131;"	d	file:
s_18_1	languages/arabic.cc	451;"	d	file:
s_18_1	languages/tamil.cc	225;"	d	file:
s_18_1	languages/turkish.cc	133;"	d	file:
s_18_10	languages/arabic.cc	467;"	d	file:
s_18_2	languages/arabic.cc	453;"	d	file:
s_18_2	languages/tamil.cc	227;"	d	file:
s_18_2	languages/turkish.cc	135;"	d	file:
s_18_3	languages/arabic.cc	455;"	d	file:
s_18_3	languages/tamil.cc	229;"	d	file:
s_18_3	languages/turkish.cc	137;"	d	file:
s_18_4	languages/arabic.cc	457;"	d	file:
s_18_4	languages/tamil.cc	231;"	d	file:
s_18_4	languages/turkish.cc	139;"	d	file:
s_18_5	languages/arabic.cc	459;"	d	file:
s_18_5	languages/tamil.cc	233;"	d	file:
s_18_5	languages/turkish.cc	141;"	d	file:
s_18_6	languages/arabic.cc	460;"	d	file:
s_18_6	languages/turkish.cc	143;"	d	file:
s_18_7	languages/arabic.cc	461;"	d	file:
s_18_7	languages/turkish.cc	145;"	d	file:
s_18_8	languages/arabic.cc	463;"	d	file:
s_18_9	languages/arabic.cc	465;"	d	file:
s_19	languages/arabic.cc	/^static const symbol s_19[] = { 0xD8, 0xAA };$/;"	v	file:
s_19	languages/earlyenglish.cc	/^static const symbol s_19[] = { 'a', 'l' };$/;"	v	file:
s_19	languages/english.cc	/^static const symbol s_19[] = { 'i', 'v', 'e' };$/;"	v	file:
s_19	languages/french.cc	/^static const symbol s_19[] = { 'i', 'c' };$/;"	v	file:
s_19	languages/kraaij_pohlmann.cc	/^static const symbol s_19[] = { 'm' };$/;"	v	file:
s_19	languages/lovins.cc	/^static const symbol s_19[] = { 'e', 'c' };$/;"	v	file:
s_19	languages/porter.cc	/^static const symbol s_19[] = { 'a', 'l' };$/;"	v	file:
s_19	languages/romanian.cc	/^static const symbol s_19[] = { 'i', 's', 't' };$/;"	v	file:
s_19	languages/tamil.cc	/^static const symbol s_19[] = { 0xE0, 0xAE, 0xB2, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_19_0	languages/arabic.cc	468;"	d	file:
s_19_0	languages/tamil.cc	235;"	d	file:
s_19_0	languages/turkish.cc	147;"	d	file:
s_19_1	languages/arabic.cc	470;"	d	file:
s_19_1	languages/tamil.cc	237;"	d	file:
s_19_1	languages/turkish.cc	149;"	d	file:
s_19_2	languages/tamil.cc	239;"	d	file:
s_19_3	languages/tamil.cc	241;"	d	file:
s_19_4	languages/tamil.cc	243;"	d	file:
s_19_5	languages/tamil.cc	245;"	d	file:
s_1_0	languages/arabic.cc	331;"	d	file:
s_1_0	languages/armenian.cc	52;"	d	file:
s_1_0	languages/basque.cc	174;"	d	file:
s_1_0	languages/catalan.cc	33;"	d	file:
s_1_0	languages/danish.cc	54;"	d	file:
s_1_0	languages/english.cc	15;"	d	file:
s_1_0	languages/finnish.cc	43;"	d	file:
s_1_0	languages/german.cc	19;"	d	file:
s_1_0	languages/hungarian.cc	24;"	d	file:
s_1_0	languages/indonesian.cc	44;"	d	file:
s_1_0	languages/irish.cc	54;"	d	file:
s_1_0	languages/kraaij_pohlmann.cc	21;"	d	file:
s_1_0	languages/lithuanian.cc	303;"	d	file:
s_1_0	languages/lovins.cc	175;"	d	file:
s_1_0	languages/nepali.cc	41;"	d	file:
s_1_0	languages/norwegian.cc	50;"	d	file:
s_1_0	languages/romanian.cc	13;"	d	file:
s_1_0	languages/russian.cc	20;"	d	file:
s_1_0	languages/spanish.cc	19;"	d	file:
s_1_0	languages/swedish.cc	60;"	d	file:
s_1_0	languages/tamil.cc	29;"	d	file:
s_1_0	languages/turkish.cc	27;"	d	file:
s_1_1	languages/arabic.cc	333;"	d	file:
s_1_1	languages/armenian.cc	53;"	d	file:
s_1_1	languages/basque.cc	175;"	d	file:
s_1_1	languages/catalan.cc	34;"	d	file:
s_1_1	languages/danish.cc	56;"	d	file:
s_1_1	languages/dutch.cc	29;"	d	file:
s_1_1	languages/earlyenglish.cc	15;"	d	file:
s_1_1	languages/english.cc	16;"	d	file:
s_1_1	languages/finnish.cc	45;"	d	file:
s_1_1	languages/french.cc	15;"	d	file:
s_1_1	languages/german.cc	20;"	d	file:
s_1_1	languages/german2.cc	19;"	d	file:
s_1_1	languages/hungarian.cc	26;"	d	file:
s_1_1	languages/indonesian.cc	46;"	d	file:
s_1_1	languages/irish.cc	55;"	d	file:
s_1_1	languages/italian.cc	21;"	d	file:
s_1_1	languages/kraaij_pohlmann.cc	23;"	d	file:
s_1_1	languages/lithuanian.cc	305;"	d	file:
s_1_1	languages/lovins.cc	177;"	d	file:
s_1_1	languages/nepali.cc	43;"	d	file:
s_1_1	languages/norwegian.cc	52;"	d	file:
s_1_1	languages/porter.cc	15;"	d	file:
s_1_1	languages/portuguese.cc	13;"	d	file:
s_1_1	languages/romanian.cc	15;"	d	file:
s_1_1	languages/russian.cc	22;"	d	file:
s_1_1	languages/spanish.cc	20;"	d	file:
s_1_1	languages/swedish.cc	62;"	d	file:
s_1_1	languages/tamil.cc	31;"	d	file:
s_1_1	languages/turkish.cc	29;"	d	file:
s_1_10	languages/armenian.cc	69;"	d	file:
s_1_10	languages/basque.cc	192;"	d	file:
s_1_10	languages/catalan.cc	47;"	d	file:
s_1_10	languages/earlyenglish.cc	33;"	d	file:
s_1_10	languages/irish.cc	69;"	d	file:
s_1_10	languages/kraaij_pohlmann.cc	41;"	d	file:
s_1_10	languages/lithuanian.cc	319;"	d	file:
s_1_10	languages/lovins.cc	189;"	d	file:
s_1_10	languages/porter.cc	33;"	d	file:
s_1_10	languages/romanian.cc	32;"	d	file:
s_1_10	languages/russian.cc	40;"	d	file:
s_1_10	languages/spanish.cc	32;"	d	file:
s_1_100	languages/basque.cc	350;"	d	file:
s_1_100	languages/lovins.cc	322;"	d	file:
s_1_101	languages/basque.cc	352;"	d	file:
s_1_101	languages/lovins.cc	323;"	d	file:
s_1_102	languages/basque.cc	354;"	d	file:
s_1_102	languages/lovins.cc	325;"	d	file:
s_1_103	languages/basque.cc	355;"	d	file:
s_1_103	languages/lovins.cc	326;"	d	file:
s_1_104	languages/basque.cc	357;"	d	file:
s_1_104	languages/lovins.cc	328;"	d	file:
s_1_105	languages/basque.cc	359;"	d	file:
s_1_105	languages/lovins.cc	330;"	d	file:
s_1_106	languages/basque.cc	361;"	d	file:
s_1_106	languages/lovins.cc	331;"	d	file:
s_1_107	languages/basque.cc	363;"	d	file:
s_1_107	languages/lovins.cc	333;"	d	file:
s_1_108	languages/basque.cc	365;"	d	file:
s_1_108	languages/lovins.cc	335;"	d	file:
s_1_109	languages/basque.cc	366;"	d	file:
s_1_109	languages/lovins.cc	337;"	d	file:
s_1_11	languages/armenian.cc	70;"	d	file:
s_1_11	languages/basque.cc	193;"	d	file:
s_1_11	languages/catalan.cc	48;"	d	file:
s_1_11	languages/earlyenglish.cc	35;"	d	file:
s_1_11	languages/irish.cc	70;"	d	file:
s_1_11	languages/lithuanian.cc	321;"	d	file:
s_1_11	languages/lovins.cc	191;"	d	file:
s_1_11	languages/porter.cc	35;"	d	file:
s_1_11	languages/romanian.cc	33;"	d	file:
s_1_11	languages/russian.cc	42;"	d	file:
s_1_11	languages/spanish.cc	33;"	d	file:
s_1_110	languages/basque.cc	367;"	d	file:
s_1_110	languages/lovins.cc	339;"	d	file:
s_1_111	languages/basque.cc	369;"	d	file:
s_1_111	languages/lovins.cc	340;"	d	file:
s_1_112	languages/basque.cc	371;"	d	file:
s_1_112	languages/lovins.cc	342;"	d	file:
s_1_113	languages/basque.cc	373;"	d	file:
s_1_113	languages/lovins.cc	343;"	d	file:
s_1_114	languages/basque.cc	374;"	d	file:
s_1_114	languages/lovins.cc	344;"	d	file:
s_1_115	languages/basque.cc	376;"	d	file:
s_1_115	languages/lovins.cc	345;"	d	file:
s_1_116	languages/basque.cc	378;"	d	file:
s_1_116	languages/lovins.cc	347;"	d	file:
s_1_117	languages/basque.cc	380;"	d	file:
s_1_117	languages/lovins.cc	348;"	d	file:
s_1_118	languages/basque.cc	382;"	d	file:
s_1_118	languages/lovins.cc	349;"	d	file:
s_1_119	languages/basque.cc	384;"	d	file:
s_1_119	languages/lovins.cc	350;"	d	file:
s_1_12	languages/armenian.cc	72;"	d	file:
s_1_12	languages/basque.cc	195;"	d	file:
s_1_12	languages/catalan.cc	50;"	d	file:
s_1_12	languages/earlyenglish.cc	37;"	d	file:
s_1_12	languages/irish.cc	72;"	d	file:
s_1_12	languages/lithuanian.cc	322;"	d	file:
s_1_12	languages/lovins.cc	192;"	d	file:
s_1_12	languages/porter.cc	37;"	d	file:
s_1_12	languages/romanian.cc	35;"	d	file:
s_1_12	languages/russian.cc	44;"	d	file:
s_1_12	languages/spanish.cc	35;"	d	file:
s_1_120	languages/basque.cc	386;"	d	file:
s_1_120	languages/lovins.cc	352;"	d	file:
s_1_121	languages/basque.cc	388;"	d	file:
s_1_121	languages/lovins.cc	354;"	d	file:
s_1_122	languages/basque.cc	390;"	d	file:
s_1_122	languages/lovins.cc	356;"	d	file:
s_1_123	languages/basque.cc	391;"	d	file:
s_1_123	languages/lovins.cc	357;"	d	file:
s_1_124	languages/basque.cc	392;"	d	file:
s_1_124	languages/lovins.cc	358;"	d	file:
s_1_125	languages/basque.cc	394;"	d	file:
s_1_125	languages/lovins.cc	359;"	d	file:
s_1_126	languages/basque.cc	395;"	d	file:
s_1_126	languages/lovins.cc	360;"	d	file:
s_1_127	languages/basque.cc	396;"	d	file:
s_1_127	languages/lovins.cc	361;"	d	file:
s_1_128	languages/basque.cc	398;"	d	file:
s_1_128	languages/lovins.cc	363;"	d	file:
s_1_129	languages/basque.cc	400;"	d	file:
s_1_129	languages/lovins.cc	364;"	d	file:
s_1_13	languages/armenian.cc	73;"	d	file:
s_1_13	languages/basque.cc	197;"	d	file:
s_1_13	languages/catalan.cc	51;"	d	file:
s_1_13	languages/irish.cc	73;"	d	file:
s_1_13	languages/lithuanian.cc	323;"	d	file:
s_1_13	languages/lovins.cc	193;"	d	file:
s_1_13	languages/romanian.cc	36;"	d	file:
s_1_13	languages/russian.cc	46;"	d	file:
s_1_130	languages/basque.cc	401;"	d	file:
s_1_130	languages/lovins.cc	365;"	d	file:
s_1_131	languages/basque.cc	403;"	d	file:
s_1_131	languages/lovins.cc	366;"	d	file:
s_1_132	languages/basque.cc	405;"	d	file:
s_1_132	languages/lovins.cc	367;"	d	file:
s_1_133	languages/basque.cc	407;"	d	file:
s_1_133	languages/lovins.cc	369;"	d	file:
s_1_134	languages/basque.cc	409;"	d	file:
s_1_134	languages/lovins.cc	370;"	d	file:
s_1_135	languages/basque.cc	411;"	d	file:
s_1_135	languages/lovins.cc	372;"	d	file:
s_1_136	languages/basque.cc	413;"	d	file:
s_1_136	languages/lovins.cc	373;"	d	file:
s_1_137	languages/basque.cc	414;"	d	file:
s_1_137	languages/lovins.cc	374;"	d	file:
s_1_138	languages/basque.cc	416;"	d	file:
s_1_138	languages/lovins.cc	375;"	d	file:
s_1_139	languages/basque.cc	418;"	d	file:
s_1_139	languages/lovins.cc	377;"	d	file:
s_1_14	languages/armenian.cc	74;"	d	file:
s_1_14	languages/basque.cc	199;"	d	file:
s_1_14	languages/catalan.cc	53;"	d	file:
s_1_14	languages/irish.cc	74;"	d	file:
s_1_14	languages/lithuanian.cc	325;"	d	file:
s_1_14	languages/lovins.cc	195;"	d	file:
s_1_14	languages/romanian.cc	38;"	d	file:
s_1_14	languages/russian.cc	48;"	d	file:
s_1_140	languages/basque.cc	420;"	d	file:
s_1_140	languages/lovins.cc	379;"	d	file:
s_1_141	languages/basque.cc	421;"	d	file:
s_1_141	languages/lovins.cc	380;"	d	file:
s_1_142	languages/basque.cc	423;"	d	file:
s_1_142	languages/lovins.cc	382;"	d	file:
s_1_143	languages/basque.cc	424;"	d	file:
s_1_143	languages/lovins.cc	383;"	d	file:
s_1_144	languages/basque.cc	426;"	d	file:
s_1_144	languages/lovins.cc	385;"	d	file:
s_1_145	languages/basque.cc	428;"	d	file:
s_1_145	languages/lovins.cc	387;"	d	file:
s_1_146	languages/basque.cc	429;"	d	file:
s_1_146	languages/lovins.cc	388;"	d	file:
s_1_147	languages/basque.cc	431;"	d	file:
s_1_147	languages/lovins.cc	390;"	d	file:
s_1_148	languages/basque.cc	433;"	d	file:
s_1_148	languages/lovins.cc	392;"	d	file:
s_1_149	languages/basque.cc	435;"	d	file:
s_1_149	languages/lovins.cc	393;"	d	file:
s_1_15	languages/armenian.cc	75;"	d	file:
s_1_15	languages/basque.cc	201;"	d	file:
s_1_15	languages/catalan.cc	54;"	d	file:
s_1_15	languages/irish.cc	75;"	d	file:
s_1_15	languages/lithuanian.cc	326;"	d	file:
s_1_15	languages/lovins.cc	197;"	d	file:
s_1_15	languages/romanian.cc	39;"	d	file:
s_1_15	languages/russian.cc	50;"	d	file:
s_1_150	languages/basque.cc	437;"	d	file:
s_1_150	languages/lovins.cc	395;"	d	file:
s_1_151	languages/basque.cc	439;"	d	file:
s_1_151	languages/lovins.cc	397;"	d	file:
s_1_152	languages/basque.cc	440;"	d	file:
s_1_152	languages/lovins.cc	399;"	d	file:
s_1_153	languages/basque.cc	441;"	d	file:
s_1_153	languages/lovins.cc	401;"	d	file:
s_1_154	languages/basque.cc	443;"	d	file:
s_1_154	languages/lovins.cc	402;"	d	file:
s_1_155	languages/basque.cc	444;"	d	file:
s_1_155	languages/lovins.cc	404;"	d	file:
s_1_156	languages/basque.cc	445;"	d	file:
s_1_156	languages/lovins.cc	406;"	d	file:
s_1_157	languages/basque.cc	446;"	d	file:
s_1_157	languages/lovins.cc	407;"	d	file:
s_1_158	languages/basque.cc	447;"	d	file:
s_1_158	languages/lovins.cc	409;"	d	file:
s_1_159	languages/basque.cc	448;"	d	file:
s_1_159	languages/lovins.cc	411;"	d	file:
s_1_16	languages/armenian.cc	76;"	d	file:
s_1_16	languages/basque.cc	202;"	d	file:
s_1_16	languages/catalan.cc	55;"	d	file:
s_1_16	languages/lithuanian.cc	328;"	d	file:
s_1_16	languages/lovins.cc	198;"	d	file:
s_1_16	languages/russian.cc	52;"	d	file:
s_1_160	languages/basque.cc	449;"	d	file:
s_1_160	languages/lovins.cc	413;"	d	file:
s_1_161	languages/basque.cc	450;"	d	file:
s_1_161	languages/lovins.cc	415;"	d	file:
s_1_162	languages/basque.cc	451;"	d	file:
s_1_162	languages/lovins.cc	416;"	d	file:
s_1_163	languages/basque.cc	452;"	d	file:
s_1_163	languages/lovins.cc	417;"	d	file:
s_1_164	languages/basque.cc	453;"	d	file:
s_1_164	languages/lovins.cc	418;"	d	file:
s_1_165	languages/basque.cc	454;"	d	file:
s_1_165	languages/lovins.cc	420;"	d	file:
s_1_166	languages/basque.cc	455;"	d	file:
s_1_166	languages/lovins.cc	422;"	d	file:
s_1_167	languages/basque.cc	456;"	d	file:
s_1_167	languages/lovins.cc	424;"	d	file:
s_1_168	languages/basque.cc	457;"	d	file:
s_1_168	languages/lovins.cc	425;"	d	file:
s_1_169	languages/basque.cc	458;"	d	file:
s_1_169	languages/lovins.cc	427;"	d	file:
s_1_17	languages/armenian.cc	78;"	d	file:
s_1_17	languages/basque.cc	204;"	d	file:
s_1_17	languages/catalan.cc	56;"	d	file:
s_1_17	languages/lithuanian.cc	329;"	d	file:
s_1_17	languages/lovins.cc	200;"	d	file:
s_1_17	languages/russian.cc	54;"	d	file:
s_1_170	languages/basque.cc	459;"	d	file:
s_1_170	languages/lovins.cc	428;"	d	file:
s_1_171	languages/basque.cc	460;"	d	file:
s_1_171	languages/lovins.cc	429;"	d	file:
s_1_172	languages/basque.cc	461;"	d	file:
s_1_172	languages/lovins.cc	431;"	d	file:
s_1_173	languages/basque.cc	462;"	d	file:
s_1_173	languages/lovins.cc	433;"	d	file:
s_1_174	languages/basque.cc	463;"	d	file:
s_1_174	languages/lovins.cc	434;"	d	file:
s_1_175	languages/basque.cc	464;"	d	file:
s_1_175	languages/lovins.cc	436;"	d	file:
s_1_176	languages/basque.cc	465;"	d	file:
s_1_176	languages/lovins.cc	438;"	d	file:
s_1_177	languages/basque.cc	466;"	d	file:
s_1_177	languages/lovins.cc	440;"	d	file:
s_1_178	languages/basque.cc	467;"	d	file:
s_1_178	languages/lovins.cc	442;"	d	file:
s_1_179	languages/basque.cc	468;"	d	file:
s_1_179	languages/lovins.cc	444;"	d	file:
s_1_18	languages/armenian.cc	80;"	d	file:
s_1_18	languages/basque.cc	206;"	d	file:
s_1_18	languages/catalan.cc	57;"	d	file:
s_1_18	languages/lithuanian.cc	331;"	d	file:
s_1_18	languages/lovins.cc	202;"	d	file:
s_1_18	languages/russian.cc	56;"	d	file:
s_1_180	languages/basque.cc	470;"	d	file:
s_1_180	languages/lovins.cc	445;"	d	file:
s_1_181	languages/basque.cc	471;"	d	file:
s_1_181	languages/lovins.cc	447;"	d	file:
s_1_182	languages/basque.cc	472;"	d	file:
s_1_182	languages/lovins.cc	448;"	d	file:
s_1_183	languages/basque.cc	473;"	d	file:
s_1_183	languages/lovins.cc	449;"	d	file:
s_1_184	languages/basque.cc	474;"	d	file:
s_1_184	languages/lovins.cc	450;"	d	file:
s_1_185	languages/basque.cc	475;"	d	file:
s_1_185	languages/lovins.cc	452;"	d	file:
s_1_186	languages/basque.cc	476;"	d	file:
s_1_186	languages/lovins.cc	454;"	d	file:
s_1_187	languages/basque.cc	477;"	d	file:
s_1_187	languages/lovins.cc	456;"	d	file:
s_1_188	languages/basque.cc	478;"	d	file:
s_1_188	languages/lovins.cc	458;"	d	file:
s_1_189	languages/basque.cc	479;"	d	file:
s_1_189	languages/lovins.cc	459;"	d	file:
s_1_19	languages/armenian.cc	82;"	d	file:
s_1_19	languages/basque.cc	207;"	d	file:
s_1_19	languages/catalan.cc	59;"	d	file:
s_1_19	languages/lithuanian.cc	333;"	d	file:
s_1_19	languages/lovins.cc	204;"	d	file:
s_1_19	languages/russian.cc	58;"	d	file:
s_1_190	languages/basque.cc	480;"	d	file:
s_1_190	languages/lovins.cc	461;"	d	file:
s_1_191	languages/basque.cc	481;"	d	file:
s_1_191	languages/lovins.cc	463;"	d	file:
s_1_192	languages/basque.cc	483;"	d	file:
s_1_192	languages/lovins.cc	465;"	d	file:
s_1_193	languages/basque.cc	484;"	d	file:
s_1_193	languages/lovins.cc	466;"	d	file:
s_1_194	languages/basque.cc	485;"	d	file:
s_1_194	languages/lovins.cc	468;"	d	file:
s_1_195	languages/basque.cc	486;"	d	file:
s_1_195	languages/lovins.cc	469;"	d	file:
s_1_196	languages/basque.cc	487;"	d	file:
s_1_196	languages/lovins.cc	471;"	d	file:
s_1_197	languages/basque.cc	488;"	d	file:
s_1_197	languages/lovins.cc	473;"	d	file:
s_1_198	languages/basque.cc	489;"	d	file:
s_1_198	languages/lovins.cc	475;"	d	file:
s_1_199	languages/basque.cc	490;"	d	file:
s_1_199	languages/lovins.cc	477;"	d	file:
s_1_2	languages/arabic.cc	335;"	d	file:
s_1_2	languages/armenian.cc	55;"	d	file:
s_1_2	languages/basque.cc	177;"	d	file:
s_1_2	languages/catalan.cc	36;"	d	file:
s_1_2	languages/danish.cc	58;"	d	file:
s_1_2	languages/dutch.cc	31;"	d	file:
s_1_2	languages/earlyenglish.cc	17;"	d	file:
s_1_2	languages/english.cc	18;"	d	file:
s_1_2	languages/finnish.cc	47;"	d	file:
s_1_2	languages/french.cc	17;"	d	file:
s_1_2	languages/german.cc	22;"	d	file:
s_1_2	languages/german2.cc	21;"	d	file:
s_1_2	languages/indonesian.cc	48;"	d	file:
s_1_2	languages/irish.cc	57;"	d	file:
s_1_2	languages/italian.cc	23;"	d	file:
s_1_2	languages/kraaij_pohlmann.cc	25;"	d	file:
s_1_2	languages/lithuanian.cc	306;"	d	file:
s_1_2	languages/lovins.cc	178;"	d	file:
s_1_2	languages/nepali.cc	45;"	d	file:
s_1_2	languages/porter.cc	17;"	d	file:
s_1_2	languages/portuguese.cc	15;"	d	file:
s_1_2	languages/romanian.cc	17;"	d	file:
s_1_2	languages/russian.cc	24;"	d	file:
s_1_2	languages/spanish.cc	21;"	d	file:
s_1_2	languages/swedish.cc	64;"	d	file:
s_1_2	languages/tamil.cc	32;"	d	file:
s_1_20	languages/armenian.cc	83;"	d	file:
s_1_20	languages/basque.cc	209;"	d	file:
s_1_20	languages/catalan.cc	60;"	d	file:
s_1_20	languages/lithuanian.cc	335;"	d	file:
s_1_20	languages/lovins.cc	205;"	d	file:
s_1_20	languages/russian.cc	60;"	d	file:
s_1_200	languages/basque.cc	491;"	d	file:
s_1_200	languages/lovins.cc	479;"	d	file:
s_1_201	languages/basque.cc	492;"	d	file:
s_1_201	languages/lovins.cc	481;"	d	file:
s_1_202	languages/basque.cc	493;"	d	file:
s_1_202	languages/lovins.cc	482;"	d	file:
s_1_203	languages/basque.cc	494;"	d	file:
s_1_203	languages/lovins.cc	484;"	d	file:
s_1_204	languages/basque.cc	495;"	d	file:
s_1_204	languages/lovins.cc	486;"	d	file:
s_1_205	languages/basque.cc	497;"	d	file:
s_1_205	languages/lovins.cc	488;"	d	file:
s_1_206	languages/basque.cc	498;"	d	file:
s_1_206	languages/lovins.cc	490;"	d	file:
s_1_207	languages/basque.cc	499;"	d	file:
s_1_207	languages/lovins.cc	492;"	d	file:
s_1_208	languages/basque.cc	500;"	d	file:
s_1_208	languages/lovins.cc	493;"	d	file:
s_1_209	languages/basque.cc	501;"	d	file:
s_1_209	languages/lovins.cc	495;"	d	file:
s_1_21	languages/armenian.cc	85;"	d	file:
s_1_21	languages/basque.cc	211;"	d	file:
s_1_21	languages/catalan.cc	61;"	d	file:
s_1_21	languages/lithuanian.cc	337;"	d	file:
s_1_21	languages/lovins.cc	207;"	d	file:
s_1_21	languages/russian.cc	61;"	d	file:
s_1_210	languages/basque.cc	502;"	d	file:
s_1_210	languages/lovins.cc	496;"	d	file:
s_1_211	languages/basque.cc	503;"	d	file:
s_1_211	languages/lovins.cc	497;"	d	file:
s_1_212	languages/basque.cc	504;"	d	file:
s_1_212	languages/lovins.cc	498;"	d	file:
s_1_213	languages/basque.cc	505;"	d	file:
s_1_213	languages/lovins.cc	500;"	d	file:
s_1_214	languages/basque.cc	507;"	d	file:
s_1_214	languages/lovins.cc	502;"	d	file:
s_1_215	languages/basque.cc	508;"	d	file:
s_1_215	languages/lovins.cc	503;"	d	file:
s_1_216	languages/basque.cc	509;"	d	file:
s_1_216	languages/lovins.cc	505;"	d	file:
s_1_217	languages/basque.cc	510;"	d	file:
s_1_217	languages/lovins.cc	506;"	d	file:
s_1_218	languages/basque.cc	511;"	d	file:
s_1_218	languages/lovins.cc	507;"	d	file:
s_1_219	languages/basque.cc	512;"	d	file:
s_1_219	languages/lovins.cc	509;"	d	file:
s_1_22	languages/armenian.cc	86;"	d	file:
s_1_22	languages/basque.cc	213;"	d	file:
s_1_22	languages/catalan.cc	63;"	d	file:
s_1_22	languages/lithuanian.cc	339;"	d	file:
s_1_22	languages/lovins.cc	209;"	d	file:
s_1_22	languages/russian.cc	62;"	d	file:
s_1_220	languages/basque.cc	514;"	d	file:
s_1_220	languages/lovins.cc	510;"	d	file:
s_1_221	languages/basque.cc	516;"	d	file:
s_1_221	languages/lovins.cc	511;"	d	file:
s_1_222	languages/basque.cc	517;"	d	file:
s_1_222	languages/lovins.cc	513;"	d	file:
s_1_223	languages/basque.cc	518;"	d	file:
s_1_223	languages/lovins.cc	514;"	d	file:
s_1_224	languages/basque.cc	519;"	d	file:
s_1_224	languages/lovins.cc	515;"	d	file:
s_1_225	languages/basque.cc	520;"	d	file:
s_1_225	languages/lovins.cc	516;"	d	file:
s_1_226	languages/basque.cc	521;"	d	file:
s_1_226	languages/lovins.cc	518;"	d	file:
s_1_227	languages/basque.cc	522;"	d	file:
s_1_227	languages/lovins.cc	520;"	d	file:
s_1_228	languages/basque.cc	523;"	d	file:
s_1_228	languages/lovins.cc	522;"	d	file:
s_1_229	languages/basque.cc	525;"	d	file:
s_1_229	languages/lovins.cc	524;"	d	file:
s_1_23	languages/armenian.cc	87;"	d	file:
s_1_23	languages/basque.cc	214;"	d	file:
s_1_23	languages/catalan.cc	64;"	d	file:
s_1_23	languages/lithuanian.cc	341;"	d	file:
s_1_23	languages/lovins.cc	211;"	d	file:
s_1_23	languages/russian.cc	63;"	d	file:
s_1_230	languages/basque.cc	526;"	d	file:
s_1_230	languages/lovins.cc	525;"	d	file:
s_1_231	languages/basque.cc	527;"	d	file:
s_1_231	languages/lovins.cc	527;"	d	file:
s_1_232	languages/basque.cc	528;"	d	file:
s_1_232	languages/lovins.cc	529;"	d	file:
s_1_233	languages/basque.cc	529;"	d	file:
s_1_233	languages/lovins.cc	531;"	d	file:
s_1_234	languages/basque.cc	530;"	d	file:
s_1_234	languages/lovins.cc	532;"	d	file:
s_1_235	languages/basque.cc	531;"	d	file:
s_1_235	languages/lovins.cc	534;"	d	file:
s_1_236	languages/basque.cc	533;"	d	file:
s_1_236	languages/lovins.cc	536;"	d	file:
s_1_237	languages/basque.cc	534;"	d	file:
s_1_237	languages/lovins.cc	538;"	d	file:
s_1_238	languages/basque.cc	536;"	d	file:
s_1_238	languages/lovins.cc	539;"	d	file:
s_1_239	languages/basque.cc	538;"	d	file:
s_1_239	languages/lovins.cc	541;"	d	file:
s_1_24	languages/armenian.cc	89;"	d	file:
s_1_24	languages/basque.cc	216;"	d	file:
s_1_24	languages/catalan.cc	66;"	d	file:
s_1_24	languages/lithuanian.cc	342;"	d	file:
s_1_24	languages/lovins.cc	213;"	d	file:
s_1_24	languages/russian.cc	64;"	d	file:
s_1_240	languages/basque.cc	540;"	d	file:
s_1_240	languages/lovins.cc	542;"	d	file:
s_1_241	languages/basque.cc	542;"	d	file:
s_1_241	languages/lovins.cc	544;"	d	file:
s_1_242	languages/basque.cc	543;"	d	file:
s_1_242	languages/lovins.cc	545;"	d	file:
s_1_243	languages/basque.cc	545;"	d	file:
s_1_243	languages/lovins.cc	547;"	d	file:
s_1_244	languages/basque.cc	546;"	d	file:
s_1_244	languages/lovins.cc	548;"	d	file:
s_1_245	languages/basque.cc	547;"	d	file:
s_1_245	languages/lovins.cc	550;"	d	file:
s_1_246	languages/basque.cc	548;"	d	file:
s_1_246	languages/lovins.cc	551;"	d	file:
s_1_247	languages/basque.cc	549;"	d	file:
s_1_247	languages/lovins.cc	553;"	d	file:
s_1_248	languages/basque.cc	550;"	d	file:
s_1_248	languages/lovins.cc	555;"	d	file:
s_1_249	languages/basque.cc	552;"	d	file:
s_1_249	languages/lovins.cc	556;"	d	file:
s_1_25	languages/armenian.cc	91;"	d	file:
s_1_25	languages/basque.cc	218;"	d	file:
s_1_25	languages/catalan.cc	67;"	d	file:
s_1_25	languages/lithuanian.cc	344;"	d	file:
s_1_25	languages/lovins.cc	214;"	d	file:
s_1_25	languages/russian.cc	66;"	d	file:
s_1_250	languages/basque.cc	553;"	d	file:
s_1_250	languages/lovins.cc	557;"	d	file:
s_1_251	languages/basque.cc	554;"	d	file:
s_1_251	languages/lovins.cc	559;"	d	file:
s_1_252	languages/basque.cc	555;"	d	file:
s_1_252	languages/lovins.cc	561;"	d	file:
s_1_253	languages/basque.cc	557;"	d	file:
s_1_253	languages/lovins.cc	562;"	d	file:
s_1_254	languages/basque.cc	558;"	d	file:
s_1_254	languages/lovins.cc	564;"	d	file:
s_1_255	languages/basque.cc	559;"	d	file:
s_1_255	languages/lovins.cc	566;"	d	file:
s_1_256	languages/basque.cc	560;"	d	file:
s_1_256	languages/lovins.cc	567;"	d	file:
s_1_257	languages/basque.cc	561;"	d	file:
s_1_257	languages/lovins.cc	569;"	d	file:
s_1_258	languages/basque.cc	562;"	d	file:
s_1_258	languages/lovins.cc	570;"	d	file:
s_1_259	languages/basque.cc	563;"	d	file:
s_1_259	languages/lovins.cc	571;"	d	file:
s_1_26	languages/armenian.cc	93;"	d	file:
s_1_26	languages/basque.cc	220;"	d	file:
s_1_26	languages/catalan.cc	69;"	d	file:
s_1_26	languages/lithuanian.cc	346;"	d	file:
s_1_26	languages/lovins.cc	216;"	d	file:
s_1_260	languages/basque.cc	564;"	d	file:
s_1_260	languages/lovins.cc	573;"	d	file:
s_1_261	languages/basque.cc	566;"	d	file:
s_1_261	languages/lovins.cc	575;"	d	file:
s_1_262	languages/basque.cc	567;"	d	file:
s_1_262	languages/lovins.cc	576;"	d	file:
s_1_263	languages/basque.cc	569;"	d	file:
s_1_263	languages/lovins.cc	578;"	d	file:
s_1_264	languages/basque.cc	570;"	d	file:
s_1_264	languages/lovins.cc	580;"	d	file:
s_1_265	languages/basque.cc	571;"	d	file:
s_1_265	languages/lovins.cc	582;"	d	file:
s_1_266	languages/basque.cc	573;"	d	file:
s_1_266	languages/lovins.cc	583;"	d	file:
s_1_267	languages/basque.cc	575;"	d	file:
s_1_267	languages/lovins.cc	585;"	d	file:
s_1_268	languages/basque.cc	576;"	d	file:
s_1_268	languages/lovins.cc	587;"	d	file:
s_1_269	languages/basque.cc	577;"	d	file:
s_1_269	languages/lovins.cc	588;"	d	file:
s_1_27	languages/armenian.cc	94;"	d	file:
s_1_27	languages/basque.cc	222;"	d	file:
s_1_27	languages/catalan.cc	71;"	d	file:
s_1_27	languages/lithuanian.cc	348;"	d	file:
s_1_27	languages/lovins.cc	217;"	d	file:
s_1_270	languages/basque.cc	578;"	d	file:
s_1_270	languages/lovins.cc	590;"	d	file:
s_1_271	languages/basque.cc	579;"	d	file:
s_1_271	languages/lovins.cc	592;"	d	file:
s_1_272	languages/basque.cc	580;"	d	file:
s_1_272	languages/lovins.cc	594;"	d	file:
s_1_273	languages/basque.cc	581;"	d	file:
s_1_273	languages/lovins.cc	596;"	d	file:
s_1_274	languages/basque.cc	582;"	d	file:
s_1_274	languages/lovins.cc	598;"	d	file:
s_1_275	languages/basque.cc	583;"	d	file:
s_1_275	languages/lovins.cc	600;"	d	file:
s_1_276	languages/basque.cc	584;"	d	file:
s_1_276	languages/lovins.cc	602;"	d	file:
s_1_277	languages/basque.cc	585;"	d	file:
s_1_277	languages/lovins.cc	603;"	d	file:
s_1_278	languages/basque.cc	586;"	d	file:
s_1_278	languages/lovins.cc	605;"	d	file:
s_1_279	languages/basque.cc	587;"	d	file:
s_1_279	languages/lovins.cc	607;"	d	file:
s_1_28	languages/armenian.cc	96;"	d	file:
s_1_28	languages/basque.cc	223;"	d	file:
s_1_28	languages/catalan.cc	73;"	d	file:
s_1_28	languages/lithuanian.cc	350;"	d	file:
s_1_28	languages/lovins.cc	219;"	d	file:
s_1_280	languages/basque.cc	588;"	d	file:
s_1_280	languages/lovins.cc	609;"	d	file:
s_1_281	languages/basque.cc	589;"	d	file:
s_1_281	languages/lovins.cc	610;"	d	file:
s_1_282	languages/basque.cc	590;"	d	file:
s_1_282	languages/lovins.cc	612;"	d	file:
s_1_283	languages/basque.cc	591;"	d	file:
s_1_283	languages/lovins.cc	613;"	d	file:
s_1_284	languages/basque.cc	593;"	d	file:
s_1_284	languages/lovins.cc	615;"	d	file:
s_1_285	languages/basque.cc	594;"	d	file:
s_1_285	languages/lovins.cc	617;"	d	file:
s_1_286	languages/basque.cc	595;"	d	file:
s_1_286	languages/lovins.cc	619;"	d	file:
s_1_287	languages/basque.cc	596;"	d	file:
s_1_287	languages/lovins.cc	621;"	d	file:
s_1_288	languages/basque.cc	597;"	d	file:
s_1_288	languages/lovins.cc	622;"	d	file:
s_1_289	languages/basque.cc	598;"	d	file:
s_1_289	languages/lovins.cc	623;"	d	file:
s_1_29	languages/armenian.cc	97;"	d	file:
s_1_29	languages/basque.cc	225;"	d	file:
s_1_29	languages/catalan.cc	75;"	d	file:
s_1_29	languages/lithuanian.cc	352;"	d	file:
s_1_29	languages/lovins.cc	220;"	d	file:
s_1_290	languages/basque.cc	600;"	d	file:
s_1_290	languages/lovins.cc	625;"	d	file:
s_1_291	languages/basque.cc	601;"	d	file:
s_1_291	languages/lovins.cc	627;"	d	file:
s_1_292	languages/basque.cc	602;"	d	file:
s_1_292	languages/lovins.cc	629;"	d	file:
s_1_293	languages/basque.cc	603;"	d	file:
s_1_293	languages/lovins.cc	631;"	d	file:
s_1_294	languages/basque.cc	604;"	d	file:
s_1_3	languages/arabic.cc	337;"	d	file:
s_1_3	languages/armenian.cc	57;"	d	file:
s_1_3	languages/basque.cc	179;"	d	file:
s_1_3	languages/catalan.cc	37;"	d	file:
s_1_3	languages/danish.cc	60;"	d	file:
s_1_3	languages/earlyenglish.cc	19;"	d	file:
s_1_3	languages/finnish.cc	49;"	d	file:
s_1_3	languages/french.cc	19;"	d	file:
s_1_3	languages/german.cc	24;"	d	file:
s_1_3	languages/german2.cc	23;"	d	file:
s_1_3	languages/irish.cc	58;"	d	file:
s_1_3	languages/kraaij_pohlmann.cc	27;"	d	file:
s_1_3	languages/lithuanian.cc	308;"	d	file:
s_1_3	languages/lovins.cc	179;"	d	file:
s_1_3	languages/porter.cc	19;"	d	file:
s_1_3	languages/romanian.cc	19;"	d	file:
s_1_3	languages/russian.cc	26;"	d	file:
s_1_3	languages/spanish.cc	22;"	d	file:
s_1_3	languages/swedish.cc	66;"	d	file:
s_1_30	languages/armenian.cc	98;"	d	file:
s_1_30	languages/basque.cc	227;"	d	file:
s_1_30	languages/catalan.cc	77;"	d	file:
s_1_30	languages/lithuanian.cc	353;"	d	file:
s_1_30	languages/lovins.cc	222;"	d	file:
s_1_31	languages/armenian.cc	99;"	d	file:
s_1_31	languages/basque.cc	228;"	d	file:
s_1_31	languages/catalan.cc	79;"	d	file:
s_1_31	languages/lithuanian.cc	355;"	d	file:
s_1_31	languages/lovins.cc	223;"	d	file:
s_1_32	languages/armenian.cc	100;"	d	file:
s_1_32	languages/basque.cc	230;"	d	file:
s_1_32	languages/catalan.cc	80;"	d	file:
s_1_32	languages/lithuanian.cc	357;"	d	file:
s_1_32	languages/lovins.cc	225;"	d	file:
s_1_33	languages/armenian.cc	101;"	d	file:
s_1_33	languages/basque.cc	232;"	d	file:
s_1_33	languages/catalan.cc	82;"	d	file:
s_1_33	languages/lithuanian.cc	359;"	d	file:
s_1_33	languages/lovins.cc	227;"	d	file:
s_1_34	languages/armenian.cc	102;"	d	file:
s_1_34	languages/basque.cc	234;"	d	file:
s_1_34	languages/catalan.cc	83;"	d	file:
s_1_34	languages/lithuanian.cc	360;"	d	file:
s_1_34	languages/lovins.cc	228;"	d	file:
s_1_35	languages/armenian.cc	103;"	d	file:
s_1_35	languages/basque.cc	236;"	d	file:
s_1_35	languages/catalan.cc	85;"	d	file:
s_1_35	languages/lithuanian.cc	362;"	d	file:
s_1_35	languages/lovins.cc	230;"	d	file:
s_1_36	languages/armenian.cc	104;"	d	file:
s_1_36	languages/basque.cc	237;"	d	file:
s_1_36	languages/catalan.cc	87;"	d	file:
s_1_36	languages/lithuanian.cc	363;"	d	file:
s_1_36	languages/lovins.cc	231;"	d	file:
s_1_37	languages/armenian.cc	105;"	d	file:
s_1_37	languages/basque.cc	239;"	d	file:
s_1_37	languages/catalan.cc	88;"	d	file:
s_1_37	languages/lithuanian.cc	365;"	d	file:
s_1_37	languages/lovins.cc	233;"	d	file:
s_1_38	languages/armenian.cc	107;"	d	file:
s_1_38	languages/basque.cc	241;"	d	file:
s_1_38	languages/catalan.cc	90;"	d	file:
s_1_38	languages/lithuanian.cc	366;"	d	file:
s_1_38	languages/lovins.cc	234;"	d	file:
s_1_39	languages/armenian.cc	109;"	d	file:
s_1_39	languages/basque.cc	243;"	d	file:
s_1_39	languages/lithuanian.cc	368;"	d	file:
s_1_39	languages/lovins.cc	235;"	d	file:
s_1_4	languages/arabic.cc	339;"	d	file:
s_1_4	languages/armenian.cc	59;"	d	file:
s_1_4	languages/basque.cc	181;"	d	file:
s_1_4	languages/catalan.cc	38;"	d	file:
s_1_4	languages/earlyenglish.cc	21;"	d	file:
s_1_4	languages/finnish.cc	50;"	d	file:
s_1_4	languages/german.cc	26;"	d	file:
s_1_4	languages/german2.cc	25;"	d	file:
s_1_4	languages/irish.cc	60;"	d	file:
s_1_4	languages/kraaij_pohlmann.cc	29;"	d	file:
s_1_4	languages/lithuanian.cc	310;"	d	file:
s_1_4	languages/lovins.cc	180;"	d	file:
s_1_4	languages/porter.cc	21;"	d	file:
s_1_4	languages/romanian.cc	21;"	d	file:
s_1_4	languages/russian.cc	28;"	d	file:
s_1_4	languages/spanish.cc	24;"	d	file:
s_1_4	languages/swedish.cc	68;"	d	file:
s_1_40	languages/armenian.cc	111;"	d	file:
s_1_40	languages/basque.cc	245;"	d	file:
s_1_40	languages/lithuanian.cc	369;"	d	file:
s_1_40	languages/lovins.cc	237;"	d	file:
s_1_41	languages/armenian.cc	113;"	d	file:
s_1_41	languages/basque.cc	246;"	d	file:
s_1_41	languages/lithuanian.cc	371;"	d	file:
s_1_41	languages/lovins.cc	239;"	d	file:
s_1_42	languages/armenian.cc	114;"	d	file:
s_1_42	languages/basque.cc	248;"	d	file:
s_1_42	languages/lithuanian.cc	372;"	d	file:
s_1_42	languages/lovins.cc	240;"	d	file:
s_1_43	languages/armenian.cc	116;"	d	file:
s_1_43	languages/basque.cc	249;"	d	file:
s_1_43	languages/lithuanian.cc	374;"	d	file:
s_1_43	languages/lovins.cc	241;"	d	file:
s_1_44	languages/armenian.cc	117;"	d	file:
s_1_44	languages/basque.cc	251;"	d	file:
s_1_44	languages/lithuanian.cc	376;"	d	file:
s_1_44	languages/lovins.cc	243;"	d	file:
s_1_45	languages/armenian.cc	118;"	d	file:
s_1_45	languages/basque.cc	252;"	d	file:
s_1_45	languages/lithuanian.cc	378;"	d	file:
s_1_45	languages/lovins.cc	244;"	d	file:
s_1_46	languages/armenian.cc	120;"	d	file:
s_1_46	languages/basque.cc	254;"	d	file:
s_1_46	languages/lithuanian.cc	379;"	d	file:
s_1_46	languages/lovins.cc	246;"	d	file:
s_1_47	languages/armenian.cc	122;"	d	file:
s_1_47	languages/basque.cc	256;"	d	file:
s_1_47	languages/lithuanian.cc	380;"	d	file:
s_1_47	languages/lovins.cc	247;"	d	file:
s_1_48	languages/armenian.cc	123;"	d	file:
s_1_48	languages/basque.cc	258;"	d	file:
s_1_48	languages/lithuanian.cc	382;"	d	file:
s_1_48	languages/lovins.cc	249;"	d	file:
s_1_49	languages/armenian.cc	125;"	d	file:
s_1_49	languages/basque.cc	259;"	d	file:
s_1_49	languages/lithuanian.cc	384;"	d	file:
s_1_49	languages/lovins.cc	250;"	d	file:
s_1_5	languages/armenian.cc	61;"	d	file:
s_1_5	languages/basque.cc	183;"	d	file:
s_1_5	languages/catalan.cc	39;"	d	file:
s_1_5	languages/earlyenglish.cc	23;"	d	file:
s_1_5	languages/finnish.cc	52;"	d	file:
s_1_5	languages/german.cc	27;"	d	file:
s_1_5	languages/german2.cc	27;"	d	file:
s_1_5	languages/irish.cc	61;"	d	file:
s_1_5	languages/kraaij_pohlmann.cc	31;"	d	file:
s_1_5	languages/lithuanian.cc	311;"	d	file:
s_1_5	languages/lovins.cc	181;"	d	file:
s_1_5	languages/porter.cc	23;"	d	file:
s_1_5	languages/romanian.cc	23;"	d	file:
s_1_5	languages/russian.cc	30;"	d	file:
s_1_5	languages/spanish.cc	25;"	d	file:
s_1_5	languages/swedish.cc	70;"	d	file:
s_1_50	languages/armenian.cc	127;"	d	file:
s_1_50	languages/basque.cc	261;"	d	file:
s_1_50	languages/lithuanian.cc	385;"	d	file:
s_1_50	languages/lovins.cc	251;"	d	file:
s_1_51	languages/armenian.cc	128;"	d	file:
s_1_51	languages/basque.cc	263;"	d	file:
s_1_51	languages/lithuanian.cc	386;"	d	file:
s_1_51	languages/lovins.cc	253;"	d	file:
s_1_52	languages/armenian.cc	130;"	d	file:
s_1_52	languages/basque.cc	265;"	d	file:
s_1_52	languages/lithuanian.cc	388;"	d	file:
s_1_52	languages/lovins.cc	254;"	d	file:
s_1_53	languages/armenian.cc	131;"	d	file:
s_1_53	languages/basque.cc	267;"	d	file:
s_1_53	languages/lithuanian.cc	390;"	d	file:
s_1_53	languages/lovins.cc	255;"	d	file:
s_1_54	languages/armenian.cc	133;"	d	file:
s_1_54	languages/basque.cc	269;"	d	file:
s_1_54	languages/lithuanian.cc	392;"	d	file:
s_1_54	languages/lovins.cc	257;"	d	file:
s_1_55	languages/armenian.cc	135;"	d	file:
s_1_55	languages/basque.cc	271;"	d	file:
s_1_55	languages/lithuanian.cc	394;"	d	file:
s_1_55	languages/lovins.cc	259;"	d	file:
s_1_56	languages/armenian.cc	136;"	d	file:
s_1_56	languages/basque.cc	273;"	d	file:
s_1_56	languages/lithuanian.cc	395;"	d	file:
s_1_56	languages/lovins.cc	261;"	d	file:
s_1_57	languages/armenian.cc	138;"	d	file:
s_1_57	languages/basque.cc	274;"	d	file:
s_1_57	languages/lithuanian.cc	397;"	d	file:
s_1_57	languages/lovins.cc	262;"	d	file:
s_1_58	languages/armenian.cc	139;"	d	file:
s_1_58	languages/basque.cc	276;"	d	file:
s_1_58	languages/lithuanian.cc	399;"	d	file:
s_1_58	languages/lovins.cc	264;"	d	file:
s_1_59	languages/armenian.cc	140;"	d	file:
s_1_59	languages/basque.cc	278;"	d	file:
s_1_59	languages/lithuanian.cc	401;"	d	file:
s_1_59	languages/lovins.cc	266;"	d	file:
s_1_6	languages/armenian.cc	62;"	d	file:
s_1_6	languages/basque.cc	185;"	d	file:
s_1_6	languages/catalan.cc	41;"	d	file:
s_1_6	languages/earlyenglish.cc	25;"	d	file:
s_1_6	languages/german.cc	28;"	d	file:
s_1_6	languages/irish.cc	63;"	d	file:
s_1_6	languages/kraaij_pohlmann.cc	33;"	d	file:
s_1_6	languages/lithuanian.cc	313;"	d	file:
s_1_6	languages/lovins.cc	182;"	d	file:
s_1_6	languages/porter.cc	25;"	d	file:
s_1_6	languages/romanian.cc	25;"	d	file:
s_1_6	languages/russian.cc	32;"	d	file:
s_1_6	languages/spanish.cc	26;"	d	file:
s_1_6	languages/swedish.cc	72;"	d	file:
s_1_60	languages/armenian.cc	141;"	d	file:
s_1_60	languages/basque.cc	280;"	d	file:
s_1_60	languages/lithuanian.cc	403;"	d	file:
s_1_60	languages/lovins.cc	268;"	d	file:
s_1_61	languages/armenian.cc	142;"	d	file:
s_1_61	languages/basque.cc	281;"	d	file:
s_1_61	languages/lithuanian.cc	404;"	d	file:
s_1_61	languages/lovins.cc	269;"	d	file:
s_1_62	languages/armenian.cc	143;"	d	file:
s_1_62	languages/basque.cc	283;"	d	file:
s_1_62	languages/lovins.cc	270;"	d	file:
s_1_63	languages/armenian.cc	144;"	d	file:
s_1_63	languages/basque.cc	285;"	d	file:
s_1_63	languages/lovins.cc	271;"	d	file:
s_1_64	languages/armenian.cc	145;"	d	file:
s_1_64	languages/basque.cc	287;"	d	file:
s_1_64	languages/lovins.cc	272;"	d	file:
s_1_65	languages/armenian.cc	147;"	d	file:
s_1_65	languages/basque.cc	289;"	d	file:
s_1_65	languages/lovins.cc	273;"	d	file:
s_1_66	languages/armenian.cc	149;"	d	file:
s_1_66	languages/basque.cc	291;"	d	file:
s_1_66	languages/lovins.cc	275;"	d	file:
s_1_67	languages/armenian.cc	150;"	d	file:
s_1_67	languages/basque.cc	293;"	d	file:
s_1_67	languages/lovins.cc	276;"	d	file:
s_1_68	languages/armenian.cc	152;"	d	file:
s_1_68	languages/basque.cc	295;"	d	file:
s_1_68	languages/lovins.cc	278;"	d	file:
s_1_69	languages/armenian.cc	154;"	d	file:
s_1_69	languages/basque.cc	297;"	d	file:
s_1_69	languages/lovins.cc	280;"	d	file:
s_1_7	languages/armenian.cc	64;"	d	file:
s_1_7	languages/basque.cc	186;"	d	file:
s_1_7	languages/catalan.cc	42;"	d	file:
s_1_7	languages/earlyenglish.cc	27;"	d	file:
s_1_7	languages/irish.cc	64;"	d	file:
s_1_7	languages/kraaij_pohlmann.cc	35;"	d	file:
s_1_7	languages/lithuanian.cc	314;"	d	file:
s_1_7	languages/lovins.cc	183;"	d	file:
s_1_7	languages/porter.cc	27;"	d	file:
s_1_7	languages/romanian.cc	26;"	d	file:
s_1_7	languages/russian.cc	34;"	d	file:
s_1_7	languages/spanish.cc	27;"	d	file:
s_1_70	languages/armenian.cc	156;"	d	file:
s_1_70	languages/basque.cc	299;"	d	file:
s_1_70	languages/lovins.cc	281;"	d	file:
s_1_71	languages/basque.cc	301;"	d	file:
s_1_71	languages/lovins.cc	282;"	d	file:
s_1_72	languages/basque.cc	303;"	d	file:
s_1_72	languages/lovins.cc	284;"	d	file:
s_1_73	languages/basque.cc	304;"	d	file:
s_1_73	languages/lovins.cc	286;"	d	file:
s_1_74	languages/basque.cc	306;"	d	file:
s_1_74	languages/lovins.cc	288;"	d	file:
s_1_75	languages/basque.cc	307;"	d	file:
s_1_75	languages/lovins.cc	290;"	d	file:
s_1_76	languages/basque.cc	309;"	d	file:
s_1_76	languages/lovins.cc	292;"	d	file:
s_1_77	languages/basque.cc	311;"	d	file:
s_1_77	languages/lovins.cc	293;"	d	file:
s_1_78	languages/basque.cc	313;"	d	file:
s_1_78	languages/lovins.cc	295;"	d	file:
s_1_79	languages/basque.cc	314;"	d	file:
s_1_79	languages/lovins.cc	297;"	d	file:
s_1_8	languages/armenian.cc	66;"	d	file:
s_1_8	languages/basque.cc	188;"	d	file:
s_1_8	languages/catalan.cc	44;"	d	file:
s_1_8	languages/earlyenglish.cc	29;"	d	file:
s_1_8	languages/irish.cc	66;"	d	file:
s_1_8	languages/kraaij_pohlmann.cc	37;"	d	file:
s_1_8	languages/lithuanian.cc	316;"	d	file:
s_1_8	languages/lovins.cc	185;"	d	file:
s_1_8	languages/porter.cc	29;"	d	file:
s_1_8	languages/romanian.cc	28;"	d	file:
s_1_8	languages/russian.cc	36;"	d	file:
s_1_8	languages/spanish.cc	28;"	d	file:
s_1_80	languages/basque.cc	316;"	d	file:
s_1_80	languages/lovins.cc	298;"	d	file:
s_1_81	languages/basque.cc	318;"	d	file:
s_1_81	languages/lovins.cc	300;"	d	file:
s_1_82	languages/basque.cc	320;"	d	file:
s_1_82	languages/lovins.cc	301;"	d	file:
s_1_83	languages/basque.cc	322;"	d	file:
s_1_83	languages/lovins.cc	303;"	d	file:
s_1_84	languages/basque.cc	323;"	d	file:
s_1_84	languages/lovins.cc	304;"	d	file:
s_1_85	languages/basque.cc	325;"	d	file:
s_1_85	languages/lovins.cc	305;"	d	file:
s_1_86	languages/basque.cc	326;"	d	file:
s_1_86	languages/lovins.cc	306;"	d	file:
s_1_87	languages/basque.cc	328;"	d	file:
s_1_87	languages/lovins.cc	307;"	d	file:
s_1_88	languages/basque.cc	329;"	d	file:
s_1_88	languages/lovins.cc	308;"	d	file:
s_1_89	languages/basque.cc	331;"	d	file:
s_1_89	languages/lovins.cc	309;"	d	file:
s_1_9	languages/armenian.cc	68;"	d	file:
s_1_9	languages/basque.cc	190;"	d	file:
s_1_9	languages/catalan.cc	45;"	d	file:
s_1_9	languages/earlyenglish.cc	31;"	d	file:
s_1_9	languages/irish.cc	67;"	d	file:
s_1_9	languages/kraaij_pohlmann.cc	39;"	d	file:
s_1_9	languages/lithuanian.cc	318;"	d	file:
s_1_9	languages/lovins.cc	187;"	d	file:
s_1_9	languages/porter.cc	31;"	d	file:
s_1_9	languages/romanian.cc	30;"	d	file:
s_1_9	languages/russian.cc	38;"	d	file:
s_1_9	languages/spanish.cc	30;"	d	file:
s_1_90	languages/basque.cc	333;"	d	file:
s_1_90	languages/lovins.cc	310;"	d	file:
s_1_91	languages/basque.cc	335;"	d	file:
s_1_91	languages/lovins.cc	311;"	d	file:
s_1_92	languages/basque.cc	336;"	d	file:
s_1_92	languages/lovins.cc	313;"	d	file:
s_1_93	languages/basque.cc	338;"	d	file:
s_1_93	languages/lovins.cc	315;"	d	file:
s_1_94	languages/basque.cc	340;"	d	file:
s_1_94	languages/lovins.cc	316;"	d	file:
s_1_95	languages/basque.cc	341;"	d	file:
s_1_95	languages/lovins.cc	317;"	d	file:
s_1_96	languages/basque.cc	343;"	d	file:
s_1_96	languages/lovins.cc	318;"	d	file:
s_1_97	languages/basque.cc	344;"	d	file:
s_1_97	languages/lovins.cc	319;"	d	file:
s_1_98	languages/basque.cc	346;"	d	file:
s_1_98	languages/lovins.cc	320;"	d	file:
s_1_99	languages/basque.cc	348;"	d	file:
s_1_99	languages/lovins.cc	321;"	d	file:
s_2	languages/arabic.cc	/^static const symbol s_2[] = { '2' };$/;"	v	file:
s_2	languages/basque.cc	/^static const symbol s_2[] = { 'b', 'a', 'd', 'i', 't', 'u' };$/;"	v	file:
s_2	languages/catalan.cc	/^static const symbol s_2[] = { 'i' };$/;"	v	file:
s_2	languages/danish.cc	/^static const symbol s_2[] = { 'l', 0xC3, 0xB8, 's' };$/;"	v	file:
s_2	languages/dutch.cc	/^static const symbol s_2[] = { 'i' };$/;"	v	file:
s_2	languages/earlyenglish.cc	/^static const symbol s_2[] = { 'e', 'e' };$/;"	v	file:
s_2	languages/english.cc	/^static const symbol s_2[] = { 's', 's' };$/;"	v	file:
s_2	languages/finnish.cc	/^static const symbol s_2[] = { 0xC3, 0xA4 };$/;"	v	file:
s_2	languages/french.cc	/^static const symbol s_2[] = { 'Y' };$/;"	v	file:
s_2	languages/german.cc	/^static const symbol s_2[] = { 'U' };$/;"	v	file:
s_2	languages/german2.cc	/^static const symbol s_2[] = { 's', 's' };$/;"	v	file:
s_2	languages/hungarian.cc	/^static const symbol s_2[] = { 'e' };$/;"	v	file:
s_2	languages/indonesian.cc	/^static const symbol s_2[] = { 's' };$/;"	v	file:
s_2	languages/irish.cc	/^static const symbol s_2[] = { 'b' };$/;"	v	file:
s_2	languages/italian.cc	/^static const symbol s_2[] = { 0xC3, 0xAC };$/;"	v	file:
s_2	languages/kraaij_pohlmann.cc	/^static const symbol s_2[] = { 'i', 'j' };$/;"	v	file:
s_2	languages/lithuanian.cc	/^static const symbol s_2[] = { 0xC4, 0x97, 'j', 'i', 'm', 'a', 's' };$/;"	v	file:
s_2	languages/lovins.cc	/^static const symbol s_2[] = { 'i', 'n' };$/;"	v	file:
s_2	languages/nepali.cc	/^static const symbol s_2[] = { 0xE0, 0xA4, 0xAF, 0xE0, 0xA5, 0x8C };$/;"	v	file:
s_2	languages/porter.cc	/^static const symbol s_2[] = { 'e', 'e' };$/;"	v	file:
s_2	languages/portuguese.cc	/^static const symbol s_2[] = { 0xC3, 0xA3 };$/;"	v	file:
s_2	languages/romanian.cc	/^static const symbol s_2[] = { 'i' };$/;"	v	file:
s_2	languages/russian.cc	/^static const symbol s_2[] = { 0xD0, 0xB0 };$/;"	v	file:
s_2	languages/spanish.cc	/^static const symbol s_2[] = { 'i' };$/;"	v	file:
s_2	languages/tamil.cc	/^static const symbol s_2[] = { 0xE0, 0xAE, 0x93 };$/;"	v	file:
s_2	languages/turkish.cc	/^static const symbol s_2[] = { 0xC3, 0xBC };$/;"	v	file:
s_20	languages/arabic.cc	/^static const symbol s_20[] = { 0xD8, 0xAB };$/;"	v	file:
s_20	languages/earlyenglish.cc	/^static const symbol s_20[] = { 'i', 'c' };$/;"	v	file:
s_20	languages/english.cc	/^static const symbol s_20[] = { 'b', 'l', 'e' };$/;"	v	file:
s_20	languages/french.cc	/^static const symbol s_20[] = { 'i', 'q', 'U' };$/;"	v	file:
s_20	languages/kraaij_pohlmann.cc	/^static const symbol s_20[] = { 'g' };$/;"	v	file:
s_20	languages/lovins.cc	/^static const symbol s_20[] = { 'i', 'c' };$/;"	v	file:
s_20	languages/porter.cc	/^static const symbol s_20[] = { 'i', 'c' };$/;"	v	file:
s_20	languages/tamil.cc	/^static const symbol s_20[] = { 0xE0, 0xAE, 0xB1, 0xE0, 0xAF, 0x8D, 0xE0, 0xAE, 0x95, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_20_0	languages/arabic.cc	472;"	d	file:
s_20_0	languages/tamil.cc	247;"	d	file:
s_20_0	languages/turkish.cc	151;"	d	file:
s_20_1	languages/arabic.cc	473;"	d	file:
s_20_1	languages/tamil.cc	249;"	d	file:
s_20_1	languages/turkish.cc	152;"	d	file:
s_20_10	languages/turkish.cc	169;"	d	file:
s_20_11	languages/turkish.cc	171;"	d	file:
s_20_12	languages/turkish.cc	173;"	d	file:
s_20_13	languages/turkish.cc	175;"	d	file:
s_20_14	languages/turkish.cc	177;"	d	file:
s_20_15	languages/turkish.cc	179;"	d	file:
s_20_16	languages/turkish.cc	181;"	d	file:
s_20_17	languages/turkish.cc	183;"	d	file:
s_20_18	languages/turkish.cc	185;"	d	file:
s_20_19	languages/turkish.cc	187;"	d	file:
s_20_2	languages/tamil.cc	251;"	d	file:
s_20_2	languages/turkish.cc	153;"	d	file:
s_20_20	languages/turkish.cc	189;"	d	file:
s_20_21	languages/turkish.cc	191;"	d	file:
s_20_22	languages/turkish.cc	193;"	d	file:
s_20_23	languages/turkish.cc	195;"	d	file:
s_20_24	languages/turkish.cc	197;"	d	file:
s_20_25	languages/turkish.cc	199;"	d	file:
s_20_26	languages/turkish.cc	201;"	d	file:
s_20_27	languages/turkish.cc	202;"	d	file:
s_20_28	languages/turkish.cc	203;"	d	file:
s_20_29	languages/turkish.cc	204;"	d	file:
s_20_3	languages/tamil.cc	253;"	d	file:
s_20_3	languages/turkish.cc	155;"	d	file:
s_20_30	languages/turkish.cc	205;"	d	file:
s_20_31	languages/turkish.cc	206;"	d	file:
s_20_4	languages/tamil.cc	255;"	d	file:
s_20_4	languages/turkish.cc	157;"	d	file:
s_20_5	languages/tamil.cc	257;"	d	file:
s_20_5	languages/turkish.cc	159;"	d	file:
s_20_6	languages/tamil.cc	259;"	d	file:
s_20_6	languages/turkish.cc	161;"	d	file:
s_20_7	languages/tamil.cc	261;"	d	file:
s_20_7	languages/turkish.cc	163;"	d	file:
s_20_8	languages/turkish.cc	165;"	d	file:
s_20_9	languages/turkish.cc	167;"	d	file:
s_21	languages/arabic.cc	/^static const symbol s_21[] = { 0xD8, 0xAC };$/;"	v	file:
s_21	languages/earlyenglish.cc	/^static const symbol s_21[] = { 'Y' };$/;"	v	file:
s_21	languages/english.cc	/^static const symbol s_21[] = { 'o', 'g' };$/;"	v	file:
s_21	languages/french.cc	/^static const symbol s_21[] = { 'e', 'a', 'u' };$/;"	v	file:
s_21	languages/kraaij_pohlmann.cc	/^static const symbol s_21[] = { 'l', 'i', 'j', 'k' };$/;"	v	file:
s_21	languages/lovins.cc	/^static const symbol s_21[] = { 'l', 'u', 'c' };$/;"	v	file:
s_21	languages/porter.cc	/^static const symbol s_21[] = { 'Y' };$/;"	v	file:
s_21	languages/tamil.cc	/^static const symbol s_21[] = { 0xE0, 0xAE, 0xB2, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_21_0	languages/arabic.cc	475;"	d	file:
s_21_0	languages/tamil.cc	263;"	d	file:
s_21_0	languages/turkish.cc	207;"	d	file:
s_21_1	languages/tamil.cc	265;"	d	file:
s_21_1	languages/turkish.cc	208;"	d	file:
s_21_2	languages/tamil.cc	267;"	d	file:
s_21_2	languages/turkish.cc	209;"	d	file:
s_21_3	languages/tamil.cc	269;"	d	file:
s_21_3	languages/turkish.cc	211;"	d	file:
s_21_4	languages/tamil.cc	271;"	d	file:
s_21_4	languages/turkish.cc	213;"	d	file:
s_21_5	languages/tamil.cc	273;"	d	file:
s_21_5	languages/turkish.cc	215;"	d	file:
s_21_6	languages/tamil.cc	275;"	d	file:
s_21_6	languages/turkish.cc	217;"	d	file:
s_21_7	languages/tamil.cc	277;"	d	file:
s_21_7	languages/turkish.cc	219;"	d	file:
s_22	languages/arabic.cc	/^static const symbol s_22[] = { 0xD8, 0xAD };$/;"	v	file:
s_22	languages/earlyenglish.cc	/^static const symbol s_22[] = { 'Y' };$/;"	v	file:
s_22	languages/english.cc	/^static const symbol s_22[] = { 'l', 'e', 's', 's' };$/;"	v	file:
s_22	languages/french.cc	/^static const symbol s_22[] = { 'a', 'l' };$/;"	v	file:
s_22	languages/kraaij_pohlmann.cc	/^static const symbol s_22[] = { 'i', 's', 'c', 'h' };$/;"	v	file:
s_22	languages/lovins.cc	/^static const symbol s_22[] = { 'u', 'a', 's' };$/;"	v	file:
s_22	languages/porter.cc	/^static const symbol s_22[] = { 'Y' };$/;"	v	file:
s_22	languages/tamil.cc	/^static const symbol s_22[] = { 0xE0, 0xAE, 0x9F, 0xE0, 0xAF, 0x8D, 0xE0, 0xAE, 0x9F, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_22_0	languages/tamil.cc	279;"	d	file:
s_22_0	languages/turkish.cc	221;"	d	file:
s_22_1	languages/tamil.cc	281;"	d	file:
s_22_1	languages/turkish.cc	223;"	d	file:
s_22_2	languages/turkish.cc	225;"	d	file:
s_22_3	languages/turkish.cc	227;"	d	file:
s_23	languages/arabic.cc	/^static const symbol s_23[] = { 0xD8, 0xAE };$/;"	v	file:
s_23	languages/earlyenglish.cc	/^static const symbol s_23[] = { 'y' };$/;"	v	file:
s_23	languages/english.cc	/^static const symbol s_23[] = { 't', 'i', 'o', 'n' };$/;"	v	file:
s_23	languages/french.cc	/^static const symbol s_23[] = { 'e', 'u', 'x' };$/;"	v	file:
s_23	languages/kraaij_pohlmann.cc	/^static const symbol s_23[] = { 't' };$/;"	v	file:
s_23	languages/lovins.cc	/^static const symbol s_23[] = { 'v', 'a', 's' };$/;"	v	file:
s_23	languages/porter.cc	/^static const symbol s_23[] = { 'y' };$/;"	v	file:
s_23	languages/tamil.cc	/^static const symbol s_23[] = { 0xE0, 0xAE, 0x9F, 0xE0, 0xAF, 0x81 };$/;"	v	file:
s_23_0	languages/tamil.cc	283;"	d	file:
s_23_0	languages/turkish.cc	229;"	d	file:
s_23_1	languages/tamil.cc	285;"	d	file:
s_23_1	languages/turkish.cc	231;"	d	file:
s_23_10	languages/tamil.cc	303;"	d	file:
s_23_11	languages/tamil.cc	305;"	d	file:
s_23_2	languages/tamil.cc	287;"	d	file:
s_23_2	languages/turkish.cc	233;"	d	file:
s_23_3	languages/tamil.cc	289;"	d	file:
s_23_3	languages/turkish.cc	235;"	d	file:
s_23_4	languages/tamil.cc	291;"	d	file:
s_23_5	languages/tamil.cc	293;"	d	file:
s_23_6	languages/tamil.cc	295;"	d	file:
s_23_7	languages/tamil.cc	297;"	d	file:
s_23_8	languages/tamil.cc	299;"	d	file:
s_23_9	languages/tamil.cc	301;"	d	file:
s_24	languages/arabic.cc	/^static const symbol s_24[] = { 0xD8, 0xAF };$/;"	v	file:
s_24	languages/english.cc	/^static const symbol s_24[] = { 'a', 't', 'e' };$/;"	v	file:
s_24	languages/french.cc	/^static const symbol s_24[] = { 'a', 'n', 't' };$/;"	v	file:
s_24	languages/kraaij_pohlmann.cc	/^static const symbol s_24[] = { 's' };$/;"	v	file:
s_24	languages/lovins.cc	/^static const symbol s_24[] = { 'c', 'i', 's' };$/;"	v	file:
s_24	languages/tamil.cc	/^static const symbol s_24[] = { 0xE0, 0xAE, 0xA4, 0xE0, 0xAF, 0x8D, 0xE0, 0xAE, 0xA4, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_24_0	languages/tamil.cc	307;"	d	file:
s_24_1	languages/tamil.cc	309;"	d	file:
s_24_2	languages/tamil.cc	311;"	d	file:
s_24_3	languages/tamil.cc	313;"	d	file:
s_24_4	languages/tamil.cc	315;"	d	file:
s_24_5	languages/tamil.cc	317;"	d	file:
s_24_6	languages/tamil.cc	319;"	d	file:
s_24_7	languages/tamil.cc	321;"	d	file:
s_25	languages/arabic.cc	/^static const symbol s_25[] = { 0xD8, 0xB0 };$/;"	v	file:
s_25	languages/english.cc	/^static const symbol s_25[] = { 'a', 'l' };$/;"	v	file:
s_25	languages/french.cc	/^static const symbol s_25[] = { 'e', 'n', 't' };$/;"	v	file:
s_25	languages/kraaij_pohlmann.cc	/^static const symbol s_25[] = { 'r' };$/;"	v	file:
s_25	languages/lovins.cc	/^static const symbol s_25[] = { 'l', 'i', 's' };$/;"	v	file:
s_25	languages/tamil.cc	/^static const symbol s_25[] = { 0xE0, 0xAF, 0x88 };$/;"	v	file:
s_25_0	languages/tamil.cc	323;"	d	file:
s_25_1	languages/tamil.cc	325;"	d	file:
s_25_2	languages/tamil.cc	327;"	d	file:
s_25_3	languages/tamil.cc	329;"	d	file:
s_25_4	languages/tamil.cc	330;"	d	file:
s_25_5	languages/tamil.cc	331;"	d	file:
s_26	languages/arabic.cc	/^static const symbol s_26[] = { 0xD8, 0xB1 };$/;"	v	file:
s_26	languages/english.cc	/^static const symbol s_26[] = { 'i', 'c' };$/;"	v	file:
s_26	languages/french.cc	/^static const symbol s_26[] = { 'i' };$/;"	v	file:
s_26	languages/kraaij_pohlmann.cc	/^static const symbol s_26[] = { 'l' };$/;"	v	file:
s_26	languages/lovins.cc	/^static const symbol s_26[] = { 'e', 'r', 'i', 's' };$/;"	v	file:
s_26	languages/tamil.cc	/^static const symbol s_26[] = { 0xE0, 0xAE, 0xAE, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_27	languages/arabic.cc	/^static const symbol s_27[] = { 0xD8, 0xB2 };$/;"	v	file:
s_27	languages/english.cc	/^static const symbol s_27[] = { 's', 'k', 'i' };$/;"	v	file:
s_27	languages/french.cc	/^static const symbol s_27[] = { 'g', 'u' };$/;"	v	file:
s_27	languages/kraaij_pohlmann.cc	/^static const symbol s_27[] = { 'e', 'n' };$/;"	v	file:
s_27	languages/lovins.cc	/^static const symbol s_27[] = { 'p', 'a', 'n', 's' };$/;"	v	file:
s_27	languages/tamil.cc	/^static const symbol s_27[] = { 0xE0, 0xAF, 0x81, 0xE0, 0xAE, 0x95, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_28	languages/arabic.cc	/^static const symbol s_28[] = { 0xD8, 0xB3 };$/;"	v	file:
s_28	languages/english.cc	/^static const symbol s_28[] = { 's', 'k', 'y' };$/;"	v	file:
s_28	languages/french.cc	/^static const symbol s_28[] = { 0xC3, 0xA9 };$/;"	v	file:
s_28	languages/kraaij_pohlmann.cc	/^static const symbol s_28[] = { 'i', 'e', 'f' };$/;"	v	file:
s_28	languages/lovins.cc	/^static const symbol s_28[] = { 'e', 'n', 's' };$/;"	v	file:
s_28	languages/tamil.cc	/^static const symbol s_28[] = { 0xE0, 0xAF, 0x81, 0xE0, 0xAE, 0x95, 0xE0, 0xAF, 0x8D, 0xE0, 0xAE, 0x95, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_29	languages/arabic.cc	/^static const symbol s_29[] = { 0xD8, 0xB4 };$/;"	v	file:
s_29	languages/english.cc	/^static const symbol s_29[] = { 'd', 'i', 'e' };$/;"	v	file:
s_29	languages/french.cc	/^static const symbol s_29[] = { 0xC3, 0xA8 };$/;"	v	file:
s_29	languages/kraaij_pohlmann.cc	/^static const symbol s_29[] = { 'e', 'e', 'r' };$/;"	v	file:
s_29	languages/lovins.cc	/^static const symbol s_29[] = { 'o', 'n', 's' };$/;"	v	file:
s_29	languages/tamil.cc	/^static const symbol s_29[] = { 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_2_0	languages/arabic.cc	341;"	d	file:
s_2_0	languages/armenian.cc	158;"	d	file:
s_2_0	languages/basque.cc	605;"	d	file:
s_2_0	languages/catalan.cc	92;"	d	file:
s_2_0	languages/danish.cc	62;"	d	file:
s_2_0	languages/dutch.cc	33;"	d	file:
s_2_0	languages/earlyenglish.cc	39;"	d	file:
s_2_0	languages/english.cc	19;"	d	file:
s_2_0	languages/finnish.cc	54;"	d	file:
s_2_0	languages/french.cc	21;"	d	file:
s_2_0	languages/german.cc	30;"	d	file:
s_2_0	languages/german2.cc	29;"	d	file:
s_2_0	languages/hungarian.cc	28;"	d	file:
s_2_0	languages/indonesian.cc	50;"	d	file:
s_2_0	languages/irish.cc	77;"	d	file:
s_2_0	languages/italian.cc	25;"	d	file:
s_2_0	languages/kraaij_pohlmann.cc	43;"	d	file:
s_2_0	languages/lithuanian.cc	406;"	d	file:
s_2_0	languages/lovins.cc	633;"	d	file:
s_2_0	languages/nepali.cc	47;"	d	file:
s_2_0	languages/norwegian.cc	54;"	d	file:
s_2_0	languages/porter.cc	39;"	d	file:
s_2_0	languages/portuguese.cc	17;"	d	file:
s_2_0	languages/romanian.cc	41;"	d	file:
s_2_0	languages/russian.cc	68;"	d	file:
s_2_0	languages/spanish.cc	37;"	d	file:
s_2_0	languages/swedish.cc	74;"	d	file:
s_2_0	languages/tamil.cc	33;"	d	file:
s_2_0	languages/turkish.cc	31;"	d	file:
s_2_1	languages/arabic.cc	343;"	d	file:
s_2_1	languages/armenian.cc	160;"	d	file:
s_2_1	languages/basque.cc	607;"	d	file:
s_2_1	languages/catalan.cc	93;"	d	file:
s_2_1	languages/danish.cc	63;"	d	file:
s_2_1	languages/dutch.cc	35;"	d	file:
s_2_1	languages/earlyenglish.cc	40;"	d	file:
s_2_1	languages/english.cc	21;"	d	file:
s_2_1	languages/finnish.cc	56;"	d	file:
s_2_1	languages/french.cc	23;"	d	file:
s_2_1	languages/german.cc	32;"	d	file:
s_2_1	languages/german2.cc	30;"	d	file:
s_2_1	languages/hungarian.cc	30;"	d	file:
s_2_1	languages/indonesian.cc	52;"	d	file:
s_2_1	languages/irish.cc	79;"	d	file:
s_2_1	languages/italian.cc	26;"	d	file:
s_2_1	languages/kraaij_pohlmann.cc	45;"	d	file:
s_2_1	languages/lithuanian.cc	408;"	d	file:
s_2_1	languages/lovins.cc	635;"	d	file:
s_2_1	languages/nepali.cc	49;"	d	file:
s_2_1	languages/norwegian.cc	55;"	d	file:
s_2_1	languages/porter.cc	40;"	d	file:
s_2_1	languages/portuguese.cc	19;"	d	file:
s_2_1	languages/romanian.cc	43;"	d	file:
s_2_1	languages/russian.cc	69;"	d	file:
s_2_1	languages/spanish.cc	39;"	d	file:
s_2_1	languages/swedish.cc	75;"	d	file:
s_2_1	languages/tamil.cc	35;"	d	file:
s_2_1	languages/turkish.cc	33;"	d	file:
s_2_10	languages/armenian.cc	174;"	d	file:
s_2_10	languages/basque.cc	624;"	d	file:
s_2_10	languages/catalan.cc	110;"	d	file:
s_2_10	languages/hungarian.cc	44;"	d	file:
s_2_10	languages/irish.cc	91;"	d	file:
s_2_10	languages/italian.cc	43;"	d	file:
s_2_10	languages/kraaij_pohlmann.cc	63;"	d	file:
s_2_10	languages/lithuanian.cc	426;"	d	file:
s_2_10	languages/norwegian.cc	69;"	d	file:
s_2_10	languages/romanian.cc	61;"	d	file:
s_2_10	languages/spanish.cc	57;"	d	file:
s_2_100	languages/catalan.cc	252;"	d	file:
s_2_101	languages/catalan.cc	254;"	d	file:
s_2_102	languages/catalan.cc	256;"	d	file:
s_2_103	languages/catalan.cc	258;"	d	file:
s_2_104	languages/catalan.cc	259;"	d	file:
s_2_105	languages/catalan.cc	261;"	d	file:
s_2_106	languages/catalan.cc	263;"	d	file:
s_2_107	languages/catalan.cc	264;"	d	file:
s_2_108	languages/catalan.cc	265;"	d	file:
s_2_109	languages/catalan.cc	267;"	d	file:
s_2_11	languages/armenian.cc	176;"	d	file:
s_2_11	languages/basque.cc	625;"	d	file:
s_2_11	languages/catalan.cc	112;"	d	file:
s_2_11	languages/hungarian.cc	46;"	d	file:
s_2_11	languages/irish.cc	93;"	d	file:
s_2_11	languages/italian.cc	45;"	d	file:
s_2_11	languages/kraaij_pohlmann.cc	65;"	d	file:
s_2_11	languages/romanian.cc	63;"	d	file:
s_2_110	languages/catalan.cc	269;"	d	file:
s_2_111	languages/catalan.cc	270;"	d	file:
s_2_112	languages/catalan.cc	272;"	d	file:
s_2_113	languages/catalan.cc	274;"	d	file:
s_2_114	languages/catalan.cc	276;"	d	file:
s_2_115	languages/catalan.cc	277;"	d	file:
s_2_116	languages/catalan.cc	278;"	d	file:
s_2_117	languages/catalan.cc	280;"	d	file:
s_2_118	languages/catalan.cc	282;"	d	file:
s_2_119	languages/catalan.cc	284;"	d	file:
s_2_12	languages/armenian.cc	178;"	d	file:
s_2_12	languages/basque.cc	627;"	d	file:
s_2_12	languages/catalan.cc	114;"	d	file:
s_2_12	languages/hungarian.cc	48;"	d	file:
s_2_12	languages/irish.cc	94;"	d	file:
s_2_12	languages/italian.cc	47;"	d	file:
s_2_12	languages/kraaij_pohlmann.cc	67;"	d	file:
s_2_12	languages/romanian.cc	65;"	d	file:
s_2_120	languages/catalan.cc	286;"	d	file:
s_2_121	languages/catalan.cc	288;"	d	file:
s_2_122	languages/catalan.cc	290;"	d	file:
s_2_123	languages/catalan.cc	292;"	d	file:
s_2_124	languages/catalan.cc	294;"	d	file:
s_2_125	languages/catalan.cc	295;"	d	file:
s_2_126	languages/catalan.cc	297;"	d	file:
s_2_127	languages/catalan.cc	299;"	d	file:
s_2_128	languages/catalan.cc	300;"	d	file:
s_2_129	languages/catalan.cc	302;"	d	file:
s_2_13	languages/armenian.cc	180;"	d	file:
s_2_13	languages/basque.cc	628;"	d	file:
s_2_13	languages/catalan.cc	116;"	d	file:
s_2_13	languages/hungarian.cc	50;"	d	file:
s_2_13	languages/irish.cc	95;"	d	file:
s_2_13	languages/italian.cc	48;"	d	file:
s_2_13	languages/kraaij_pohlmann.cc	69;"	d	file:
s_2_13	languages/romanian.cc	67;"	d	file:
s_2_130	languages/catalan.cc	303;"	d	file:
s_2_131	languages/catalan.cc	305;"	d	file:
s_2_132	languages/catalan.cc	307;"	d	file:
s_2_133	languages/catalan.cc	309;"	d	file:
s_2_134	languages/catalan.cc	311;"	d	file:
s_2_135	languages/catalan.cc	313;"	d	file:
s_2_136	languages/catalan.cc	315;"	d	file:
s_2_137	languages/catalan.cc	317;"	d	file:
s_2_138	languages/catalan.cc	319;"	d	file:
s_2_139	languages/catalan.cc	320;"	d	file:
s_2_14	languages/armenian.cc	182;"	d	file:
s_2_14	languages/basque.cc	630;"	d	file:
s_2_14	languages/catalan.cc	118;"	d	file:
s_2_14	languages/hungarian.cc	51;"	d	file:
s_2_14	languages/irish.cc	97;"	d	file:
s_2_14	languages/italian.cc	50;"	d	file:
s_2_14	languages/romanian.cc	69;"	d	file:
s_2_140	languages/catalan.cc	322;"	d	file:
s_2_141	languages/catalan.cc	324;"	d	file:
s_2_142	languages/catalan.cc	325;"	d	file:
s_2_143	languages/catalan.cc	326;"	d	file:
s_2_144	languages/catalan.cc	328;"	d	file:
s_2_145	languages/catalan.cc	329;"	d	file:
s_2_146	languages/catalan.cc	330;"	d	file:
s_2_147	languages/catalan.cc	332;"	d	file:
s_2_148	languages/catalan.cc	334;"	d	file:
s_2_149	languages/catalan.cc	336;"	d	file:
s_2_15	languages/armenian.cc	183;"	d	file:
s_2_15	languages/basque.cc	632;"	d	file:
s_2_15	languages/catalan.cc	120;"	d	file:
s_2_15	languages/hungarian.cc	53;"	d	file:
s_2_15	languages/irish.cc	99;"	d	file:
s_2_15	languages/italian.cc	52;"	d	file:
s_2_15	languages/romanian.cc	71;"	d	file:
s_2_150	languages/catalan.cc	338;"	d	file:
s_2_151	languages/catalan.cc	340;"	d	file:
s_2_152	languages/catalan.cc	342;"	d	file:
s_2_153	languages/catalan.cc	343;"	d	file:
s_2_154	languages/catalan.cc	344;"	d	file:
s_2_155	languages/catalan.cc	346;"	d	file:
s_2_156	languages/catalan.cc	348;"	d	file:
s_2_157	languages/catalan.cc	349;"	d	file:
s_2_158	languages/catalan.cc	350;"	d	file:
s_2_159	languages/catalan.cc	352;"	d	file:
s_2_16	languages/armenian.cc	185;"	d	file:
s_2_16	languages/basque.cc	634;"	d	file:
s_2_16	languages/catalan.cc	122;"	d	file:
s_2_16	languages/hungarian.cc	54;"	d	file:
s_2_16	languages/irish.cc	100;"	d	file:
s_2_16	languages/italian.cc	54;"	d	file:
s_2_16	languages/romanian.cc	73;"	d	file:
s_2_160	languages/catalan.cc	353;"	d	file:
s_2_161	languages/catalan.cc	355;"	d	file:
s_2_162	languages/catalan.cc	357;"	d	file:
s_2_163	languages/catalan.cc	359;"	d	file:
s_2_164	languages/catalan.cc	361;"	d	file:
s_2_165	languages/catalan.cc	362;"	d	file:
s_2_166	languages/catalan.cc	363;"	d	file:
s_2_167	languages/catalan.cc	365;"	d	file:
s_2_168	languages/catalan.cc	367;"	d	file:
s_2_169	languages/catalan.cc	369;"	d	file:
s_2_17	languages/armenian.cc	187;"	d	file:
s_2_17	languages/basque.cc	635;"	d	file:
s_2_17	languages/catalan.cc	124;"	d	file:
s_2_17	languages/hungarian.cc	56;"	d	file:
s_2_17	languages/irish.cc	102;"	d	file:
s_2_17	languages/italian.cc	56;"	d	file:
s_2_17	languages/romanian.cc	75;"	d	file:
s_2_170	languages/catalan.cc	370;"	d	file:
s_2_171	languages/catalan.cc	372;"	d	file:
s_2_172	languages/catalan.cc	374;"	d	file:
s_2_173	languages/catalan.cc	376;"	d	file:
s_2_174	languages/catalan.cc	378;"	d	file:
s_2_175	languages/catalan.cc	379;"	d	file:
s_2_176	languages/catalan.cc	381;"	d	file:
s_2_177	languages/catalan.cc	383;"	d	file:
s_2_178	languages/catalan.cc	384;"	d	file:
s_2_179	languages/catalan.cc	385;"	d	file:
s_2_18	languages/armenian.cc	189;"	d	file:
s_2_18	languages/basque.cc	637;"	d	file:
s_2_18	languages/catalan.cc	125;"	d	file:
s_2_18	languages/hungarian.cc	58;"	d	file:
s_2_18	languages/irish.cc	104;"	d	file:
s_2_18	languages/italian.cc	58;"	d	file:
s_2_18	languages/romanian.cc	77;"	d	file:
s_2_180	languages/catalan.cc	386;"	d	file:
s_2_181	languages/catalan.cc	387;"	d	file:
s_2_182	languages/catalan.cc	388;"	d	file:
s_2_183	languages/catalan.cc	389;"	d	file:
s_2_184	languages/catalan.cc	390;"	d	file:
s_2_185	languages/catalan.cc	391;"	d	file:
s_2_186	languages/catalan.cc	393;"	d	file:
s_2_187	languages/catalan.cc	394;"	d	file:
s_2_188	languages/catalan.cc	395;"	d	file:
s_2_189	languages/catalan.cc	397;"	d	file:
s_2_19	languages/armenian.cc	191;"	d	file:
s_2_19	languages/catalan.cc	126;"	d	file:
s_2_19	languages/hungarian.cc	60;"	d	file:
s_2_19	languages/irish.cc	106;"	d	file:
s_2_19	languages/italian.cc	60;"	d	file:
s_2_19	languages/romanian.cc	78;"	d	file:
s_2_190	languages/catalan.cc	398;"	d	file:
s_2_191	languages/catalan.cc	400;"	d	file:
s_2_192	languages/catalan.cc	402;"	d	file:
s_2_193	languages/catalan.cc	404;"	d	file:
s_2_194	languages/catalan.cc	405;"	d	file:
s_2_195	languages/catalan.cc	407;"	d	file:
s_2_196	languages/catalan.cc	408;"	d	file:
s_2_197	languages/catalan.cc	409;"	d	file:
s_2_198	languages/catalan.cc	410;"	d	file:
s_2_199	languages/catalan.cc	411;"	d	file:
s_2_2	languages/arabic.cc	345;"	d	file:
s_2_2	languages/armenian.cc	161;"	d	file:
s_2_2	languages/basque.cc	609;"	d	file:
s_2_2	languages/catalan.cc	95;"	d	file:
s_2_2	languages/danish.cc	64;"	d	file:
s_2_2	languages/dutch.cc	37;"	d	file:
s_2_2	languages/earlyenglish.cc	42;"	d	file:
s_2_2	languages/english.cc	22;"	d	file:
s_2_2	languages/finnish.cc	58;"	d	file:
s_2_2	languages/french.cc	25;"	d	file:
s_2_2	languages/german.cc	34;"	d	file:
s_2_2	languages/german2.cc	32;"	d	file:
s_2_2	languages/hungarian.cc	31;"	d	file:
s_2_2	languages/indonesian.cc	53;"	d	file:
s_2_2	languages/irish.cc	81;"	d	file:
s_2_2	languages/italian.cc	28;"	d	file:
s_2_2	languages/kraaij_pohlmann.cc	47;"	d	file:
s_2_2	languages/lithuanian.cc	410;"	d	file:
s_2_2	languages/lovins.cc	637;"	d	file:
s_2_2	languages/nepali.cc	51;"	d	file:
s_2_2	languages/norwegian.cc	57;"	d	file:
s_2_2	languages/porter.cc	42;"	d	file:
s_2_2	languages/portuguese.cc	21;"	d	file:
s_2_2	languages/romanian.cc	45;"	d	file:
s_2_2	languages/russian.cc	71;"	d	file:
s_2_2	languages/spanish.cc	41;"	d	file:
s_2_2	languages/swedish.cc	77;"	d	file:
s_2_2	languages/tamil.cc	37;"	d	file:
s_2_2	languages/turkish.cc	35;"	d	file:
s_2_20	languages/armenian.cc	193;"	d	file:
s_2_20	languages/catalan.cc	128;"	d	file:
s_2_20	languages/hungarian.cc	62;"	d	file:
s_2_20	languages/irish.cc	107;"	d	file:
s_2_20	languages/italian.cc	62;"	d	file:
s_2_20	languages/romanian.cc	80;"	d	file:
s_2_21	languages/armenian.cc	195;"	d	file:
s_2_21	languages/catalan.cc	130;"	d	file:
s_2_21	languages/hungarian.cc	64;"	d	file:
s_2_21	languages/irish.cc	108;"	d	file:
s_2_21	languages/italian.cc	63;"	d	file:
s_2_21	languages/romanian.cc	82;"	d	file:
s_2_22	languages/armenian.cc	197;"	d	file:
s_2_22	languages/catalan.cc	132;"	d	file:
s_2_22	languages/hungarian.cc	66;"	d	file:
s_2_22	languages/irish.cc	109;"	d	file:
s_2_22	languages/italian.cc	65;"	d	file:
s_2_22	languages/romanian.cc	84;"	d	file:
s_2_23	languages/armenian.cc	199;"	d	file:
s_2_23	languages/catalan.cc	133;"	d	file:
s_2_23	languages/irish.cc	110;"	d	file:
s_2_23	languages/italian.cc	67;"	d	file:
s_2_23	languages/romanian.cc	86;"	d	file:
s_2_24	languages/armenian.cc	201;"	d	file:
s_2_24	languages/catalan.cc	135;"	d	file:
s_2_24	languages/irish.cc	112;"	d	file:
s_2_24	languages/italian.cc	69;"	d	file:
s_2_24	languages/romanian.cc	88;"	d	file:
s_2_25	languages/armenian.cc	203;"	d	file:
s_2_25	languages/catalan.cc	136;"	d	file:
s_2_25	languages/italian.cc	71;"	d	file:
s_2_25	languages/romanian.cc	90;"	d	file:
s_2_26	languages/armenian.cc	204;"	d	file:
s_2_26	languages/catalan.cc	137;"	d	file:
s_2_26	languages/italian.cc	73;"	d	file:
s_2_26	languages/romanian.cc	92;"	d	file:
s_2_27	languages/armenian.cc	206;"	d	file:
s_2_27	languages/catalan.cc	139;"	d	file:
s_2_27	languages/italian.cc	74;"	d	file:
s_2_27	languages/romanian.cc	94;"	d	file:
s_2_28	languages/armenian.cc	208;"	d	file:
s_2_28	languages/catalan.cc	141;"	d	file:
s_2_28	languages/italian.cc	76;"	d	file:
s_2_28	languages/romanian.cc	96;"	d	file:
s_2_29	languages/armenian.cc	210;"	d	file:
s_2_29	languages/catalan.cc	143;"	d	file:
s_2_29	languages/italian.cc	78;"	d	file:
s_2_29	languages/romanian.cc	98;"	d	file:
s_2_3	languages/arabic.cc	347;"	d	file:
s_2_3	languages/armenian.cc	163;"	d	file:
s_2_3	languages/basque.cc	610;"	d	file:
s_2_3	languages/catalan.cc	97;"	d	file:
s_2_3	languages/danish.cc	66;"	d	file:
s_2_3	languages/earlyenglish.cc	44;"	d	file:
s_2_3	languages/english.cc	24;"	d	file:
s_2_3	languages/finnish.cc	60;"	d	file:
s_2_3	languages/french.cc	27;"	d	file:
s_2_3	languages/german.cc	35;"	d	file:
s_2_3	languages/german2.cc	34;"	d	file:
s_2_3	languages/hungarian.cc	33;"	d	file:
s_2_3	languages/irish.cc	82;"	d	file:
s_2_3	languages/italian.cc	30;"	d	file:
s_2_3	languages/kraaij_pohlmann.cc	49;"	d	file:
s_2_3	languages/lithuanian.cc	412;"	d	file:
s_2_3	languages/lovins.cc	639;"	d	file:
s_2_3	languages/norwegian.cc	58;"	d	file:
s_2_3	languages/portuguese.cc	23;"	d	file:
s_2_3	languages/romanian.cc	47;"	d	file:
s_2_3	languages/russian.cc	73;"	d	file:
s_2_3	languages/spanish.cc	43;"	d	file:
s_2_3	languages/swedish.cc	79;"	d	file:
s_2_3	languages/turkish.cc	37;"	d	file:
s_2_30	languages/armenian.cc	211;"	d	file:
s_2_30	languages/catalan.cc	145;"	d	file:
s_2_30	languages/italian.cc	80;"	d	file:
s_2_30	languages/romanian.cc	100;"	d	file:
s_2_31	languages/armenian.cc	213;"	d	file:
s_2_31	languages/catalan.cc	147;"	d	file:
s_2_31	languages/italian.cc	82;"	d	file:
s_2_31	languages/romanian.cc	102;"	d	file:
s_2_32	languages/armenian.cc	214;"	d	file:
s_2_32	languages/catalan.cc	149;"	d	file:
s_2_32	languages/italian.cc	83;"	d	file:
s_2_32	languages/romanian.cc	104;"	d	file:
s_2_33	languages/armenian.cc	216;"	d	file:
s_2_33	languages/catalan.cc	151;"	d	file:
s_2_33	languages/italian.cc	85;"	d	file:
s_2_33	languages/romanian.cc	106;"	d	file:
s_2_34	languages/armenian.cc	218;"	d	file:
s_2_34	languages/catalan.cc	153;"	d	file:
s_2_34	languages/italian.cc	87;"	d	file:
s_2_34	languages/romanian.cc	108;"	d	file:
s_2_35	languages/armenian.cc	220;"	d	file:
s_2_35	languages/catalan.cc	154;"	d	file:
s_2_35	languages/italian.cc	89;"	d	file:
s_2_35	languages/romanian.cc	109;"	d	file:
s_2_36	languages/armenian.cc	222;"	d	file:
s_2_36	languages/catalan.cc	156;"	d	file:
s_2_36	languages/italian.cc	91;"	d	file:
s_2_36	languages/romanian.cc	110;"	d	file:
s_2_37	languages/armenian.cc	224;"	d	file:
s_2_37	languages/catalan.cc	157;"	d	file:
s_2_37	languages/romanian.cc	111;"	d	file:
s_2_38	languages/armenian.cc	225;"	d	file:
s_2_38	languages/catalan.cc	159;"	d	file:
s_2_38	languages/romanian.cc	112;"	d	file:
s_2_39	languages/armenian.cc	226;"	d	file:
s_2_39	languages/catalan.cc	161;"	d	file:
s_2_39	languages/romanian.cc	113;"	d	file:
s_2_4	languages/arabic.cc	349;"	d	file:
s_2_4	languages/armenian.cc	165;"	d	file:
s_2_4	languages/basque.cc	612;"	d	file:
s_2_4	languages/catalan.cc	99;"	d	file:
s_2_4	languages/danish.cc	68;"	d	file:
s_2_4	languages/earlyenglish.cc	46;"	d	file:
s_2_4	languages/english.cc	26;"	d	file:
s_2_4	languages/finnish.cc	61;"	d	file:
s_2_4	languages/french.cc	29;"	d	file:
s_2_4	languages/german2.cc	36;"	d	file:
s_2_4	languages/hungarian.cc	35;"	d	file:
s_2_4	languages/irish.cc	83;"	d	file:
s_2_4	languages/italian.cc	32;"	d	file:
s_2_4	languages/kraaij_pohlmann.cc	51;"	d	file:
s_2_4	languages/lithuanian.cc	414;"	d	file:
s_2_4	languages/lovins.cc	641;"	d	file:
s_2_4	languages/norwegian.cc	60;"	d	file:
s_2_4	languages/romanian.cc	49;"	d	file:
s_2_4	languages/russian.cc	74;"	d	file:
s_2_4	languages/spanish.cc	45;"	d	file:
s_2_4	languages/swedish.cc	81;"	d	file:
s_2_40	languages/catalan.cc	162;"	d	file:
s_2_40	languages/romanian.cc	114;"	d	file:
s_2_41	languages/catalan.cc	164;"	d	file:
s_2_41	languages/romanian.cc	115;"	d	file:
s_2_42	languages/catalan.cc	166;"	d	file:
s_2_42	languages/romanian.cc	116;"	d	file:
s_2_43	languages/catalan.cc	168;"	d	file:
s_2_43	languages/romanian.cc	118;"	d	file:
s_2_44	languages/catalan.cc	169;"	d	file:
s_2_44	languages/romanian.cc	120;"	d	file:
s_2_45	languages/catalan.cc	171;"	d	file:
s_2_45	languages/romanian.cc	122;"	d	file:
s_2_46	languages/catalan.cc	172;"	d	file:
s_2_47	languages/catalan.cc	174;"	d	file:
s_2_48	languages/catalan.cc	175;"	d	file:
s_2_49	languages/catalan.cc	177;"	d	file:
s_2_5	languages/armenian.cc	167;"	d	file:
s_2_5	languages/basque.cc	614;"	d	file:
s_2_5	languages/catalan.cc	101;"	d	file:
s_2_5	languages/english.cc	27;"	d	file:
s_2_5	languages/finnish.cc	63;"	d	file:
s_2_5	languages/french.cc	31;"	d	file:
s_2_5	languages/german2.cc	37;"	d	file:
s_2_5	languages/hungarian.cc	36;"	d	file:
s_2_5	languages/irish.cc	85;"	d	file:
s_2_5	languages/italian.cc	34;"	d	file:
s_2_5	languages/kraaij_pohlmann.cc	53;"	d	file:
s_2_5	languages/lithuanian.cc	416;"	d	file:
s_2_5	languages/lovins.cc	643;"	d	file:
s_2_5	languages/norwegian.cc	61;"	d	file:
s_2_5	languages/romanian.cc	51;"	d	file:
s_2_5	languages/russian.cc	75;"	d	file:
s_2_5	languages/spanish.cc	47;"	d	file:
s_2_50	languages/catalan.cc	178;"	d	file:
s_2_51	languages/catalan.cc	179;"	d	file:
s_2_52	languages/catalan.cc	180;"	d	file:
s_2_53	languages/catalan.cc	181;"	d	file:
s_2_54	languages/catalan.cc	182;"	d	file:
s_2_55	languages/catalan.cc	184;"	d	file:
s_2_56	languages/catalan.cc	186;"	d	file:
s_2_57	languages/catalan.cc	188;"	d	file:
s_2_58	languages/catalan.cc	189;"	d	file:
s_2_59	languages/catalan.cc	190;"	d	file:
s_2_6	languages/armenian.cc	168;"	d	file:
s_2_6	languages/basque.cc	616;"	d	file:
s_2_6	languages/catalan.cc	103;"	d	file:
s_2_6	languages/german2.cc	38;"	d	file:
s_2_6	languages/hungarian.cc	38;"	d	file:
s_2_6	languages/irish.cc	86;"	d	file:
s_2_6	languages/italian.cc	36;"	d	file:
s_2_6	languages/kraaij_pohlmann.cc	55;"	d	file:
s_2_6	languages/lithuanian.cc	418;"	d	file:
s_2_6	languages/lovins.cc	645;"	d	file:
s_2_6	languages/norwegian.cc	63;"	d	file:
s_2_6	languages/romanian.cc	53;"	d	file:
s_2_6	languages/russian.cc	77;"	d	file:
s_2_6	languages/spanish.cc	49;"	d	file:
s_2_60	languages/catalan.cc	191;"	d	file:
s_2_61	languages/catalan.cc	192;"	d	file:
s_2_62	languages/catalan.cc	193;"	d	file:
s_2_63	languages/catalan.cc	194;"	d	file:
s_2_64	languages/catalan.cc	195;"	d	file:
s_2_65	languages/catalan.cc	196;"	d	file:
s_2_66	languages/catalan.cc	197;"	d	file:
s_2_67	languages/catalan.cc	198;"	d	file:
s_2_68	languages/catalan.cc	199;"	d	file:
s_2_69	languages/catalan.cc	200;"	d	file:
s_2_7	languages/armenian.cc	169;"	d	file:
s_2_7	languages/basque.cc	618;"	d	file:
s_2_7	languages/catalan.cc	105;"	d	file:
s_2_7	languages/hungarian.cc	40;"	d	file:
s_2_7	languages/irish.cc	88;"	d	file:
s_2_7	languages/italian.cc	37;"	d	file:
s_2_7	languages/kraaij_pohlmann.cc	57;"	d	file:
s_2_7	languages/lithuanian.cc	420;"	d	file:
s_2_7	languages/lovins.cc	647;"	d	file:
s_2_7	languages/norwegian.cc	65;"	d	file:
s_2_7	languages/romanian.cc	55;"	d	file:
s_2_7	languages/russian.cc	79;"	d	file:
s_2_7	languages/spanish.cc	51;"	d	file:
s_2_70	languages/catalan.cc	201;"	d	file:
s_2_71	languages/catalan.cc	203;"	d	file:
s_2_72	languages/catalan.cc	205;"	d	file:
s_2_73	languages/catalan.cc	207;"	d	file:
s_2_74	languages/catalan.cc	208;"	d	file:
s_2_75	languages/catalan.cc	209;"	d	file:
s_2_76	languages/catalan.cc	210;"	d	file:
s_2_77	languages/catalan.cc	212;"	d	file:
s_2_78	languages/catalan.cc	213;"	d	file:
s_2_79	languages/catalan.cc	215;"	d	file:
s_2_8	languages/armenian.cc	171;"	d	file:
s_2_8	languages/basque.cc	620;"	d	file:
s_2_8	languages/catalan.cc	107;"	d	file:
s_2_8	languages/hungarian.cc	41;"	d	file:
s_2_8	languages/irish.cc	89;"	d	file:
s_2_8	languages/italian.cc	39;"	d	file:
s_2_8	languages/kraaij_pohlmann.cc	59;"	d	file:
s_2_8	languages/lithuanian.cc	422;"	d	file:
s_2_8	languages/lovins.cc	649;"	d	file:
s_2_8	languages/norwegian.cc	66;"	d	file:
s_2_8	languages/romanian.cc	57;"	d	file:
s_2_8	languages/spanish.cc	53;"	d	file:
s_2_80	languages/catalan.cc	217;"	d	file:
s_2_81	languages/catalan.cc	219;"	d	file:
s_2_82	languages/catalan.cc	221;"	d	file:
s_2_83	languages/catalan.cc	223;"	d	file:
s_2_84	languages/catalan.cc	224;"	d	file:
s_2_85	languages/catalan.cc	225;"	d	file:
s_2_86	languages/catalan.cc	226;"	d	file:
s_2_87	languages/catalan.cc	227;"	d	file:
s_2_88	languages/catalan.cc	229;"	d	file:
s_2_89	languages/catalan.cc	230;"	d	file:
s_2_9	languages/armenian.cc	173;"	d	file:
s_2_9	languages/basque.cc	622;"	d	file:
s_2_9	languages/catalan.cc	109;"	d	file:
s_2_9	languages/hungarian.cc	43;"	d	file:
s_2_9	languages/irish.cc	90;"	d	file:
s_2_9	languages/italian.cc	41;"	d	file:
s_2_9	languages/kraaij_pohlmann.cc	61;"	d	file:
s_2_9	languages/lithuanian.cc	424;"	d	file:
s_2_9	languages/lovins.cc	651;"	d	file:
s_2_9	languages/norwegian.cc	68;"	d	file:
s_2_9	languages/romanian.cc	59;"	d	file:
s_2_9	languages/spanish.cc	55;"	d	file:
s_2_90	languages/catalan.cc	232;"	d	file:
s_2_91	languages/catalan.cc	234;"	d	file:
s_2_92	languages/catalan.cc	236;"	d	file:
s_2_93	languages/catalan.cc	238;"	d	file:
s_2_94	languages/catalan.cc	240;"	d	file:
s_2_95	languages/catalan.cc	242;"	d	file:
s_2_96	languages/catalan.cc	244;"	d	file:
s_2_97	languages/catalan.cc	246;"	d	file:
s_2_98	languages/catalan.cc	248;"	d	file:
s_2_99	languages/catalan.cc	250;"	d	file:
s_3	languages/arabic.cc	/^static const symbol s_3[] = { '3' };$/;"	v	file:
s_3	languages/basque.cc	/^static const symbol s_3[] = { 'j', 'o', 'k' };$/;"	v	file:
s_3	languages/catalan.cc	/^static const symbol s_3[] = { 'o' };$/;"	v	file:
s_3	languages/dutch.cc	/^static const symbol s_3[] = { 'o' };$/;"	v	file:
s_3	languages/earlyenglish.cc	/^static const symbol s_3[] = { 'e' };$/;"	v	file:
s_3	languages/english.cc	/^static const symbol s_3[] = { 'i' };$/;"	v	file:
s_3	languages/finnish.cc	/^static const symbol s_3[] = { 0xC3, 0xB6 };$/;"	v	file:
s_3	languages/french.cc	/^static const symbol s_3[] = { 'Y' };$/;"	v	file:
s_3	languages/german.cc	/^static const symbol s_3[] = { 'Y' };$/;"	v	file:
s_3	languages/german2.cc	/^static const symbol s_3[] = { 0xC3, 0xA4 };$/;"	v	file:
s_3	languages/hungarian.cc	/^static const symbol s_3[] = { 'a' };$/;"	v	file:
s_3	languages/indonesian.cc	/^static const symbol s_3[] = { 'p' };$/;"	v	file:
s_3	languages/irish.cc	/^static const symbol s_3[] = { 'c' };$/;"	v	file:
s_3	languages/italian.cc	/^static const symbol s_3[] = { 0xC3, 0xB2 };$/;"	v	file:
s_3	languages/kraaij_pohlmann.cc	/^static const symbol s_3[] = { 'i', 'e' };$/;"	v	file:
s_3	languages/lithuanian.cc	/^static const symbol s_3[] = { 'e', 's', 'y', 's' };$/;"	v	file:
s_3	languages/lovins.cc	/^static const symbol s_3[] = { 'm', 'e', 't' };$/;"	v	file:
s_3	languages/nepali.cc	/^static const symbol s_3[] = { 0xE0, 0xA4, 0x9B, 0xE0, 0xA5, 0x8C };$/;"	v	file:
s_3	languages/porter.cc	/^static const symbol s_3[] = { 'e' };$/;"	v	file:
s_3	languages/portuguese.cc	/^static const symbol s_3[] = { 0xC3, 0xB5 };$/;"	v	file:
s_3	languages/romanian.cc	/^static const symbol s_3[] = { 'u' };$/;"	v	file:
s_3	languages/russian.cc	/^static const symbol s_3[] = { 0xD1, 0x8F };$/;"	v	file:
s_3	languages/spanish.cc	/^static const symbol s_3[] = { 'o' };$/;"	v	file:
s_3	languages/tamil.cc	/^static const symbol s_3[] = { 0xE0, 0xAE, 0xB5, 0xE0, 0xAF, 0x8A };$/;"	v	file:
s_3	languages/turkish.cc	/^static const symbol s_3[] = { 'k', 'i' };$/;"	v	file:
s_30	languages/arabic.cc	/^static const symbol s_30[] = { 0xD8, 0xB5 };$/;"	v	file:
s_30	languages/english.cc	/^static const symbol s_30[] = { 'l', 'i', 'e' };$/;"	v	file:
s_30	languages/french.cc	/^static const symbol s_30[] = { 'e' };$/;"	v	file:
s_30	languages/kraaij_pohlmann.cc	/^static const symbol s_30[] = { 'r' };$/;"	v	file:
s_30	languages/lovins.cc	/^static const symbol s_30[] = { 'l', 'u', 's' };$/;"	v	file:
s_30	languages/tamil.cc	/^static const symbol s_30[] = { 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_31	languages/arabic.cc	/^static const symbol s_31[] = { 0xD8, 0xB6 };$/;"	v	file:
s_31	languages/english.cc	/^static const symbol s_31[] = { 't', 'i', 'e' };$/;"	v	file:
s_31	languages/french.cc	/^static const symbol s_31[] = { 'i' };$/;"	v	file:
s_31	languages/kraaij_pohlmann.cc	/^static const symbol s_31[] = { 'a', 'a', 'r' };$/;"	v	file:
s_31	languages/lovins.cc	/^static const symbol s_31[] = { 'r', 'u', 's' };$/;"	v	file:
s_31	languages/tamil.cc	/^static const symbol s_31[] = { 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_32	languages/arabic.cc	/^static const symbol s_32[] = { 0xD8, 0xB7 };$/;"	v	file:
s_32	languages/english.cc	/^static const symbol s_32[] = { 'i', 'd', 'l' };$/;"	v	file:
s_32	languages/french.cc	/^static const symbol s_32[] = { 0xC3, 0xA7 };$/;"	v	file:
s_32	languages/kraaij_pohlmann.cc	/^static const symbol s_32[] = { 'f' };$/;"	v	file:
s_32	languages/lovins.cc	/^static const symbol s_32[] = { 'h', 'e', 's' };$/;"	v	file:
s_32	languages/tamil.cc	/^static const symbol s_32[] = { 0xE0, 0xAF, 0x81, 0xE0, 0xAE, 0x95, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_33	languages/arabic.cc	/^static const symbol s_33[] = { 0xD8, 0xB8 };$/;"	v	file:
s_33	languages/english.cc	/^static const symbol s_33[] = { 'g', 'e', 'n', 't', 'l' };$/;"	v	file:
s_33	languages/french.cc	/^static const symbol s_33[] = { 'c' };$/;"	v	file:
s_33	languages/kraaij_pohlmann.cc	/^static const symbol s_33[] = { 'g' };$/;"	v	file:
s_33	languages/lovins.cc	/^static const symbol s_33[] = { 'm', 'i', 's' };$/;"	v	file:
s_33	languages/tamil.cc	/^static const symbol s_33[] = { 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_34	languages/arabic.cc	/^static const symbol s_34[] = { 0xD8, 0xB9 };$/;"	v	file:
s_34	languages/english.cc	/^static const symbol s_34[] = { 'u', 'g', 'l', 'i' };$/;"	v	file:
s_34	languages/kraaij_pohlmann.cc	/^static const symbol s_34[] = { 't' };$/;"	v	file:
s_34	languages/lovins.cc	/^static const symbol s_34[] = { 'e', 'n', 's' };$/;"	v	file:
s_34	languages/tamil.cc	/^static const symbol s_34[] = { 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_35	languages/arabic.cc	/^static const symbol s_35[] = { 0xD8, 0xBA };$/;"	v	file:
s_35	languages/english.cc	/^static const symbol s_35[] = { 'e', 'a', 'r', 'l', 'i' };$/;"	v	file:
s_35	languages/kraaij_pohlmann.cc	/^static const symbol s_35[] = { 'd' };$/;"	v	file:
s_35	languages/lovins.cc	/^static const symbol s_35[] = { 'e', 'r', 's' };$/;"	v	file:
s_35	languages/tamil.cc	/^static const symbol s_35[] = { 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_36	languages/arabic.cc	/^static const symbol s_36[] = { 0xD9, 0x81 };$/;"	v	file:
s_36	languages/english.cc	/^static const symbol s_36[] = { 'o', 'n', 'l', 'i' };$/;"	v	file:
s_36	languages/kraaij_pohlmann.cc	/^static const symbol s_36[] = { 'i', 'e' };$/;"	v	file:
s_36	languages/lovins.cc	/^static const symbol s_36[] = { 'e', 's' };$/;"	v	file:
s_36	languages/tamil.cc	/^static const symbol s_36[] = { 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_37	languages/arabic.cc	/^static const symbol s_37[] = { 0xD9, 0x82 };$/;"	v	file:
s_37	languages/english.cc	/^static const symbol s_37[] = { 's', 'i', 'n', 'g', 'l' };$/;"	v	file:
s_37	languages/kraaij_pohlmann.cc	/^static const symbol s_37[] = { 'e', 'e', 'r' };$/;"	v	file:
s_37	languages/lovins.cc	/^static const symbol s_37[] = { 'y', 's' };$/;"	v	file:
s_37	languages/tamil.cc	/^static const symbol s_37[] = { 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_38	languages/arabic.cc	/^static const symbol s_38[] = { 0xD9, 0x83 };$/;"	v	file:
s_38	languages/english.cc	/^static const symbol s_38[] = { 'y' };$/;"	v	file:
s_38	languages/kraaij_pohlmann.cc	/^static const symbol s_38[] = { 'n' };$/;"	v	file:
s_38	languages/tamil.cc	/^static const symbol s_38[] = { 0xE0, 0xAE, 0xA9, 0xE0, 0xAF, 0x81 };$/;"	v	file:
s_39	languages/arabic.cc	/^static const symbol s_39[] = { 0xD9, 0x84 };$/;"	v	file:
s_39	languages/kraaij_pohlmann.cc	/^static const symbol s_39[] = { 'l' };$/;"	v	file:
s_39	languages/tamil.cc	/^static const symbol s_39[] = { 0xE0, 0xAE, 0x99, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_3_0	languages/arabic.cc	351;"	d	file:
s_3_0	languages/armenian.cc	228;"	d	file:
s_3_0	languages/catalan.cc	413;"	d	file:
s_3_0	languages/dutch.cc	39;"	d	file:
s_3_0	languages/earlyenglish.cc	48;"	d	file:
s_3_0	languages/finnish.cc	65;"	d	file:
s_3_0	languages/french.cc	33;"	d	file:
s_3_0	languages/german.cc	37;"	d	file:
s_3_0	languages/german2.cc	40;"	d	file:
s_3_0	languages/hungarian.cc	67;"	d	file:
s_3_0	languages/indonesian.cc	55;"	d	file:
s_3_0	languages/irish.cc	114;"	d	file:
s_3_0	languages/italian.cc	93;"	d	file:
s_3_0	languages/kraaij_pohlmann.cc	71;"	d	file:
s_3_0	languages/lithuanian.cc	428;"	d	file:
s_3_0	languages/lovins.cc	653;"	d	file:
s_3_0	languages/nepali.cc	53;"	d	file:
s_3_0	languages/porter.cc	44;"	d	file:
s_3_0	languages/portuguese.cc	25;"	d	file:
s_3_0	languages/romanian.cc	124;"	d	file:
s_3_0	languages/russian.cc	81;"	d	file:
s_3_0	languages/spanish.cc	59;"	d	file:
s_3_0	languages/tamil.cc	39;"	d	file:
s_3_0	languages/turkish.cc	39;"	d	file:
s_3_1	languages/arabic.cc	352;"	d	file:
s_3_1	languages/armenian.cc	229;"	d	file:
s_3_1	languages/catalan.cc	414;"	d	file:
s_3_1	languages/dutch.cc	41;"	d	file:
s_3_1	languages/earlyenglish.cc	50;"	d	file:
s_3_1	languages/english.cc	29;"	d	file:
s_3_1	languages/finnish.cc	67;"	d	file:
s_3_1	languages/french.cc	35;"	d	file:
s_3_1	languages/german.cc	39;"	d	file:
s_3_1	languages/german2.cc	42;"	d	file:
s_3_1	languages/hungarian.cc	69;"	d	file:
s_3_1	languages/indonesian.cc	57;"	d	file:
s_3_1	languages/irish.cc	115;"	d	file:
s_3_1	languages/italian.cc	95;"	d	file:
s_3_1	languages/kraaij_pohlmann.cc	73;"	d	file:
s_3_1	languages/lithuanian.cc	430;"	d	file:
s_3_1	languages/lovins.cc	655;"	d	file:
s_3_1	languages/nepali.cc	55;"	d	file:
s_3_1	languages/porter.cc	46;"	d	file:
s_3_1	languages/portuguese.cc	27;"	d	file:
s_3_1	languages/romanian.cc	126;"	d	file:
s_3_1	languages/russian.cc	83;"	d	file:
s_3_1	languages/spanish.cc	61;"	d	file:
s_3_1	languages/tamil.cc	41;"	d	file:
s_3_1	languages/turkish.cc	41;"	d	file:
s_3_10	languages/armenian.cc	243;"	d	file:
s_3_10	languages/catalan.cc	428;"	d	file:
s_3_10	languages/earlyenglish.cc	68;"	d	file:
s_3_10	languages/english.cc	47;"	d	file:
s_3_10	languages/indonesian.cc	72;"	d	file:
s_3_10	languages/irish.cc	131;"	d	file:
s_3_10	languages/kraaij_pohlmann.cc	89;"	d	file:
s_3_10	languages/lovins.cc	673;"	d	file:
s_3_10	languages/nepali.cc	70;"	d	file:
s_3_10	languages/porter.cc	64;"	d	file:
s_3_10	languages/romanian.cc	143;"	d	file:
s_3_100	languages/catalan.cc	577;"	d	file:
s_3_101	languages/catalan.cc	578;"	d	file:
s_3_102	languages/catalan.cc	580;"	d	file:
s_3_103	languages/catalan.cc	581;"	d	file:
s_3_104	languages/catalan.cc	583;"	d	file:
s_3_105	languages/catalan.cc	585;"	d	file:
s_3_106	languages/catalan.cc	587;"	d	file:
s_3_107	languages/catalan.cc	589;"	d	file:
s_3_108	languages/catalan.cc	591;"	d	file:
s_3_109	languages/catalan.cc	593;"	d	file:
s_3_11	languages/armenian.cc	245;"	d	file:
s_3_11	languages/catalan.cc	430;"	d	file:
s_3_11	languages/earlyenglish.cc	69;"	d	file:
s_3_11	languages/english.cc	49;"	d	file:
s_3_11	languages/indonesian.cc	74;"	d	file:
s_3_11	languages/irish.cc	133;"	d	file:
s_3_11	languages/kraaij_pohlmann.cc	91;"	d	file:
s_3_11	languages/lovins.cc	675;"	d	file:
s_3_11	languages/nepali.cc	72;"	d	file:
s_3_11	languages/porter.cc	65;"	d	file:
s_3_11	languages/romanian.cc	144;"	d	file:
s_3_110	languages/catalan.cc	595;"	d	file:
s_3_111	languages/catalan.cc	597;"	d	file:
s_3_112	languages/catalan.cc	599;"	d	file:
s_3_113	languages/catalan.cc	601;"	d	file:
s_3_114	languages/catalan.cc	603;"	d	file:
s_3_115	languages/catalan.cc	605;"	d	file:
s_3_116	languages/catalan.cc	607;"	d	file:
s_3_117	languages/catalan.cc	608;"	d	file:
s_3_118	languages/catalan.cc	609;"	d	file:
s_3_119	languages/catalan.cc	611;"	d	file:
s_3_12	languages/armenian.cc	247;"	d	file:
s_3_12	languages/catalan.cc	431;"	d	file:
s_3_12	languages/earlyenglish.cc	71;"	d	file:
s_3_12	languages/english.cc	51;"	d	file:
s_3_12	languages/kraaij_pohlmann.cc	93;"	d	file:
s_3_12	languages/lovins.cc	677;"	d	file:
s_3_12	languages/nepali.cc	74;"	d	file:
s_3_12	languages/porter.cc	67;"	d	file:
s_3_12	languages/romanian.cc	146;"	d	file:
s_3_120	languages/catalan.cc	613;"	d	file:
s_3_121	languages/catalan.cc	615;"	d	file:
s_3_122	languages/catalan.cc	616;"	d	file:
s_3_123	languages/catalan.cc	618;"	d	file:
s_3_124	languages/catalan.cc	620;"	d	file:
s_3_125	languages/catalan.cc	622;"	d	file:
s_3_126	languages/catalan.cc	623;"	d	file:
s_3_127	languages/catalan.cc	625;"	d	file:
s_3_128	languages/catalan.cc	626;"	d	file:
s_3_129	languages/catalan.cc	628;"	d	file:
s_3_13	languages/armenian.cc	249;"	d	file:
s_3_13	languages/catalan.cc	432;"	d	file:
s_3_13	languages/earlyenglish.cc	73;"	d	file:
s_3_13	languages/kraaij_pohlmann.cc	95;"	d	file:
s_3_13	languages/lovins.cc	679;"	d	file:
s_3_13	languages/nepali.cc	76;"	d	file:
s_3_13	languages/porter.cc	69;"	d	file:
s_3_13	languages/romanian.cc	148;"	d	file:
s_3_130	languages/catalan.cc	629;"	d	file:
s_3_131	languages/catalan.cc	630;"	d	file:
s_3_132	languages/catalan.cc	631;"	d	file:
s_3_133	languages/catalan.cc	633;"	d	file:
s_3_134	languages/catalan.cc	635;"	d	file:
s_3_135	languages/catalan.cc	637;"	d	file:
s_3_136	languages/catalan.cc	639;"	d	file:
s_3_137	languages/catalan.cc	641;"	d	file:
s_3_138	languages/catalan.cc	642;"	d	file:
s_3_139	languages/catalan.cc	644;"	d	file:
s_3_14	languages/armenian.cc	250;"	d	file:
s_3_14	languages/catalan.cc	433;"	d	file:
s_3_14	languages/earlyenglish.cc	74;"	d	file:
s_3_14	languages/kraaij_pohlmann.cc	97;"	d	file:
s_3_14	languages/lovins.cc	681;"	d	file:
s_3_14	languages/nepali.cc	78;"	d	file:
s_3_14	languages/porter.cc	70;"	d	file:
s_3_14	languages/romanian.cc	150;"	d	file:
s_3_140	languages/catalan.cc	646;"	d	file:
s_3_141	languages/catalan.cc	648;"	d	file:
s_3_142	languages/catalan.cc	650;"	d	file:
s_3_143	languages/catalan.cc	651;"	d	file:
s_3_144	languages/catalan.cc	653;"	d	file:
s_3_145	languages/catalan.cc	655;"	d	file:
s_3_146	languages/catalan.cc	657;"	d	file:
s_3_147	languages/catalan.cc	659;"	d	file:
s_3_148	languages/catalan.cc	661;"	d	file:
s_3_149	languages/catalan.cc	662;"	d	file:
s_3_15	languages/armenian.cc	252;"	d	file:
s_3_15	languages/catalan.cc	435;"	d	file:
s_3_15	languages/earlyenglish.cc	76;"	d	file:
s_3_15	languages/kraaij_pohlmann.cc	99;"	d	file:
s_3_15	languages/lovins.cc	683;"	d	file:
s_3_15	languages/nepali.cc	79;"	d	file:
s_3_15	languages/porter.cc	72;"	d	file:
s_3_15	languages/romanian.cc	152;"	d	file:
s_3_150	languages/catalan.cc	664;"	d	file:
s_3_151	languages/catalan.cc	666;"	d	file:
s_3_152	languages/catalan.cc	668;"	d	file:
s_3_153	languages/catalan.cc	670;"	d	file:
s_3_154	languages/catalan.cc	672;"	d	file:
s_3_155	languages/catalan.cc	674;"	d	file:
s_3_156	languages/catalan.cc	676;"	d	file:
s_3_157	languages/catalan.cc	678;"	d	file:
s_3_158	languages/catalan.cc	680;"	d	file:
s_3_159	languages/catalan.cc	682;"	d	file:
s_3_16	languages/armenian.cc	253;"	d	file:
s_3_16	languages/catalan.cc	437;"	d	file:
s_3_16	languages/earlyenglish.cc	78;"	d	file:
s_3_16	languages/lovins.cc	685;"	d	file:
s_3_16	languages/nepali.cc	81;"	d	file:
s_3_16	languages/porter.cc	74;"	d	file:
s_3_16	languages/romanian.cc	154;"	d	file:
s_3_160	languages/catalan.cc	684;"	d	file:
s_3_161	languages/catalan.cc	686;"	d	file:
s_3_162	languages/catalan.cc	687;"	d	file:
s_3_163	languages/catalan.cc	689;"	d	file:
s_3_164	languages/catalan.cc	691;"	d	file:
s_3_165	languages/catalan.cc	693;"	d	file:
s_3_166	languages/catalan.cc	694;"	d	file:
s_3_167	languages/catalan.cc	696;"	d	file:
s_3_168	languages/catalan.cc	698;"	d	file:
s_3_169	languages/catalan.cc	700;"	d	file:
s_3_17	languages/armenian.cc	254;"	d	file:
s_3_17	languages/catalan.cc	439;"	d	file:
s_3_17	languages/earlyenglish.cc	80;"	d	file:
s_3_17	languages/lovins.cc	686;"	d	file:
s_3_17	languages/nepali.cc	82;"	d	file:
s_3_17	languages/porter.cc	76;"	d	file:
s_3_17	languages/romanian.cc	156;"	d	file:
s_3_170	languages/catalan.cc	702;"	d	file:
s_3_171	languages/catalan.cc	704;"	d	file:
s_3_172	languages/catalan.cc	706;"	d	file:
s_3_173	languages/catalan.cc	707;"	d	file:
s_3_174	languages/catalan.cc	709;"	d	file:
s_3_175	languages/catalan.cc	711;"	d	file:
s_3_176	languages/catalan.cc	713;"	d	file:
s_3_177	languages/catalan.cc	715;"	d	file:
s_3_178	languages/catalan.cc	717;"	d	file:
s_3_179	languages/catalan.cc	719;"	d	file:
s_3_18	languages/armenian.cc	256;"	d	file:
s_3_18	languages/catalan.cc	441;"	d	file:
s_3_18	languages/earlyenglish.cc	82;"	d	file:
s_3_18	languages/lovins.cc	688;"	d	file:
s_3_18	languages/nepali.cc	83;"	d	file:
s_3_18	languages/porter.cc	78;"	d	file:
s_3_18	languages/romanian.cc	157;"	d	file:
s_3_180	languages/catalan.cc	721;"	d	file:
s_3_181	languages/catalan.cc	723;"	d	file:
s_3_182	languages/catalan.cc	724;"	d	file:
s_3_183	languages/catalan.cc	726;"	d	file:
s_3_184	languages/catalan.cc	728;"	d	file:
s_3_185	languages/catalan.cc	730;"	d	file:
s_3_186	languages/catalan.cc	732;"	d	file:
s_3_187	languages/catalan.cc	734;"	d	file:
s_3_188	languages/catalan.cc	736;"	d	file:
s_3_189	languages/catalan.cc	738;"	d	file:
s_3_19	languages/armenian.cc	258;"	d	file:
s_3_19	languages/catalan.cc	443;"	d	file:
s_3_19	languages/earlyenglish.cc	84;"	d	file:
s_3_19	languages/lovins.cc	690;"	d	file:
s_3_19	languages/nepali.cc	85;"	d	file:
s_3_19	languages/porter.cc	80;"	d	file:
s_3_19	languages/romanian.cc	159;"	d	file:
s_3_190	languages/catalan.cc	740;"	d	file:
s_3_191	languages/catalan.cc	742;"	d	file:
s_3_192	languages/catalan.cc	744;"	d	file:
s_3_193	languages/catalan.cc	746;"	d	file:
s_3_194	languages/catalan.cc	748;"	d	file:
s_3_195	languages/catalan.cc	750;"	d	file:
s_3_196	languages/catalan.cc	752;"	d	file:
s_3_197	languages/catalan.cc	754;"	d	file:
s_3_198	languages/catalan.cc	755;"	d	file:
s_3_199	languages/catalan.cc	757;"	d	file:
s_3_2	languages/arabic.cc	354;"	d	file:
s_3_2	languages/armenian.cc	230;"	d	file:
s_3_2	languages/catalan.cc	416;"	d	file:
s_3_2	languages/dutch.cc	43;"	d	file:
s_3_2	languages/earlyenglish.cc	52;"	d	file:
s_3_2	languages/english.cc	31;"	d	file:
s_3_2	languages/french.cc	37;"	d	file:
s_3_2	languages/german2.cc	44;"	d	file:
s_3_2	languages/indonesian.cc	59;"	d	file:
s_3_2	languages/irish.cc	117;"	d	file:
s_3_2	languages/italian.cc	97;"	d	file:
s_3_2	languages/kraaij_pohlmann.cc	75;"	d	file:
s_3_2	languages/lovins.cc	657;"	d	file:
s_3_2	languages/nepali.cc	56;"	d	file:
s_3_2	languages/porter.cc	48;"	d	file:
s_3_2	languages/portuguese.cc	29;"	d	file:
s_3_2	languages/romanian.cc	128;"	d	file:
s_3_2	languages/spanish.cc	63;"	d	file:
s_3_2	languages/tamil.cc	43;"	d	file:
s_3_2	languages/turkish.cc	43;"	d	file:
s_3_20	languages/armenian.cc	259;"	d	file:
s_3_20	languages/catalan.cc	444;"	d	file:
s_3_20	languages/lovins.cc	692;"	d	file:
s_3_20	languages/nepali.cc	87;"	d	file:
s_3_20	languages/romanian.cc	161;"	d	file:
s_3_200	languages/catalan.cc	759;"	d	file:
s_3_201	languages/catalan.cc	761;"	d	file:
s_3_202	languages/catalan.cc	762;"	d	file:
s_3_203	languages/catalan.cc	764;"	d	file:
s_3_204	languages/catalan.cc	766;"	d	file:
s_3_205	languages/catalan.cc	768;"	d	file:
s_3_206	languages/catalan.cc	770;"	d	file:
s_3_207	languages/catalan.cc	772;"	d	file:
s_3_208	languages/catalan.cc	774;"	d	file:
s_3_209	languages/catalan.cc	776;"	d	file:
s_3_21	languages/armenian.cc	261;"	d	file:
s_3_21	languages/catalan.cc	445;"	d	file:
s_3_21	languages/lovins.cc	694;"	d	file:
s_3_21	languages/nepali.cc	88;"	d	file:
s_3_21	languages/romanian.cc	163;"	d	file:
s_3_210	languages/catalan.cc	778;"	d	file:
s_3_211	languages/catalan.cc	780;"	d	file:
s_3_212	languages/catalan.cc	782;"	d	file:
s_3_213	languages/catalan.cc	783;"	d	file:
s_3_214	languages/catalan.cc	785;"	d	file:
s_3_215	languages/catalan.cc	786;"	d	file:
s_3_216	languages/catalan.cc	788;"	d	file:
s_3_217	languages/catalan.cc	790;"	d	file:
s_3_218	languages/catalan.cc	792;"	d	file:
s_3_219	languages/catalan.cc	793;"	d	file:
s_3_22	languages/armenian.cc	263;"	d	file:
s_3_22	languages/catalan.cc	446;"	d	file:
s_3_22	languages/lovins.cc	696;"	d	file:
s_3_22	languages/nepali.cc	90;"	d	file:
s_3_22	languages/romanian.cc	165;"	d	file:
s_3_220	languages/catalan.cc	795;"	d	file:
s_3_221	languages/catalan.cc	797;"	d	file:
s_3_222	languages/catalan.cc	799;"	d	file:
s_3_223	languages/catalan.cc	801;"	d	file:
s_3_224	languages/catalan.cc	803;"	d	file:
s_3_225	languages/catalan.cc	804;"	d	file:
s_3_226	languages/catalan.cc	806;"	d	file:
s_3_227	languages/catalan.cc	807;"	d	file:
s_3_228	languages/catalan.cc	809;"	d	file:
s_3_229	languages/catalan.cc	810;"	d	file:
s_3_23	languages/armenian.cc	265;"	d	file:
s_3_23	languages/catalan.cc	447;"	d	file:
s_3_23	languages/lovins.cc	698;"	d	file:
s_3_23	languages/nepali.cc	92;"	d	file:
s_3_23	languages/romanian.cc	167;"	d	file:
s_3_230	languages/catalan.cc	811;"	d	file:
s_3_231	languages/catalan.cc	813;"	d	file:
s_3_232	languages/catalan.cc	814;"	d	file:
s_3_233	languages/catalan.cc	816;"	d	file:
s_3_234	languages/catalan.cc	818;"	d	file:
s_3_235	languages/catalan.cc	820;"	d	file:
s_3_236	languages/catalan.cc	821;"	d	file:
s_3_237	languages/catalan.cc	823;"	d	file:
s_3_238	languages/catalan.cc	825;"	d	file:
s_3_239	languages/catalan.cc	827;"	d	file:
s_3_24	languages/armenian.cc	266;"	d	file:
s_3_24	languages/catalan.cc	449;"	d	file:
s_3_24	languages/lovins.cc	700;"	d	file:
s_3_24	languages/nepali.cc	93;"	d	file:
s_3_24	languages/romanian.cc	169;"	d	file:
s_3_240	languages/catalan.cc	829;"	d	file:
s_3_241	languages/catalan.cc	831;"	d	file:
s_3_242	languages/catalan.cc	833;"	d	file:
s_3_243	languages/catalan.cc	835;"	d	file:
s_3_244	languages/catalan.cc	837;"	d	file:
s_3_245	languages/catalan.cc	838;"	d	file:
s_3_246	languages/catalan.cc	840;"	d	file:
s_3_247	languages/catalan.cc	842;"	d	file:
s_3_248	languages/catalan.cc	844;"	d	file:
s_3_249	languages/catalan.cc	846;"	d	file:
s_3_25	languages/armenian.cc	267;"	d	file:
s_3_25	languages/catalan.cc	450;"	d	file:
s_3_25	languages/lovins.cc	702;"	d	file:
s_3_25	languages/nepali.cc	95;"	d	file:
s_3_25	languages/romanian.cc	171;"	d	file:
s_3_250	languages/catalan.cc	848;"	d	file:
s_3_251	languages/catalan.cc	850;"	d	file:
s_3_252	languages/catalan.cc	852;"	d	file:
s_3_253	languages/catalan.cc	854;"	d	file:
s_3_254	languages/catalan.cc	855;"	d	file:
s_3_255	languages/catalan.cc	857;"	d	file:
s_3_256	languages/catalan.cc	858;"	d	file:
s_3_257	languages/catalan.cc	860;"	d	file:
s_3_258	languages/catalan.cc	862;"	d	file:
s_3_259	languages/catalan.cc	864;"	d	file:
s_3_26	languages/armenian.cc	269;"	d	file:
s_3_26	languages/catalan.cc	451;"	d	file:
s_3_26	languages/lovins.cc	704;"	d	file:
s_3_26	languages/nepali.cc	96;"	d	file:
s_3_26	languages/romanian.cc	173;"	d	file:
s_3_260	languages/catalan.cc	866;"	d	file:
s_3_261	languages/catalan.cc	868;"	d	file:
s_3_262	languages/catalan.cc	870;"	d	file:
s_3_263	languages/catalan.cc	872;"	d	file:
s_3_264	languages/catalan.cc	874;"	d	file:
s_3_265	languages/catalan.cc	876;"	d	file:
s_3_266	languages/catalan.cc	877;"	d	file:
s_3_267	languages/catalan.cc	878;"	d	file:
s_3_268	languages/catalan.cc	879;"	d	file:
s_3_269	languages/catalan.cc	880;"	d	file:
s_3_27	languages/armenian.cc	270;"	d	file:
s_3_27	languages/catalan.cc	452;"	d	file:
s_3_27	languages/lovins.cc	705;"	d	file:
s_3_27	languages/nepali.cc	98;"	d	file:
s_3_27	languages/romanian.cc	175;"	d	file:
s_3_270	languages/catalan.cc	882;"	d	file:
s_3_271	languages/catalan.cc	883;"	d	file:
s_3_272	languages/catalan.cc	884;"	d	file:
s_3_273	languages/catalan.cc	886;"	d	file:
s_3_274	languages/catalan.cc	887;"	d	file:
s_3_275	languages/catalan.cc	888;"	d	file:
s_3_276	languages/catalan.cc	889;"	d	file:
s_3_277	languages/catalan.cc	891;"	d	file:
s_3_278	languages/catalan.cc	892;"	d	file:
s_3_279	languages/catalan.cc	893;"	d	file:
s_3_28	languages/armenian.cc	272;"	d	file:
s_3_28	languages/catalan.cc	454;"	d	file:
s_3_28	languages/lovins.cc	707;"	d	file:
s_3_28	languages/nepali.cc	100;"	d	file:
s_3_28	languages/romanian.cc	177;"	d	file:
s_3_280	languages/catalan.cc	894;"	d	file:
s_3_281	languages/catalan.cc	895;"	d	file:
s_3_282	languages/catalan.cc	896;"	d	file:
s_3_29	languages/armenian.cc	274;"	d	file:
s_3_29	languages/catalan.cc	455;"	d	file:
s_3_29	languages/lovins.cc	709;"	d	file:
s_3_29	languages/nepali.cc	101;"	d	file:
s_3_29	languages/romanian.cc	179;"	d	file:
s_3_3	languages/arabic.cc	356;"	d	file:
s_3_3	languages/armenian.cc	231;"	d	file:
s_3_3	languages/catalan.cc	418;"	d	file:
s_3_3	languages/dutch.cc	44;"	d	file:
s_3_3	languages/earlyenglish.cc	54;"	d	file:
s_3_3	languages/english.cc	33;"	d	file:
s_3_3	languages/german2.cc	45;"	d	file:
s_3_3	languages/indonesian.cc	60;"	d	file:
s_3_3	languages/irish.cc	118;"	d	file:
s_3_3	languages/italian.cc	99;"	d	file:
s_3_3	languages/kraaij_pohlmann.cc	76;"	d	file:
s_3_3	languages/lovins.cc	659;"	d	file:
s_3_3	languages/nepali.cc	58;"	d	file:
s_3_3	languages/porter.cc	50;"	d	file:
s_3_3	languages/romanian.cc	130;"	d	file:
s_3_3	languages/spanish.cc	65;"	d	file:
s_3_3	languages/tamil.cc	45;"	d	file:
s_3_3	languages/turkish.cc	45;"	d	file:
s_3_30	languages/armenian.cc	276;"	d	file:
s_3_30	languages/catalan.cc	456;"	d	file:
s_3_30	languages/lovins.cc	711;"	d	file:
s_3_30	languages/nepali.cc	103;"	d	file:
s_3_30	languages/romanian.cc	181;"	d	file:
s_3_31	languages/armenian.cc	277;"	d	file:
s_3_31	languages/catalan.cc	457;"	d	file:
s_3_31	languages/lovins.cc	713;"	d	file:
s_3_31	languages/nepali.cc	105;"	d	file:
s_3_31	languages/romanian.cc	182;"	d	file:
s_3_32	languages/armenian.cc	278;"	d	file:
s_3_32	languages/catalan.cc	459;"	d	file:
s_3_32	languages/lovins.cc	715;"	d	file:
s_3_32	languages/nepali.cc	106;"	d	file:
s_3_32	languages/romanian.cc	184;"	d	file:
s_3_33	languages/armenian.cc	279;"	d	file:
s_3_33	languages/catalan.cc	460;"	d	file:
s_3_33	languages/lovins.cc	717;"	d	file:
s_3_33	languages/nepali.cc	108;"	d	file:
s_3_33	languages/romanian.cc	186;"	d	file:
s_3_34	languages/armenian.cc	280;"	d	file:
s_3_34	languages/catalan.cc	461;"	d	file:
s_3_34	languages/nepali.cc	110;"	d	file:
s_3_34	languages/romanian.cc	188;"	d	file:
s_3_35	languages/armenian.cc	281;"	d	file:
s_3_35	languages/catalan.cc	462;"	d	file:
s_3_35	languages/nepali.cc	112;"	d	file:
s_3_35	languages/romanian.cc	190;"	d	file:
s_3_36	languages/armenian.cc	283;"	d	file:
s_3_36	languages/catalan.cc	463;"	d	file:
s_3_36	languages/nepali.cc	113;"	d	file:
s_3_36	languages/romanian.cc	192;"	d	file:
s_3_37	languages/armenian.cc	285;"	d	file:
s_3_37	languages/catalan.cc	465;"	d	file:
s_3_37	languages/nepali.cc	115;"	d	file:
s_3_37	languages/romanian.cc	194;"	d	file:
s_3_38	languages/armenian.cc	286;"	d	file:
s_3_38	languages/catalan.cc	466;"	d	file:
s_3_38	languages/nepali.cc	117;"	d	file:
s_3_38	languages/romanian.cc	196;"	d	file:
s_3_39	languages/armenian.cc	287;"	d	file:
s_3_39	languages/catalan.cc	467;"	d	file:
s_3_39	languages/nepali.cc	118;"	d	file:
s_3_39	languages/romanian.cc	198;"	d	file:
s_3_4	languages/armenian.cc	233;"	d	file:
s_3_4	languages/catalan.cc	420;"	d	file:
s_3_4	languages/dutch.cc	46;"	d	file:
s_3_4	languages/earlyenglish.cc	56;"	d	file:
s_3_4	languages/english.cc	35;"	d	file:
s_3_4	languages/indonesian.cc	62;"	d	file:
s_3_4	languages/irish.cc	120;"	d	file:
s_3_4	languages/italian.cc	101;"	d	file:
s_3_4	languages/kraaij_pohlmann.cc	77;"	d	file:
s_3_4	languages/lovins.cc	661;"	d	file:
s_3_4	languages/nepali.cc	60;"	d	file:
s_3_4	languages/porter.cc	52;"	d	file:
s_3_4	languages/romanian.cc	132;"	d	file:
s_3_4	languages/tamil.cc	47;"	d	file:
s_3_40	languages/armenian.cc	289;"	d	file:
s_3_40	languages/catalan.cc	468;"	d	file:
s_3_40	languages/nepali.cc	120;"	d	file:
s_3_40	languages/romanian.cc	200;"	d	file:
s_3_41	languages/armenian.cc	291;"	d	file:
s_3_41	languages/catalan.cc	469;"	d	file:
s_3_41	languages/nepali.cc	121;"	d	file:
s_3_41	languages/romanian.cc	202;"	d	file:
s_3_42	languages/armenian.cc	292;"	d	file:
s_3_42	languages/catalan.cc	470;"	d	file:
s_3_42	languages/nepali.cc	123;"	d	file:
s_3_42	languages/romanian.cc	203;"	d	file:
s_3_43	languages/armenian.cc	293;"	d	file:
s_3_43	languages/catalan.cc	471;"	d	file:
s_3_43	languages/nepali.cc	125;"	d	file:
s_3_43	languages/romanian.cc	204;"	d	file:
s_3_44	languages/armenian.cc	294;"	d	file:
s_3_44	languages/catalan.cc	472;"	d	file:
s_3_44	languages/nepali.cc	127;"	d	file:
s_3_44	languages/romanian.cc	205;"	d	file:
s_3_45	languages/armenian.cc	295;"	d	file:
s_3_45	languages/catalan.cc	473;"	d	file:
s_3_45	languages/nepali.cc	128;"	d	file:
s_3_45	languages/romanian.cc	206;"	d	file:
s_3_46	languages/armenian.cc	296;"	d	file:
s_3_46	languages/catalan.cc	475;"	d	file:
s_3_46	languages/nepali.cc	130;"	d	file:
s_3_46	languages/romanian.cc	207;"	d	file:
s_3_47	languages/armenian.cc	298;"	d	file:
s_3_47	languages/catalan.cc	477;"	d	file:
s_3_47	languages/nepali.cc	132;"	d	file:
s_3_47	languages/romanian.cc	208;"	d	file:
s_3_48	languages/armenian.cc	300;"	d	file:
s_3_48	languages/catalan.cc	479;"	d	file:
s_3_48	languages/nepali.cc	134;"	d	file:
s_3_48	languages/romanian.cc	209;"	d	file:
s_3_49	languages/armenian.cc	301;"	d	file:
s_3_49	languages/catalan.cc	481;"	d	file:
s_3_49	languages/nepali.cc	135;"	d	file:
s_3_49	languages/romanian.cc	210;"	d	file:
s_3_5	languages/armenian.cc	234;"	d	file:
s_3_5	languages/catalan.cc	421;"	d	file:
s_3_5	languages/earlyenglish.cc	58;"	d	file:
s_3_5	languages/english.cc	37;"	d	file:
s_3_5	languages/indonesian.cc	63;"	d	file:
s_3_5	languages/irish.cc	121;"	d	file:
s_3_5	languages/kraaij_pohlmann.cc	79;"	d	file:
s_3_5	languages/lovins.cc	663;"	d	file:
s_3_5	languages/nepali.cc	62;"	d	file:
s_3_5	languages/porter.cc	54;"	d	file:
s_3_5	languages/romanian.cc	134;"	d	file:
s_3_5	languages/tamil.cc	49;"	d	file:
s_3_50	languages/armenian.cc	303;"	d	file:
s_3_50	languages/catalan.cc	483;"	d	file:
s_3_50	languages/nepali.cc	137;"	d	file:
s_3_50	languages/romanian.cc	211;"	d	file:
s_3_51	languages/armenian.cc	305;"	d	file:
s_3_51	languages/catalan.cc	485;"	d	file:
s_3_51	languages/nepali.cc	138;"	d	file:
s_3_51	languages/romanian.cc	212;"	d	file:
s_3_52	languages/armenian.cc	307;"	d	file:
s_3_52	languages/catalan.cc	487;"	d	file:
s_3_52	languages/nepali.cc	140;"	d	file:
s_3_52	languages/romanian.cc	213;"	d	file:
s_3_53	languages/armenian.cc	308;"	d	file:
s_3_53	languages/catalan.cc	489;"	d	file:
s_3_53	languages/nepali.cc	142;"	d	file:
s_3_53	languages/romanian.cc	215;"	d	file:
s_3_54	languages/armenian.cc	309;"	d	file:
s_3_54	languages/catalan.cc	491;"	d	file:
s_3_54	languages/nepali.cc	144;"	d	file:
s_3_54	languages/romanian.cc	217;"	d	file:
s_3_55	languages/armenian.cc	311;"	d	file:
s_3_55	languages/catalan.cc	493;"	d	file:
s_3_55	languages/nepali.cc	146;"	d	file:
s_3_55	languages/romanian.cc	219;"	d	file:
s_3_56	languages/armenian.cc	313;"	d	file:
s_3_56	languages/catalan.cc	494;"	d	file:
s_3_56	languages/nepali.cc	148;"	d	file:
s_3_56	languages/romanian.cc	221;"	d	file:
s_3_57	languages/catalan.cc	496;"	d	file:
s_3_57	languages/nepali.cc	150;"	d	file:
s_3_57	languages/romanian.cc	223;"	d	file:
s_3_58	languages/catalan.cc	498;"	d	file:
s_3_58	languages/nepali.cc	152;"	d	file:
s_3_58	languages/romanian.cc	224;"	d	file:
s_3_59	languages/catalan.cc	500;"	d	file:
s_3_59	languages/nepali.cc	153;"	d	file:
s_3_59	languages/romanian.cc	226;"	d	file:
s_3_6	languages/armenian.cc	235;"	d	file:
s_3_6	languages/catalan.cc	422;"	d	file:
s_3_6	languages/earlyenglish.cc	60;"	d	file:
s_3_6	languages/english.cc	39;"	d	file:
s_3_6	languages/indonesian.cc	65;"	d	file:
s_3_6	languages/irish.cc	123;"	d	file:
s_3_6	languages/kraaij_pohlmann.cc	81;"	d	file:
s_3_6	languages/lovins.cc	665;"	d	file:
s_3_6	languages/nepali.cc	64;"	d	file:
s_3_6	languages/porter.cc	56;"	d	file:
s_3_6	languages/romanian.cc	135;"	d	file:
s_3_60	languages/catalan.cc	502;"	d	file:
s_3_60	languages/nepali.cc	155;"	d	file:
s_3_60	languages/romanian.cc	228;"	d	file:
s_3_61	languages/catalan.cc	504;"	d	file:
s_3_61	languages/nepali.cc	157;"	d	file:
s_3_61	languages/romanian.cc	230;"	d	file:
s_3_62	languages/catalan.cc	506;"	d	file:
s_3_62	languages/nepali.cc	159;"	d	file:
s_3_63	languages/catalan.cc	508;"	d	file:
s_3_63	languages/nepali.cc	160;"	d	file:
s_3_64	languages/catalan.cc	510;"	d	file:
s_3_64	languages/nepali.cc	162;"	d	file:
s_3_65	languages/catalan.cc	512;"	d	file:
s_3_65	languages/nepali.cc	163;"	d	file:
s_3_66	languages/catalan.cc	514;"	d	file:
s_3_66	languages/nepali.cc	165;"	d	file:
s_3_67	languages/catalan.cc	515;"	d	file:
s_3_67	languages/nepali.cc	167;"	d	file:
s_3_68	languages/catalan.cc	517;"	d	file:
s_3_68	languages/nepali.cc	169;"	d	file:
s_3_69	languages/catalan.cc	519;"	d	file:
s_3_69	languages/nepali.cc	170;"	d	file:
s_3_7	languages/armenian.cc	237;"	d	file:
s_3_7	languages/catalan.cc	424;"	d	file:
s_3_7	languages/earlyenglish.cc	62;"	d	file:
s_3_7	languages/english.cc	41;"	d	file:
s_3_7	languages/indonesian.cc	67;"	d	file:
s_3_7	languages/irish.cc	125;"	d	file:
s_3_7	languages/kraaij_pohlmann.cc	83;"	d	file:
s_3_7	languages/lovins.cc	667;"	d	file:
s_3_7	languages/nepali.cc	66;"	d	file:
s_3_7	languages/porter.cc	58;"	d	file:
s_3_7	languages/romanian.cc	137;"	d	file:
s_3_70	languages/catalan.cc	521;"	d	file:
s_3_70	languages/nepali.cc	172;"	d	file:
s_3_71	languages/catalan.cc	523;"	d	file:
s_3_71	languages/nepali.cc	174;"	d	file:
s_3_72	languages/catalan.cc	525;"	d	file:
s_3_72	languages/nepali.cc	175;"	d	file:
s_3_73	languages/catalan.cc	526;"	d	file:
s_3_73	languages/nepali.cc	176;"	d	file:
s_3_74	languages/catalan.cc	528;"	d	file:
s_3_74	languages/nepali.cc	177;"	d	file:
s_3_75	languages/catalan.cc	530;"	d	file:
s_3_75	languages/nepali.cc	178;"	d	file:
s_3_76	languages/catalan.cc	532;"	d	file:
s_3_76	languages/nepali.cc	180;"	d	file:
s_3_77	languages/catalan.cc	533;"	d	file:
s_3_77	languages/nepali.cc	182;"	d	file:
s_3_78	languages/catalan.cc	534;"	d	file:
s_3_78	languages/nepali.cc	184;"	d	file:
s_3_79	languages/catalan.cc	536;"	d	file:
s_3_79	languages/nepali.cc	186;"	d	file:
s_3_8	languages/armenian.cc	239;"	d	file:
s_3_8	languages/catalan.cc	426;"	d	file:
s_3_8	languages/earlyenglish.cc	64;"	d	file:
s_3_8	languages/english.cc	43;"	d	file:
s_3_8	languages/indonesian.cc	69;"	d	file:
s_3_8	languages/irish.cc	127;"	d	file:
s_3_8	languages/kraaij_pohlmann.cc	85;"	d	file:
s_3_8	languages/lovins.cc	669;"	d	file:
s_3_8	languages/nepali.cc	67;"	d	file:
s_3_8	languages/porter.cc	60;"	d	file:
s_3_8	languages/romanian.cc	139;"	d	file:
s_3_80	languages/catalan.cc	538;"	d	file:
s_3_80	languages/nepali.cc	187;"	d	file:
s_3_81	languages/catalan.cc	540;"	d	file:
s_3_81	languages/nepali.cc	188;"	d	file:
s_3_82	languages/catalan.cc	542;"	d	file:
s_3_82	languages/nepali.cc	189;"	d	file:
s_3_83	languages/catalan.cc	544;"	d	file:
s_3_83	languages/nepali.cc	191;"	d	file:
s_3_84	languages/catalan.cc	546;"	d	file:
s_3_84	languages/nepali.cc	192;"	d	file:
s_3_85	languages/catalan.cc	548;"	d	file:
s_3_85	languages/nepali.cc	194;"	d	file:
s_3_86	languages/catalan.cc	550;"	d	file:
s_3_86	languages/nepali.cc	196;"	d	file:
s_3_87	languages/catalan.cc	552;"	d	file:
s_3_87	languages/nepali.cc	197;"	d	file:
s_3_88	languages/catalan.cc	554;"	d	file:
s_3_88	languages/nepali.cc	199;"	d	file:
s_3_89	languages/catalan.cc	556;"	d	file:
s_3_89	languages/nepali.cc	201;"	d	file:
s_3_9	languages/armenian.cc	241;"	d	file:
s_3_9	languages/catalan.cc	427;"	d	file:
s_3_9	languages/earlyenglish.cc	66;"	d	file:
s_3_9	languages/english.cc	45;"	d	file:
s_3_9	languages/indonesian.cc	70;"	d	file:
s_3_9	languages/irish.cc	129;"	d	file:
s_3_9	languages/kraaij_pohlmann.cc	87;"	d	file:
s_3_9	languages/lovins.cc	671;"	d	file:
s_3_9	languages/nepali.cc	68;"	d	file:
s_3_9	languages/porter.cc	62;"	d	file:
s_3_9	languages/romanian.cc	141;"	d	file:
s_3_90	languages/catalan.cc	558;"	d	file:
s_3_90	languages/nepali.cc	203;"	d	file:
s_3_91	languages/catalan.cc	560;"	d	file:
s_3_92	languages/catalan.cc	562;"	d	file:
s_3_93	languages/catalan.cc	564;"	d	file:
s_3_94	languages/catalan.cc	566;"	d	file:
s_3_95	languages/catalan.cc	568;"	d	file:
s_3_96	languages/catalan.cc	570;"	d	file:
s_3_97	languages/catalan.cc	571;"	d	file:
s_3_98	languages/catalan.cc	573;"	d	file:
s_3_99	languages/catalan.cc	575;"	d	file:
s_4	languages/arabic.cc	/^static const symbol s_4[] = { '4' };$/;"	v	file:
s_4	languages/basque.cc	/^static const symbol s_4[] = { 't', 'r', 'a' };$/;"	v	file:
s_4	languages/catalan.cc	/^static const symbol s_4[] = { 'u' };$/;"	v	file:
s_4	languages/dutch.cc	/^static const symbol s_4[] = { 'u' };$/;"	v	file:
s_4	languages/earlyenglish.cc	/^static const symbol s_4[] = { 'e' };$/;"	v	file:
s_4	languages/english.cc	/^static const symbol s_4[] = { 'i', 'e' };$/;"	v	file:
s_4	languages/finnish.cc	/^static const symbol s_4[] = { 'i', 'e' };$/;"	v	file:
s_4	languages/french.cc	/^static const symbol s_4[] = { 'U' };$/;"	v	file:
s_4	languages/german.cc	/^static const symbol s_4[] = { 'y' };$/;"	v	file:
s_4	languages/german2.cc	/^static const symbol s_4[] = { 0xC3, 0xB6 };$/;"	v	file:
s_4	languages/hungarian.cc	/^static const symbol s_4[] = { 'a' };$/;"	v	file:
s_4	languages/indonesian.cc	/^static const symbol s_4[] = { 'p' };$/;"	v	file:
s_4	languages/irish.cc	/^static const symbol s_4[] = { 'd' };$/;"	v	file:
s_4	languages/italian.cc	/^static const symbol s_4[] = { 0xC3, 0xB9 };$/;"	v	file:
s_4	languages/kraaij_pohlmann.cc	/^static const symbol s_4[] = { 'a', 'r' };$/;"	v	file:
s_4	languages/lithuanian.cc	/^static const symbol s_4[] = { 'a', 's', 'y', 's' };$/;"	v	file:
s_4	languages/lovins.cc	/^static const symbol s_4[] = { 'r', 'y', 's', 't' };$/;"	v	file:
s_4	languages/nepali.cc	/^static const symbol s_4[] = { 0xE0, 0xA4, 0xA8, 0xE0, 0xA5, 0x8C };$/;"	v	file:
s_4	languages/porter.cc	/^static const symbol s_4[] = { 'e' };$/;"	v	file:
s_4	languages/portuguese.cc	/^static const symbol s_4[] = { 'l', 'o', 'g' };$/;"	v	file:
s_4	languages/romanian.cc	/^static const symbol s_4[] = { 'a' };$/;"	v	file:
s_4	languages/russian.cc	/^static const symbol s_4[] = { 0xD0, 0xB0 };$/;"	v	file:
s_4	languages/spanish.cc	/^static const symbol s_4[] = { 'u' };$/;"	v	file:
s_4	languages/tamil.cc	/^static const symbol s_4[] = { 0xE0, 0xAE, 0xB5, 0xE0, 0xAF, 0x8A };$/;"	v	file:
s_4	languages/turkish.cc	/^static const symbol s_4[] = { 'k', 'e', 'n' };$/;"	v	file:
s_40	languages/arabic.cc	/^static const symbol s_40[] = { 0xD9, 0x85 };$/;"	v	file:
s_40	languages/kraaij_pohlmann.cc	/^static const symbol s_40[] = { 'r' };$/;"	v	file:
s_40	languages/tamil.cc	/^static const symbol s_40[] = { 0xE0, 0xAF, 0x88 };$/;"	v	file:
s_41	languages/arabic.cc	/^static const symbol s_41[] = { 0xD9, 0x86 };$/;"	v	file:
s_41	languages/kraaij_pohlmann.cc	/^static const symbol s_41[] = { 't', 'e', 'e', 'r' };$/;"	v	file:
s_41	languages/tamil.cc	/^static const symbol s_41[] = { 0xE0, 0xAE, 0xAE, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_42	languages/arabic.cc	/^static const symbol s_42[] = { 0xD9, 0x87 };$/;"	v	file:
s_42	languages/kraaij_pohlmann.cc	/^static const symbol s_42[] = { 'l', 'i', 'j', 'k' };$/;"	v	file:
s_42	languages/tamil.cc	/^static const symbol s_42[] = { 0xE0, 0xAE, 0x99, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_43	languages/arabic.cc	/^static const symbol s_43[] = { 0xD9, 0x88 };$/;"	v	file:
s_43	languages/kraaij_pohlmann.cc	/^static const symbol s_43[] = { 'k' };$/;"	v	file:
s_43	languages/tamil.cc	/^static const symbol s_43[] = { 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_44	languages/arabic.cc	/^static const symbol s_44[] = { 0xD9, 0x89 };$/;"	v	file:
s_44	languages/kraaij_pohlmann.cc	/^static const symbol s_44[] = { 'f' };$/;"	v	file:
s_44	languages/tamil.cc	/^static const symbol s_44[] = { 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_45	languages/arabic.cc	/^static const symbol s_45[] = { 0xD9, 0x8A };$/;"	v	file:
s_45	languages/kraaij_pohlmann.cc	/^static const symbol s_45[] = { 'p' };$/;"	v	file:
s_45	languages/tamil.cc	/^static const symbol s_45[] = { 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_46	languages/arabic.cc	/^static const symbol s_46[] = { 0xD9, 0x84, 0xD8, 0xA7 };$/;"	v	file:
s_46	languages/kraaij_pohlmann.cc	/^static const symbol s_46[] = { 'b' };$/;"	v	file:
s_46	languages/tamil.cc	/^static const symbol s_46[] = { 0xE0, 0xAF, 0x81, 0xE0, 0xAE, 0x99, 0xE0, 0xAF, 0x8D, 0xE0, 0xAE, 0x95, 0xE0, 0xAE, 0xB3, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_47	languages/arabic.cc	/^static const symbol s_47[] = { 0xD9, 0x84, 0xD8, 0xA3 };$/;"	v	file:
s_47	languages/kraaij_pohlmann.cc	/^static const symbol s_47[] = { 'c' };$/;"	v	file:
s_47	languages/tamil.cc	/^static const symbol s_47[] = { 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_48	languages/arabic.cc	/^static const symbol s_48[] = { 0xD9, 0x84, 0xD8, 0xA5 };$/;"	v	file:
s_48	languages/kraaij_pohlmann.cc	/^static const symbol s_48[] = { 'd' };$/;"	v	file:
s_48	languages/tamil.cc	/^static const symbol s_48[] = { 0xE0, 0xAE, 0xB1, 0xE0, 0xAF, 0x8D, 0xE0, 0xAE, 0x95, 0xE0, 0xAE, 0xB3, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_49	languages/arabic.cc	/^static const symbol s_49[] = { 0xD9, 0x84, 0xD8, 0xA2 };$/;"	v	file:
s_49	languages/kraaij_pohlmann.cc	/^static const symbol s_49[] = { 'f' };$/;"	v	file:
s_49	languages/tamil.cc	/^static const symbol s_49[] = { 0xE0, 0xAE, 0xB2, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_4_0	languages/arabic.cc	358;"	d	file:
s_4_0	languages/catalan.cc	898;"	d	file:
s_4_0	languages/dutch.cc	47;"	d	file:
s_4_0	languages/earlyenglish.cc	86;"	d	file:
s_4_0	languages/english.cc	53;"	d	file:
s_4_0	languages/finnish.cc	69;"	d	file:
s_4_0	languages/french.cc	39;"	d	file:
s_4_0	languages/german.cc	41;"	d	file:
s_4_0	languages/german2.cc	47;"	d	file:
s_4_0	languages/hungarian.cc	71;"	d	file:
s_4_0	languages/indonesian.cc	76;"	d	file:
s_4_0	languages/italian.cc	103;"	d	file:
s_4_0	languages/kraaij_pohlmann.cc	101;"	d	file:
s_4_0	languages/lithuanian.cc	432;"	d	file:
s_4_0	languages/porter.cc	82;"	d	file:
s_4_0	languages/portuguese.cc	31;"	d	file:
s_4_0	languages/romanian.cc	232;"	d	file:
s_4_0	languages/russian.cc	85;"	d	file:
s_4_0	languages/spanish.cc	67;"	d	file:
s_4_0	languages/tamil.cc	51;"	d	file:
s_4_0	languages/turkish.cc	47;"	d	file:
s_4_1	languages/arabic.cc	360;"	d	file:
s_4_1	languages/catalan.cc	900;"	d	file:
s_4_1	languages/dutch.cc	49;"	d	file:
s_4_1	languages/earlyenglish.cc	88;"	d	file:
s_4_1	languages/english.cc	54;"	d	file:
s_4_1	languages/finnish.cc	71;"	d	file:
s_4_1	languages/french.cc	40;"	d	file:
s_4_1	languages/german.cc	43;"	d	file:
s_4_1	languages/german2.cc	49;"	d	file:
s_4_1	languages/hungarian.cc	72;"	d	file:
s_4_1	languages/indonesian.cc	77;"	d	file:
s_4_1	languages/italian.cc	105;"	d	file:
s_4_1	languages/kraaij_pohlmann.cc	102;"	d	file:
s_4_1	languages/porter.cc	84;"	d	file:
s_4_1	languages/portuguese.cc	33;"	d	file:
s_4_1	languages/romanian.cc	233;"	d	file:
s_4_1	languages/russian.cc	86;"	d	file:
s_4_1	languages/spanish.cc	69;"	d	file:
s_4_1	languages/tamil.cc	53;"	d	file:
s_4_1	languages/turkish.cc	49;"	d	file:
s_4_10	languages/catalan.cc	914;"	d	file:
s_4_10	languages/french.cc	49;"	d	file:
s_4_10	languages/hungarian.cc	89;"	d	file:
s_4_10	languages/romanian.cc	248;"	d	file:
s_4_10	languages/russian.cc	99;"	d	file:
s_4_11	languages/catalan.cc	915;"	d	file:
s_4_11	languages/french.cc	50;"	d	file:
s_4_11	languages/hungarian.cc	91;"	d	file:
s_4_11	languages/romanian.cc	249;"	d	file:
s_4_11	languages/russian.cc	101;"	d	file:
s_4_12	languages/catalan.cc	917;"	d	file:
s_4_12	languages/french.cc	51;"	d	file:
s_4_12	languages/hungarian.cc	93;"	d	file:
s_4_12	languages/romanian.cc	250;"	d	file:
s_4_12	languages/russian.cc	103;"	d	file:
s_4_13	languages/catalan.cc	919;"	d	file:
s_4_13	languages/french.cc	52;"	d	file:
s_4_13	languages/hungarian.cc	95;"	d	file:
s_4_13	languages/romanian.cc	251;"	d	file:
s_4_13	languages/russian.cc	105;"	d	file:
s_4_14	languages/catalan.cc	921;"	d	file:
s_4_14	languages/french.cc	53;"	d	file:
s_4_14	languages/hungarian.cc	97;"	d	file:
s_4_14	languages/romanian.cc	252;"	d	file:
s_4_14	languages/russian.cc	107;"	d	file:
s_4_15	languages/catalan.cc	923;"	d	file:
s_4_15	languages/french.cc	54;"	d	file:
s_4_15	languages/hungarian.cc	99;"	d	file:
s_4_15	languages/romanian.cc	253;"	d	file:
s_4_15	languages/russian.cc	108;"	d	file:
s_4_16	languages/catalan.cc	925;"	d	file:
s_4_16	languages/french.cc	56;"	d	file:
s_4_16	languages/hungarian.cc	101;"	d	file:
s_4_16	languages/romanian.cc	254;"	d	file:
s_4_16	languages/russian.cc	109;"	d	file:
s_4_17	languages/catalan.cc	927;"	d	file:
s_4_17	languages/french.cc	58;"	d	file:
s_4_17	languages/hungarian.cc	103;"	d	file:
s_4_17	languages/romanian.cc	256;"	d	file:
s_4_17	languages/russian.cc	110;"	d	file:
s_4_18	languages/catalan.cc	929;"	d	file:
s_4_18	languages/french.cc	60;"	d	file:
s_4_18	languages/hungarian.cc	105;"	d	file:
s_4_18	languages/romanian.cc	258;"	d	file:
s_4_18	languages/russian.cc	112;"	d	file:
s_4_19	languages/catalan.cc	931;"	d	file:
s_4_19	languages/french.cc	62;"	d	file:
s_4_19	languages/hungarian.cc	107;"	d	file:
s_4_19	languages/romanian.cc	260;"	d	file:
s_4_19	languages/russian.cc	114;"	d	file:
s_4_2	languages/arabic.cc	362;"	d	file:
s_4_2	languages/catalan.cc	901;"	d	file:
s_4_2	languages/dutch.cc	51;"	d	file:
s_4_2	languages/earlyenglish.cc	90;"	d	file:
s_4_2	languages/english.cc	55;"	d	file:
s_4_2	languages/finnish.cc	73;"	d	file:
s_4_2	languages/french.cc	41;"	d	file:
s_4_2	languages/german.cc	45;"	d	file:
s_4_2	languages/hungarian.cc	74;"	d	file:
s_4_2	languages/indonesian.cc	79;"	d	file:
s_4_2	languages/italian.cc	107;"	d	file:
s_4_2	languages/kraaij_pohlmann.cc	104;"	d	file:
s_4_2	languages/porter.cc	86;"	d	file:
s_4_2	languages/portuguese.cc	35;"	d	file:
s_4_2	languages/romanian.cc	234;"	d	file:
s_4_2	languages/russian.cc	87;"	d	file:
s_4_2	languages/spanish.cc	71;"	d	file:
s_4_2	languages/tamil.cc	55;"	d	file:
s_4_20	languages/catalan.cc	933;"	d	file:
s_4_20	languages/french.cc	64;"	d	file:
s_4_20	languages/hungarian.cc	108;"	d	file:
s_4_20	languages/romanian.cc	261;"	d	file:
s_4_20	languages/russian.cc	115;"	d	file:
s_4_21	languages/catalan.cc	934;"	d	file:
s_4_21	languages/french.cc	66;"	d	file:
s_4_21	languages/hungarian.cc	109;"	d	file:
s_4_21	languages/romanian.cc	263;"	d	file:
s_4_21	languages/russian.cc	117;"	d	file:
s_4_22	languages/french.cc	68;"	d	file:
s_4_22	languages/hungarian.cc	111;"	d	file:
s_4_22	languages/romanian.cc	265;"	d	file:
s_4_22	languages/russian.cc	119;"	d	file:
s_4_23	languages/french.cc	70;"	d	file:
s_4_23	languages/hungarian.cc	112;"	d	file:
s_4_23	languages/romanian.cc	267;"	d	file:
s_4_23	languages/russian.cc	121;"	d	file:
s_4_24	languages/french.cc	72;"	d	file:
s_4_24	languages/hungarian.cc	114;"	d	file:
s_4_24	languages/romanian.cc	269;"	d	file:
s_4_24	languages/russian.cc	122;"	d	file:
s_4_25	languages/french.cc	74;"	d	file:
s_4_25	languages/hungarian.cc	116;"	d	file:
s_4_25	languages/romanian.cc	271;"	d	file:
s_4_25	languages/russian.cc	124;"	d	file:
s_4_26	languages/french.cc	76;"	d	file:
s_4_26	languages/hungarian.cc	117;"	d	file:
s_4_26	languages/romanian.cc	273;"	d	file:
s_4_26	languages/russian.cc	126;"	d	file:
s_4_27	languages/french.cc	78;"	d	file:
s_4_27	languages/hungarian.cc	119;"	d	file:
s_4_27	languages/romanian.cc	275;"	d	file:
s_4_27	languages/russian.cc	127;"	d	file:
s_4_28	languages/french.cc	80;"	d	file:
s_4_28	languages/hungarian.cc	120;"	d	file:
s_4_28	languages/romanian.cc	277;"	d	file:
s_4_28	languages/russian.cc	129;"	d	file:
s_4_29	languages/french.cc	82;"	d	file:
s_4_29	languages/hungarian.cc	122;"	d	file:
s_4_29	languages/romanian.cc	278;"	d	file:
s_4_29	languages/russian.cc	131;"	d	file:
s_4_3	languages/arabic.cc	364;"	d	file:
s_4_3	languages/catalan.cc	902;"	d	file:
s_4_3	languages/dutch.cc	53;"	d	file:
s_4_3	languages/earlyenglish.cc	92;"	d	file:
s_4_3	languages/english.cc	56;"	d	file:
s_4_3	languages/finnish.cc	75;"	d	file:
s_4_3	languages/french.cc	42;"	d	file:
s_4_3	languages/german.cc	47;"	d	file:
s_4_3	languages/hungarian.cc	75;"	d	file:
s_4_3	languages/indonesian.cc	81;"	d	file:
s_4_3	languages/italian.cc	109;"	d	file:
s_4_3	languages/porter.cc	88;"	d	file:
s_4_3	languages/romanian.cc	236;"	d	file:
s_4_3	languages/russian.cc	89;"	d	file:
s_4_3	languages/tamil.cc	57;"	d	file:
s_4_30	languages/french.cc	84;"	d	file:
s_4_30	languages/hungarian.cc	123;"	d	file:
s_4_30	languages/romanian.cc	280;"	d	file:
s_4_30	languages/russian.cc	132;"	d	file:
s_4_31	languages/french.cc	85;"	d	file:
s_4_31	languages/hungarian.cc	125;"	d	file:
s_4_31	languages/romanian.cc	282;"	d	file:
s_4_31	languages/russian.cc	133;"	d	file:
s_4_32	languages/french.cc	86;"	d	file:
s_4_32	languages/hungarian.cc	127;"	d	file:
s_4_32	languages/romanian.cc	284;"	d	file:
s_4_32	languages/russian.cc	134;"	d	file:
s_4_33	languages/french.cc	88;"	d	file:
s_4_33	languages/hungarian.cc	128;"	d	file:
s_4_33	languages/romanian.cc	286;"	d	file:
s_4_33	languages/russian.cc	135;"	d	file:
s_4_34	languages/french.cc	90;"	d	file:
s_4_34	languages/hungarian.cc	130;"	d	file:
s_4_34	languages/romanian.cc	288;"	d	file:
s_4_34	languages/russian.cc	136;"	d	file:
s_4_35	languages/french.cc	91;"	d	file:
s_4_35	languages/hungarian.cc	132;"	d	file:
s_4_35	languages/romanian.cc	290;"	d	file:
s_4_35	languages/russian.cc	137;"	d	file:
s_4_36	languages/french.cc	92;"	d	file:
s_4_36	languages/hungarian.cc	134;"	d	file:
s_4_36	languages/romanian.cc	292;"	d	file:
s_4_36	languages/russian.cc	139;"	d	file:
s_4_37	languages/french.cc	93;"	d	file:
s_4_37	languages/hungarian.cc	136;"	d	file:
s_4_37	languages/romanian.cc	294;"	d	file:
s_4_37	languages/russian.cc	141;"	d	file:
s_4_38	languages/french.cc	95;"	d	file:
s_4_38	languages/hungarian.cc	138;"	d	file:
s_4_38	languages/romanian.cc	296;"	d	file:
s_4_38	languages/russian.cc	143;"	d	file:
s_4_39	languages/french.cc	97;"	d	file:
s_4_39	languages/hungarian.cc	140;"	d	file:
s_4_39	languages/romanian.cc	297;"	d	file:
s_4_39	languages/russian.cc	144;"	d	file:
s_4_4	languages/arabic.cc	366;"	d	file:
s_4_4	languages/catalan.cc	904;"	d	file:
s_4_4	languages/dutch.cc	55;"	d	file:
s_4_4	languages/earlyenglish.cc	94;"	d	file:
s_4_4	languages/english.cc	57;"	d	file:
s_4_4	languages/finnish.cc	77;"	d	file:
s_4_4	languages/french.cc	43;"	d	file:
s_4_4	languages/german.cc	49;"	d	file:
s_4_4	languages/hungarian.cc	77;"	d	file:
s_4_4	languages/indonesian.cc	82;"	d	file:
s_4_4	languages/porter.cc	90;"	d	file:
s_4_4	languages/romanian.cc	238;"	d	file:
s_4_4	languages/russian.cc	91;"	d	file:
s_4_4	languages/tamil.cc	59;"	d	file:
s_4_40	languages/french.cc	98;"	d	file:
s_4_40	languages/hungarian.cc	142;"	d	file:
s_4_40	languages/romanian.cc	299;"	d	file:
s_4_40	languages/russian.cc	145;"	d	file:
s_4_41	languages/french.cc	100;"	d	file:
s_4_41	languages/hungarian.cc	144;"	d	file:
s_4_41	languages/romanian.cc	301;"	d	file:
s_4_41	languages/russian.cc	146;"	d	file:
s_4_42	languages/french.cc	102;"	d	file:
s_4_42	languages/hungarian.cc	146;"	d	file:
s_4_42	languages/romanian.cc	303;"	d	file:
s_4_42	languages/russian.cc	148;"	d	file:
s_4_43	languages/hungarian.cc	148;"	d	file:
s_4_43	languages/romanian.cc	305;"	d	file:
s_4_43	languages/russian.cc	150;"	d	file:
s_4_44	languages/romanian.cc	307;"	d	file:
s_4_44	languages/russian.cc	151;"	d	file:
s_4_45	languages/romanian.cc	308;"	d	file:
s_4_45	languages/russian.cc	153;"	d	file:
s_4_46	languages/romanian.cc	310;"	d	file:
s_4_47	languages/romanian.cc	312;"	d	file:
s_4_48	languages/romanian.cc	314;"	d	file:
s_4_49	languages/romanian.cc	316;"	d	file:
s_4_5	languages/catalan.cc	905;"	d	file:
s_4_5	languages/dutch.cc	57;"	d	file:
s_4_5	languages/earlyenglish.cc	96;"	d	file:
s_4_5	languages/english.cc	59;"	d	file:
s_4_5	languages/finnish.cc	79;"	d	file:
s_4_5	languages/french.cc	44;"	d	file:
s_4_5	languages/german.cc	51;"	d	file:
s_4_5	languages/hungarian.cc	79;"	d	file:
s_4_5	languages/indonesian.cc	84;"	d	file:
s_4_5	languages/porter.cc	92;"	d	file:
s_4_5	languages/romanian.cc	239;"	d	file:
s_4_5	languages/russian.cc	92;"	d	file:
s_4_5	languages/tamil.cc	61;"	d	file:
s_4_50	languages/romanian.cc	318;"	d	file:
s_4_51	languages/romanian.cc	320;"	d	file:
s_4_52	languages/romanian.cc	322;"	d	file:
s_4_53	languages/romanian.cc	324;"	d	file:
s_4_54	languages/romanian.cc	326;"	d	file:
s_4_55	languages/romanian.cc	327;"	d	file:
s_4_56	languages/romanian.cc	329;"	d	file:
s_4_57	languages/romanian.cc	331;"	d	file:
s_4_58	languages/romanian.cc	332;"	d	file:
s_4_59	languages/romanian.cc	334;"	d	file:
s_4_6	languages/catalan.cc	907;"	d	file:
s_4_6	languages/earlyenglish.cc	98;"	d	file:
s_4_6	languages/finnish.cc	81;"	d	file:
s_4_6	languages/french.cc	45;"	d	file:
s_4_6	languages/german.cc	53;"	d	file:
s_4_6	languages/hungarian.cc	81;"	d	file:
s_4_6	languages/porter.cc	94;"	d	file:
s_4_6	languages/romanian.cc	240;"	d	file:
s_4_6	languages/russian.cc	94;"	d	file:
s_4_60	languages/romanian.cc	336;"	d	file:
s_4_61	languages/romanian.cc	338;"	d	file:
s_4_62	languages/romanian.cc	340;"	d	file:
s_4_63	languages/romanian.cc	342;"	d	file:
s_4_64	languages/romanian.cc	344;"	d	file:
s_4_65	languages/romanian.cc	345;"	d	file:
s_4_66	languages/romanian.cc	347;"	d	file:
s_4_67	languages/romanian.cc	348;"	d	file:
s_4_68	languages/romanian.cc	350;"	d	file:
s_4_69	languages/romanian.cc	352;"	d	file:
s_4_7	languages/catalan.cc	908;"	d	file:
s_4_7	languages/finnish.cc	83;"	d	file:
s_4_7	languages/french.cc	46;"	d	file:
s_4_7	languages/german.cc	55;"	d	file:
s_4_7	languages/hungarian.cc	83;"	d	file:
s_4_7	languages/romanian.cc	242;"	d	file:
s_4_7	languages/russian.cc	95;"	d	file:
s_4_70	languages/romanian.cc	354;"	d	file:
s_4_71	languages/romanian.cc	356;"	d	file:
s_4_72	languages/romanian.cc	358;"	d	file:
s_4_73	languages/romanian.cc	360;"	d	file:
s_4_74	languages/romanian.cc	362;"	d	file:
s_4_75	languages/romanian.cc	364;"	d	file:
s_4_76	languages/romanian.cc	366;"	d	file:
s_4_77	languages/romanian.cc	367;"	d	file:
s_4_78	languages/romanian.cc	369;"	d	file:
s_4_79	languages/romanian.cc	371;"	d	file:
s_4_8	languages/catalan.cc	910;"	d	file:
s_4_8	languages/finnish.cc	85;"	d	file:
s_4_8	languages/french.cc	47;"	d	file:
s_4_8	languages/hungarian.cc	85;"	d	file:
s_4_8	languages/romanian.cc	244;"	d	file:
s_4_8	languages/russian.cc	96;"	d	file:
s_4_80	languages/romanian.cc	373;"	d	file:
s_4_81	languages/romanian.cc	375;"	d	file:
s_4_82	languages/romanian.cc	376;"	d	file:
s_4_83	languages/romanian.cc	378;"	d	file:
s_4_84	languages/romanian.cc	379;"	d	file:
s_4_85	languages/romanian.cc	380;"	d	file:
s_4_86	languages/romanian.cc	381;"	d	file:
s_4_87	languages/romanian.cc	382;"	d	file:
s_4_88	languages/romanian.cc	383;"	d	file:
s_4_89	languages/romanian.cc	384;"	d	file:
s_4_9	languages/catalan.cc	912;"	d	file:
s_4_9	languages/french.cc	48;"	d	file:
s_4_9	languages/hungarian.cc	87;"	d	file:
s_4_9	languages/romanian.cc	246;"	d	file:
s_4_9	languages/russian.cc	98;"	d	file:
s_4_90	languages/romanian.cc	385;"	d	file:
s_4_91	languages/romanian.cc	386;"	d	file:
s_4_92	languages/romanian.cc	387;"	d	file:
s_4_93	languages/romanian.cc	388;"	d	file:
s_5	languages/arabic.cc	/^static const symbol s_5[] = { '5' };$/;"	v	file:
s_5	languages/basque.cc	/^static const symbol s_5[] = { 'm', 'i', 'n', 'u', 't', 'u' };$/;"	v	file:
s_5	languages/catalan.cc	/^static const symbol s_5[] = { '.' };$/;"	v	file:
s_5	languages/dutch.cc	/^static const symbol s_5[] = { 'Y' };$/;"	v	file:
s_5	languages/earlyenglish.cc	/^static const symbol s_5[] = { 'i' };$/;"	v	file:
s_5	languages/english.cc	/^static const symbol s_5[] = { 'e', 'e' };$/;"	v	file:
s_5	languages/finnish.cc	/^static const symbol s_5[] = { 'p', 'o' };$/;"	v	file:
s_5	languages/french.cc	/^static const symbol s_5[] = { 'i' };$/;"	v	file:
s_5	languages/german.cc	/^static const symbol s_5[] = { 'u' };$/;"	v	file:
s_5	languages/german2.cc	/^static const symbol s_5[] = { 0xC3, 0xBC };$/;"	v	file:
s_5	languages/hungarian.cc	/^static const symbol s_5[] = { 'e' };$/;"	v	file:
s_5	languages/indonesian.cc	/^static const symbol s_5[] = { 'a', 'j', 'a', 'r' };$/;"	v	file:
s_5	languages/irish.cc	/^static const symbol s_5[] = { 'g' };$/;"	v	file:
s_5	languages/italian.cc	/^static const symbol s_5[] = { 'q', 'U' };$/;"	v	file:
s_5	languages/kraaij_pohlmann.cc	/^static const symbol s_5[] = { 'e', 'r' };$/;"	v	file:
s_5	languages/lithuanian.cc	/^static const symbol s_5[] = { 'a', 'v', 'i', 'm', 'a', 's' };$/;"	v	file:
s_5	languages/lovins.cc	/^static const symbol s_5[] = { 'i', 'e', 'f' };$/;"	v	file:
s_5	languages/nepali.cc	/^static const symbol s_5[] = { 0xE0, 0xA4, 0xA5, 0xE0, 0xA5, 0x87 };$/;"	v	file:
s_5	languages/porter.cc	/^static const symbol s_5[] = { 'i' };$/;"	v	file:
s_5	languages/portuguese.cc	/^static const symbol s_5[] = { 'u' };$/;"	v	file:
s_5	languages/romanian.cc	/^static const symbol s_5[] = { 'e' };$/;"	v	file:
s_5	languages/russian.cc	/^static const symbol s_5[] = { 0xD1, 0x8F };$/;"	v	file:
s_5	languages/spanish.cc	/^static const symbol s_5[] = { 'i', 'e', 'n', 'd', 'o' };$/;"	v	file:
s_5	languages/tamil.cc	/^static const symbol s_5[] = { 0xE0, 0xAE, 0x92 };$/;"	v	file:
s_5	languages/turkish.cc	/^static const symbol s_5[] = { 'p' };$/;"	v	file:
s_50	languages/arabic.cc	/^static const symbol s_50[] = { 0xD8, 0xA1 };$/;"	v	file:
s_50	languages/kraaij_pohlmann.cc	/^static const symbol s_50[] = { 'g' };$/;"	v	file:
s_50	languages/tamil.cc	/^static const symbol s_50[] = { 0xE0, 0xAE, 0x9F, 0xE0, 0xAF, 0x8D, 0xE0, 0xAE, 0x95, 0xE0, 0xAE, 0xB3, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_51	languages/arabic.cc	/^static const symbol s_51[] = { 0xD8, 0xA7 };$/;"	v	file:
s_51	languages/kraaij_pohlmann.cc	/^static const symbol s_51[] = { 'h' };$/;"	v	file:
s_51	languages/tamil.cc	/^static const symbol s_51[] = { 0xE0, 0xAE, 0xB3, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_52	languages/arabic.cc	/^static const symbol s_52[] = { 0xD9, 0x88 };$/;"	v	file:
s_52	languages/kraaij_pohlmann.cc	/^static const symbol s_52[] = { 'j' };$/;"	v	file:
s_52	languages/tamil.cc	/^static const symbol s_52[] = { 0xE0, 0xAE, 0x95, 0xE0, 0xAE, 0xB3, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_53	languages/arabic.cc	/^static const symbol s_53[] = { 0xD9, 0x8A };$/;"	v	file:
s_53	languages/kraaij_pohlmann.cc	/^static const symbol s_53[] = { 'k' };$/;"	v	file:
s_53	languages/tamil.cc	/^static const symbol s_53[] = { 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_54	languages/arabic.cc	/^static const symbol s_54[] = { 0xD8, 0xA3 };$/;"	v	file:
s_54	languages/kraaij_pohlmann.cc	/^static const symbol s_54[] = { 'l' };$/;"	v	file:
s_54	languages/tamil.cc	/^static const symbol s_54[] = { 0xE0, 0xAF, 0x81, 0xE0, 0xAE, 0xAE, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_55	languages/arabic.cc	/^static const symbol s_55[] = { 0xD8, 0xA2 };$/;"	v	file:
s_55	languages/kraaij_pohlmann.cc	/^static const symbol s_55[] = { 'm' };$/;"	v	file:
s_55	languages/tamil.cc	/^static const symbol s_55[] = { 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_56	languages/arabic.cc	/^static const symbol s_56[] = { 0xD8, 0xA7 };$/;"	v	file:
s_56	languages/kraaij_pohlmann.cc	/^static const symbol s_56[] = { 'n' };$/;"	v	file:
s_56	languages/tamil.cc	/^static const symbol s_56[] = { 0xE0, 0xAF, 0x81, 0xE0, 0xAE, 0x9F, 0xE0, 0xAE, 0xA9, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_57	languages/arabic.cc	/^static const symbol s_57[] = { 0xD8, 0xA5 };$/;"	v	file:
s_57	languages/kraaij_pohlmann.cc	/^static const symbol s_57[] = { 'p' };$/;"	v	file:
s_57	languages/tamil.cc	/^static const symbol s_57[] = { 0xE0, 0xAE, 0xBF, 0xE0, 0xAE, 0xB2, 0xE0, 0xAF, 0x8D, 0xE0, 0xAE, 0xB2, 0xE0, 0xAF, 0x88 };$/;"	v	file:
s_58	languages/arabic.cc	/^static const symbol s_58[] = { 0xD9, 0x81, 0xD8, 0xA7 };$/;"	v	file:
s_58	languages/kraaij_pohlmann.cc	/^static const symbol s_58[] = { 'q' };$/;"	v	file:
s_58	languages/tamil.cc	/^static const symbol s_58[] = { 0xE0, 0xAE, 0xBF, 0xE0, 0xAE, 0x9F, 0xE0, 0xAE, 0xAE, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_59	languages/arabic.cc	/^static const symbol s_59[] = { 0xD9, 0x88, 0xD8, 0xA7 };$/;"	v	file:
s_59	languages/kraaij_pohlmann.cc	/^static const symbol s_59[] = { 'r' };$/;"	v	file:
s_59	languages/tamil.cc	/^static const symbol s_59[] = { 0xE0, 0xAE, 0xBF, 0xE0, 0xAE, 0xA9, 0xE0, 0xAF, 0x8D, 0xE0, 0xAE, 0xB1, 0xE0, 0xAE, 0xBF };$/;"	v	file:
s_5_0	languages/arabic.cc	368;"	d	file:
s_5_0	languages/dutch.cc	59;"	d	file:
s_5_0	languages/earlyenglish.cc	100;"	d	file:
s_5_0	languages/english.cc	61;"	d	file:
s_5_0	languages/finnish.cc	87;"	d	file:
s_5_0	languages/french.cc	103;"	d	file:
s_5_0	languages/german2.cc	51;"	d	file:
s_5_0	languages/hungarian.cc	150;"	d	file:
s_5_0	languages/italian.cc	111;"	d	file:
s_5_0	languages/kraaij_pohlmann.cc	106;"	d	file:
s_5_0	languages/porter.cc	96;"	d	file:
s_5_0	languages/portuguese.cc	37;"	d	file:
s_5_0	languages/romanian.cc	390;"	d	file:
s_5_0	languages/russian.cc	155;"	d	file:
s_5_0	languages/spanish.cc	73;"	d	file:
s_5_0	languages/tamil.cc	63;"	d	file:
s_5_0	languages/turkish.cc	51;"	d	file:
s_5_1	languages/arabic.cc	370;"	d	file:
s_5_1	languages/dutch.cc	61;"	d	file:
s_5_1	languages/earlyenglish.cc	102;"	d	file:
s_5_1	languages/english.cc	63;"	d	file:
s_5_1	languages/finnish.cc	89;"	d	file:
s_5_1	languages/french.cc	104;"	d	file:
s_5_1	languages/german2.cc	53;"	d	file:
s_5_1	languages/hungarian.cc	151;"	d	file:
s_5_1	languages/italian.cc	113;"	d	file:
s_5_1	languages/kraaij_pohlmann.cc	108;"	d	file:
s_5_1	languages/porter.cc	98;"	d	file:
s_5_1	languages/portuguese.cc	38;"	d	file:
s_5_1	languages/romanian.cc	392;"	d	file:
s_5_1	languages/russian.cc	157;"	d	file:
s_5_1	languages/spanish.cc	75;"	d	file:
s_5_1	languages/tamil.cc	65;"	d	file:
s_5_1	languages/turkish.cc	53;"	d	file:
s_5_10	languages/earlyenglish.cc	120;"	d	file:
s_5_10	languages/english.cc	79;"	d	file:
s_5_10	languages/french.cc	116;"	d	file:
s_5_10	languages/porter.cc	116;"	d	file:
s_5_10	languages/portuguese.cc	48;"	d	file:
s_5_10	languages/russian.cc	171;"	d	file:
s_5_11	languages/earlyenglish.cc	122;"	d	file:
s_5_11	languages/english.cc	81;"	d	file:
s_5_11	languages/french.cc	118;"	d	file:
s_5_11	languages/porter.cc	118;"	d	file:
s_5_11	languages/portuguese.cc	49;"	d	file:
s_5_11	languages/russian.cc	173;"	d	file:
s_5_12	languages/earlyenglish.cc	124;"	d	file:
s_5_12	languages/english.cc	83;"	d	file:
s_5_12	languages/french.cc	120;"	d	file:
s_5_12	languages/porter.cc	120;"	d	file:
s_5_12	languages/portuguese.cc	50;"	d	file:
s_5_12	languages/russian.cc	174;"	d	file:
s_5_13	languages/earlyenglish.cc	126;"	d	file:
s_5_13	languages/english.cc	85;"	d	file:
s_5_13	languages/french.cc	122;"	d	file:
s_5_13	languages/porter.cc	122;"	d	file:
s_5_13	languages/portuguese.cc	51;"	d	file:
s_5_13	languages/russian.cc	175;"	d	file:
s_5_14	languages/earlyenglish.cc	128;"	d	file:
s_5_14	languages/english.cc	87;"	d	file:
s_5_14	languages/french.cc	123;"	d	file:
s_5_14	languages/porter.cc	124;"	d	file:
s_5_14	languages/portuguese.cc	53;"	d	file:
s_5_14	languages/russian.cc	177;"	d	file:
s_5_15	languages/earlyenglish.cc	130;"	d	file:
s_5_15	languages/english.cc	88;"	d	file:
s_5_15	languages/french.cc	125;"	d	file:
s_5_15	languages/porter.cc	126;"	d	file:
s_5_15	languages/portuguese.cc	55;"	d	file:
s_5_15	languages/russian.cc	179;"	d	file:
s_5_16	languages/earlyenglish.cc	131;"	d	file:
s_5_16	languages/english.cc	90;"	d	file:
s_5_16	languages/french.cc	127;"	d	file:
s_5_16	languages/porter.cc	127;"	d	file:
s_5_16	languages/portuguese.cc	57;"	d	file:
s_5_16	languages/russian.cc	180;"	d	file:
s_5_17	languages/earlyenglish.cc	132;"	d	file:
s_5_17	languages/english.cc	92;"	d	file:
s_5_17	languages/french.cc	129;"	d	file:
s_5_17	languages/porter.cc	128;"	d	file:
s_5_17	languages/portuguese.cc	59;"	d	file:
s_5_17	languages/russian.cc	182;"	d	file:
s_5_18	languages/earlyenglish.cc	134;"	d	file:
s_5_18	languages/english.cc	93;"	d	file:
s_5_18	languages/french.cc	131;"	d	file:
s_5_18	languages/porter.cc	130;"	d	file:
s_5_18	languages/portuguese.cc	60;"	d	file:
s_5_18	languages/russian.cc	183;"	d	file:
s_5_19	languages/english.cc	95;"	d	file:
s_5_19	languages/french.cc	133;"	d	file:
s_5_19	languages/portuguese.cc	61;"	d	file:
s_5_19	languages/russian.cc	184;"	d	file:
s_5_2	languages/dutch.cc	63;"	d	file:
s_5_2	languages/earlyenglish.cc	104;"	d	file:
s_5_2	languages/english.cc	65;"	d	file:
s_5_2	languages/finnish.cc	91;"	d	file:
s_5_2	languages/french.cc	105;"	d	file:
s_5_2	languages/german2.cc	55;"	d	file:
s_5_2	languages/hungarian.cc	152;"	d	file:
s_5_2	languages/italian.cc	115;"	d	file:
s_5_2	languages/kraaij_pohlmann.cc	110;"	d	file:
s_5_2	languages/porter.cc	100;"	d	file:
s_5_2	languages/portuguese.cc	40;"	d	file:
s_5_2	languages/romanian.cc	393;"	d	file:
s_5_2	languages/russian.cc	158;"	d	file:
s_5_2	languages/spanish.cc	77;"	d	file:
s_5_2	languages/tamil.cc	67;"	d	file:
s_5_20	languages/english.cc	97;"	d	file:
s_5_20	languages/french.cc	135;"	d	file:
s_5_20	languages/portuguese.cc	62;"	d	file:
s_5_20	languages/russian.cc	186;"	d	file:
s_5_21	languages/english.cc	99;"	d	file:
s_5_21	languages/french.cc	137;"	d	file:
s_5_21	languages/portuguese.cc	63;"	d	file:
s_5_21	languages/russian.cc	188;"	d	file:
s_5_22	languages/english.cc	101;"	d	file:
s_5_22	languages/french.cc	138;"	d	file:
s_5_22	languages/portuguese.cc	64;"	d	file:
s_5_22	languages/russian.cc	189;"	d	file:
s_5_23	languages/english.cc	103;"	d	file:
s_5_23	languages/french.cc	140;"	d	file:
s_5_23	languages/portuguese.cc	65;"	d	file:
s_5_23	languages/russian.cc	191;"	d	file:
s_5_24	languages/french.cc	142;"	d	file:
s_5_24	languages/portuguese.cc	67;"	d	file:
s_5_24	languages/russian.cc	193;"	d	file:
s_5_25	languages/french.cc	143;"	d	file:
s_5_25	languages/portuguese.cc	68;"	d	file:
s_5_25	languages/russian.cc	194;"	d	file:
s_5_26	languages/french.cc	145;"	d	file:
s_5_26	languages/portuguese.cc	70;"	d	file:
s_5_26	languages/russian.cc	195;"	d	file:
s_5_27	languages/french.cc	147;"	d	file:
s_5_27	languages/portuguese.cc	72;"	d	file:
s_5_27	languages/russian.cc	197;"	d	file:
s_5_28	languages/french.cc	149;"	d	file:
s_5_28	languages/portuguese.cc	74;"	d	file:
s_5_28	languages/russian.cc	199;"	d	file:
s_5_29	languages/french.cc	151;"	d	file:
s_5_29	languages/portuguese.cc	76;"	d	file:
s_5_29	languages/russian.cc	201;"	d	file:
s_5_3	languages/dutch.cc	65;"	d	file:
s_5_3	languages/earlyenglish.cc	106;"	d	file:
s_5_3	languages/english.cc	67;"	d	file:
s_5_3	languages/finnish.cc	93;"	d	file:
s_5_3	languages/french.cc	106;"	d	file:
s_5_3	languages/german2.cc	57;"	d	file:
s_5_3	languages/porter.cc	102;"	d	file:
s_5_3	languages/portuguese.cc	41;"	d	file:
s_5_3	languages/romanian.cc	395;"	d	file:
s_5_3	languages/russian.cc	160;"	d	file:
s_5_3	languages/tamil.cc	69;"	d	file:
s_5_30	languages/french.cc	153;"	d	file:
s_5_30	languages/portuguese.cc	78;"	d	file:
s_5_30	languages/russian.cc	202;"	d	file:
s_5_31	languages/french.cc	154;"	d	file:
s_5_31	languages/portuguese.cc	80;"	d	file:
s_5_31	languages/russian.cc	203;"	d	file:
s_5_32	languages/french.cc	156;"	d	file:
s_5_32	languages/portuguese.cc	82;"	d	file:
s_5_32	languages/russian.cc	204;"	d	file:
s_5_33	languages/french.cc	158;"	d	file:
s_5_33	languages/portuguese.cc	84;"	d	file:
s_5_33	languages/russian.cc	205;"	d	file:
s_5_34	languages/french.cc	160;"	d	file:
s_5_34	languages/portuguese.cc	86;"	d	file:
s_5_34	languages/russian.cc	207;"	d	file:
s_5_35	languages/portuguese.cc	88;"	d	file:
s_5_35	languages/russian.cc	209;"	d	file:
s_5_36	languages/portuguese.cc	90;"	d	file:
s_5_37	languages/portuguese.cc	92;"	d	file:
s_5_38	languages/portuguese.cc	94;"	d	file:
s_5_39	languages/portuguese.cc	96;"	d	file:
s_5_4	languages/earlyenglish.cc	108;"	d	file:
s_5_4	languages/english.cc	68;"	d	file:
s_5_4	languages/finnish.cc	95;"	d	file:
s_5_4	languages/french.cc	107;"	d	file:
s_5_4	languages/german2.cc	59;"	d	file:
s_5_4	languages/porter.cc	104;"	d	file:
s_5_4	languages/portuguese.cc	42;"	d	file:
s_5_4	languages/romanian.cc	396;"	d	file:
s_5_4	languages/russian.cc	162;"	d	file:
s_5_4	languages/tamil.cc	71;"	d	file:
s_5_40	languages/portuguese.cc	98;"	d	file:
s_5_41	languages/portuguese.cc	100;"	d	file:
s_5_42	languages/portuguese.cc	102;"	d	file:
s_5_43	languages/portuguese.cc	104;"	d	file:
s_5_44	languages/portuguese.cc	106;"	d	file:
s_5_5	languages/earlyenglish.cc	110;"	d	file:
s_5_5	languages/english.cc	69;"	d	file:
s_5_5	languages/finnish.cc	97;"	d	file:
s_5_5	languages/french.cc	108;"	d	file:
s_5_5	languages/german2.cc	61;"	d	file:
s_5_5	languages/porter.cc	106;"	d	file:
s_5_5	languages/portuguese.cc	43;"	d	file:
s_5_5	languages/russian.cc	164;"	d	file:
s_5_5	languages/tamil.cc	73;"	d	file:
s_5_6	languages/earlyenglish.cc	112;"	d	file:
s_5_6	languages/english.cc	71;"	d	file:
s_5_6	languages/finnish.cc	99;"	d	file:
s_5_6	languages/french.cc	109;"	d	file:
s_5_6	languages/german2.cc	63;"	d	file:
s_5_6	languages/porter.cc	108;"	d	file:
s_5_6	languages/portuguese.cc	44;"	d	file:
s_5_6	languages/russian.cc	165;"	d	file:
s_5_7	languages/earlyenglish.cc	114;"	d	file:
s_5_7	languages/english.cc	73;"	d	file:
s_5_7	languages/french.cc	110;"	d	file:
s_5_7	languages/german2.cc	65;"	d	file:
s_5_7	languages/porter.cc	110;"	d	file:
s_5_7	languages/portuguese.cc	45;"	d	file:
s_5_7	languages/russian.cc	166;"	d	file:
s_5_8	languages/earlyenglish.cc	116;"	d	file:
s_5_8	languages/english.cc	75;"	d	file:
s_5_8	languages/french.cc	112;"	d	file:
s_5_8	languages/porter.cc	112;"	d	file:
s_5_8	languages/portuguese.cc	46;"	d	file:
s_5_8	languages/russian.cc	168;"	d	file:
s_5_9	languages/earlyenglish.cc	118;"	d	file:
s_5_9	languages/english.cc	77;"	d	file:
s_5_9	languages/french.cc	114;"	d	file:
s_5_9	languages/porter.cc	114;"	d	file:
s_5_9	languages/portuguese.cc	47;"	d	file:
s_5_9	languages/russian.cc	170;"	d	file:
s_6	languages/arabic.cc	/^static const symbol s_6[] = { '6' };$/;"	v	file:
s_6	languages/basque.cc	/^static const symbol s_6[] = { 'z', 'e', 'h', 'a', 'r' };$/;"	v	file:
s_6	languages/catalan.cc	/^static const symbol s_6[] = { 'l', 'o', 'g' };$/;"	v	file:
s_6	languages/dutch.cc	/^static const symbol s_6[] = { 'I' };$/;"	v	file:
s_6	languages/earlyenglish.cc	/^static const symbol s_6[] = { 't', 'i', 'o', 'n' };$/;"	v	file:
s_6	languages/english.cc	/^static const symbol s_6[] = { 'e' };$/;"	v	file:
s_6	languages/finnish.cc	/^static const symbol s_6[] = { 'p', 'o' };$/;"	v	file:
s_6	languages/french.cc	/^static const symbol s_6[] = { 'u' };$/;"	v	file:
s_6	languages/german.cc	/^static const symbol s_6[] = { 'a' };$/;"	v	file:
s_6	languages/german2.cc	/^static const symbol s_6[] = { 'y' };$/;"	v	file:
s_6	languages/hungarian.cc	/^static const symbol s_6[] = { 'a' };$/;"	v	file:
s_6	languages/indonesian.cc	/^static const symbol s_6[] = { 'a', 'j', 'a', 'r' };$/;"	v	file:
s_6	languages/irish.cc	/^static const symbol s_6[] = { 'p' };$/;"	v	file:
s_6	languages/italian.cc	/^static const symbol s_6[] = { 'U' };$/;"	v	file:
s_6	languages/kraaij_pohlmann.cc	/^static const symbol s_6[] = { 'e' };$/;"	v	file:
s_6	languages/lithuanian.cc	/^static const symbol s_6[] = { 'o', 'j', 'i', 'm', 'a', 's' };$/;"	v	file:
s_6	languages/lovins.cc	/^static const symbol s_6[] = { 'u', 'c' };$/;"	v	file:
s_6	languages/nepali.cc	/^static const symbol s_6[] = { 0xE0, 0xA4, 0xA4, 0xE0, 0xA5, 0x8D, 0xE0, 0xA4, 0xB0 };$/;"	v	file:
s_6	languages/porter.cc	/^static const symbol s_6[] = { 't', 'i', 'o', 'n' };$/;"	v	file:
s_6	languages/portuguese.cc	/^static const symbol s_6[] = { 'e', 'n', 't', 'e' };$/;"	v	file:
s_6	languages/romanian.cc	/^static const symbol s_6[] = { 'i' };$/;"	v	file:
s_6	languages/russian.cc	/^static const symbol s_6[] = { 0xD0, 0xBD };$/;"	v	file:
s_6	languages/spanish.cc	/^static const symbol s_6[] = { 'a', 'n', 'd', 'o' };$/;"	v	file:
s_6	languages/tamil.cc	/^static const symbol s_6[] = { 0xE0, 0xAE, 0xB5, 0xE0, 0xAF, 0x81 };$/;"	v	file:
s_6	languages/turkish.cc	/^static const symbol s_6[] = { 0xC3, 0xA7 };$/;"	v	file:
s_60	languages/arabic.cc	/^static const symbol s_60[] = { 0xD8, 0xA8, 0xD8, 0xA7 };$/;"	v	file:
s_60	languages/kraaij_pohlmann.cc	/^static const symbol s_60[] = { 's' };$/;"	v	file:
s_60	languages/tamil.cc	/^static const symbol s_60[] = { 0xE0, 0xAE, 0xBE, 0xE0, 0xAE, 0x95, 0xE0, 0xAE, 0xBF };$/;"	v	file:
s_61	languages/arabic.cc	/^static const symbol s_61[] = { 0xD8, 0xA8 };$/;"	v	file:
s_61	languages/kraaij_pohlmann.cc	/^static const symbol s_61[] = { 't' };$/;"	v	file:
s_61	languages/tamil.cc	/^static const symbol s_61[] = { 0xE0, 0xAE, 0xBE, 0xE0, 0xAE, 0x95, 0xE0, 0xAE, 0xBF, 0xE0, 0xAE, 0xAF };$/;"	v	file:
s_62	languages/arabic.cc	/^static const symbol s_62[] = { 0xD9, 0x83 };$/;"	v	file:
s_62	languages/kraaij_pohlmann.cc	/^static const symbol s_62[] = { 'v' };$/;"	v	file:
s_62	languages/tamil.cc	/^static const symbol s_62[] = { 0xE0, 0xAF, 0x86, 0xE0, 0xAE, 0xA9, 0xE0, 0xAF, 0x8D, 0xE0, 0xAE, 0xB1, 0xE0, 0xAF, 0x81 };$/;"	v	file:
s_63	languages/arabic.cc	/^static const symbol s_63[] = { 0xD9, 0x8A };$/;"	v	file:
s_63	languages/kraaij_pohlmann.cc	/^static const symbol s_63[] = { 'w' };$/;"	v	file:
s_63	languages/tamil.cc	/^static const symbol s_63[] = { 0xE0, 0xAF, 0x81, 0xE0, 0xAE, 0xB3, 0xE0, 0xAF, 0x8D, 0xE0, 0xAE, 0xB3 };$/;"	v	file:
s_64	languages/arabic.cc	/^static const symbol s_64[] = { 0xD8, 0xAA };$/;"	v	file:
s_64	languages/kraaij_pohlmann.cc	/^static const symbol s_64[] = { 'x' };$/;"	v	file:
s_64	languages/tamil.cc	/^static const symbol s_64[] = { 0xE0, 0xAF, 0x81, 0xE0, 0xAE, 0x9F, 0xE0, 0xAF, 0x88, 0xE0, 0xAE, 0xAF };$/;"	v	file:
s_65	languages/arabic.cc	/^static const symbol s_65[] = { 0xD9, 0x86 };$/;"	v	file:
s_65	languages/kraaij_pohlmann.cc	/^static const symbol s_65[] = { 'z' };$/;"	v	file:
s_65	languages/tamil.cc	/^static const symbol s_65[] = { 0xE0, 0xAF, 0x81, 0xE0, 0xAE, 0x9F, 0xE0, 0xAF, 0x88 };$/;"	v	file:
s_66	languages/arabic.cc	/^static const symbol s_66[] = { 0xD8, 0xA3 };$/;"	v	file:
s_66	languages/kraaij_pohlmann.cc	/^static const symbol s_66[] = { 'g', 'e' };$/;"	v	file:
s_66	languages/tamil.cc	/^static const symbol s_66[] = { 0xE0, 0xAF, 0x86, 0xE0, 0xAE, 0xA9, 0xE0, 0xAF, 0x81, 0xE0, 0xAE, 0xAE, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_67	languages/arabic.cc	/^static const symbol s_67[] = { 0xD8, 0xA7, 0xD8, 0xB3, 0xD8, 0xAA };$/;"	v	file:
s_67	languages/kraaij_pohlmann.cc	/^static const symbol s_67[] = { 'g', 'e' };$/;"	v	file:
s_67	languages/tamil.cc	/^static const symbol s_67[] = { 0xE0, 0xAE, 0xB2, 0xE0, 0xAF, 0x8D, 0xE0, 0xAE, 0xB2 };$/;"	v	file:
s_68	languages/arabic.cc	/^static const symbol s_68[] = { 0xD9, 0x8A };$/;"	v	file:
s_68	languages/kraaij_pohlmann.cc	/^static const symbol s_68[] = { 'i', 'j' };$/;"	v	file:
s_68	languages/tamil.cc	/^static const symbol s_68[] = { 0xE0, 0xAF, 0x86, 0xE0, 0xAE, 0xA9 };$/;"	v	file:
s_69	languages/kraaij_pohlmann.cc	/^static const symbol s_69[] = { 'i', 'j' };$/;"	v	file:
s_69	languages/tamil.cc	/^static const symbol s_69[] = { 0xE0, 0xAE, 0xBE, 0xE0, 0xAE, 0x95, 0xE0, 0xAE, 0xBF };$/;"	v	file:
s_6_0	languages/arabic.cc	372;"	d	file:
s_6_0	languages/english.cc	105;"	d	file:
s_6_0	languages/finnish.cc	101;"	d	file:
s_6_0	languages/french.cc	162;"	d	file:
s_6_0	languages/hungarian.cc	154;"	d	file:
s_6_0	languages/italian.cc	117;"	d	file:
s_6_0	languages/kraaij_pohlmann.cc	112;"	d	file:
s_6_0	languages/portuguese.cc	108;"	d	file:
s_6_0	languages/russian.cc	210;"	d	file:
s_6_0	languages/spanish.cc	79;"	d	file:
s_6_0	languages/tamil.cc	75;"	d	file:
s_6_0	languages/turkish.cc	55;"	d	file:
s_6_1	languages/arabic.cc	373;"	d	file:
s_6_1	languages/english.cc	107;"	d	file:
s_6_1	languages/finnish.cc	102;"	d	file:
s_6_1	languages/french.cc	163;"	d	file:
s_6_1	languages/hungarian.cc	155;"	d	file:
s_6_1	languages/italian.cc	119;"	d	file:
s_6_1	languages/kraaij_pohlmann.cc	114;"	d	file:
s_6_1	languages/portuguese.cc	109;"	d	file:
s_6_1	languages/russian.cc	211;"	d	file:
s_6_1	languages/spanish.cc	80;"	d	file:
s_6_1	languages/tamil.cc	77;"	d	file:
s_6_1	languages/turkish.cc	57;"	d	file:
s_6_10	languages/finnish.cc	119;"	d	file:
s_6_10	languages/french.cc	173;"	d	file:
s_6_10	languages/italian.cc	136;"	d	file:
s_6_10	languages/kraaij_pohlmann.cc	132;"	d	file:
s_6_10	languages/portuguese.cc	118;"	d	file:
s_6_10	languages/spanish.cc	89;"	d	file:
s_6_100	languages/portuguese.cc	268;"	d	file:
s_6_101	languages/portuguese.cc	270;"	d	file:
s_6_102	languages/portuguese.cc	272;"	d	file:
s_6_103	languages/portuguese.cc	274;"	d	file:
s_6_104	languages/portuguese.cc	276;"	d	file:
s_6_105	languages/portuguese.cc	278;"	d	file:
s_6_106	languages/portuguese.cc	280;"	d	file:
s_6_107	languages/portuguese.cc	282;"	d	file:
s_6_108	languages/portuguese.cc	284;"	d	file:
s_6_109	languages/portuguese.cc	286;"	d	file:
s_6_11	languages/finnish.cc	121;"	d	file:
s_6_11	languages/french.cc	175;"	d	file:
s_6_11	languages/italian.cc	138;"	d	file:
s_6_11	languages/kraaij_pohlmann.cc	134;"	d	file:
s_6_11	languages/portuguese.cc	119;"	d	file:
s_6_11	languages/spanish.cc	90;"	d	file:
s_6_110	languages/portuguese.cc	288;"	d	file:
s_6_111	languages/portuguese.cc	290;"	d	file:
s_6_112	languages/portuguese.cc	292;"	d	file:
s_6_113	languages/portuguese.cc	294;"	d	file:
s_6_114	languages/portuguese.cc	296;"	d	file:
s_6_115	languages/portuguese.cc	298;"	d	file:
s_6_116	languages/portuguese.cc	300;"	d	file:
s_6_117	languages/portuguese.cc	302;"	d	file:
s_6_118	languages/portuguese.cc	303;"	d	file:
s_6_119	languages/portuguese.cc	304;"	d	file:
s_6_12	languages/finnish.cc	122;"	d	file:
s_6_12	languages/french.cc	177;"	d	file:
s_6_12	languages/italian.cc	140;"	d	file:
s_6_12	languages/kraaij_pohlmann.cc	136;"	d	file:
s_6_12	languages/portuguese.cc	120;"	d	file:
s_6_12	languages/spanish.cc	91;"	d	file:
s_6_13	languages/finnish.cc	124;"	d	file:
s_6_13	languages/french.cc	179;"	d	file:
s_6_13	languages/italian.cc	142;"	d	file:
s_6_13	languages/kraaij_pohlmann.cc	138;"	d	file:
s_6_13	languages/portuguese.cc	121;"	d	file:
s_6_13	languages/spanish.cc	92;"	d	file:
s_6_14	languages/finnish.cc	126;"	d	file:
s_6_14	languages/french.cc	181;"	d	file:
s_6_14	languages/italian.cc	144;"	d	file:
s_6_14	languages/kraaij_pohlmann.cc	140;"	d	file:
s_6_14	languages/portuguese.cc	122;"	d	file:
s_6_14	languages/spanish.cc	93;"	d	file:
s_6_15	languages/finnish.cc	128;"	d	file:
s_6_15	languages/french.cc	183;"	d	file:
s_6_15	languages/italian.cc	146;"	d	file:
s_6_15	languages/kraaij_pohlmann.cc	142;"	d	file:
s_6_15	languages/portuguese.cc	123;"	d	file:
s_6_15	languages/spanish.cc	95;"	d	file:
s_6_16	languages/finnish.cc	130;"	d	file:
s_6_16	languages/french.cc	184;"	d	file:
s_6_16	languages/italian.cc	148;"	d	file:
s_6_16	languages/kraaij_pohlmann.cc	144;"	d	file:
s_6_16	languages/portuguese.cc	124;"	d	file:
s_6_16	languages/spanish.cc	97;"	d	file:
s_6_17	languages/finnish.cc	132;"	d	file:
s_6_17	languages/french.cc	186;"	d	file:
s_6_17	languages/italian.cc	150;"	d	file:
s_6_17	languages/kraaij_pohlmann.cc	145;"	d	file:
s_6_17	languages/portuguese.cc	125;"	d	file:
s_6_17	languages/spanish.cc	99;"	d	file:
s_6_18	languages/finnish.cc	134;"	d	file:
s_6_18	languages/french.cc	187;"	d	file:
s_6_18	languages/italian.cc	152;"	d	file:
s_6_18	languages/kraaij_pohlmann.cc	147;"	d	file:
s_6_18	languages/portuguese.cc	126;"	d	file:
s_6_18	languages/spanish.cc	100;"	d	file:
s_6_19	languages/finnish.cc	136;"	d	file:
s_6_19	languages/french.cc	189;"	d	file:
s_6_19	languages/italian.cc	154;"	d	file:
s_6_19	languages/kraaij_pohlmann.cc	149;"	d	file:
s_6_19	languages/portuguese.cc	127;"	d	file:
s_6_19	languages/spanish.cc	101;"	d	file:
s_6_2	languages/arabic.cc	375;"	d	file:
s_6_2	languages/english.cc	109;"	d	file:
s_6_2	languages/finnish.cc	104;"	d	file:
s_6_2	languages/french.cc	164;"	d	file:
s_6_2	languages/hungarian.cc	157;"	d	file:
s_6_2	languages/italian.cc	121;"	d	file:
s_6_2	languages/kraaij_pohlmann.cc	116;"	d	file:
s_6_2	languages/portuguese.cc	110;"	d	file:
s_6_2	languages/spanish.cc	81;"	d	file:
s_6_2	languages/tamil.cc	79;"	d	file:
s_6_2	languages/turkish.cc	59;"	d	file:
s_6_20	languages/finnish.cc	138;"	d	file:
s_6_20	languages/french.cc	191;"	d	file:
s_6_20	languages/italian.cc	155;"	d	file:
s_6_20	languages/kraaij_pohlmann.cc	151;"	d	file:
s_6_20	languages/portuguese.cc	128;"	d	file:
s_6_20	languages/spanish.cc	102;"	d	file:
s_6_21	languages/finnish.cc	140;"	d	file:
s_6_21	languages/french.cc	193;"	d	file:
s_6_21	languages/italian.cc	157;"	d	file:
s_6_21	languages/kraaij_pohlmann.cc	152;"	d	file:
s_6_21	languages/portuguese.cc	129;"	d	file:
s_6_21	languages/spanish.cc	103;"	d	file:
s_6_22	languages/finnish.cc	142;"	d	file:
s_6_22	languages/french.cc	195;"	d	file:
s_6_22	languages/italian.cc	159;"	d	file:
s_6_22	languages/portuguese.cc	130;"	d	file:
s_6_22	languages/spanish.cc	104;"	d	file:
s_6_23	languages/finnish.cc	143;"	d	file:
s_6_23	languages/french.cc	197;"	d	file:
s_6_23	languages/italian.cc	161;"	d	file:
s_6_23	languages/portuguese.cc	132;"	d	file:
s_6_23	languages/spanish.cc	105;"	d	file:
s_6_24	languages/finnish.cc	145;"	d	file:
s_6_24	languages/french.cc	198;"	d	file:
s_6_24	languages/italian.cc	163;"	d	file:
s_6_24	languages/portuguese.cc	134;"	d	file:
s_6_24	languages/spanish.cc	106;"	d	file:
s_6_25	languages/finnish.cc	147;"	d	file:
s_6_25	languages/french.cc	200;"	d	file:
s_6_25	languages/italian.cc	165;"	d	file:
s_6_25	languages/portuguese.cc	136;"	d	file:
s_6_25	languages/spanish.cc	108;"	d	file:
s_6_26	languages/finnish.cc	149;"	d	file:
s_6_26	languages/french.cc	201;"	d	file:
s_6_26	languages/italian.cc	166;"	d	file:
s_6_26	languages/portuguese.cc	138;"	d	file:
s_6_26	languages/spanish.cc	110;"	d	file:
s_6_27	languages/finnish.cc	150;"	d	file:
s_6_27	languages/french.cc	202;"	d	file:
s_6_27	languages/italian.cc	168;"	d	file:
s_6_27	languages/portuguese.cc	140;"	d	file:
s_6_27	languages/spanish.cc	112;"	d	file:
s_6_28	languages/finnish.cc	152;"	d	file:
s_6_28	languages/french.cc	204;"	d	file:
s_6_28	languages/italian.cc	170;"	d	file:
s_6_28	languages/portuguese.cc	142;"	d	file:
s_6_28	languages/spanish.cc	114;"	d	file:
s_6_29	languages/finnish.cc	154;"	d	file:
s_6_29	languages/french.cc	206;"	d	file:
s_6_29	languages/italian.cc	172;"	d	file:
s_6_29	languages/portuguese.cc	144;"	d	file:
s_6_29	languages/spanish.cc	116;"	d	file:
s_6_3	languages/arabic.cc	377;"	d	file:
s_6_3	languages/english.cc	111;"	d	file:
s_6_3	languages/finnish.cc	106;"	d	file:
s_6_3	languages/french.cc	165;"	d	file:
s_6_3	languages/hungarian.cc	159;"	d	file:
s_6_3	languages/italian.cc	123;"	d	file:
s_6_3	languages/kraaij_pohlmann.cc	118;"	d	file:
s_6_3	languages/portuguese.cc	111;"	d	file:
s_6_3	languages/spanish.cc	82;"	d	file:
s_6_3	languages/tamil.cc	81;"	d	file:
s_6_3	languages/turkish.cc	61;"	d	file:
s_6_30	languages/french.cc	208;"	d	file:
s_6_30	languages/italian.cc	174;"	d	file:
s_6_30	languages/portuguese.cc	145;"	d	file:
s_6_30	languages/spanish.cc	118;"	d	file:
s_6_31	languages/french.cc	210;"	d	file:
s_6_31	languages/italian.cc	176;"	d	file:
s_6_31	languages/portuguese.cc	146;"	d	file:
s_6_31	languages/spanish.cc	120;"	d	file:
s_6_32	languages/french.cc	211;"	d	file:
s_6_32	languages/italian.cc	178;"	d	file:
s_6_32	languages/portuguese.cc	147;"	d	file:
s_6_32	languages/spanish.cc	122;"	d	file:
s_6_33	languages/french.cc	212;"	d	file:
s_6_33	languages/italian.cc	180;"	d	file:
s_6_33	languages/portuguese.cc	148;"	d	file:
s_6_33	languages/spanish.cc	124;"	d	file:
s_6_34	languages/french.cc	213;"	d	file:
s_6_34	languages/italian.cc	182;"	d	file:
s_6_34	languages/portuguese.cc	150;"	d	file:
s_6_34	languages/spanish.cc	126;"	d	file:
s_6_35	languages/french.cc	215;"	d	file:
s_6_35	languages/italian.cc	184;"	d	file:
s_6_35	languages/portuguese.cc	152;"	d	file:
s_6_35	languages/spanish.cc	128;"	d	file:
s_6_36	languages/french.cc	217;"	d	file:
s_6_36	languages/italian.cc	186;"	d	file:
s_6_36	languages/portuguese.cc	154;"	d	file:
s_6_36	languages/spanish.cc	130;"	d	file:
s_6_37	languages/french.cc	219;"	d	file:
s_6_37	languages/italian.cc	188;"	d	file:
s_6_37	languages/portuguese.cc	155;"	d	file:
s_6_37	languages/spanish.cc	132;"	d	file:
s_6_38	languages/italian.cc	190;"	d	file:
s_6_38	languages/portuguese.cc	156;"	d	file:
s_6_38	languages/spanish.cc	134;"	d	file:
s_6_39	languages/italian.cc	192;"	d	file:
s_6_39	languages/portuguese.cc	158;"	d	file:
s_6_39	languages/spanish.cc	136;"	d	file:
s_6_4	languages/english.cc	113;"	d	file:
s_6_4	languages/finnish.cc	108;"	d	file:
s_6_4	languages/french.cc	166;"	d	file:
s_6_4	languages/hungarian.cc	160;"	d	file:
s_6_4	languages/italian.cc	125;"	d	file:
s_6_4	languages/kraaij_pohlmann.cc	120;"	d	file:
s_6_4	languages/portuguese.cc	112;"	d	file:
s_6_4	languages/spanish.cc	83;"	d	file:
s_6_4	languages/tamil.cc	83;"	d	file:
s_6_40	languages/italian.cc	194;"	d	file:
s_6_40	languages/portuguese.cc	160;"	d	file:
s_6_40	languages/spanish.cc	138;"	d	file:
s_6_41	languages/italian.cc	196;"	d	file:
s_6_41	languages/portuguese.cc	162;"	d	file:
s_6_41	languages/spanish.cc	140;"	d	file:
s_6_42	languages/italian.cc	198;"	d	file:
s_6_42	languages/portuguese.cc	164;"	d	file:
s_6_42	languages/spanish.cc	142;"	d	file:
s_6_43	languages/italian.cc	200;"	d	file:
s_6_43	languages/portuguese.cc	166;"	d	file:
s_6_43	languages/spanish.cc	144;"	d	file:
s_6_44	languages/italian.cc	202;"	d	file:
s_6_44	languages/portuguese.cc	168;"	d	file:
s_6_44	languages/spanish.cc	146;"	d	file:
s_6_45	languages/italian.cc	204;"	d	file:
s_6_45	languages/portuguese.cc	169;"	d	file:
s_6_45	languages/spanish.cc	148;"	d	file:
s_6_46	languages/italian.cc	206;"	d	file:
s_6_46	languages/portuguese.cc	170;"	d	file:
s_6_47	languages/italian.cc	208;"	d	file:
s_6_47	languages/portuguese.cc	171;"	d	file:
s_6_48	languages/italian.cc	210;"	d	file:
s_6_48	languages/portuguese.cc	172;"	d	file:
s_6_49	languages/italian.cc	212;"	d	file:
s_6_49	languages/portuguese.cc	174;"	d	file:
s_6_5	languages/english.cc	115;"	d	file:
s_6_5	languages/finnish.cc	109;"	d	file:
s_6_5	languages/french.cc	167;"	d	file:
s_6_5	languages/hungarian.cc	162;"	d	file:
s_6_5	languages/italian.cc	127;"	d	file:
s_6_5	languages/kraaij_pohlmann.cc	122;"	d	file:
s_6_5	languages/portuguese.cc	113;"	d	file:
s_6_5	languages/spanish.cc	84;"	d	file:
s_6_5	languages/tamil.cc	85;"	d	file:
s_6_50	languages/italian.cc	214;"	d	file:
s_6_50	languages/portuguese.cc	176;"	d	file:
s_6_51	languages/portuguese.cc	177;"	d	file:
s_6_52	languages/portuguese.cc	179;"	d	file:
s_6_53	languages/portuguese.cc	181;"	d	file:
s_6_54	languages/portuguese.cc	183;"	d	file:
s_6_55	languages/portuguese.cc	185;"	d	file:
s_6_56	languages/portuguese.cc	187;"	d	file:
s_6_57	languages/portuguese.cc	189;"	d	file:
s_6_58	languages/portuguese.cc	191;"	d	file:
s_6_59	languages/portuguese.cc	192;"	d	file:
s_6_6	languages/english.cc	116;"	d	file:
s_6_6	languages/finnish.cc	111;"	d	file:
s_6_6	languages/french.cc	168;"	d	file:
s_6_6	languages/italian.cc	129;"	d	file:
s_6_6	languages/kraaij_pohlmann.cc	124;"	d	file:
s_6_6	languages/portuguese.cc	114;"	d	file:
s_6_6	languages/spanish.cc	85;"	d	file:
s_6_60	languages/portuguese.cc	194;"	d	file:
s_6_61	languages/portuguese.cc	196;"	d	file:
s_6_62	languages/portuguese.cc	198;"	d	file:
s_6_63	languages/portuguese.cc	200;"	d	file:
s_6_64	languages/portuguese.cc	202;"	d	file:
s_6_65	languages/portuguese.cc	204;"	d	file:
s_6_66	languages/portuguese.cc	206;"	d	file:
s_6_67	languages/portuguese.cc	208;"	d	file:
s_6_68	languages/portuguese.cc	210;"	d	file:
s_6_69	languages/portuguese.cc	212;"	d	file:
s_6_7	languages/english.cc	118;"	d	file:
s_6_7	languages/finnish.cc	113;"	d	file:
s_6_7	languages/french.cc	169;"	d	file:
s_6_7	languages/italian.cc	131;"	d	file:
s_6_7	languages/kraaij_pohlmann.cc	126;"	d	file:
s_6_7	languages/portuguese.cc	115;"	d	file:
s_6_7	languages/spanish.cc	86;"	d	file:
s_6_70	languages/portuguese.cc	214;"	d	file:
s_6_71	languages/portuguese.cc	216;"	d	file:
s_6_72	languages/portuguese.cc	217;"	d	file:
s_6_73	languages/portuguese.cc	219;"	d	file:
s_6_74	languages/portuguese.cc	220;"	d	file:
s_6_75	languages/portuguese.cc	222;"	d	file:
s_6_76	languages/portuguese.cc	224;"	d	file:
s_6_77	languages/portuguese.cc	226;"	d	file:
s_6_78	languages/portuguese.cc	228;"	d	file:
s_6_79	languages/portuguese.cc	230;"	d	file:
s_6_8	languages/english.cc	120;"	d	file:
s_6_8	languages/finnish.cc	115;"	d	file:
s_6_8	languages/french.cc	170;"	d	file:
s_6_8	languages/italian.cc	132;"	d	file:
s_6_8	languages/kraaij_pohlmann.cc	128;"	d	file:
s_6_8	languages/portuguese.cc	116;"	d	file:
s_6_8	languages/spanish.cc	87;"	d	file:
s_6_80	languages/portuguese.cc	232;"	d	file:
s_6_81	languages/portuguese.cc	234;"	d	file:
s_6_82	languages/portuguese.cc	236;"	d	file:
s_6_83	languages/portuguese.cc	238;"	d	file:
s_6_84	languages/portuguese.cc	240;"	d	file:
s_6_85	languages/portuguese.cc	241;"	d	file:
s_6_86	languages/portuguese.cc	243;"	d	file:
s_6_87	languages/portuguese.cc	245;"	d	file:
s_6_88	languages/portuguese.cc	247;"	d	file:
s_6_89	languages/portuguese.cc	249;"	d	file:
s_6_9	languages/finnish.cc	117;"	d	file:
s_6_9	languages/french.cc	171;"	d	file:
s_6_9	languages/italian.cc	134;"	d	file:
s_6_9	languages/kraaij_pohlmann.cc	130;"	d	file:
s_6_9	languages/portuguese.cc	117;"	d	file:
s_6_9	languages/spanish.cc	88;"	d	file:
s_6_90	languages/portuguese.cc	251;"	d	file:
s_6_91	languages/portuguese.cc	252;"	d	file:
s_6_92	languages/portuguese.cc	254;"	d	file:
s_6_93	languages/portuguese.cc	256;"	d	file:
s_6_94	languages/portuguese.cc	258;"	d	file:
s_6_95	languages/portuguese.cc	260;"	d	file:
s_6_96	languages/portuguese.cc	261;"	d	file:
s_6_97	languages/portuguese.cc	263;"	d	file:
s_6_98	languages/portuguese.cc	265;"	d	file:
s_6_99	languages/portuguese.cc	267;"	d	file:
s_7	languages/arabic.cc	/^static const symbol s_7[] = { '7' };$/;"	v	file:
s_7	languages/basque.cc	/^static const symbol s_7[] = { 'g', 'e', 'l', 'd', 'i' };$/;"	v	file:
s_7	languages/catalan.cc	/^static const symbol s_7[] = { 'i', 'c' };$/;"	v	file:
s_7	languages/dutch.cc	/^static const symbol s_7[] = { 'Y' };$/;"	v	file:
s_7	languages/earlyenglish.cc	/^static const symbol s_7[] = { 'e', 'n', 'c', 'e' };$/;"	v	file:
s_7	languages/english.cc	/^static const symbol s_7[] = { 'e' };$/;"	v	file:
s_7	languages/french.cc	/^static const symbol s_7[] = { 'y' };$/;"	v	file:
s_7	languages/german.cc	/^static const symbol s_7[] = { 'o' };$/;"	v	file:
s_7	languages/german2.cc	/^static const symbol s_7[] = { 'u' };$/;"	v	file:
s_7	languages/hungarian.cc	/^static const symbol s_7[] = { 'e' };$/;"	v	file:
s_7	languages/irish.cc	/^static const symbol s_7[] = { 't' };$/;"	v	file:
s_7	languages/italian.cc	/^static const symbol s_7[] = { 'I' };$/;"	v	file:
s_7	languages/kraaij_pohlmann.cc	/^static const symbol s_7[] = { 'a', 'u' };$/;"	v	file:
s_7	languages/lithuanian.cc	/^static const symbol s_7[] = { 'o', 'k', 'a', 't', 0xC4, 0x97 };$/;"	v	file:
s_7	languages/lovins.cc	/^static const symbol s_7[] = { 'u', 'm' };$/;"	v	file:
s_7	languages/porter.cc	/^static const symbol s_7[] = { 'e', 'n', 'c', 'e' };$/;"	v	file:
s_7	languages/portuguese.cc	/^static const symbol s_7[] = { 'a', 't' };$/;"	v	file:
s_7	languages/romanian.cc	/^static const symbol s_7[] = { 'a', 'b' };$/;"	v	file:
s_7	languages/russian.cc	/^static const symbol s_7[] = { 0xD0, 0xBD };$/;"	v	file:
s_7	languages/spanish.cc	/^static const symbol s_7[] = { 'a', 'r' };$/;"	v	file:
s_7	languages/tamil.cc	/^static const symbol s_7[] = { 0xE0, 0xAE, 0xB5, 0xE0, 0xAF, 0x81 };$/;"	v	file:
s_7	languages/turkish.cc	/^static const symbol s_7[] = { 't' };$/;"	v	file:
s_70	languages/kraaij_pohlmann.cc	/^static const symbol s_70[] = { 'Y' };$/;"	v	file:
s_70	languages/tamil.cc	/^static const symbol s_70[] = { 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_71	languages/kraaij_pohlmann.cc	/^static const symbol s_71[] = { 'Y' };$/;"	v	file:
s_71	languages/tamil.cc	/^static const symbol s_71[] = { 0xE0, 0xAE, 0xA9, 0xE0, 0xAF, 0x88 };$/;"	v	file:
s_72	languages/kraaij_pohlmann.cc	/^static const symbol s_72[] = { 'y' };$/;"	v	file:
s_72	languages/tamil.cc	/^static const symbol s_72[] = { 0xE0, 0xAE, 0xBF, 0xE0, 0xAE, 0xA9, 0xE0, 0xAF, 0x88 };$/;"	v	file:
s_73	languages/tamil.cc	/^static const symbol s_73[] = { 0xE0, 0xAF, 0x88 };$/;"	v	file:
s_74	languages/tamil.cc	/^static const symbol s_74[] = { 0xE0, 0xAF, 0x88 };$/;"	v	file:
s_75	languages/tamil.cc	/^static const symbol s_75[] = { 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_76	languages/tamil.cc	/^static const symbol s_76[] = { 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_77	languages/tamil.cc	/^static const symbol s_77[] = { 0xE0, 0xAF, 0x8A, 0xE0, 0xAE, 0x9F, 0xE0, 0xAF, 0x81 };$/;"	v	file:
s_78	languages/tamil.cc	/^static const symbol s_78[] = { 0xE0, 0xAF, 0x8B, 0xE0, 0xAE, 0x9F, 0xE0, 0xAF, 0x81 };$/;"	v	file:
s_79	languages/tamil.cc	/^static const symbol s_79[] = { 0xE0, 0xAE, 0xBF, 0xE0, 0xAE, 0xB2, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_7_0	languages/arabic.cc	379;"	d	file:
s_7_0	languages/english.cc	122;"	d	file:
s_7_0	languages/finnish.cc	156;"	d	file:
s_7_0	languages/french.cc	220;"	d	file:
s_7_0	languages/hungarian.cc	164;"	d	file:
s_7_0	languages/italian.cc	216;"	d	file:
s_7_0	languages/kraaij_pohlmann.cc	154;"	d	file:
s_7_0	languages/portuguese.cc	305;"	d	file:
s_7_0	languages/russian.cc	213;"	d	file:
s_7_0	languages/spanish.cc	150;"	d	file:
s_7_0	languages/tamil.cc	87;"	d	file:
s_7_0	languages/turkish.cc	63;"	d	file:
s_7_1	languages/arabic.cc	380;"	d	file:
s_7_1	languages/english.cc	124;"	d	file:
s_7_1	languages/finnish.cc	158;"	d	file:
s_7_1	languages/french.cc	221;"	d	file:
s_7_1	languages/hungarian.cc	166;"	d	file:
s_7_1	languages/italian.cc	217;"	d	file:
s_7_1	languages/kraaij_pohlmann.cc	156;"	d	file:
s_7_1	languages/portuguese.cc	307;"	d	file:
s_7_1	languages/russian.cc	214;"	d	file:
s_7_1	languages/spanish.cc	151;"	d	file:
s_7_1	languages/tamil.cc	89;"	d	file:
s_7_1	languages/turkish.cc	65;"	d	file:
s_7_10	languages/english.cc	142;"	d	file:
s_7_10	languages/finnish.cc	172;"	d	file:
s_7_10	languages/italian.cc	230;"	d	file:
s_7_10	languages/spanish.cc	167;"	d	file:
s_7_11	languages/english.cc	144;"	d	file:
s_7_11	languages/finnish.cc	173;"	d	file:
s_7_11	languages/italian.cc	232;"	d	file:
s_7_11	languages/spanish.cc	169;"	d	file:
s_7_12	languages/english.cc	146;"	d	file:
s_7_12	languages/finnish.cc	175;"	d	file:
s_7_12	languages/italian.cc	234;"	d	file:
s_7_13	languages/english.cc	148;"	d	file:
s_7_13	languages/finnish.cc	176;"	d	file:
s_7_13	languages/italian.cc	236;"	d	file:
s_7_14	languages/english.cc	150;"	d	file:
s_7_14	languages/italian.cc	237;"	d	file:
s_7_15	languages/english.cc	152;"	d	file:
s_7_15	languages/italian.cc	238;"	d	file:
s_7_16	languages/english.cc	153;"	d	file:
s_7_16	languages/italian.cc	239;"	d	file:
s_7_17	languages/english.cc	154;"	d	file:
s_7_17	languages/italian.cc	240;"	d	file:
s_7_18	languages/italian.cc	242;"	d	file:
s_7_19	languages/italian.cc	244;"	d	file:
s_7_2	languages/arabic.cc	382;"	d	file:
s_7_2	languages/english.cc	126;"	d	file:
s_7_2	languages/finnish.cc	159;"	d	file:
s_7_2	languages/french.cc	223;"	d	file:
s_7_2	languages/italian.cc	219;"	d	file:
s_7_2	languages/portuguese.cc	309;"	d	file:
s_7_2	languages/russian.cc	216;"	d	file:
s_7_2	languages/spanish.cc	152;"	d	file:
s_7_2	languages/tamil.cc	91;"	d	file:
s_7_20	languages/italian.cc	246;"	d	file:
s_7_21	languages/italian.cc	247;"	d	file:
s_7_22	languages/italian.cc	249;"	d	file:
s_7_23	languages/italian.cc	251;"	d	file:
s_7_24	languages/italian.cc	253;"	d	file:
s_7_25	languages/italian.cc	255;"	d	file:
s_7_26	languages/italian.cc	257;"	d	file:
s_7_27	languages/italian.cc	259;"	d	file:
s_7_28	languages/italian.cc	261;"	d	file:
s_7_29	languages/italian.cc	263;"	d	file:
s_7_3	languages/english.cc	128;"	d	file:
s_7_3	languages/finnish.cc	161;"	d	file:
s_7_3	languages/french.cc	225;"	d	file:
s_7_3	languages/italian.cc	221;"	d	file:
s_7_3	languages/portuguese.cc	310;"	d	file:
s_7_3	languages/russian.cc	218;"	d	file:
s_7_3	languages/spanish.cc	154;"	d	file:
s_7_3	languages/tamil.cc	93;"	d	file:
s_7_30	languages/italian.cc	265;"	d	file:
s_7_31	languages/italian.cc	267;"	d	file:
s_7_32	languages/italian.cc	269;"	d	file:
s_7_33	languages/italian.cc	271;"	d	file:
s_7_34	languages/italian.cc	272;"	d	file:
s_7_35	languages/italian.cc	274;"	d	file:
s_7_36	languages/italian.cc	276;"	d	file:
s_7_37	languages/italian.cc	278;"	d	file:
s_7_38	languages/italian.cc	280;"	d	file:
s_7_39	languages/italian.cc	282;"	d	file:
s_7_4	languages/english.cc	130;"	d	file:
s_7_4	languages/finnish.cc	162;"	d	file:
s_7_4	languages/french.cc	227;"	d	file:
s_7_4	languages/italian.cc	223;"	d	file:
s_7_4	languages/portuguese.cc	312;"	d	file:
s_7_4	languages/spanish.cc	155;"	d	file:
s_7_4	languages/tamil.cc	95;"	d	file:
s_7_40	languages/italian.cc	284;"	d	file:
s_7_41	languages/italian.cc	286;"	d	file:
s_7_42	languages/italian.cc	288;"	d	file:
s_7_43	languages/italian.cc	289;"	d	file:
s_7_44	languages/italian.cc	291;"	d	file:
s_7_45	languages/italian.cc	293;"	d	file:
s_7_46	languages/italian.cc	295;"	d	file:
s_7_47	languages/italian.cc	297;"	d	file:
s_7_48	languages/italian.cc	299;"	d	file:
s_7_49	languages/italian.cc	301;"	d	file:
s_7_5	languages/english.cc	132;"	d	file:
s_7_5	languages/finnish.cc	164;"	d	file:
s_7_5	languages/french.cc	229;"	d	file:
s_7_5	languages/italian.cc	225;"	d	file:
s_7_5	languages/portuguese.cc	314;"	d	file:
s_7_5	languages/spanish.cc	157;"	d	file:
s_7_5	languages/tamil.cc	97;"	d	file:
s_7_50	languages/italian.cc	303;"	d	file:
s_7_51	languages/italian.cc	305;"	d	file:
s_7_52	languages/italian.cc	307;"	d	file:
s_7_53	languages/italian.cc	309;"	d	file:
s_7_54	languages/italian.cc	311;"	d	file:
s_7_55	languages/italian.cc	312;"	d	file:
s_7_56	languages/italian.cc	314;"	d	file:
s_7_57	languages/italian.cc	316;"	d	file:
s_7_58	languages/italian.cc	318;"	d	file:
s_7_59	languages/italian.cc	319;"	d	file:
s_7_6	languages/english.cc	134;"	d	file:
s_7_6	languages/finnish.cc	165;"	d	file:
s_7_6	languages/french.cc	231;"	d	file:
s_7_6	languages/italian.cc	226;"	d	file:
s_7_6	languages/portuguese.cc	316;"	d	file:
s_7_6	languages/spanish.cc	159;"	d	file:
s_7_60	languages/italian.cc	321;"	d	file:
s_7_61	languages/italian.cc	323;"	d	file:
s_7_62	languages/italian.cc	325;"	d	file:
s_7_63	languages/italian.cc	327;"	d	file:
s_7_64	languages/italian.cc	329;"	d	file:
s_7_65	languages/italian.cc	331;"	d	file:
s_7_66	languages/italian.cc	332;"	d	file:
s_7_67	languages/italian.cc	334;"	d	file:
s_7_68	languages/italian.cc	336;"	d	file:
s_7_69	languages/italian.cc	338;"	d	file:
s_7_7	languages/english.cc	136;"	d	file:
s_7_7	languages/finnish.cc	167;"	d	file:
s_7_7	languages/italian.cc	227;"	d	file:
s_7_7	languages/spanish.cc	161;"	d	file:
s_7_70	languages/italian.cc	340;"	d	file:
s_7_71	languages/italian.cc	342;"	d	file:
s_7_72	languages/italian.cc	344;"	d	file:
s_7_73	languages/italian.cc	346;"	d	file:
s_7_74	languages/italian.cc	348;"	d	file:
s_7_75	languages/italian.cc	350;"	d	file:
s_7_76	languages/italian.cc	352;"	d	file:
s_7_77	languages/italian.cc	354;"	d	file:
s_7_78	languages/italian.cc	356;"	d	file:
s_7_79	languages/italian.cc	358;"	d	file:
s_7_8	languages/english.cc	138;"	d	file:
s_7_8	languages/finnish.cc	168;"	d	file:
s_7_8	languages/italian.cc	228;"	d	file:
s_7_8	languages/spanish.cc	163;"	d	file:
s_7_80	languages/italian.cc	360;"	d	file:
s_7_81	languages/italian.cc	362;"	d	file:
s_7_82	languages/italian.cc	363;"	d	file:
s_7_83	languages/italian.cc	364;"	d	file:
s_7_84	languages/italian.cc	366;"	d	file:
s_7_85	languages/italian.cc	368;"	d	file:
s_7_86	languages/italian.cc	370;"	d	file:
s_7_9	languages/english.cc	140;"	d	file:
s_7_9	languages/finnish.cc	170;"	d	file:
s_7_9	languages/italian.cc	229;"	d	file:
s_7_9	languages/spanish.cc	165;"	d	file:
s_8	languages/arabic.cc	/^static const symbol s_8[] = { '8' };$/;"	v	file:
s_8	languages/basque.cc	/^static const symbol s_8[] = { 'i', 'g', 'a', 'r', 'o' };$/;"	v	file:
s_8	languages/catalan.cc	/^static const symbol s_8[] = { 'c' };$/;"	v	file:
s_8	languages/dutch.cc	/^static const symbol s_8[] = { 'y' };$/;"	v	file:
s_8	languages/earlyenglish.cc	/^static const symbol s_8[] = { 'a', 'n', 'c', 'e' };$/;"	v	file:
s_8	languages/english.cc	/^static const symbol s_8[] = { 'i' };$/;"	v	file:
s_8	languages/french.cc	/^static const symbol s_8[] = { 'i', 'c' };$/;"	v	file:
s_8	languages/german.cc	/^static const symbol s_8[] = { 'n', 'i', 's' };$/;"	v	file:
s_8	languages/german2.cc	/^static const symbol s_8[] = { 'a' };$/;"	v	file:
s_8	languages/hungarian.cc	/^static const symbol s_8[] = { 'e' };$/;"	v	file:
s_8	languages/irish.cc	/^static const symbol s_8[] = { 'm' };$/;"	v	file:
s_8	languages/italian.cc	/^static const symbol s_8[] = { 'i' };$/;"	v	file:
s_8	languages/kraaij_pohlmann.cc	/^static const symbol s_8[] = { 'h', 'e', 'd' };$/;"	v	file:
s_8	languages/lithuanian.cc	/^static const symbol s_8[] = { 't' };$/;"	v	file:
s_8	languages/lovins.cc	/^static const symbol s_8[] = { 'r', 'b' };$/;"	v	file:
s_8	languages/porter.cc	/^static const symbol s_8[] = { 'a', 'n', 'c', 'e' };$/;"	v	file:
s_8	languages/portuguese.cc	/^static const symbol s_8[] = { 'a', 't' };$/;"	v	file:
s_8	languages/romanian.cc	/^static const symbol s_8[] = { 'i' };$/;"	v	file:
s_8	languages/russian.cc	/^static const symbol s_8[] = { 0xD0, 0xBD };$/;"	v	file:
s_8	languages/spanish.cc	/^static const symbol s_8[] = { 'e', 'r' };$/;"	v	file:
s_8	languages/tamil.cc	/^static const symbol s_8[] = { 0xE0, 0xAE, 0x89 };$/;"	v	file:
s_8	languages/turkish.cc	/^static const symbol s_8[] = { 'k' };$/;"	v	file:
s_80	languages/tamil.cc	/^static const symbol s_80[] = { 0xE0, 0xAE, 0xBF, 0xE0, 0xAE, 0xB1, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_81	languages/tamil.cc	/^static const symbol s_81[] = { 0xE0, 0xAE, 0xBF, 0xE0, 0xAE, 0xA9, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_82	languages/tamil.cc	/^static const symbol s_82[] = { 0xE0, 0xAE, 0xAE };$/;"	v	file:
s_83	languages/tamil.cc	/^static const symbol s_83[] = { 0xE0, 0xAE, 0xBF, 0xE0, 0xAE, 0xA9, 0xE0, 0xAF, 0x8D, 0xE0, 0xAE, 0xB1, 0xE0, 0xAF, 0x81 };$/;"	v	file:
s_84	languages/tamil.cc	/^static const symbol s_84[] = { 0xE0, 0xAE, 0xBF, 0xE0, 0xAE, 0xB0, 0xE0, 0xAF, 0x81, 0xE0, 0xAE, 0xA8, 0xE0, 0xAF, 0x8D, 0xE0, 0xAE, 0xA4, 0xE0, 0xAF, 0x81 };$/;"	v	file:
s_85	languages/tamil.cc	/^static const symbol s_85[] = { 0xE0, 0xAE, 0xB5, 0xE0, 0xAE, 0xBF, 0xE0, 0xAE, 0x9F };$/;"	v	file:
s_86	languages/tamil.cc	/^static const symbol s_86[] = { 0xE0, 0xAE, 0xBF, 0xE0, 0xAE, 0x9F, 0xE0, 0xAE, 0xAE, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_87	languages/tamil.cc	/^static const symbol s_87[] = { 0xE0, 0xAE, 0xBE, 0xE0, 0xAE, 0xB2, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_88	languages/tamil.cc	/^static const symbol s_88[] = { 0xE0, 0xAF, 0x81, 0xE0, 0xAE, 0x9F, 0xE0, 0xAF, 0x88 };$/;"	v	file:
s_89	languages/tamil.cc	/^static const symbol s_89[] = { 0xE0, 0xAE, 0xBE, 0xE0, 0xAE, 0xAE, 0xE0, 0xAE, 0xB2, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_8_0	languages/arabic.cc	384;"	d	file:
s_8_0	languages/english.cc	156;"	d	file:
s_8_0	languages/finnish.cc	178;"	d	file:
s_8_0	languages/french.cc	233;"	d	file:
s_8_0	languages/hungarian.cc	168;"	d	file:
s_8_0	languages/portuguese.cc	318;"	d	file:
s_8_0	languages/spanish.cc	171;"	d	file:
s_8_0	languages/tamil.cc	99;"	d	file:
s_8_0	languages/turkish.cc	67;"	d	file:
s_8_1	languages/arabic.cc	386;"	d	file:
s_8_1	languages/english.cc	158;"	d	file:
s_8_1	languages/finnish.cc	180;"	d	file:
s_8_1	languages/french.cc	235;"	d	file:
s_8_1	languages/hungarian.cc	169;"	d	file:
s_8_1	languages/portuguese.cc	320;"	d	file:
s_8_1	languages/spanish.cc	172;"	d	file:
s_8_1	languages/tamil.cc	101;"	d	file:
s_8_1	languages/turkish.cc	69;"	d	file:
s_8_10	languages/spanish.cc	181;"	d	file:
s_8_11	languages/spanish.cc	183;"	d	file:
s_8_12	languages/spanish.cc	184;"	d	file:
s_8_13	languages/spanish.cc	185;"	d	file:
s_8_14	languages/spanish.cc	186;"	d	file:
s_8_15	languages/spanish.cc	187;"	d	file:
s_8_16	languages/spanish.cc	188;"	d	file:
s_8_17	languages/spanish.cc	189;"	d	file:
s_8_18	languages/spanish.cc	191;"	d	file:
s_8_19	languages/spanish.cc	193;"	d	file:
s_8_2	languages/arabic.cc	388;"	d	file:
s_8_2	languages/french.cc	237;"	d	file:
s_8_2	languages/hungarian.cc	171;"	d	file:
s_8_2	languages/portuguese.cc	322;"	d	file:
s_8_2	languages/spanish.cc	173;"	d	file:
s_8_2	languages/tamil.cc	103;"	d	file:
s_8_2	languages/turkish.cc	71;"	d	file:
s_8_20	languages/spanish.cc	195;"	d	file:
s_8_21	languages/spanish.cc	196;"	d	file:
s_8_22	languages/spanish.cc	198;"	d	file:
s_8_23	languages/spanish.cc	200;"	d	file:
s_8_24	languages/spanish.cc	202;"	d	file:
s_8_25	languages/spanish.cc	203;"	d	file:
s_8_26	languages/spanish.cc	205;"	d	file:
s_8_27	languages/spanish.cc	207;"	d	file:
s_8_28	languages/spanish.cc	209;"	d	file:
s_8_29	languages/spanish.cc	211;"	d	file:
s_8_3	languages/arabic.cc	390;"	d	file:
s_8_3	languages/french.cc	239;"	d	file:
s_8_3	languages/hungarian.cc	173;"	d	file:
s_8_3	languages/portuguese.cc	324;"	d	file:
s_8_3	languages/spanish.cc	174;"	d	file:
s_8_3	languages/turkish.cc	73;"	d	file:
s_8_30	languages/spanish.cc	213;"	d	file:
s_8_31	languages/spanish.cc	215;"	d	file:
s_8_32	languages/spanish.cc	217;"	d	file:
s_8_33	languages/spanish.cc	218;"	d	file:
s_8_34	languages/spanish.cc	219;"	d	file:
s_8_35	languages/spanish.cc	221;"	d	file:
s_8_36	languages/spanish.cc	223;"	d	file:
s_8_37	languages/spanish.cc	224;"	d	file:
s_8_38	languages/spanish.cc	225;"	d	file:
s_8_39	languages/spanish.cc	226;"	d	file:
s_8_4	languages/french.cc	241;"	d	file:
s_8_4	languages/hungarian.cc	175;"	d	file:
s_8_4	languages/spanish.cc	175;"	d	file:
s_8_40	languages/spanish.cc	227;"	d	file:
s_8_41	languages/spanish.cc	229;"	d	file:
s_8_42	languages/spanish.cc	231;"	d	file:
s_8_43	languages/spanish.cc	233;"	d	file:
s_8_44	languages/spanish.cc	235;"	d	file:
s_8_45	languages/spanish.cc	237;"	d	file:
s_8_46	languages/spanish.cc	238;"	d	file:
s_8_47	languages/spanish.cc	240;"	d	file:
s_8_48	languages/spanish.cc	242;"	d	file:
s_8_49	languages/spanish.cc	244;"	d	file:
s_8_5	languages/hungarian.cc	177;"	d	file:
s_8_5	languages/spanish.cc	176;"	d	file:
s_8_50	languages/spanish.cc	245;"	d	file:
s_8_51	languages/spanish.cc	247;"	d	file:
s_8_52	languages/spanish.cc	249;"	d	file:
s_8_53	languages/spanish.cc	251;"	d	file:
s_8_54	languages/spanish.cc	253;"	d	file:
s_8_55	languages/spanish.cc	255;"	d	file:
s_8_56	languages/spanish.cc	256;"	d	file:
s_8_57	languages/spanish.cc	258;"	d	file:
s_8_58	languages/spanish.cc	260;"	d	file:
s_8_59	languages/spanish.cc	262;"	d	file:
s_8_6	languages/hungarian.cc	179;"	d	file:
s_8_6	languages/spanish.cc	177;"	d	file:
s_8_60	languages/spanish.cc	264;"	d	file:
s_8_61	languages/spanish.cc	266;"	d	file:
s_8_62	languages/spanish.cc	268;"	d	file:
s_8_63	languages/spanish.cc	270;"	d	file:
s_8_64	languages/spanish.cc	272;"	d	file:
s_8_65	languages/spanish.cc	273;"	d	file:
s_8_66	languages/spanish.cc	275;"	d	file:
s_8_67	languages/spanish.cc	277;"	d	file:
s_8_68	languages/spanish.cc	279;"	d	file:
s_8_69	languages/spanish.cc	281;"	d	file:
s_8_7	languages/spanish.cc	178;"	d	file:
s_8_70	languages/spanish.cc	283;"	d	file:
s_8_71	languages/spanish.cc	284;"	d	file:
s_8_72	languages/spanish.cc	286;"	d	file:
s_8_73	languages/spanish.cc	288;"	d	file:
s_8_74	languages/spanish.cc	290;"	d	file:
s_8_75	languages/spanish.cc	291;"	d	file:
s_8_76	languages/spanish.cc	293;"	d	file:
s_8_77	languages/spanish.cc	295;"	d	file:
s_8_78	languages/spanish.cc	297;"	d	file:
s_8_79	languages/spanish.cc	298;"	d	file:
s_8_8	languages/spanish.cc	179;"	d	file:
s_8_80	languages/spanish.cc	300;"	d	file:
s_8_81	languages/spanish.cc	302;"	d	file:
s_8_82	languages/spanish.cc	304;"	d	file:
s_8_83	languages/spanish.cc	306;"	d	file:
s_8_84	languages/spanish.cc	308;"	d	file:
s_8_85	languages/spanish.cc	310;"	d	file:
s_8_86	languages/spanish.cc	312;"	d	file:
s_8_87	languages/spanish.cc	314;"	d	file:
s_8_88	languages/spanish.cc	316;"	d	file:
s_8_89	languages/spanish.cc	318;"	d	file:
s_8_9	languages/spanish.cc	180;"	d	file:
s_8_90	languages/spanish.cc	319;"	d	file:
s_8_91	languages/spanish.cc	320;"	d	file:
s_8_92	languages/spanish.cc	321;"	d	file:
s_8_93	languages/spanish.cc	322;"	d	file:
s_8_94	languages/spanish.cc	323;"	d	file:
s_8_95	languages/spanish.cc	324;"	d	file:
s_9	languages/arabic.cc	/^static const symbol s_9[] = { '9' };$/;"	v	file:
s_9	languages/basque.cc	/^static const symbol s_9[] = { 'a', 'u', 'r', 'k', 'a' };$/;"	v	file:
s_9	languages/catalan.cc	/^static const symbol s_9[] = { 'i', 'c' };$/;"	v	file:
s_9	languages/dutch.cc	/^static const symbol s_9[] = { 'i' };$/;"	v	file:
s_9	languages/earlyenglish.cc	/^static const symbol s_9[] = { 'a', 'b', 'l', 'e' };$/;"	v	file:
s_9	languages/english.cc	/^static const symbol s_9[] = { 't', 'i', 'o', 'n' };$/;"	v	file:
s_9	languages/french.cc	/^static const symbol s_9[] = { 'i', 'q', 'U' };$/;"	v	file:
s_9	languages/german.cc	/^static const symbol s_9[] = { 'i', 'g' };$/;"	v	file:
s_9	languages/german2.cc	/^static const symbol s_9[] = { 'o' };$/;"	v	file:
s_9	languages/hungarian.cc	/^static const symbol s_9[] = { 'a' };$/;"	v	file:
s_9	languages/irish.cc	/^static const symbol s_9[] = { 'a', 'r', 'c' };$/;"	v	file:
s_9	languages/italian.cc	/^static const symbol s_9[] = { 'u' };$/;"	v	file:
s_9	languages/kraaij_pohlmann.cc	/^static const symbol s_9[] = { 'h', 'e', 'i', 'd' };$/;"	v	file:
s_9	languages/lithuanian.cc	/^static const symbol s_9[] = { 'd' };$/;"	v	file:
s_9	languages/lovins.cc	/^static const symbol s_9[] = { 'u', 'r' };$/;"	v	file:
s_9	languages/porter.cc	/^static const symbol s_9[] = { 'a', 'b', 'l', 'e' };$/;"	v	file:
s_9	languages/portuguese.cc	/^static const symbol s_9[] = { 'i', 'r' };$/;"	v	file:
s_9	languages/romanian.cc	/^static const symbol s_9[] = { 'a', 't' };$/;"	v	file:
s_9	languages/russian.cc	/^static const symbol s_9[] = { 0xD0, 0xB8 };$/;"	v	file:
s_9	languages/spanish.cc	/^static const symbol s_9[] = { 'i', 'r' };$/;"	v	file:
s_9	languages/tamil.cc	/^static const symbol s_9[] = { 0xE0, 0xAE, 0xB5, 0xE0, 0xAF, 0x82 };$/;"	v	file:
s_9	languages/turkish.cc	/^static const symbol s_9[] = { 0xC4, 0xB1 };$/;"	v	file:
s_90	languages/tamil.cc	/^static const symbol s_90[] = { 0xE0, 0xAE, 0xB2, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_91	languages/tamil.cc	/^static const symbol s_91[] = { 0xE0, 0xAF, 0x81, 0xE0, 0xAE, 0xB3, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_92	languages/tamil.cc	/^static const symbol s_92[] = { 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_93	languages/tamil.cc	/^static const symbol s_93[] = { 0xE0, 0xAE, 0x95, 0xE0, 0xAE, 0xA3, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_94	languages/tamil.cc	/^static const symbol s_94[] = { 0xE0, 0xAE, 0xAE, 0xE0, 0xAF, 0x81, 0xE0, 0xAE, 0xA9, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_95	languages/tamil.cc	/^static const symbol s_95[] = { 0xE0, 0xAE, 0xAE, 0xE0, 0xAF, 0x87, 0xE0, 0xAE, 0xB2, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_96	languages/tamil.cc	/^static const symbol s_96[] = { 0xE0, 0xAE, 0xAE, 0xE0, 0xAF, 0x87, 0xE0, 0xAE, 0xB1, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_97	languages/tamil.cc	/^static const symbol s_97[] = { 0xE0, 0xAE, 0x95, 0xE0, 0xAF, 0x80, 0xE0, 0xAE, 0xB4, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_98	languages/tamil.cc	/^static const symbol s_98[] = { 0xE0, 0xAE, 0xAA, 0xE0, 0xAE, 0xBF, 0xE0, 0xAE, 0xA9, 0xE0, 0xAF, 0x8D };$/;"	v	file:
s_99	languages/tamil.cc	/^static const symbol s_99[] = { 0xE0, 0xAE, 0xA4, 0xE0, 0xAF, 0x81 };$/;"	v	file:
s_9_0	languages/arabic.cc	392;"	d	file:
s_9_0	languages/english.cc	160;"	d	file:
s_9_0	languages/finnish.cc	182;"	d	file:
s_9_0	languages/hungarian.cc	181;"	d	file:
s_9_0	languages/spanish.cc	326;"	d	file:
s_9_0	languages/tamil.cc	104;"	d	file:
s_9_0	languages/turkish.cc	75;"	d	file:
s_9_1	languages/arabic.cc	394;"	d	file:
s_9_1	languages/english.cc	162;"	d	file:
s_9_1	languages/finnish.cc	183;"	d	file:
s_9_1	languages/hungarian.cc	182;"	d	file:
s_9_1	languages/spanish.cc	328;"	d	file:
s_9_1	languages/tamil.cc	106;"	d	file:
s_9_1	languages/turkish.cc	77;"	d	file:
s_9_10	languages/hungarian.cc	198;"	d	file:
s_9_11	languages/hungarian.cc	200;"	d	file:
s_9_2	languages/arabic.cc	396;"	d	file:
s_9_2	languages/english.cc	164;"	d	file:
s_9_2	languages/hungarian.cc	184;"	d	file:
s_9_2	languages/spanish.cc	330;"	d	file:
s_9_2	languages/tamil.cc	108;"	d	file:
s_9_3	languages/english.cc	166;"	d	file:
s_9_3	languages/hungarian.cc	186;"	d	file:
s_9_3	languages/spanish.cc	331;"	d	file:
s_9_3	languages/tamil.cc	110;"	d	file:
s_9_4	languages/english.cc	168;"	d	file:
s_9_4	languages/hungarian.cc	187;"	d	file:
s_9_4	languages/spanish.cc	333;"	d	file:
s_9_4	languages/tamil.cc	112;"	d	file:
s_9_5	languages/english.cc	170;"	d	file:
s_9_5	languages/hungarian.cc	188;"	d	file:
s_9_5	languages/spanish.cc	335;"	d	file:
s_9_5	languages/tamil.cc	114;"	d	file:
s_9_6	languages/english.cc	172;"	d	file:
s_9_6	languages/hungarian.cc	190;"	d	file:
s_9_6	languages/spanish.cc	337;"	d	file:
s_9_6	languages/tamil.cc	116;"	d	file:
s_9_7	languages/english.cc	174;"	d	file:
s_9_7	languages/hungarian.cc	192;"	d	file:
s_9_7	languages/spanish.cc	339;"	d	file:
s_9_7	languages/tamil.cc	118;"	d	file:
s_9_8	languages/hungarian.cc	194;"	d	file:
s_9_9	languages/hungarian.cc	196;"	d	file:
s_options	queryparser/lemon.c	/^struct s_options {$/;"	s	file:
s_pool	languages/arabic.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/armenian.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/basque.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/catalan.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/danish.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/dutch.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/earlyenglish.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/english.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/finnish.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/french.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/german.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/german2.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/hungarian.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/indonesian.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/irish.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/italian.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/kraaij_pohlmann.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/lithuanian.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/lovins.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/nepali.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/norwegian.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/porter.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/portuguese.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/romanian.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/russian.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/spanish.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/swedish.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/tamil.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/turkish.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_size	languages/compiler/tokeniser.c	/^    int s_size;      \/* size of system word *\/$/;"	m	struct:system_word	file:
s_size	languages/steminternal.h	/^    int s_size;		\/* length of search string (in symbols) *\/$/;"	m	struct:among
s_x1	queryparser/lemon.c	/^struct s_x1 {$/;"	s	file:
s_x1node	queryparser/lemon.c	/^typedef struct s_x1node {$/;"	s	file:
s_x2	queryparser/lemon.c	/^struct s_x2 {$/;"	s	file:
s_x2node	queryparser/lemon.c	/^typedef struct s_x2node {$/;"	s	file:
s_x3	queryparser/lemon.c	/^struct s_x3 {$/;"	s	file:
s_x3node	queryparser/lemon.c	/^typedef struct s_x3node {$/;"	s	file:
s_x4	queryparser/lemon.c	/^struct s_x4 {$/;"	s	file:
s_x4node	queryparser/lemon.c	/^typedef struct s_x4node {$/;"	s	file:
safe_shl	common/bitstream.cc	/^T safe_shl(T x, U shift)$/;"	f	namespace:Xapian
same_symbol	queryparser/lemon.c	/^int same_symbol(struct symbol *a, struct symbol *b)$/;"	f
sameweight_count	tests/api_opsynonym.cc	/^    int sameweight_count;$/;"	m	struct:synonym1_data_type	file:
sbindir	Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	docs/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	tests/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbl_code	languages/sbl-dispatch.h	/^enum sbl_code {$/;"	g
scale_factor	api/queryinternal.h	/^    double scale_factor;$/;"	m	class:Xapian::Internal::QueryScaleWeight
scale_factor	tests/api_db.cc	/^    double scale_factor;$/;"	m	class:MyWeight	file:
search_end	tests/perftest/perftest.cc	/^PerfTestLogger::search_end(const Xapian::Query & query,$/;"	f	class:PerfTestLogger
search_start	tests/perftest/perftest.cc	/^PerfTestLogger::search_start()$/;"	f	class:PerfTestLogger
searching_end	tests/perftest/perftest.cc	/^PerfTestLogger::searching_end()$/;"	f	class:PerfTestLogger
searching_start	tests/perftest/perftest.cc	/^PerfTestLogger::searching_start(const string & description)$/;"	f	class:PerfTestLogger
searching_started	tests/perftest/perftest.h	/^    bool searching_started;$/;"	m	class:PerfTestLogger
searching_timer	tests/perftest/perftest.h	/^    double searching_timer;$/;"	m	class:PerfTestLogger
sec16ths	geospatial/geoencode.cc	/^    int sec16ths;$/;"	m	struct:DegreesMinutesSeconds	file:
second	include/xapian/expanddecider.h	/^    Internal::opt_intrusive_ptr<const ExpandDecider> first, second;$/;"	m	class:Xapian::ExpandDeciderAnd
seconds	geospatial/geoencode.cc	/^    int seconds;$/;"	m	struct:DegreesMinutesSeconds	file:
seed	tests/stemtest.cc	/^static int seed;$/;"	v	file:
seed_str	tests/soaktest/soaktest.cc	/^    string seed_str;$/;"	m	class:SoakTestRunner	file:
seen	tests/api_matchspy.cc	/^    std::vector<std::string> seen;$/;"	m	class:SimpleMatchSpy	file:
select_elite_set	api/queryinternal.cc	/^OrContext::select_elite_set(size_t set_size, size_t out_of)$/;"	f	class:Xapian::Internal::OrContext
select_most_frequent	api/queryinternal.cc	/^OrContext::select_most_frequent(size_t set_size)$/;"	f	class:Xapian::Internal::OrContext
select_smoothing	include/xapian/weight.h	/^    type_smoothing select_smoothing;$/;"	m	class:Xapian::LMWeight
send_file	net/remoteconnection.cc	/^RemoteConnection::send_file(char type, int fd, double end_time)$/;"	f	class:RemoteConnection
send_global_stats	backends/remote/remote-database.cc	/^RemoteDatabase::send_global_stats(Xapian::doccount first,$/;"	f	class:RemoteDatabase
send_message	backends/remote/remote-database.cc	/^RemoteDatabase::send_message(message_type type, const string &message) const$/;"	f	class:RemoteDatabase
send_message	net/remoteconnection.cc	/^RemoteConnection::send_message(char type, const string &message,$/;"	f	class:RemoteConnection
send_message	net/remoteserver.cc	/^RemoteServer::send_message(reply_type type, const string &message)$/;"	f	class:RemoteServer
send_message	net/remoteserver.h	/^    void send_message(reply_type type, const std::string &message,$/;"	f	class:RemoteServer
send_whole_database	backends/chert/chert_database.cc	/^ChertDatabase::send_whole_database(RemoteConnection & conn, double end_time)$/;"	f	class:ChertDatabase
send_whole_database	backends/glass/glass_database.cc	/^GlassDatabase::send_whole_database(RemoteConnection & conn, double end_time)$/;"	f	class:GlassDatabase
separator	bin/xapian-delve.cc	/^static char separator = ' ';$/;"	v	file:
seq1	api/editdistance.cc	/^    edist_seq<CHR> seq1;$/;"	m	class:edist_state	file:
seq2	api/editdistance.cc	/^    edist_seq<CHR> seq2;$/;"	m	class:edist_state	file:
seq_count	backends/chert/chert_table.h	/^	int seq_count;$/;"	m	class:ChertTable
seq_count	backends/glass/glass_table.h	/^	int seq_count;$/;"	m	class:GlassTable
seqcmp_editdist	api/editdistance.cc	/^seqcmp_editdist(const CHR * ptr1, int len1, const CHR * ptr2, int len2,$/;"	f	file:
seqlen	include/xapian/unicode.h	/^    mutable unsigned seqlen;$/;"	m	class:Xapian::Utf8Iterator
sequential	backends/chert/chert_btreebase.h	/^	bool sequential;$/;"	m	class:ChertTable_base
sequential	backends/chert/chert_table.h	/^	bool sequential;$/;"	m	class:ChertTable
sequential	backends/glass/glass_table.h	/^	bool sequential;$/;"	m	class:GlassTable
sequential	backends/glass/glass_version.h	/^    bool sequential;$/;"	m	class:Glass::RootInfo
serialise	api/decvalwtsource.cc	/^DecreasingValueWeightPostingSource::serialise() const {$/;"	f	class:DecreasingValueWeightPostingSource
serialise	api/matchspy.cc	/^MatchSpy::serialise() const {$/;"	f	class:MatchSpy
serialise	api/matchspy.cc	/^ValueCountMatchSpy::serialise() const {$/;"	f	class:ValueCountMatchSpy
serialise	api/omdocument.cc	/^Document::serialise() const$/;"	f	class:Xapian::Document
serialise	api/postingsource.cc	/^FixedWeightPostingSource::serialise() const$/;"	f	class:Xapian::FixedWeightPostingSource
serialise	api/postingsource.cc	/^PostingSource::serialise() const$/;"	f	class:Xapian::PostingSource
serialise	api/postingsource.cc	/^ValueMapPostingSource::serialise() const$/;"	f	class:Xapian::ValueMapPostingSource
serialise	api/postingsource.cc	/^ValueWeightPostingSource::serialise() const$/;"	f	class:Xapian::ValueWeightPostingSource
serialise	api/query.cc	/^Query::serialise() const$/;"	f	class:Xapian::Query
serialise	api/queryinternal.cc	/^QueryBranch::serialise(string & result) const$/;"	f	class:Xapian::Internal::QueryBranch
serialise	api/queryinternal.cc	/^QueryEliteSet::serialise(string & result) const$/;"	f	class:Xapian::Internal::QueryEliteSet
serialise	api/queryinternal.cc	/^QueryInvalid::serialise(std::string & result) const$/;"	f	class:Xapian::Internal::QueryInvalid
serialise	api/queryinternal.cc	/^QueryNear::serialise(string & result) const$/;"	f	class:Xapian::Internal::QueryNear
serialise	api/queryinternal.cc	/^QueryPhrase::serialise(string & result) const$/;"	f	class:Xapian::Internal::QueryPhrase
serialise	api/queryinternal.cc	/^QueryValueGE::serialise(string & result) const$/;"	f	class:Xapian::Internal::QueryValueGE
serialise	api/queryinternal.cc	/^QueryValueLE::serialise(string & result) const$/;"	f	class:Xapian::Internal::QueryValueLE
serialise	api/queryinternal.cc	/^QueryValueRange::serialise(string & result) const$/;"	f	class:Xapian::Internal::QueryValueRange
serialise	api/queryinternal.cc	/^QueryWildcard::serialise(string & result) const$/;"	f	class:Xapian::Internal::QueryWildcard
serialise	api/queryinternal.cc	/^void QueryPostingSource::serialise(string & result) const$/;"	f	class:Xapian::Internal::QueryPostingSource
serialise	api/queryinternal.cc	/^void QueryScaleWeight::serialise(string & result) const$/;"	f	class:Xapian::Internal::QueryScaleWeight
serialise	api/queryinternal.cc	/^void QueryTerm::serialise(string & result) const$/;"	f	class:Xapian::Internal::QueryTerm
serialise	backends/glass/glass_version.cc	/^RootInfo::serialise(string &s) const$/;"	f	class:Glass::RootInfo
serialise	geospatial/latlong_metrics.cc	/^GreatCircleMetric::serialise() const$/;"	f	class:GreatCircleMetric
serialise	geospatial/latlong_posting_source.cc	/^LatLongDistancePostingSource::serialise() const$/;"	f	class:LatLongDistancePostingSource
serialise	geospatial/latlongcoord.cc	/^LatLongCoord::serialise() const$/;"	f	class:LatLongCoord
serialise	geospatial/latlongcoord.cc	/^LatLongCoords::serialise() const$/;"	f	class:LatLongCoords
serialise	matcher/localsubmatch.cc	/^LazyWeight::serialise() const$/;"	f	class:LazyWeight
serialise	tests/api_db.cc	/^    string serialise() const { return string(); }$/;"	f	class:MyWeight
serialise	tests/api_serialise.cc	/^    std::string serialise() const {$/;"	f	class:MyPostingSource2
serialise	weight/bb2weight.cc	/^BB2Weight::serialise() const$/;"	f	class:Xapian::BB2Weight
serialise	weight/bm25plusweight.cc	/^BM25PlusWeight::serialise() const$/;"	f	class:Xapian::BM25PlusWeight
serialise	weight/bm25weight.cc	/^BM25Weight::serialise() const$/;"	f	class:Xapian::BM25Weight
serialise	weight/boolweight.cc	/^BoolWeight::serialise() const$/;"	f	class:Xapian::BoolWeight
serialise	weight/coordweight.cc	/^CoordWeight::serialise() const$/;"	f	class:Xapian::CoordWeight
serialise	weight/dlhweight.cc	/^DLHWeight::serialise() const$/;"	f	class:Xapian::DLHWeight
serialise	weight/dphweight.cc	/^DPHWeight::serialise() const$/;"	f	class:Xapian::DPHWeight
serialise	weight/ifb2weight.cc	/^IfB2Weight::serialise() const$/;"	f	class:Xapian::IfB2Weight
serialise	weight/ineb2weight.cc	/^IneB2Weight::serialise() const$/;"	f	class:Xapian::IneB2Weight
serialise	weight/inl2weight.cc	/^InL2Weight::serialise() const$/;"	f	class:Xapian::InL2Weight
serialise	weight/lmweight.cc	/^LMWeight::serialise() const$/;"	f	class:Xapian::LMWeight
serialise	weight/pl2plusweight.cc	/^PL2PlusWeight::serialise() const$/;"	f	class:Xapian::PL2PlusWeight
serialise	weight/pl2weight.cc	/^PL2Weight::serialise() const$/;"	f	class:Xapian::PL2Weight
serialise	weight/tfidfweight.cc	/^TfIdfWeight::serialise() const$/;"	f	class:Xapian::TfIdfWeight
serialise	weight/tradweight.cc	/^TradWeight::serialise() const$/;"	f	class:Xapian::TradWeight
serialise	weight/weight.cc	/^Weight::serialise() const$/;"	f	class:Xapian::Weight
serialise_	api/queryinternal.cc	/^QueryBranch::serialise_(string & result, Xapian::termcount parameter) const$/;"	f	class:Xapian::Internal::QueryBranch
serialise_document	net/serialise.cc	/^serialise_document(const Xapian::Document &doc)$/;"	f
serialise_double	common/serialise-double.cc	/^std::string serialise_double(double v)$/;"	f
serialise_error	net/serialise-error.cc	/^serialise_error(const Xapian::Error &e)$/;"	f
serialise_mset	net/serialise.cc	/^serialise_mset(const Xapian::MSet &mset)$/;"	f
serialise_results	api/matchspy.cc	/^MatchSpy::serialise_results() const {$/;"	f	class:MatchSpy
serialise_results	api/matchspy.cc	/^ValueCountMatchSpy::serialise_results() const {$/;"	f	class:ValueCountMatchSpy
serialise_rset	net/serialise.cc	/^serialise_rset(const Xapian::RSet &rset)$/;"	f
serialise_stats	backends/glass/glass_version.cc	/^GlassVersion::serialise_stats()$/;"	f	class:GlassVersion
serialise_stats	net/serialise.cc	/^serialise_stats(const Xapian::Weight::Internal &stats)$/;"	f
serialised_stats	backends/glass/glass_version.h	/^    std::string serialised_stats;$/;"	m	class:GlassVersion
server	net/tcpserver.cc	/^    TcpServer *server;$/;"	m	struct:thread_param	file:
setD	backends/chert/chert_table.h	/^inline void setD(unsigned char *p, int c, int x) { setint2(p, c, x); }$/;"	f
setD	backends/glass/glass_table.h	/^    static void setD(uint8_t * q, int c, int x) {$/;"	f	class:Glass::BItem_wr
setD	backends/glass/glass_table.h	/^    static void setD(uint8_t * q, int c, int x) {$/;"	f	class:Glass::LeafItem_wr
setI	backends/glass/glass_table.h	/^    void setI(int x) { unaligned_write2(p, x); }$/;"	f	class:Glass::LeafItem_wr
setX	backends/glass/glass_table.h	/^    static void setX(uint8_t * q, int c, int x) { unaligned_write2(q + c, x); }$/;"	f	class:Glass::BItem_wr
setX	backends/glass/glass_table.h	/^    static void setX(uint8_t * q, int c, int x) { unaligned_write2(q + c, x); }$/;"	f	class:Glass::LeafItem_wr
set_F_to_extra_ldflags	xapian-config	/^set_F_to_extra_ldflags() {$/;"	f
set_I	xapian-config	/^set_I() {$/;"	f
set_I_for_uninstalled	xapian-config	/^set_I_for_uninstalled() {$/;"	f
set_I_swig	xapian-config	/^set_I_swig() {$/;"	f
set_L_to_library_path	xapian-config	/^set_L_to_library_path() {$/;"	f
set_all_values	backends/document.h	/^	void set_all_values(map<Xapian::valueno, string> & values_) {$/;"	f	class:Xapian::Document::Internal
set_base_from	depcomp	/^set_base_from ()$/;"	f
set_bit	languages/compiler/generator.c	/^static void set_bit(symbol * b, int i) { b[i\/8] |= 1 << i%8; }$/;"	f	file:
set_block_given_by	backends/chert/chert_table.h	/^    void set_block_given_by(uint4 n) {$/;"	f	class:Item_wr
set_block_given_by	backends/glass/glass_table.h	/^    void set_block_given_by(uint4 n) {$/;"	f	class:Glass::BItem_wr
set_block_size	api/compactor.cc	/^Compactor::set_block_size(size_t block_size)$/;"	f	class:Xapian::Compactor
set_block_size	backends/chert/chert_btreebase.h	/^	void set_block_size(uint4 block_size_) {$/;"	f	class:ChertTable_base
set_block_size	backends/chert/chert_table.cc	/^ChertTable::set_block_size(unsigned int block_size_)$/;"	f	class:ChertTable
set_blocksize	backends/glass/glass_version.h	/^    void set_blocksize(unsigned b) {$/;"	f	class:Glass::RootInfo
set_bounds_from_db	weight/weightinternal.h	/^    void set_bounds_from_db(const Xapian::Database &db_) {$/;"	f	class:Xapian::Weight::Internal
set_changes	backends/glass/glass_table.h	/^	void set_changes(GlassChanges * changes) {$/;"	f	class:GlassTable
set_changes	backends/glass/glass_version.h	/^    void set_changes(GlassChanges * changes_) { changes = changes_; }$/;"	f	class:GlassVersion
set_collapse_key	api/omenquire.cc	/^Enquire::set_collapse_key(Xapian::valueno collapse_key, Xapian::doccount collapse_max)$/;"	f	class:Xapian::Enquire
set_component_of	backends/chert/chert_table.h	/^    void set_component_of(int i) {$/;"	f	class:Item_wr
set_component_of	backends/glass/glass_table.h	/^    void set_component_of(int i) {$/;"	f	class:Glass::BItem_wr
set_component_of	backends/glass/glass_table.h	/^    void set_component_of(int i) {$/;"	f	class:Glass::LeafItem_wr
set_components_of	backends/chert/chert_table.h	/^    void set_components_of(int m) {$/;"	f	class:Item_wr
set_cutoff	api/omenquire.cc	/^Enquire::set_cutoff(int percent_cutoff, double weight_cutoff)$/;"	f	class:Xapian::Enquire
set_data	api/omdocument.cc	/^Document::set_data(const string &data)$/;"	f	class:Xapian::Document
set_data	api/omdocument.cc	/^Xapian::Document::Internal::set_data(const string &data_)$/;"	f	class:Xapian::Document::Internal
set_data	backends/inmemory/inmemory_positionlist.cc	/^InMemoryPositionList::set_data(const OmDocumentTerm::term_positions & positions_)$/;"	f	class:InMemoryPositionList
set_database	queryparser/queryparser.cc	/^QueryParser::set_database(const Database &db) {$/;"	f	class:QueryParser
set_database	queryparser/termgenerator.cc	/^TermGenerator::set_database(const Xapian::WritableDatabase &db)$/;"	f	class:TermGenerator
set_datadir	tests/harness/backendmanager.h	/^    void set_datadir(const std::string &datadir_) { datadir = datadir_; }$/;"	f	class:BackendManager
set_default_op	queryparser/queryparser.cc	/^QueryParser::set_default_op(Query::op default_op)$/;"	f	class:QueryParser
set_default_weight	api/postingsource.cc	/^ValueMapPostingSource::set_default_weight(double wt)$/;"	f	class:Xapian::ValueMapPostingSource
set_destdir	api/compactor.cc	/^Compactor::set_destdir(const string & destdir)$/;"	f	class:Xapian::Compactor
set_dir_from	depcomp	/^set_dir_from ()$/;"	f
set_docid_order	api/omenquire.cc	/^Enquire::set_docid_order(Enquire::docid_order order)$/;"	f	class:Xapian::Enquire
set_doclength	backends/glass/glass_inverter.h	/^    void set_doclength(Xapian::docid did, Xapian::termcount doclen, bool add) {$/;"	f	class:Inverter
set_document	matcher/valuestreamdocument.h	/^    void set_document(Xapian::docid did_) {$/;"	f	class:ValueStreamDocument
set_document	queryparser/termgenerator.cc	/^TermGenerator::set_document(const Xapian::Document & doc)$/;"	f	class:TermGenerator
set_empty_ok	queryparser/queryparser_internal.cc	/^    void set_empty_ok() { empty_ok = true; }$/;"	f	class:TermGroup
set_errno_from_getlasterror	common/posixy_wrapper.cc	/^set_errno_from_getlasterror()$/;"	f	file:
set_expansion_scheme	api/omenquire.cc	/^Enquire::set_expansion_scheme(const std::string &eweightname_, double expand_k_) const$/;"	f	class:Xapian::Enquire
set_f_kp	api/editdistance.cc	/^    void set_f_kp(int k, int p, int val) {$/;"	f	class:edist_state
set_first_unused_block	backends/glass/glass_freelist.h	/^    void set_first_unused_block(uint4 base) { first_unused_block = base; }$/;"	f	class:GlassFreeList
set_flags	queryparser/termgenerator.cc	/^TermGenerator::set_flags(flags toggle, flags mask)$/;"	f	class:TermGenerator
set_flags_	api/compactor.cc	/^Compactor::set_flags_(unsigned flags, unsigned mask)$/;"	f	class:Xapian::Compactor
set_free_list	backends/glass/glass_version.h	/^    void set_free_list(const std::string & s) { fl_serialised = s; }$/;"	f	class:Glass::RootInfo
set_full_compaction	backends/chert/chert_table.cc	/^ChertTable::set_full_compaction(bool parity)$/;"	f	class:ChertTable
set_full_compaction	backends/glass/glass_table.cc	/^GlassTable::set_full_compaction(bool parity)$/;"	f	class:GlassTable
set_have_fakeroot	backends/chert/chert_btreebase.h	/^	void set_have_fakeroot(bool have_fakeroot_) {$/;"	f	class:ChertTable_base
set_hint_postlist	matcher/queryoptimiser.h	/^    void set_hint_postlist(LeafPostList * new_hint) {$/;"	f	class:QueryOptimiser
set_item_count	backends/chert/chert_btreebase.h	/^	void set_item_count(chert_tablesize_t item_count_) {$/;"	f	class:ChertTable_base
set_j	common/bitstream.h	/^	void set_j(int j_, Xapian::termpos pos_j_) {$/;"	f	struct:Xapian::BitReader::DIState
set_k	common/bitstream.h	/^	void set_k(int k_, Xapian::termpos pos_k_) {$/;"	f	struct:Xapian::BitReader::DIState
set_key_and_block	backends/chert/chert_table.h	/^    void set_key_and_block(Key newkey, int truncate_size, uint4 n) {$/;"	f	class:Item_wr
set_key_and_block	backends/glass/glass_table.h	/^    void set_key_and_block(Key newkey, uint4 n) {$/;"	f	class:Glass::BItem_wr
set_key_len	backends/chert/chert_table.h	/^    void set_key_len(int x) { setint1(p, I2, x); }$/;"	f	class:Item_wr
set_key_len	backends/glass/glass_table.h	/^    void set_key_len(int x) {$/;"	f	class:Glass::BItem_wr
set_key_len	backends/glass/glass_table.h	/^    void set_key_len(int x) {$/;"	f	class:Glass::LeafItem_wr
set_last_docid	backends/chert/chert_dbstats.h	/^    void set_last_docid(Xapian::docid did) { last_docid = did; }$/;"	f	class:ChertDatabaseStats
set_last_docid	backends/glass/glass_version.h	/^    void set_last_docid(Xapian::docid did) { last_docid = did; }$/;"	f	class:GlassVersion
set_level	backends/chert/chert_btreebase.h	/^	void set_level(uint4 level_) {$/;"	f	class:ChertTable_base
set_level	backends/glass/glass_version.h	/^    void set_level(int level_) { level = unsigned(level_); }$/;"	f	class:Glass::RootInfo
set_max_changesets	tests/api_replicate.cc	254;"	d	file:
set_max_changesets	tests/api_replicate.cc	256;"	d	file:
set_max_changesets	tests/api_replicate.cc	258;"	d	file:
set_max_expansion	queryparser/queryparser.cc	/^QueryParser::set_max_expansion(Xapian::termcount max_expansion,$/;"	f	class:QueryParser
set_max_item_size	backends/chert/chert_table.h	/^	void set_max_item_size(size_t block_capacity) {$/;"	f	class:ChertTable
set_max_item_size	backends/glass/glass_table.h	/^	void set_max_item_size(size_t block_capacity) {$/;"	f	class:GlassTable
set_max_part	weight/weightinternal.h	/^    void set_max_part(const std::string & term, double max_part) {$/;"	f	class:Xapian::Weight::Internal
set_max_wildcard_expansion	include/xapian/queryparser.h	/^QueryParser::set_max_wildcard_expansion(Xapian::termcount max_expansion)$/;"	f	class:Xapian::QueryParser
set_max_word_length	queryparser/termgenerator.cc	/^TermGenerator::set_max_word_length(unsigned max_word_length)$/;"	f	class:TermGenerator
set_maxweight	api/postingsource.cc	/^PostingSource::set_maxweight(double max_weight)$/;"	f	class:Xapian::PostingSource
set_metadata	api/omdatabase.cc	/^WritableDatabase::set_metadata(const string & key, const string & value)$/;"	f	class:Xapian::WritableDatabase
set_metadata	backends/chert/chert_database.cc	/^ChertWritableDatabase::set_metadata(const string & key, const string & value)$/;"	f	class:ChertWritableDatabase
set_metadata	backends/database.cc	/^Database::Internal::set_metadata(const string &, const string &)$/;"	f	class:Xapian::Database::Internal
set_metadata	backends/glass/glass_database.cc	/^GlassWritableDatabase::set_metadata(const string & key, const string & value)$/;"	f	class:GlassWritableDatabase
set_metadata	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::set_metadata(const std::string & key,$/;"	f	class:InMemoryDatabase
set_metadata	backends/remote/remote-database.cc	/^RemoteDatabase::set_metadata(const string & key, const string & value)$/;"	f	class:RemoteDatabase
set_n	backends/glass/glass_cursor.h	/^	void set_n(uint4 n) {$/;"	f	class:Glass::Cursor
set_num_entries	backends/glass/glass_version.h	/^    void set_num_entries(glass_tablesize_t n) { num_entries = n; }$/;"	f	class:Glass::RootInfo
set_oldest_changeset	backends/glass/glass_changes.h	/^    void set_oldest_changeset(glass_revision_number_t rev) {$/;"	f	class:GlassChanges
set_oldest_changeset	backends/glass/glass_version.h	/^    void set_oldest_changeset(glass_revision_number_t changeset) const {$/;"	f	class:GlassVersion
set_overwritten	backends/chert/chert_table.cc	/^ChertTable::set_overwritten() const$/;"	f	class:ChertTable
set_overwritten	backends/glass/glass_table.cc	/^GlassTable::set_overwritten() const$/;"	f	class:GlassTable
set_positionlist	backends/chert/chert_positionlist.cc	/^ChertPositionListTable::set_positionlist(Xapian::docid did,$/;"	f	class:ChertPositionListTable
set_positionlist	backends/glass/glass_inverter.cc	/^Inverter::set_positionlist(Xapian::docid did,$/;"	f	class:Inverter
set_positionlist	backends/glass/glass_inverter.cc	/^Inverter::set_positionlist(const GlassPositionListTable & position_table,$/;"	f	class:Inverter
set_positionlist	backends/glass/glass_positionlist.h	/^    void set_positionlist(Xapian::docid did, const string & tname,$/;"	f	class:GlassPositionListTable
set_properties_for_backend	tests/harness/testrunner.cc	/^TestRunner::set_properties_for_backend(const string & backend_name)$/;"	f	class:TestRunner
set_query	api/omenquire.cc	/^Enquire::Internal::set_query(const Query &query_, termcount qlen_)$/;"	f	class:Xapian::Enquire::Internal
set_query	api/omenquire.cc	/^Enquire::set_query(const Query & query, termcount len)$/;"	f	class:Xapian::Enquire
set_query	backends/remote/remote-database.cc	/^RemoteDatabase::set_query(const Xapian::Query& query,$/;"	f	class:RemoteDatabase
set_query	weight/weightinternal.h	/^    void set_query(const Xapian::Query &query_) {$/;"	f	class:Xapian::Weight::Internal
set_quiet	bin/xapian-compact.cc	/^    void set_quiet(bool quiet_) { quiet = quiet_; }$/;"	f	class:MyCompactor
set_read_fd	api/replication.cc	/^DatabaseReplica::Internal::set_read_fd(int fd)$/;"	f	class:DatabaseReplica::Internal
set_read_fd	api/replication.cc	/^DatabaseReplica::set_read_fd(int fd)$/;"	f	class:DatabaseReplica
set_registry	net/remoteserver.h	/^    void set_registry(const Xapian::Registry & reg_) { reg = reg_; }$/;"	f	class:RemoteServer
set_registry	net/remotetcpserver.h	/^    void set_registry(const Xapian::Registry & reg_) { reg = reg_; }$/;"	f	class:RemoteTcpServer
set_revision	backends/chert/chert_btreebase.h	/^	void set_revision(uint4 revision_) {$/;"	f	class:ChertTable_base
set_revision	backends/glass/glass_freelist.h	/^    void set_revision(uint4 revision_) { revision = revision_; }$/;"	f	class:GlassFreeList
set_revision_number	backends/chert/chert_database.cc	/^ChertDatabase::set_revision_number(chert_revision_number_t new_revision)$/;"	f	class:ChertDatabase
set_revision_number	backends/glass/glass_database.cc	/^GlassDatabase::set_revision_number(int flags, glass_revision_number_t new_revision)$/;"	f	class:GlassDatabase
set_root	backends/chert/chert_btreebase.h	/^	void set_root(uint4 root_) {$/;"	f	class:ChertTable_base
set_root	backends/glass/glass_version.h	/^    void set_root(glass_block_t root_) { root = root_; }$/;"	f	class:Glass::RootInfo
set_root_is_fake	backends/glass/glass_version.h	/^    void set_root_is_fake(bool f) { root_is_fake = f; }$/;"	f	class:Glass::RootInfo
set_sequential	backends/chert/chert_btreebase.h	/^	void set_sequential(bool sequential_) {$/;"	f	class:ChertTable_base
set_sequential	backends/glass/glass_version.h	/^    void set_sequential(bool f) { sequential = f; }$/;"	f	class:Glass::RootInfo
set_size	api/queryinternal.h	/^    Xapian::termcount set_size;$/;"	m	class:Xapian::Internal::QueryEliteSet
set_size	backends/chert/chert_table.h	/^    void set_size(int l) {$/;"	f	class:Item_wr
set_size	backends/glass/glass_table.h	/^    void set_size(int new_size) {$/;"	f	class:Glass::LeafItem_wr
set_socket_timeouts	common/socket_utils.cc	/^set_socket_timeouts(int fd, double timeout)$/;"	f
set_sort_by_key	api/omenquire.cc	/^Enquire::set_sort_by_key(KeyMaker * sorter, bool ascending)$/;"	f	class:Xapian::Enquire
set_sort_by_key_then_relevance	api/omenquire.cc	/^Enquire::set_sort_by_key_then_relevance(KeyMaker * sorter, bool ascending)$/;"	f	class:Xapian::Enquire
set_sort_by_relevance	api/omenquire.cc	/^Enquire::set_sort_by_relevance()$/;"	f	class:Xapian::Enquire
set_sort_by_relevance_then_key	api/omenquire.cc	/^Enquire::set_sort_by_relevance_then_key(KeyMaker * sorter, bool ascending)$/;"	f	class:Xapian::Enquire
set_sort_by_relevance_then_value	api/omenquire.cc	/^Enquire::set_sort_by_relevance_then_value(valueno sort_key, bool ascending)$/;"	f	class:Xapian::Enquire
set_sort_by_value	api/omenquire.cc	/^Enquire::set_sort_by_value(valueno sort_key, bool ascending)$/;"	f	class:Xapian::Enquire
set_sort_by_value_then_relevance	api/omenquire.cc	/^Enquire::set_sort_by_value_then_relevance(valueno sort_key, bool ascending)$/;"	f	class:Xapian::Enquire
set_spelling_wordfreq_upper_bound	backends/glass/glass_version.h	/^    void set_spelling_wordfreq_upper_bound(Xapian::termcount ub) {$/;"	f	class:GlassVersion
set_status	api/compactor.cc	/^Compactor::set_status(const string & table, const string & status)$/;"	f	class:Xapian::Compactor
set_status	bin/xapian-compact.cc	/^MyCompactor::set_status(const string & table, const string & status)$/;"	f	class:MyCompactor
set_stemmer	queryparser/queryparser.cc	/^QueryParser::set_stemmer(const Xapian::Stem & stemmer)$/;"	f	class:QueryParser
set_stemmer	queryparser/termgenerator.cc	/^TermGenerator::set_stemmer(const Xapian::Stem & stemmer)$/;"	f	class:TermGenerator
set_stemming_strategy	queryparser/queryparser.cc	/^QueryParser::set_stemming_strategy(stem_strategy strategy)$/;"	f	class:QueryParser
set_stemming_strategy	queryparser/termgenerator.cc	/^TermGenerator::set_stemming_strategy(stem_strategy strategy)$/;"	f	class:TermGenerator
set_stopper	queryparser/queryparser.cc	/^QueryParser::set_stopper(const Stopper * stopper)$/;"	f	class:QueryParser
set_stopper	queryparser/termgenerator.cc	/^TermGenerator::set_stopper(const Xapian::Stopper * stopper)$/;"	f	class:TermGenerator
set_stopper_strategy	queryparser/termgenerator.cc	/^TermGenerator::set_stopper_strategy(stop_strategy strategy)$/;"	f	class:TermGenerator
set_tag	backends/chert/chert_table.h	/^    void set_tag(int cd, const char *start, int len, bool compressed) {$/;"	f	class:Item_wr
set_tag	backends/glass/glass_table.h	/^    void set_tag(int cd, const char *start, int len, bool compressed, int i, int m) {$/;"	f	class:Glass::LeafItem_wr
set_term	api/leafpostlist.h	/^    void set_term(const std::string & term_) { term = term_; }$/;"	f	class:LeafPostList
set_termfreq_est	include/xapian/postingsource.h	/^    void set_termfreq_est(Xapian::doccount termfreq_est_) {$/;"	f	class:Xapian::ValuePostingSource
set_termfreq_max	include/xapian/postingsource.h	/^    void set_termfreq_max(Xapian::doccount termfreq_max_) {$/;"	f	class:Xapian::ValuePostingSource
set_termfreq_min	include/xapian/postingsource.h	/^    void set_termfreq_min(Xapian::doccount termfreq_min_) {$/;"	f	class:Xapian::ValuePostingSource
set_termlist	backends/chert/chert_termlisttable.cc	/^ChertTermListTable::set_termlist(Xapian::docid did,$/;"	f	class:ChertTermListTable
set_termlist	backends/glass/glass_termlisttable.cc	/^GlassTermListTable::set_termlist(Xapian::docid did,$/;"	f	class:GlassTermListTable
set_termpos	queryparser/termgenerator.cc	/^TermGenerator::set_termpos(Xapian::termpos termpos)$/;"	f	class:TermGenerator
set_termweight	api/leafpostlist.cc	/^LeafPostList::set_termweight(const Xapian::Weight * weight_)$/;"	f	class:LeafPostList
set_time_limit	api/omenquire.cc	/^Enquire::set_time_limit(double time_limit)$/;"	f	class:Xapian::Enquire
set_timeout_flag	matcher/multimatch.cc	/^set_timeout_flag(union sigval sv)$/;"	f	file:
set_total_subqs	matcher/queryoptimiser.h	/^    void set_total_subqs(Xapian::termcount n) { total_subqs = n; }$/;"	f	class:QueryOptimiser
set_truncated_key_and_block	backends/glass/glass_table.h	/^    void set_truncated_key_and_block(Key newkey, int new_comp,$/;"	f	class:Glass::BItem_wr
set_value_stats	backends/chert/chert_values.cc	/^ChertValueManager::set_value_stats(map<Xapian::valueno, ValueStats> & value_stats)$/;"	f	class:ChertValueManager
set_value_stats	backends/glass/glass_values.cc	/^GlassValueManager::set_value_stats(map<Xapian::valueno, ValueStats> & value_stats)$/;"	f	class:GlassValueManager
set_weight	matcher/synonympostlist.cc	/^SynonymPostList::set_weight(const Xapian::Weight * wt_)$/;"	f	class:SynonymPostList
set_weighting_scheme	api/omenquire.cc	/^Enquire::set_weighting_scheme(const Weight &weight_)$/;"	f	class:Xapian::Enquire
set_wordfreq_upper_bound	backends/glass/glass_spelling.h	/^    void set_wordfreq_upper_bound(Xapian::termcount ub) {$/;"	f	class:GlassSpellingTable
setint1	backends/chert/chert_table.h	/^setint1(unsigned char *p, int c, int x)$/;"	f
setint2	backends/chert/chert_table.h	/^setint2(unsigned char *p, int c, int x)$/;"	f
setint4	backends/chert/chert_table.h	/^setint4(unsigned char *p, int c, int x)$/;"	f
setup	tests/api_closedb.cc	/^    void setup(Xapian::Database db_) {$/;"	f	struct:closedb1_iterators
sev	matcher/multimatch.cc	/^    struct sigevent sev;$/;"	m	class:TimeOut	typeref:struct:TimeOut::sigevent	file:
sharedstatedir	Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	docs/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	tests/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
short_opts	tests/harness/testsuite.cc	/^map<int, string *> test_driver::short_opts;$/;"	m	class:test_driver	file:
short_opts	tests/harness/testsuite.h	/^	static std::map<int, std::string *> short_opts;$/;"	m	class:test_driver
should_stem	queryparser/queryparser_internal.cc	/^should_stem(const string & term)$/;"	f
should_stem	queryparser/termgenerator_internal.cc	/^should_stem(const std::string & term)$/;"	f	namespace:Xapian
showPrecedenceConflict	queryparser/lemon.c	/^static int showPrecedenceConflict = 0;$/;"	v	file:
show_db_stats	bin/xapian-delve.cc	/^show_db_stats(Database &db)$/;"	f	file:
show_docdata	bin/xapian-delve.cc	/^show_docdata(Database &db, docid docid, char sep)$/;"	f	file:
show_docdata	bin/xapian-delve.cc	/^show_docdata(Database &db,$/;"	f	file:
show_entry	bin/xapian-inspect.cc	/^show_entry(GlassCursor & cursor)$/;"	f	file:
show_help	bin/xapian-inspect.cc	/^show_help()$/;"	f	file:
show_termlist	bin/xapian-delve.cc	/^show_termlist(const Database &db, Xapian::docid did,$/;"	f	file:
show_termlists	bin/xapian-delve.cc	/^show_termlists(Database &db,$/;"	f	file:
show_usage	bin/xapian-check.cc	/^static void show_usage() {$/;"	f	file:
show_usage	bin/xapian-compact.cc	/^static void show_usage() {$/;"	f	file:
show_usage	bin/xapian-delve.cc	/^static void show_usage() {$/;"	f	file:
show_usage	bin/xapian-inspect.cc	/^static void show_usage() {$/;"	f	file:
show_usage	bin/xapian-progsrv.cc	/^static void show_usage() {$/;"	f	file:
show_usage	bin/xapian-replicate-server.cc	/^static void show_usage() {$/;"	f	file:
show_usage	bin/xapian-replicate.cc	/^static void show_usage() {$/;"	f	file:
show_usage	bin/xapian-tcpsrv.cc	/^static void show_usage() {$/;"	f	file:
show_usage	examples/copydatabase.cc	/^show_usage(int rc)$/;"	f	file:
show_usage	examples/quest.cc	/^static void show_usage() {$/;"	f	file:
show_usage	examples/xapian-metadata.cc	/^static void show_usage() {$/;"	f	file:
show_usage	examples/xapian-pos.cc	/^show_usage()$/;"	f	file:
show_usage	xapian-config	/^show_usage() {$/;"	f
show_value	bin/xapian-delve.cc	/^show_value(Database &db,$/;"	f	file:
show_values	bin/xapian-delve.cc	/^show_values(Database &db, docid docid, char sep)$/;"	f	file:
show_values	bin/xapian-delve.cc	/^show_values(Database &db,$/;"	f	file:
showdocdata	bin/xapian-delve.cc	/^static bool showdocdata = false;$/;"	v	file:
showvalues	bin/xapian-delve.cc	/^static bool showvalues = false;$/;"	v	file:
shrink	api/queryinternal.cc	/^Context::shrink(size_t new_size)$/;"	f	class:Xapian::Internal::Context
sigaddr	tests/harness/testsuite.cc	/^static void * sigaddr = NULL;$/;"	v	file:
signum	tests/harness/testsuite.cc	/^static int signum = 0;$/;"	v	file:
single_file	backends/glass/glass_database.h	/^	bool single_file() const { return version_file.single_file(); }$/;"	f	class:GlassDatabase
single_file	backends/glass/glass_table.h	/^	bool single_file() const {$/;"	f	class:GlassTable
single_file	backends/glass/glass_version.h	/^    bool single_file() const { return db_dir.empty(); }$/;"	f	class:GlassVersion
singlesubquery1_	tests/api_none.cc	195;"	d	file:
singlesubquery2_	tests/api_none.cc	215;"	d	file:
singlesubquery3_	tests/api_none.cc	235;"	d	file:
size	api/omenquire.cc	/^MSet::size() const$/;"	f	class:Xapian::MSet
size	api/omenquire.cc	/^RSet::size() const$/;"	f	class:Xapian::RSet
size	api/queryinternal.cc	/^    size_t size() const {$/;"	f	class:Xapian::Internal::Context
size	api/smallvector.h	/^    size_type size() const {$/;"	f	class:Xapian::SmallVector
size	backends/chert/chert_positionlist.h	/^    Xapian::termcount size;$/;"	m	class:ChertPositionList
size	backends/chert/chert_table.h	/^    int size() const {$/;"	f	class:Item_base
size	backends/glass/glass_positionlist.h	/^    Xapian::termcount size;$/;"	m	class:GlassPositionList
size	backends/glass/glass_table.h	/^    int size() const {$/;"	f	class:Glass::BItem_base
size	backends/glass/glass_table.h	/^    int size() const {$/;"	f	class:Glass::LeafItem_base
size	expand/esetinternal.cc	/^ESet::size() const$/;"	f	class:Xapian::ESet
size	include/xapian/geospatial.h	/^    size_t size() const$/;"	f	class:Xapian::LatLongCoords
size	languages/compiler/header.h	/^    int size;        \/* - and its size *\/$/;"	m	struct:amongvec
size	queryparser/lemon.c	/^  int size;               \/* The number of available slots. *\/$/;"	m	struct:s_x1	file:
size	queryparser/lemon.c	/^  int size;               \/* The number of available slots. *\/$/;"	m	struct:s_x2	file:
size	queryparser/lemon.c	/^  int size;               \/* The number of available slots. *\/$/;"	m	struct:s_x3	file:
size	queryparser/lemon.c	/^  int size;               \/* The number of available slots. *\/$/;"	m	struct:s_x4	file:
size	queryparser/lemon.c	/^static int size = 0;$/;"	v	file:
size_type	api/smallvector.h	/^    typedef std::size_t size_type;$/;"	t	class:Xapian::SmallVector
size_type	include/xapian/eset.h	/^    typedef Xapian::termcount size_type;$/;"	t	class:Xapian::ESet
size_type	include/xapian/mset.h	/^    typedef Xapian::doccount size_type;$/;"	t	class:Xapian::MSet
skip_deletes	backends/chert/chert_alldocsmodifiedpostlist.cc	/^ChertAllDocsModifiedPostList::skip_deletes(double w_min)$/;"	f	class:ChertAllDocsModifiedPostList
skip_deletes	backends/chert/chert_modifiedpostlist.cc	/^ChertModifiedPostList::skip_deletes(double w_min)$/;"	f	class:ChertModifiedPostList
skip_if_in_range	api/decvalwtsource.cc	/^DecreasingValueWeightPostingSource::skip_if_in_range(double min_wt)$/;"	f	class:DecreasingValueWeightPostingSource
skip_test_for_backend	tests/apitest.cc	/^skip_test_for_backend(const std::string & backend_prefix)$/;"	f
skip_test_unless_backend	tests/apitest.cc	/^skip_test_unless_backend(const std::string & backend_prefix)$/;"	f
skip_to	api/decvalwtsource.cc	/^DecreasingValueWeightPostingSource::skip_to(Xapian::docid min_docid,$/;"	f	class:DecreasingValueWeightPostingSource
skip_to	api/documentvaluelist.cc	/^DocumentValueList::skip_to(Xapian::docid slot)$/;"	f	class:DocumentValueList
skip_to	api/emptypostlist.cc	/^EmptyPostList::skip_to(Xapian::docid, double)$/;"	f	class:EmptyPostList
skip_to	api/maptermlist.h	/^	TermList * skip_to(const std::string & term) {$/;"	f	class:MapTermList
skip_to	api/matchspy.cc	/^    TermList * skip_to(const string & term) {$/;"	f	class:StringAndFreqTermList
skip_to	api/matchspy.cc	/^    TermList * skip_to(const string & term) {$/;"	f	class:ValueCountTermList
skip_to	api/positioniterator.cc	/^PositionIterator::skip_to(Xapian::termpos pos)$/;"	f	class:Xapian::PositionIterator
skip_to	api/postingiterator.cc	/^PostingIterator::skip_to(Xapian::docid did)$/;"	f	class:Xapian::PostingIterator
skip_to	api/postingsource.cc	/^FixedWeightPostingSource::skip_to(Xapian::docid min_docid, double min_wt)$/;"	f	class:Xapian::FixedWeightPostingSource
skip_to	api/postingsource.cc	/^PostingSource::skip_to(Xapian::docid did, double min_wt)$/;"	f	class:Xapian::PostingSource
skip_to	api/postingsource.cc	/^ValuePostingSource::skip_to(Xapian::docid min_docid, double min_wt)$/;"	f	class:Xapian::ValuePostingSource
skip_to	api/postlist.h	/^    Internal * skip_to(Xapian::docid did) { return skip_to(did, 0.0); }$/;"	f	class:Xapian::PostingIterator::Internal
skip_to	api/termiterator.cc	/^TermIterator::skip_to(const string & term)$/;"	f	class:Xapian::TermIterator
skip_to	api/valueiterator.cc	/^ValueIterator::skip_to(Xapian::docid docid_or_slot)$/;"	f	class:Xapian::ValueIterator
skip_to	api/vectortermlist.cc	/^VectorTermList::skip_to(const string &)$/;"	f	class:VectorTermList
skip_to	backends/chert/chert_alldocsmodifiedpostlist.cc	/^ChertAllDocsModifiedPostList::skip_to(Xapian::docid desired_did,$/;"	f	class:ChertAllDocsModifiedPostList
skip_to	backends/chert/chert_alltermslist.cc	/^ChertAllTermsList::skip_to(const string &term)$/;"	f	class:ChertAllTermsList
skip_to	backends/chert/chert_metadata.cc	/^ChertMetadataTermList::skip_to(const string &key)$/;"	f	class:ChertMetadataTermList
skip_to	backends/chert/chert_modifiedpostlist.cc	/^ChertModifiedPostList::skip_to(Xapian::docid desired_did, double w_min)$/;"	f	class:ChertModifiedPostList
skip_to	backends/chert/chert_positionlist.cc	/^ChertPositionList::skip_to(Xapian::termpos termpos)$/;"	f	class:ChertPositionList
skip_to	backends/chert/chert_postlist.cc	/^ChertPostList::skip_to(Xapian::docid desired_did, double w_min)$/;"	f	class:ChertPostList
skip_to	backends/chert/chert_spelling.cc	/^ChertSpellingTermList::skip_to(const string & term)$/;"	f	class:ChertSpellingTermList
skip_to	backends/chert/chert_spellingwordslist.cc	/^ChertSpellingWordsList::skip_to(const string &tname)$/;"	f	class:ChertSpellingWordsList
skip_to	backends/chert/chert_synonym.cc	/^ChertSynonymTermList::skip_to(const string &tname)$/;"	f	class:ChertSynonymTermList
skip_to	backends/chert/chert_termlist.cc	/^ChertTermList::skip_to(const string & term)$/;"	f	class:ChertTermList
skip_to	backends/chert/chert_valuelist.cc	/^ChertValueList::skip_to(Xapian::docid did)$/;"	f	class:ChertValueList
skip_to	backends/chert/chert_values.cc	/^ValueChunkReader::skip_to(Xapian::docid target)$/;"	f	class:ValueChunkReader
skip_to	backends/contiguousalldocspostlist.cc	/^ContiguousAllDocsPostList::skip_to(Xapian::docid target, double)$/;"	f	class:ContiguousAllDocsPostList
skip_to	backends/glass/glass_alltermslist.cc	/^GlassAllTermsList::skip_to(const string &term)$/;"	f	class:GlassAllTermsList
skip_to	backends/glass/glass_metadata.cc	/^GlassMetadataTermList::skip_to(const string &key)$/;"	f	class:GlassMetadataTermList
skip_to	backends/glass/glass_positionlist.cc	/^GlassPositionList::skip_to(Xapian::termpos termpos)$/;"	f	class:GlassPositionList
skip_to	backends/glass/glass_postlist.cc	/^GlassPostList::skip_to(Xapian::docid desired_did, double w_min)$/;"	f	class:GlassPostList
skip_to	backends/glass/glass_spelling.cc	/^GlassSpellingTermList::skip_to(const string & term)$/;"	f	class:GlassSpellingTermList
skip_to	backends/glass/glass_spellingwordslist.cc	/^GlassSpellingWordsList::skip_to(const string &tname)$/;"	f	class:GlassSpellingWordsList
skip_to	backends/glass/glass_synonym.cc	/^GlassSynonymTermList::skip_to(const string &tname)$/;"	f	class:GlassSynonymTermList
skip_to	backends/glass/glass_termlist.cc	/^GlassTermList::skip_to(const string & term)$/;"	f	class:GlassTermList
skip_to	backends/glass/glass_valuelist.cc	/^GlassValueList::skip_to(Xapian::docid did)$/;"	f	class:GlassValueList
skip_to	backends/glass/glass_values.cc	/^ValueChunkReader::skip_to(Xapian::docid target)$/;"	f	class:ValueChunkReader
skip_to	backends/inmemory/inmemory_alltermslist.cc	/^InMemoryAllTermsList::skip_to(const string &tname_) {$/;"	f	class:InMemoryAllTermsList
skip_to	backends/inmemory/inmemory_database.cc	/^InMemoryAllDocsPostList::skip_to(Xapian::docid did_, double \/*w_min*\/)$/;"	f	class:InMemoryAllDocsPostList
skip_to	backends/inmemory/inmemory_database.cc	/^InMemoryPostList::skip_to(Xapian::docid did, double w_min)$/;"	f	class:InMemoryPostList
skip_to	backends/inmemory/inmemory_database.cc	/^InMemoryTermList::skip_to(const string & term_)$/;"	f	class:InMemoryTermList
skip_to	backends/inmemory/inmemory_positionlist.cc	/^InMemoryPositionList::skip_to(Xapian::termpos termpos)$/;"	f	class:InMemoryPositionList
skip_to	backends/multi/multi_alltermslist.cc	/^MultiAllTermsList::skip_to(const std::string &term)$/;"	f	class:MultiAllTermsList
skip_to	backends/multi/multi_postlist.cc	/^MultiPostList::skip_to(Xapian::docid did, double w_min)$/;"	f	class:MultiPostList
skip_to	backends/multi/multi_termlist.cc	/^TermList * MultiTermList::skip_to(const string & term)$/;"	f	class:MultiTermList
skip_to	backends/multi/multi_valuelist.cc	/^    void skip_to(Xapian::docid did, size_t multiplier) {$/;"	f	struct:SubValueList
skip_to	backends/multi/multi_valuelist.cc	/^MultiValueList::skip_to(Xapian::docid did)$/;"	f	class:MultiValueList
skip_to	backends/remote/net_postlist.cc	/^NetworkPostList::skip_to(Xapian::docid did, double min_weight)$/;"	f	class:NetworkPostList
skip_to	backends/remote/net_termlist.cc	/^NetworkTermList::skip_to(const string & term)$/;"	f	class:NetworkTermList
skip_to	backends/slowvaluelist.cc	/^SlowValueList::skip_to(Xapian::docid did)$/;"	f	class:SlowValueList
skip_to	expand/ortermlist.cc	/^OrTermList::skip_to(const string & term)$/;"	f	class:OrTermList
skip_to	geospatial/latlong_posting_source.cc	/^LatLongDistancePostingSource::skip_to(docid min_docid,$/;"	f	class:LatLongDistancePostingSource
skip_to	matcher/andmaybepostlist.cc	/^AndMaybePostList::skip_to(Xapian::docid did, double w_min)$/;"	f	class:AndMaybePostList
skip_to	matcher/andnotpostlist.cc	/^AndNotPostList::skip_to(Xapian::docid did, double w_min)$/;"	f	class:AndNotPostList
skip_to	matcher/externalpostlist.cc	/^ExternalPostList::skip_to(Xapian::docid did, double w_min)$/;"	f	class:ExternalPostList
skip_to	matcher/extraweightpostlist.h	/^	PostList *skip_to(Xapian::docid did, double w_min) {$/;"	f	class:ExtraWeightPostList
skip_to	matcher/maxpostlist.cc	/^MaxPostList::skip_to(Xapian::docid did_min, double w_min)$/;"	f	class:MaxPostList
skip_to	matcher/mergepostlist.cc	/^MergePostList::skip_to(Xapian::docid did, double w_min)$/;"	f	class:MergePostList
skip_to	matcher/msetpostlist.cc	/^MSetPostList::skip_to(Xapian::docid, double)$/;"	f	class:MSetPostList
skip_to	matcher/multiandpostlist.cc	/^MultiAndPostList::skip_to(Xapian::docid did_min, double w_min)$/;"	f	class:MultiAndPostList
skip_to	matcher/multixorpostlist.cc	/^MultiXorPostList::skip_to(Xapian::docid did_min, double w_min)$/;"	f	class:MultiXorPostList
skip_to	matcher/orpositionlist.cc	/^OrPositionList::skip_to(Xapian::termpos termpos)$/;"	f	class:OrPositionList
skip_to	matcher/orpospostlist.cc	/^OrPosPostList::skip_to(Xapian::docid did, double w_min)$/;"	f	class:OrPosPostList
skip_to	matcher/orpostlist.cc	/^OrPostList::skip_to(Xapian::docid did, double w_min)$/;"	f	class:OrPostList
skip_to	matcher/selectpostlist.cc	/^SelectPostList::skip_to(Xapian::docid did, double w_min)$/;"	f	class:SelectPostList
skip_to	matcher/synonympostlist.cc	/^SynonymPostList::skip_to(Xapian::docid did, double w_min)$/;"	f	class:SynonymPostList
skip_to	matcher/valuegepostlist.cc	/^ValueGePostList::skip_to(Xapian::docid did, double)$/;"	f	class:ValueGePostList
skip_to	matcher/valuerangepostlist.cc	/^ValueRangePostList::skip_to(Xapian::docid did, double)$/;"	f	class:ValueRangePostList
skip_to	tests/api_postingsource.cc	/^    void skip_to(Xapian::docid to_did, double wt) {$/;"	f	class:MyDontAskWeightPostingSource
skip_to	tests/api_postingsource.cc	/^    void skip_to(Xapian::docid to_did, double wt) {$/;"	f	class:MyOddPostingSource
skip_to	tests/api_postingsource.cc	/^    void skip_to(Xapian::docid to_did, double wt) {$/;"	f	class:MyOddWeightingPostingSource
skip_to	tests/api_postingsource.cc	/^    void skip_to(Xapian::docid to_did, double) {$/;"	f	class:ChangeMaxweightPostingSource
skip_to	tests/api_postingsource.cc	/^    void skip_to(Xapian::docid, double) { }$/;"	f	class:CloneTestPostingSource
skip_to	tests/api_serialise.cc	/^    void skip_to(Xapian::docid, double) { }$/;"	f	class:ExceptionalPostingSource
skip_to_handling_prune	matcher/branchpostlist.h	/^skip_to_handling_prune(PostList * & pl, Xapian::docid did, double w_min,$/;"	f
skip_to_helper	matcher/multiandpostlist.h	/^    void skip_to_helper(size_t n, Xapian::docid did_min, double w_min) {$/;"	f	class:MultiAndPostList
skip_utf8	languages/steminternal.cc	/^SnowballStemImplementation::skip_utf8(const symbol * p, int c, int lb, int l, int n)$/;"	f	class:Xapian::SnowballStemImplementation
skipped	tests/harness/testsuite.h	/^	    unsigned int skipped = 0;$/;"	m	struct:test_driver::result
slash	common/fileutils.cc	/^static inline bool slash(char ch)$/;"	f	file:
sleep	common/realtime.h	/^inline void sleep(double t) {$/;"	f	namespace:RealTime
sleep	common/safeunistd.h	/^sleep(unsigned int seconds)$/;"	f
slice_check	languages/steminternal.cc	/^int SnowballStemImplementation::slice_check() {$/;"	f	class:Xapian::SnowballStemImplementation
slice_del	languages/steminternal.h	/^    int slice_del() { return slice_from_s(0, 0); }$/;"	f	class:Xapian::SnowballStemImplementation
slice_from_s	languages/steminternal.cc	/^int SnowballStemImplementation::slice_from_s(int s_size, const symbol * s) {$/;"	f	class:Xapian::SnowballStemImplementation
slice_from_v	languages/steminternal.h	/^    int slice_from_v(const symbol * v) { return slice_from_s(SIZE(v), v); }$/;"	f	class:Xapian::SnowballStemImplementation
slice_to	languages/steminternal.cc	/^symbol * SnowballStemImplementation::slice_to(symbol * v) {$/;"	f	class:Xapian::SnowballStemImplementation
slot	api/queryinternal.h	/^    Xapian::valueno slot;$/;"	m	class:Xapian::Internal::QueryValueBase
slot	backends/chert/chert_valuelist.h	/^    Xapian::valueno slot;$/;"	m	class:ChertValueList
slot	backends/chert/chert_values.cc	/^    Xapian::valueno slot;$/;"	m	class:ValueUpdater	file:
slot	backends/glass/glass_valuelist.h	/^    Xapian::valueno slot;$/;"	m	class:GlassValueList
slot	backends/glass/glass_values.cc	/^    Xapian::valueno slot;$/;"	m	class:Glass::ValueUpdater	file:
slot	backends/multivaluelist.h	/^    Xapian::valueno slot;$/;"	m	class:MultiValueList
slot	backends/slowvaluelist.h	/^    Xapian::valueno slot;$/;"	m	class:SlowValueList
slot	include/xapian/geospatial.h	/^    Xapian::valueno slot;$/;"	m	class:Xapian::LatLongDistanceKeyMaker
slot	include/xapian/keymaker.h	/^	Xapian::valueno slot;$/;"	m	struct:Xapian::MultiValueKeyMaker::KeySpec
slot	include/xapian/matchspy.h	/^	Xapian::valueno slot;$/;"	m	struct:Xapian::ValueCountMatchSpy::Internal
slot	include/xapian/queryparser.h	/^    Xapian::valueno slot;$/;"	m	class:Xapian::RangeProcessor
slot	matcher/collapser.h	/^    Xapian::valueno slot;$/;"	m	class:Collapser
slot	matcher/valuerangepostlist.h	/^    Xapian::valueno slot;$/;"	m	class:ValueRangePostList
slots	backends/chert/chert_values.h	/^    std::map<Xapian::docid, std::string> slots;$/;"	m	class:ChertValueManager
slots	backends/glass/glass_values.h	/^    std::map<Xapian::docid, std::string> slots;$/;"	m	class:GlassValueManager
slots	include/xapian/keymaker.h	/^    std::vector<KeySpec> slots;$/;"	m	class:Xapian::MultiValueKeyMaker
smaller	languages/compiler/tokeniser.c	/^static int smaller(int a, int b) { return a < b ? a : b; }$/;"	f	file:
smallest_ch	languages/compiler/header.h	/^    int smallest_ch;          \/* character with min code *\/$/;"	m	struct:grouping
sniff_next_message_type	net/remoteconnection.cc	/^RemoteConnection::sniff_next_message_type(double end_time)$/;"	f	class:RemoteConnection
snippet	api/omenquire.cc	/^MSet::snippet(const string & text,$/;"	f	class:Xapian::MSet
snippet	queryparser/termgenerator_internal.cc	/^MSet::Internal::snippet(const string & text,$/;"	f	class:Xapian::MSet::Internal
snippet_bg_relevance	api/omenquireinternal.h	/^	mutable std::unordered_map<std::string, double> snippet_bg_relevance;$/;"	m	class:Xapian::MSet::Internal
snippet_check_leading_nonwordchar	queryparser/termgenerator_internal.cc	/^snippet_check_leading_nonwordchar(unsigned ch) {$/;"	f	namespace:Xapian
snippet_testcase	tests/api_snippets.cc	/^struct snippet_testcase {$/;"	s	file:
snowball_algorithms	Makefile	/^snowball_algorithms = \\$/;"	m
snowball_algorithms	languages/Makefile.mk	/^snowball_algorithms =\\$/;"	m
snowball_built_sources	Makefile	/^snowball_built_sources = \\$/;"	m
snowball_built_sources	languages/Makefile.mk	/^snowball_built_sources =\\$/;"	m
snowball_headers	Makefile	/^snowball_headers = \\$/;"	m
snowball_headers	languages/Makefile.mk	/^snowball_headers =\\$/;"	m
snowball_sources	Makefile	/^snowball_sources = \\$/;"	m
snowball_sources	languages/Makefile.mk	/^snowball_sources =\\$/;"	m
snowball_stopwords	Makefile	/^snowball_stopwords = \\$/;"	m
snowball_stopwords	languages/Makefile.mk	/^snowball_stopwords = \\$/;"	m
soaktest_soaktest_DEPENDENCIES	tests/Makefile	/^soaktest_soaktest_DEPENDENCIES = ..\/libgetopt.la ..\/$(libxapian_la)$/;"	m
soaktest_soaktest_LDADD	tests/Makefile	/^soaktest_soaktest_LDADD = ..\/libgetopt.la ..\/$(libxapian_la)$/;"	m
soaktest_soaktest_LDADD	tests/soaktest/Makefile.mk	/^soaktest_soaktest_LDADD = ..\/libgetopt.la ..\/$(libxapian_la)$/;"	m
soaktest_soaktest_LDFLAGS	tests/Makefile	/^soaktest_soaktest_LDFLAGS = $(NO_INSTALL) $(ldflags)$/;"	m
soaktest_soaktest_LDFLAGS	tests/soaktest/Makefile.mk	/^soaktest_soaktest_LDFLAGS = $(NO_INSTALL) $(ldflags)$/;"	m
soaktest_soaktest_LINK	tests/Makefile	/^soaktest_soaktest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \\$/;"	m
soaktest_soaktest_OBJECTS	tests/Makefile	/^soaktest_soaktest_OBJECTS = $(am_soaktest_soaktest_OBJECTS)$/;"	m
soaktest_soaktest_SOURCES	tests/Makefile	/^soaktest_soaktest_SOURCES = \\$/;"	m
soaktest_soaktest_SOURCES	tests/soaktest/Makefile.mk	/^soaktest_soaktest_SOURCES = \\$/;"	m
socket	common/safesyssocket.h	108;"	d
socket	common/safesyssocket.h	110;"	d
socket	common/safesyssocket.h	63;"	d
socket	common/safesyssocket.h	65;"	d
socket	net/replicatetcpclient.h	/^    int socket;$/;"	m	class:SOCKET_INITIALIZER_MIXIN
socket_	common/safesyssocket.h	/^inline int socket_(int domain, int type, int protocol) {$/;"	f
socket_errno	net/remoteconnection.h	/^inline int socket_errno() { return errno; }$/;"	f
socket_errno	net/remoteconnection.h	/^inline int socket_errno() {$/;"	f
socketpair	common/safesyssocket.h	112;"	d
socketpair	common/safesyssocket.h	114;"	d
socketpair_	common/safesyssocket.h	/^inline int socketpair_(int domain, int type, int protocol, int *sv) {$/;"	f
sort_by	api/omenquireinternal.h	/^	sort_setting sort_by;$/;"	m	class:Xapian::Enquire::Internal
sort_by	matcher/multimatch.h	/^	Xapian::Enquire::Internal::sort_setting sort_by;$/;"	m	class:MultiMatch
sort_key	api/omenquireinternal.h	/^	Xapian::valueno sort_key;$/;"	m	class:Xapian::Enquire::Internal
sort_key	api/omenquireinternal.h	/^	string sort_key;$/;"	m	class:Xapian::Internal::MSetItem
sort_key	matcher/multimatch.h	/^	Xapian::valueno sort_key;$/;"	m	class:MultiMatch
sort_setting	api/omenquireinternal.h	/^	typedef enum { REL, VAL, VAL_REL, REL_VAL } sort_setting;$/;"	t	class:Xapian::Enquire::Internal	typeref:enum:Xapian::Enquire::Internal::__anon1
sort_value_forward	api/omenquireinternal.h	/^	bool sort_value_forward;$/;"	m	class:Xapian::Enquire::Internal
sort_value_forward	matcher/multimatch.h	/^	bool sort_value_forward;$/;"	m	class:MultiMatch
sortable_serialise	include/xapian/queryparser.h	/^inline std::string sortable_serialise(double value) {$/;"	f	namespace:Xapian
sorted	queryparser/lemon.c	/^  struct state **sorted;   \/* Table of states sorted by state number *\/$/;"	m	struct:lemon	typeref:struct:lemon::state	file:
sorter	api/omenquireinternal.h	/^	Xapian::Internal::opt_intrusive_ptr<KeyMaker> sorter;$/;"	m	class:Xapian::Enquire::Internal
source	api/queryinternal.h	/^    Xapian::Internal::opt_intrusive_ptr<PostingSource> source;$/;"	m	class:Xapian::Internal::QueryPostingSource
source	matcher/externalpostlist.h	/^    Xapian::PostingSource * source;$/;"	m	class:ExternalPostList
source	matcher/selectpostlist.h	/^	PostList *source;$/;"	m	class:SelectPostList
source_is_owned	matcher/externalpostlist.h	/^    bool source_is_owned;$/;"	m	class:ExternalPostList
sp	queryparser/lemon.c	/^  struct symbol *sp;       \/* The look-ahead symbol *\/$/;"	m	struct:action	typeref:struct:action::symbol	file:
spOpt	queryparser/lemon.c	/^  struct symbol *spOpt;    \/* SHIFTREDUCE optimization to this symbol *\/$/;"	m	struct:action	typeref:struct:action::symbol	file:
space_count	languages/compiler/space.c	/^int space_count = 0;$/;"	v
space_needed	common/Tokeniseise.pm	/^    sub space_needed {$/;"	s
special_labels	languages/compiler/generator.c	/^enum special_labels {$/;"	g	file:
spelling_table	backends/chert/chert_database.h	/^	mutable ChertSpellingTable spelling_table;$/;"	m	class:ChertDatabase
spelling_table	backends/glass/glass_database.h	/^	mutable GlassSpellingTable spelling_table;$/;"	m	class:GlassDatabase
spelling_wordfreq_ubound	backends/glass/glass_version.h	/^    Xapian::termcount spelling_wordfreq_ubound;$/;"	m	class:GlassVersion
spellings_begin	api/omdatabase.cc	/^Database::spellings_begin() const$/;"	f	class:Xapian::Database
spellings_end	include/xapian/database.h	/^	Xapian::TermIterator XAPIAN_NOTHROW(spellings_end() const) {$/;"	f	class:Xapian::Database
spies	api/omenquireinternal.h	/^	vector<Xapian::Internal::opt_intrusive_ptr<MatchSpy>> spies;$/;"	m	class:Xapian::Enquire::Internal
spies	matcher/multimatch.cc	/^    const std::vector<Xapian::Internal::opt_intrusive_ptr<Xapian::MatchSpy>> & spies;$/;"	m	class:MultipleMatchSpy	file:
split	api/documentterm.h	/^    mutable unsigned split = 0;$/;"	m	class:OmDocumentTerm
split_p	backends/chert/chert_table.h	/^	uint8_t * split_p;$/;"	m	class:ChertTable
split_p	backends/glass/glass_table.h	/^	uint8_t * split_p;$/;"	m	class:GlassTable
split_root	backends/chert/chert_table.cc	/^ChertTable::split_root(uint4 split_n)$/;"	f	class:ChertTable
split_root	backends/glass/glass_table.cc	/^GlassTable::split_root(uint4 split_n)$/;"	f	class:GlassTable
split_rset_by_db	matcher/multimatch.cc	/^split_rset_by_db(const Xapian::RSet * rset,$/;"	f	file:
split_words	net/progclient.cc	/^split_words(const string &text, vector<string> &words, char ws = ' ')$/;"	f	file:
spy	api/matchspy.cc	/^    intrusive_ptr<Xapian::ValueCountMatchSpy::Internal> spy;$/;"	m	class:ValueCountTermList	file:
srcdir	Makefile	/^srcdir = .$/;"	m
srcdir	docs/Makefile	/^srcdir = .$/;"	m
srcdir	tests/Makefile	/^srcdir = .$/;"	m
srcdir	tests/harness/testrunner.h	/^    std::string srcdir;$/;"	m	class:TestRunner
srcdir	tests/stemtest.cc	/^static string srcdir;$/;"	v	file:
srcdirs_compat	api/compactor.cc	/^    vector<string> srcdirs_compat;$/;"	m	class:Xapian::Compactor::Internal	file:
stacksize	queryparser/lemon.c	/^  char *stacksize;         \/* Size of the parser stack *\/$/;"	m	struct:lemon	file:
start	backends/glass/glass_changes.cc	/^GlassChanges::start(glass_revision_number_t old_rev,$/;"	f	class:GlassChanges
start	queryparser/lemon.c	/^  char *start;             \/* Name of the start symbol for the grammar *\/$/;"	m	struct:lemon	file:
start	tests/harness/cputimer.h	/^    double start;$/;"	m	class:CPUTimer
start1	geospatial/geoencode.h	/^    unsigned char start1;$/;"	m	class:GeoEncode::DecoderWithBoundingBox
start2	geospatial/geoencode.h	/^    unsigned char start2;$/;"	m	class:GeoEncode::DecoderWithBoundingBox
startRule	queryparser/lemon.c	/^  struct rule *startRule;  \/* First rule *\/$/;"	m	struct:lemon	typeref:struct:lemon::rule	file:
start_match	matcher/localsubmatch.cc	/^LocalSubMatch::start_match(Xapian::doccount first,$/;"	f	class:LocalSubMatch
start_match	matcher/remotesubmatch.cc	/^RemoteSubMatch::start_match(Xapian::doccount first,$/;"	f	class:RemoteSubMatch
start_position_list	matcher/exactphrasepostlist.cc	/^ExactPhrasePostList::start_position_list(unsigned i)$/;"	f	class:ExactPhrasePostList
start_position_list	matcher/phrasepostlist.cc	/^PhrasePostList::start_position_list(unsigned i)$/;"	f	class:PhrasePostList
started	api/maptermlist.h	/^	bool started;$/;"	m	class:MapTermList
started	api/matchspy.cc	/^    bool started;$/;"	m	class:StringAndFreqTermList	file:
started	api/matchspy.cc	/^    bool started;$/;"	m	class:ValueCountTermList	file:
started	backends/chert/chert_postlist.cc	/^	bool started;$/;"	m	class:Chert::PostlistChunkWriter	file:
started	backends/glass/glass_postlist.cc	/^	bool started;$/;"	m	class:Glass::PostlistChunkWriter	file:
started	backends/inmemory/inmemory_database.h	/^	bool started;$/;"	m	class:InMemoryPostList
started	backends/inmemory/inmemory_database.h	/^	bool started;$/;"	m	class:InMemoryTermList
started	backends/remote/net_postlist.h	/^    bool started;$/;"	m	class:NetworkPostList
started	backends/remote/net_termlist.h	/^	bool started;$/;"	m	class:NetworkTermList
started	include/xapian/postingsource.h	/^    bool started;$/;"	m	class:Xapian::FixedWeightPostingSource
started	tests/api_percentages.cc	/^    bool started;$/;"	m	class:MyPostingSource	file:
starter	languages/compiler/header.h	/^    struct node * starter;    \/* i.e. among( (starter) 'string' ... ) *\/$/;"	m	struct:among	typeref:struct:among::node
startswith	common/stringutils.h	/^startswith(const std::string & s, char pfx)$/;"	f
startswith	common/stringutils.h	/^startswith(const std::string & s, const char * pfx)$/;"	f
startswith	common/stringutils.h	/^startswith(const std::string & s, const char * pfx, size_t len)$/;"	f
startswith	common/stringutils.h	/^startswith(const std::string & s, const std::string & pfx)$/;"	f
stat	config.h	452;"	d
stat	config.h	455;"	d
stat_flags	include/xapian/weight.h	/^    } stat_flags;$/;"	t	class:Xapian::Weight	typeref:enum:Xapian::Weight::__anon14
state	queryparser/lemon.c	/^  enum e_state state;        \/* The state of the parser *\/$/;"	m	struct:pstate	typeref:enum:pstate::e_state	file:
state	queryparser/lemon.c	/^struct state {$/;"	s	file:
state	queryparser/queryparser_internal.cc	/^    State * state;$/;"	m	class:Term	file:
stateResortCompare	queryparser/lemon.c	/^static int stateResortCompare(const void *a, const void *b){$/;"	f	file:
statecmp	queryparser/lemon.c	/^PRIVATE int statecmp(struct config *a, struct config *b)$/;"	f
statehash	queryparser/lemon.c	/^PRIVATE unsigned statehash(struct config *a)$/;"	f
stateno	queryparser/queryparser_internal.cc	/^  YYACTIONTYPE stateno;  \/* The state-number, or reduce action in SHIFTREDUCE *\/$/;"	m	struct:yyStackEntry	file:
statenum	queryparser/lemon.c	/^  int statenum;            \/* Sequential number for this state *\/$/;"	m	struct:state	file:
stats	api/omenquireinternal.h	/^	Xapian::Weight::Internal * stats;$/;"	m	class:Xapian::MSet::Internal
stats	backends/chert/chert_database.h	/^	ChertDatabaseStats stats;$/;"	m	class:ChertDatabase
stats	expand/expandweight.h	/^    ExpandStats stats;$/;"	m	class:Xapian::Internal::ExpandWeight
stats	matcher/localsubmatch.cc	/^    Xapian::Weight::Internal * stats;$/;"	m	class:LazyWeight	file:
stats	matcher/localsubmatch.h	/^    Xapian::Weight::Internal * stats;$/;"	m	class:LocalSubMatch
stats_line	queryparser/lemon.c	/^static void stats_line(const char *zLabel, int iValue){$/;"	f	file:
stats_needed	include/xapian/weight.h	/^    stat_flags stats_needed;$/;"	m	class:Xapian::Weight
status	queryparser/lemon.c	/^  enum cfgstatus status;   \/* used during followset and shift computations *\/$/;"	m	struct:config	typeref:enum:config::cfgstatus	file:
stdout_to_string	tests/perftest/runprocess.cc	/^stdout_to_string(const string &cmd)$/;"	f
stem	languages/arabic.cc	/^int Xapian::InternalStemArabic::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemArabic
stem	languages/armenian.cc	/^int Xapian::InternalStemArmenian::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemArmenian
stem	languages/basque.cc	/^int Xapian::InternalStemBasque::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemBasque
stem	languages/catalan.cc	/^int Xapian::InternalStemCatalan::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemCatalan
stem	languages/danish.cc	/^int Xapian::InternalStemDanish::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemDanish
stem	languages/dutch.cc	/^int Xapian::InternalStemDutch::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemDutch
stem	languages/earlyenglish.cc	/^int Xapian::InternalStemEarlyenglish::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemEarlyenglish
stem	languages/english.cc	/^int Xapian::InternalStemEnglish::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemEnglish
stem	languages/finnish.cc	/^int Xapian::InternalStemFinnish::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemFinnish
stem	languages/french.cc	/^int Xapian::InternalStemFrench::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemFrench
stem	languages/german.cc	/^int Xapian::InternalStemGerman::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemGerman
stem	languages/german2.cc	/^int Xapian::InternalStemGerman2::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemGerman2
stem	languages/hungarian.cc	/^int Xapian::InternalStemHungarian::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemHungarian
stem	languages/indonesian.cc	/^int Xapian::InternalStemIndonesian::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemIndonesian
stem	languages/irish.cc	/^int Xapian::InternalStemIrish::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemIrish
stem	languages/italian.cc	/^int Xapian::InternalStemItalian::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemItalian
stem	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
stem	languages/lithuanian.cc	/^int Xapian::InternalStemLithuanian::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemLithuanian
stem	languages/lovins.cc	/^int Xapian::InternalStemLovins::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
stem	languages/nepali.cc	/^int Xapian::InternalStemNepali::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemNepali
stem	languages/norwegian.cc	/^int Xapian::InternalStemNorwegian::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemNorwegian
stem	languages/porter.cc	/^int Xapian::InternalStemPorter::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemPorter
stem	languages/portuguese.cc	/^int Xapian::InternalStemPortuguese::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemPortuguese
stem	languages/romanian.cc	/^int Xapian::InternalStemRomanian::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemRomanian
stem	languages/russian.cc	/^int Xapian::InternalStemRussian::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemRussian
stem	languages/spanish.cc	/^int Xapian::InternalStemSpanish::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemSpanish
stem	languages/swedish.cc	/^int Xapian::InternalStemSwedish::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemSwedish
stem	languages/tamil.cc	/^int Xapian::InternalStemTamil::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemTamil
stem	languages/turkish.cc	/^int Xapian::InternalStemTurkish::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
stem	queryparser/queryparser_internal.cc	/^    QueryParser::stem_strategy stem;$/;"	m	class:Term	file:
stem_action	queryparser/queryparser_internal.h	/^    stem_strategy stem_action;$/;"	m	class:Xapian::QueryParser::Internal
stem_strategy	include/xapian/queryparser.h	/^    } stem_strategy;$/;"	t	class:Xapian::QueryParser	typeref:enum:Xapian::QueryParser::__anon25
stem_strategy	include/xapian/termgenerator.h	/^    } stem_strategy;$/;"	t	class:Xapian::TermGenerator	typeref:enum:Xapian::TermGenerator::__anon21
stem_term	queryparser/queryparser_internal.cc	/^    string stem_term(const string &term) {$/;"	f	class:State
stemmer	queryparser/queryparser_internal.h	/^    Stem stemmer;$/;"	m	class:Xapian::QueryParser::Internal
stemmer	queryparser/termgenerator_internal.h	/^    Stem stemmer;$/;"	m	class:Xapian::TermGenerator::Internal
stemmer	tests/stemtest.cc	/^static Xapian::Stem stemmer;$/;"	v	file:
stemmer_data	include/xapian/constinfo.h	/^    char stemmer_data[256];$/;"	m	struct:Xapian::Internal::constinfo
stemmer_name_len	include/xapian/constinfo.h	/^    unsigned stemmer_name_len;$/;"	m	struct:Xapian::Internal::constinfo
stemtest_DEPENDENCIES	tests/Makefile	/^stemtest_DEPENDENCIES = ..\/libgetopt.la ..\/$(libxapian_la)$/;"	m
stemtest_LDADD	tests/Makefile	/^stemtest_LDADD = ..\/libgetopt.la ..\/$(libxapian_la)$/;"	m
stemtest_LDFLAGS	tests/Makefile	/^stemtest_LDFLAGS = $(NO_INSTALL) $(ldflags)$/;"	m
stemtest_LINK	tests/Makefile	/^stemtest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
stemtest_OBJECTS	tests/Makefile	/^stemtest_OBJECTS = $(am_stemtest_OBJECTS)$/;"	m
stemtest_SOURCES	tests/Makefile	/^stemtest_SOURCES = stemtest.cc $(testharness_sources)$/;"	m
stirling_constant_1	include/xapian/weight.h	/^    double stirling_constant_1;$/;"	m	class:Xapian::BB2Weight
stirling_constant_2	include/xapian/weight.h	/^    double stirling_constant_2;$/;"	m	class:Xapian::BB2Weight
stirling_value	weight/bb2weight.cc	/^static double stirling_value(double difference, double y, double stirling_constant)$/;"	f	namespace:Xapian
stop_mode	queryparser/termgenerator_internal.h	/^    stop_strategy stop_mode;$/;"	m	class:Xapian::TermGenerator::Internal
stop_strategy	include/xapian/termgenerator.h	/^    typedef enum { STOP_NONE, STOP_ALL, STOP_STEMMED } stop_strategy;$/;"	t	class:Xapian::TermGenerator	typeref:enum:Xapian::TermGenerator::__anon22
stop_words	include/xapian/queryparser.h	/^    std::set<std::string> stop_words;$/;"	m	class:Xapian::SimpleStopper
stoplist	queryparser/queryparser_internal.h	/^    list<string> stoplist;$/;"	m	class:Xapian::QueryParser::Internal
stoplist_begin	queryparser/queryparser.cc	/^QueryParser::stoplist_begin() const$/;"	f	class:QueryParser
stoplist_end	include/xapian/queryparser.h	/^    TermIterator XAPIAN_NOTHROW(stoplist_end() const) {$/;"	f	class:Xapian::QueryParser
stoplist_resize	queryparser/queryparser_internal.cc	/^    void stoplist_resize(size_t s) {$/;"	f	class:State
stoplist_size	queryparser/queryparser_internal.cc	/^    size_t stoplist_size() const {$/;"	f	class:State
stopper	queryparser/queryparser_internal.h	/^    Xapian::Internal::opt_intrusive_ptr<const Stopper> stopper;$/;"	m	class:Xapian::QueryParser::Internal
stopper	queryparser/termgenerator_internal.h	/^    Xapian::Internal::opt_intrusive_ptr<const Stopper> stopper;$/;"	m	class:Xapian::TermGenerator::Internal
stopworddir	Makefile	/^stopworddir = $(pkgdatadir)\/stopwords$/;"	m
stopworddir	languages/Makefile.mk	/^stopworddir = $(pkgdatadir)\/stopwords$/;"	m
store_positions	backends/glass/glass_inverter.cc	/^Inverter::store_positions(const GlassPositionListTable & position_table,$/;"	f	class:Inverter
stp	queryparser/lemon.c	/^    struct state *stp;     \/* The new state, if a shift *\/$/;"	m	union:action::__anon32	typeref:struct:action::__anon32::state	file:
stp	queryparser/lemon.c	/^  struct state *stp;       \/* Pointer to state which contains this *\/$/;"	m	struct:config	typeref:struct:config::state	file:
stp	queryparser/lemon.c	/^  struct state *stp;   \/* A pointer to a state *\/$/;"	m	struct:axset	typeref:struct:axset::state	file:
str	api/matchspy.cc	/^    std::string str;$/;"	m	class:StringAndFrequency	file:
str	backends/inmemory/KeyDomet.h	/^        StrImp_ str;$/;"	m	class:kdmt::KeyDometSize::KeyDometStr
str	common/str.cc	/^str(const void * value)$/;"	f	namespace:Xapian::Internal
str	common/str.cc	/^str(double value)$/;"	f	namespace:Xapian::Internal
str	common/str.cc	/^str(int value)$/;"	f	namespace:Xapian::Internal
str	common/str.cc	/^str(long long value)$/;"	f	namespace:Xapian::Internal
str	common/str.cc	/^str(long value)$/;"	f	namespace:Xapian::Internal
str	common/str.cc	/^str(unsigned int value)$/;"	f	namespace:Xapian::Internal
str	common/str.cc	/^str(unsigned long long value)$/;"	f	namespace:Xapian::Internal
str	common/str.cc	/^str(unsigned long value)$/;"	f	namespace:Xapian::Internal
str	common/str.h	/^inline std::string str(bool value) {$/;"	f	namespace:Xapian::Internal
str	common/str.h	/^inline std::string str(const char * value) { return value; }$/;"	f	namespace:Xapian::Internal
str	common/str.h	/^inline std::string str(const std::string & value) { return value; }$/;"	f	namespace:Xapian::Internal
str	include/xapian/constinfo.h	/^    char str[8];$/;"	m	struct:Xapian::Internal::constinfo
str	include/xapian/queryparser.h	/^    std::string str;$/;"	m	class:Xapian::RangeProcessor
str	include/xapian/queryparser.h	/^    std::string str;$/;"	m	class:Xapian::StringValueRangeProcessor
str	languages/compiler/space.c	/^struct str {$/;"	s	file:
strToPrefix	backends/inmemory/KeyDomet.h	/^    KeyDometT strToPrefix(const StrImp& str)$/;"	f	class:kdmt::KeyDometSize
str_append	languages/compiler/space.c	/^extern void str_append(struct str * str, struct str * add) {$/;"	f
str_append_b	languages/compiler/space.c	/^extern void str_append_b(struct str * str, symbol * q) {$/;"	f
str_append_ch	languages/compiler/space.c	/^extern void str_append_ch(struct str * str, char add) {$/;"	f
str_append_int	languages/compiler/space.c	/^extern void str_append_int(struct str * str, int i) {$/;"	f
str_append_string	languages/compiler/space.c	/^extern void str_append_string(struct str * str, const char * s) {$/;"	f
str_assign	languages/compiler/space.c	/^extern void str_assign(struct str * str, char * s) {$/;"	f
str_back	languages/compiler/space.c	/^extern int str_back(struct str *str) {$/;"	f
str_clear	languages/compiler/space.c	/^extern void str_clear(struct str * str) {$/;"	f
str_copy	languages/compiler/space.c	/^extern struct str * str_copy(struct str * old) {$/;"	f
str_data	languages/compiler/space.c	/^extern symbol * str_data(struct str * str) {$/;"	f
str_delete	languages/compiler/space.c	/^extern void str_delete(struct str * str) {$/;"	f
str_len	languages/compiler/space.c	/^extern int str_len(struct str * str) {$/;"	f
str_new	languages/compiler/space.c	/^extern struct str * str_new(void) {$/;"	f
strategy	queryparser/termgenerator_internal.h	/^    stem_strategy strategy;$/;"	m	class:Xapian::TermGenerator::Internal
strhash	queryparser/lemon.c	/^PRIVATE unsigned strhash(const char *x)$/;"	f
stringShorterThanKeydomet	backends/inmemory/KeyDomet.h	/^        bool stringShorterThanKeydomet() const$/;"	f	class:kdmt::KeyDometSize::KeyDomet
string_class	languages/compiler/header.h	/^    const char * string_class;$/;"	m	struct:options
string_frac	matcher/valuerangepostlist.cc	/^string_frac(const string &s, size_t prefix)$/;"	f	file:
string_view	backends/inmemory/KeyDomet.cc	/^typedef std::string string_view;$/;"	t	file:
string_view	backends/inmemory/KeyDomet.h	/^typedef std::string string_view;$/;"	t	namespace:kdmt
sub_db	api/omdatabase.cc	/^sub_db(Xapian::docid did, size_t n_dbs)$/;"	f
sub_docid	api/omdatabase.cc	/^sub_docid(Xapian::docid did, size_t n_dbs)$/;"	f
subdbs	weight/weightinternal.h	/^    size_t subdbs;$/;"	m	class:Xapian::Weight::Internal
subdir	Makefile	/^subdir = .$/;"	m
subdir	docs/Makefile	/^subdir = docs$/;"	m
subdir	tests/Makefile	/^subdir = tests$/;"	m
submission_path	tests/submitperftest	/^submission_path = "http:\/\/tartarus.org\/richard\/perftest\/upload.cgi"$/;"	v
submission_path	tests/submitperftest.in	/^submission_path = "http:\/\/tartarus.org\/richard\/perftest\/upload.cgi"$/;"	v
submit_perftest	tests/submitperftest	/^def submit_perftest(filepath):$/;"	f
submit_perftest	tests/submitperftest.in	/^def submit_perftest(filepath):$/;"	f
subqs	tests/api_opsynonym.cc	/^    Xapian::Query subqs[4];$/;"	m	struct:synonym1_data_type	file:
subqueries	api/queryinternal.h	/^    QueryVector subqueries;$/;"	m	class:Xapian::Internal::QueryBranch
subquery	api/queryinternal.h	/^    Query subquery;$/;"	m	class:Xapian::Internal::QueryScaleWeight
substring	languages/compiler/header.h	/^    struct node * substring;  \/* i.e. substring ... among ( ... ) *\/$/;"	m	struct:among	typeref:struct:among::node
substring	languages/compiler/header.h	/^    struct node * substring;  \/* pending 'substring' in current routine definition *\/$/;"	m	struct:analyser	typeref:struct:analyser::node
substring_i	languages/steminternal.h	/^    int substring_i;	\/* index to longest matching substring *\/$/;"	m	struct:among
subsym	queryparser/lemon.c	/^  struct symbol **subsym;  \/* Array of constituent symbols *\/$/;"	m	struct:symbol	typeref:struct:symbol::symbol	file:
subtotal	tests/harness/testsuite.cc	/^test_driver::result test_driver::subtotal;$/;"	m	class:test_driver	file:
subtotal	tests/harness/testsuite.h	/^	static result subtotal;$/;"	m	class:test_driver
subtree	matcher/synonympostlist.h	/^    PostList * subtree;$/;"	m	class:SynonymPostList
subtype	tests/harness/backendmanager_multi.h	/^    std::string subtype;$/;"	m	class:BackendManagerMulti
subtype	tests/harness/backendmanager_singlefile.h	/^    std::string subtype;$/;"	m	class:BackendManagerSingleFile
succeeded	tests/harness/testsuite.h	/^	    unsigned int succeeded = 0;$/;"	m	struct:test_driver::result
sum	queryparser/termgenerator_internal.cc	/^    double sum = 0;$/;"	m	class:Xapian::SnipPipe	file:
sum	tests/api_weight.cc	/^    Xapian::termcount & sum;$/;"	m	class:CheckStatsWeight	file:
sum_squares	tests/api_weight.cc	/^    Xapian::termcount & sum_squares;$/;"	m	class:CheckStatsWeight	file:
sw	examples/quest.cc	/^static const char * const sw[] = {$/;"	v	file:
swap	api/omenquireinternal.h	/^	void swap(MSetItem & o) {$/;"	f	class:Xapian::Internal::MSetItem
swap	backends/chert/chert_btreebase.cc	/^ChertTable_base::swap(ChertTable_base &other)$/;"	f	class:ChertTable_base
swap	backends/glass/glass_cursor.h	/^	void swap(Cursor & o) {$/;"	f	class:Glass::Cursor
swap	backends/glass/glass_freelist.h	/^    void swap(GlassFLCursor &o) {$/;"	f	class:GlassFLCursor
swap	expand/esetinternal.h	/^    void swap(ExpandTerm & o) {$/;"	f	class:Xapian::Internal::ExpandTerm
swap	include/xapian/eset.h	/^    void swap(ESet & o) { internal.swap(o.internal); }$/;"	f	class:Xapian::ESet
swap	include/xapian/intrusive_ptr.h	/^    void swap(intrusive_ptr & rhs)$/;"	f	class:Xapian::Internal::intrusive_ptr
swap	include/xapian/intrusive_ptr.h	/^    void swap(opt_intrusive_ptr & rhs)$/;"	f	class:Xapian::Internal::opt_intrusive_ptr
swap	include/xapian/mset.h	/^    void swap(MSet & o) { internal.swap(o.internal); }$/;"	f	class:Xapian::MSet
symbol	languages/compiler/header.h	/^typedef unsigned short symbol;$/;"	t
symbol	languages/steminternal.h	/^typedef unsigned char symbol;$/;"	t
symbol	queryparser/lemon.c	/^struct symbol {$/;"	s	file:
symbol_type	queryparser/lemon.c	/^enum symbol_type {$/;"	g	file:
symbols	queryparser/lemon.c	/^  struct symbol **symbols; \/* Sorted array of pointers to symbols *\/$/;"	m	struct:lemon	typeref:struct:lemon::symbol	file:
sync	backends/glass/glass_table.h	/^	bool sync() {$/;"	f	class:GlassTable
sync	backends/glass/glass_version.cc	/^GlassVersion::sync(const string & tmpfile,$/;"	f	class:GlassVersion
sync_and_skip_to	matcher/andnotpostlist.cc	/^AndNotPostList::sync_and_skip_to(Xapian::docid id,$/;"	f	class:AndNotPostList
sync_rhs	matcher/andmaybepostlist.cc	/^AndMaybePostList::sync_rhs(double w_min)$/;"	f	class:AndMaybePostList
synonym1_data	tests/api_opsynonym.cc	/^static const synonym1_data_type synonym1_data[] = {$/;"	v	file:
synonym1_data_type	tests/api_opsynonym.cc	/^struct synonym1_data_type {$/;"	s	file:
synonym_keys_begin	api/omdatabase.cc	/^Database::synonym_keys_begin(const std::string &prefix) const$/;"	f	class:Xapian::Database
synonym_keys_end	include/xapian/database.h	/^	Xapian::TermIterator XAPIAN_NOTHROW(synonym_keys_end(const std::string & = std::string()) const) {$/;"	f	class:Xapian::Database
synonym_table	backends/chert/chert_database.h	/^	mutable ChertSynonymTable synonym_table;$/;"	m	class:ChertDatabase
synonym_table	backends/glass/glass_database.h	/^	mutable GlassSynonymTable synonym_table;$/;"	m	class:GlassDatabase
synonyms_begin	api/omdatabase.cc	/^Database::synonyms_begin(const std::string &term) const$/;"	f	class:Xapian::Database
synonyms_end	include/xapian/database.h	/^	Xapian::TermIterator XAPIAN_NOTHROW(synonyms_end(const std::string &) const) {$/;"	f	class:Xapian::Database
syntax_tree	languages/compiler/header.h	/^    byte syntax_tree;$/;"	m	struct:options
sysconfdir	Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	docs/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	tests/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
system_word	languages/compiler/tokeniser.c	/^struct system_word {$/;"	s	file:
t_boolean	languages/compiler/header.h	/^    t_string = 0, t_boolean = 1, t_integer = 2, t_routine = 3, t_external = 4,$/;"	e	enum:name_types
t_external	languages/compiler/header.h	/^    t_string = 0, t_boolean = 1, t_integer = 2, t_routine = 3, t_external = 4,$/;"	e	enum:name_types
t_grouping	languages/compiler/header.h	/^    t_grouping = 5$/;"	e	enum:name_types
t_integer	languages/compiler/header.h	/^    t_string = 0, t_boolean = 1, t_integer = 2, t_routine = 3, t_external = 4,$/;"	e	enum:name_types
t_routine	languages/compiler/header.h	/^    t_string = 0, t_boolean = 1, t_integer = 2, t_routine = 3, t_external = 4,$/;"	e	enum:name_types
t_size	languages/compiler/header.h	/^    t_size = 6,$/;"	e	enum:name_types
t_string	languages/compiler/header.h	/^    t_string = 0, t_boolean = 1, t_integer = 2, t_routine = 3, t_external = 4,$/;"	e	enum:name_types
tab	languages/sbl-dispatch.h	/^static const unsigned char tab[] = {$/;"	v
table	backends/chert/chert_values.cc	/^    ChertPostListTable * table;$/;"	m	class:ValueUpdater	file:
table	backends/glass/glass_values.cc	/^    GlassPostListTable * table;$/;"	m	class:Glass::ValueUpdater	file:
table	matcher/collapser.h	/^    std::map<std::string, CollapseData> table;$/;"	m	class:Collapser
table_type	backends/glass/glass_defs.h	/^    enum table_type {$/;"	g	namespace:Glass
tablename	backends/chert/chert_table.h	/^	const char * tablename;$/;"	m	class:ChertTable
tablename	backends/glass/glass_table.h	/^	const char * tablename;$/;"	m	class:GlassTable
tablesize	queryparser/lemon.c	/^  int tablesize;           \/* Total table size of all tables in bytes *\/$/;"	m	struct:lemon	file:
tag	backends/chert/chert_compact.cc	/^    string key, tag;$/;"	m	class:ChertCompact::PostlistCursor	file:
tag	backends/chert/chert_values.cc	/^    string tag;$/;"	m	class:ValueUpdater	file:
tag	backends/glass/glass_compact.cc	/^    string key, tag;$/;"	m	class:GlassCompact::PostlistCursor	file:
tag	backends/glass/glass_values.cc	/^    string tag;$/;"	m	class:Glass::ValueUpdater	file:
tag_status	backends/chert/chert_cursor.h	/^	enum { UNREAD, UNCOMPRESSED, COMPRESSED } tag_status;$/;"	m	class:ChertCursor	typeref:enum:ChertCursor::__anon8
tag_status	backends/glass/glass_cursor.h	/^	enum { UNREAD, UNREAD_ON_LAST_CHUNK, UNCOMPRESSED, COMPRESSED } tag_status;$/;"	m	class:GlassCursor	typeref:enum:GlassCursor::__anon6
tags	bin/xapian-inspect.cc	/^static bool keys = true, tags = true;$/;"	v	file:
take_hint_ownership	matcher/queryoptimiser.h	/^    void take_hint_ownership() { hint_owned = true; }$/;"	f	class:QueryOptimiser
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).tar.gz$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz$/;"	m
target_alias	Makefile	/^target_alias = $/;"	m
target_alias	docs/Makefile	/^target_alias = $/;"	m
target_alias	tests/Makefile	/^target_alias = $/;"	m
tbl	queryparser/lemon.c	/^  struct s_x1node *tbl;  \/* The data stored here *\/$/;"	m	struct:s_x1	typeref:struct:s_x1::s_x1node	file:
tbl	queryparser/lemon.c	/^  struct s_x2node *tbl;  \/* The data stored here *\/$/;"	m	struct:s_x2	typeref:struct:s_x2::s_x2node	file:
tbl	queryparser/lemon.c	/^  struct s_x3node *tbl;  \/* The data stored here *\/$/;"	m	struct:s_x3	typeref:struct:s_x3::s_x3node	file:
tbl	queryparser/lemon.c	/^  struct s_x4node *tbl;  \/* The data stored here *\/$/;"	m	struct:s_x4	typeref:struct:s_x4::s_x4node	file:
term	api/leafpostlist.h	/^    std::string term;$/;"	m	class:LeafPostList
term	api/queryinternal.h	/^    std::string term;$/;"	m	class:Xapian::Internal::QueryTerm
term	examples/xapian-pos.cc	/^    string term;$/;"	m	class:Pos	file:
term	expand/esetinternal.h	/^    std::string term;$/;"	m	class:Xapian::Internal::ExpandTerm
term1	tests/api_weight.cc	/^    string term1;$/;"	m	class:CheckStatsWeight	file:
term2	tests/api_weight.cc	/^    mutable string term2;$/;"	m	class:CheckStatsWeight	file:
term_end	queryparser/termgenerator_internal.cc	/^    size_t term_end;$/;"	m	struct:Xapian::Sniplet	file:
term_exists	api/omdatabase.cc	/^Database::term_exists(const string & tname) const$/;"	f	class:Xapian::Database
term_exists	backends/chert/chert_database.cc	/^ChertDatabase::term_exists(const string & term) const$/;"	f	class:ChertDatabase
term_exists	backends/chert/chert_database.cc	/^ChertWritableDatabase::term_exists(const string & tname) const$/;"	f	class:ChertWritableDatabase
term_exists	backends/chert/chert_postlist.h	/^	bool term_exists(const string & term) const {$/;"	f	class:ChertPostListTable
term_exists	backends/glass/glass_database.cc	/^GlassDatabase::term_exists(const string & term) const$/;"	f	class:GlassDatabase
term_exists	backends/glass/glass_database.cc	/^GlassWritableDatabase::term_exists(const string & tname) const$/;"	f	class:GlassWritableDatabase
term_exists	backends/glass/glass_postlist.h	/^	bool term_exists(const string & term) const {$/;"	f	class:GlassPostListTable
term_exists	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::term_exists(const string & tname) const$/;"	f	class:InMemoryDatabase
term_exists	backends/remote/remote-database.cc	/^RemoteDatabase::term_exists(const string & tname) const$/;"	f	class:RemoteDatabase
term_freq	backends/inmemory/inmemory_database.h	/^	Xapian::termcount term_freq;$/;"	m	class:InMemoryTerm
term_positions	api/documentterm.h	/^    typedef vector<Xapian::termpos> term_positions;$/;"	t	class:OmDocumentTerm
term_positions_modified	backends/document.h	/^	bool term_positions_modified() const {$/;"	f	class:Xapian::Document::Internal
termcount	include/xapian/types.h	/^typedef unsigned XAPIAN_TERMCOUNT_BASE_TYPE termcount;$/;"	t	namespace:Xapian
termcount_diff	include/xapian/types.h	/^typedef XAPIAN_TERMCOUNT_BASE_TYPE termcount_diff;$/;"	t	namespace:Xapian
termfreq	backends/chert/chert_alltermslist.h	/^    mutable Xapian::doccount termfreq;$/;"	m	class:ChertAllTermsList
termfreq	backends/chert/chert_spellingwordslist.h	/^    mutable Xapian::termcount termfreq;$/;"	m	class:ChertSpellingWordsList
termfreq	backends/glass/glass_alltermslist.h	/^    mutable Xapian::doccount termfreq;$/;"	m	class:GlassAllTermsList
termfreq	backends/glass/glass_spellingwordslist.h	/^    mutable Xapian::termcount termfreq;$/;"	m	class:GlassSpellingWordsList
termfreq	backends/inmemory/inmemory_database.h	/^	Xapian::doccount termfreq;$/;"	m	class:InMemoryPostList
termfreq	backends/remote/net_postlist.h	/^    Xapian::doccount termfreq;$/;"	m	class:NetworkPostList
termfreq	backends/remote/net_termlist.h	/^	Xapian::doccount termfreq;$/;"	m	class:NetworkTermListItem
termfreq	expand/expandweight.h	/^    Xapian::doccount termfreq;$/;"	m	class:Xapian::Internal::ExpandStats
termfreq	include/xapian/postingsource.h	/^    Xapian::doccount termfreq;$/;"	m	class:Xapian::FixedWeightPostingSource
termfreq	weight/weightinternal.h	/^    Xapian::doccount termfreq;$/;"	m	struct:TermFreqs
termfreq_	include/xapian/weight.h	/^    Xapian::doccount termfreq_;$/;"	m	class:Xapian::Weight
termfreqs	weight/weightinternal.h	/^    std::map<std::string, TermFreqs> termfreqs;$/;"	m	class:Xapian::Weight::Internal
termlist_begin	api/omdatabase.cc	/^Database::termlist_begin(Xapian::docid did) const$/;"	f	class:Xapian::Database
termlist_begin	api/omdocument.cc	/^Document::termlist_begin() const$/;"	f	class:Xapian::Document
termlist_count	api/omdocument.cc	/^Document::termlist_count() const {$/;"	f	class:Xapian::Document
termlist_count	api/omdocument.cc	/^Xapian::Document::Internal::termlist_count() const$/;"	f	class:Xapian::Document::Internal
termlist_deltas	backends/chert/chert_spelling.h	/^    std::map<fragment, std::set<std::string> > termlist_deltas;$/;"	m	class:ChertSpellingTable
termlist_deltas	backends/glass/glass_spelling.h	/^    std::map<Glass::fragment, std::set<std::string>> termlist_deltas;$/;"	m	class:GlassSpellingTable
termlist_end	include/xapian/database.h	/^	TermIterator XAPIAN_NOTHROW(termlist_end(Xapian::docid) const) {$/;"	f	class:Xapian::Database
termlist_end	include/xapian/document.h	/^	TermIterator XAPIAN_NOTHROW(termlist_end() const) {$/;"	f	class:Xapian::Document
termlist_size	backends/chert/chert_termlist.h	/^    Xapian::termcount termlist_size;$/;"	m	class:ChertTermList
termlist_size	backends/document.h	/^	mutable Xapian::termcount termlist_size;$/;"	m	class:Xapian::Document::Internal
termlist_size	backends/glass/glass_termlist.h	/^    Xapian::termcount termlist_size;$/;"	m	class:GlassTermList
termlist_table	backends/chert/chert_database.h	/^	ChertTermListTable termlist_table;$/;"	m	class:ChertDatabase
termlist_table	backends/chert/chert_values.h	/^    ChertTermListTable * termlist_table;$/;"	m	class:ChertValueManager
termlist_table	backends/glass/glass_database.h	/^	GlassTermListTable termlist_table;$/;"	m	class:GlassDatabase
termlist_table	backends/glass/glass_values.h	/^    GlassTermListTable * termlist_table;$/;"	m	class:GlassValueManager
termlists	backends/inmemory/inmemory_database.h	/^    vector<InMemoryDoc> termlists;$/;"	m	class:InMemoryDatabase
termlists	backends/multi/multi_alltermslist.h	/^    std::vector<TermList *> termlists;$/;"	m	class:MultiAllTermsList
termpos	include/xapian/types.h	/^typedef unsigned XAPIAN_TERMPOS_BASE_TYPE termpos;$/;"	t	namespace:Xapian
termpos_diff	include/xapian/types.h	/^typedef XAPIAN_TERMPOS_BASE_TYPE termpos_diff; \/* FIXME: can overflow. *\/$/;"	t	namespace:Xapian
terms	backends/document.h	/^	mutable document_terms terms;$/;"	m	class:Xapian::Document::Internal
terms	backends/inmemory/inmemory_database.h	/^	Xapian::termcount terms;$/;"	m	class:InMemoryTermList
terms	backends/inmemory/inmemory_database.h	/^	vector<InMemoryTermEntry> terms;$/;"	m	class:InMemoryDoc
terms	matcher/exactphrasepostlist.cc	/^    vector<PostList *> & terms;$/;"	m	class:TermCompare	file:
terms	matcher/exactphrasepostlist.h	/^    std::vector<PostList*> terms;$/;"	m	class:ExactPhrasePostList
terms	matcher/nearpostlist.h	/^    std::vector<PostList*> terms;$/;"	m	class:NearPostList
terms	matcher/phrasepostlist.h	/^    std::vector<PostList*> terms;$/;"	m	class:PhrasePostList
terms	queryparser/queryparser_internal.cc	/^    vector<Term *> terms;$/;"	m	class:TermGroup	file:
terms	queryparser/queryparser_internal.cc	/^    vector<Term *> terms;$/;"	m	class:Terms	file:
terms	tests/api_query.cc	/^    const char * terms[4];$/;"	m	struct:positional_testcase	file:
terms	tests/api_query.cc	/^    const char * terms[4];$/;"	m	struct:wildcard_testcase	file:
terms_here	backends/document.h	/^	mutable bool terms_here;$/;"	m	class:Xapian::Document::Internal
terms_modified	backends/document.h	/^	bool terms_modified() const {$/;"	f	class:Xapian::Document::Internal
termstats_to_string	tests/dbcheck.cc	/^termstats_to_string(const Xapian::Database & db, const string & term)$/;"	f
termweight	include/xapian/weight.h	/^    mutable double termweight;$/;"	m	class:Xapian::BM25PlusWeight
termweight	include/xapian/weight.h	/^    mutable double termweight;$/;"	m	class:Xapian::BM25Weight
termweight	include/xapian/weight.h	/^    mutable double termweight;$/;"	m	class:Xapian::TradWeight
test	backends/flint_lock.cc	/^FlintLock::test() const$/;"	f	class:FlintLock
test	tests/api_qpbackend.cc	/^struct test {$/;"	s	file:
test	tests/api_queryparser.cc	/^struct test {$/;"	s	file:
test	tests/api_termgen.cc	/^struct test {$/;"	s	file:
test	tests/internaltest.cc	/^	Xapian::Internal::intrusive_ptr<const test_refcnt> test() {$/;"	f	class:test_refcnt
test_addoverflows1	tests/unittest.cc	/^static bool test_addoverflows1()$/;"	f	file:
test_and_queries	tests/api_queryparser.cc	/^static const test test_and_queries[] = {$/;"	v	file:
test_autoptr	tests/internaltest.cc	/^    test_autoptr(bool &deleted_) : deleted(deleted_) {$/;"	f	class:test_autoptr
test_autoptr	tests/internaltest.cc	/^class test_autoptr {$/;"	c	file:
test_autoptr1	tests/internaltest.cc	/^static bool test_autoptr1()$/;"	f	file:
test_chartype1	tests/internaltest.cc	/^static bool test_chartype1()$/;"	f	file:
test_closefrom1	tests/unittest.cc	/^static bool test_closefrom1()$/;"	f	file:
test_desc	tests/harness/testsuite.h	/^struct test_desc {$/;"	s
test_doc	matcher/exactphrasepostlist.cc	/^ExactPhrasePostList::test_doc()$/;"	f	class:ExactPhrasePostList
test_doc	matcher/nearpostlist.cc	/^NearPostList::test_doc()$/;"	f	class:NearPostList
test_doc	matcher/phrasepostlist.cc	/^PhrasePostList::test_doc()$/;"	f	class:PhrasePostList
test_driver	tests/harness/testsuite.cc	/^test_driver::test_driver(const test_desc *tests_)$/;"	f	class:test_driver
test_driver	tests/harness/testsuite.h	/^class test_driver {$/;"	c
test_emptyterm1_helper	tests/api_anydb.cc	/^static void test_emptyterm1_helper(Xapian::Database & db)$/;"	f	file:
test_emptyterm2_helper	tests/api_wrdb.cc	/^static void test_emptyterm2_helper(Xapian::WritableDatabase & db)$/;"	f	file:
test_exception1	tests/internaltest.cc	/^static bool test_exception1()$/;"	f	file:
test_fieldproc1_queries	tests/api_queryparser.cc	/^static const test test_fieldproc1_queries[] = {$/;"	v	file:
test_fieldproc2_queries	tests/api_queryparser.cc	/^static const test test_fieldproc2_queries[] = {$/;"	v	file:
test_func	tests/harness/testsuite.h	/^typedef bool (*test_func)();$/;"	t
test_log2	tests/unittest.cc	/^static bool test_log2()$/;"	f	file:
test_mispelled_partial_queries	tests/api_queryparser.cc	/^static const test test_mispelled_partial_queries[] = {$/;"	v	file:
test_mispelled_queries	tests/api_queryparser.cc	/^static const test test_mispelled_queries[] = {$/;"	v	file:
test_mispelled_wildcard_queries	tests/api_queryparser.cc	/^static const test test_mispelled_wildcard_queries[] = {$/;"	v	file:
test_movesupport1	tests/unittest.cc	/^static bool test_movesupport1()$/;"	f	file:
test_mset_order_equal	tests/harness/testutils.cc	/^test_mset_order_equal(const Xapian::MSet &mset1, const Xapian::MSet &mset2)$/;"	f
test_muloverflows1	tests/unittest.cc	/^static bool test_muloverflows1()$/;"	f	file:
test_multi_synonym_queries	tests/api_queryparser.cc	/^static const test test_multi_synonym_queries[] = {$/;"	v	file:
test_names	tests/harness/testsuite.cc	/^vector<string> test_driver::test_names;$/;"	m	class:test_driver	file:
test_names	tests/harness/testsuite.h	/^	static std::vector<std::string> test_names;$/;"	m	class:test_driver
test_near_queries	tests/api_queryparser.cc	/^static const test test_near_queries[] = {$/;"	v	file:
test_or_queries	tests/api_queryparser.cc	/^static const test test_or_queries[] = {$/;"	v	file:
test_pack_uint_preserving_sort1	tests/internaltest.cc	/^static bool test_pack_uint_preserving_sort1()$/;"	f	file:
test_pack_uint_preserving_sort2	tests/internaltest.cc	/^static bool test_pack_uint_preserving_sort2()$/;"	f	file:
test_phrase_queries	tests/api_queryparser.cc	/^static const test test_phrase_queries[] = {$/;"	v	file:
test_pure_not_queries	tests/api_queryparser.cc	/^static const test test_pure_not_queries[] = {$/;"	v	file:
test_qp_flag_wildcard3_helper	tests/api_queryparser.cc	/^test_qp_flag_wildcard3_helper(const Xapian::Database &db,$/;"	f	file:
test_refcnt	tests/internaltest.cc	/^	test_refcnt(bool &deleted_) : deleted(deleted_) {$/;"	f	class:test_refcnt
test_refcnt	tests/internaltest.cc	/^class test_refcnt : public Xapian::Internal::intrusive_base {$/;"	c	file:
test_refcnt1	tests/internaltest.cc	/^static bool test_refcnt1()$/;"	f	file:
test_refcnt2	tests/internaltest.cc	/^static bool test_refcnt2()$/;"	f	file:
test_result	tests/harness/testsuite.h	/^	enum test_result {$/;"	g	class:test_driver
test_scalability	tests/harness/scalability.cc	/^test_scalability(double (*func)(unsigned), unsigned n, double threshold)$/;"	f
test_serialiseerror1	tests/unittest.cc	/^static bool test_serialiseerror1()$/;"	f	file:
test_serialiselength1	tests/unittest.cc	/^static bool test_serialiselength1()$/;"	f	file:
test_serialiselength2	tests/unittest.cc	/^static bool test_serialiselength2()$/;"	f	file:
test_simple	tests/api_termgen.cc	/^static const test test_simple[] = {$/;"	v	file:
test_sortableserialise1	tests/unittest.cc	/^static bool test_sortableserialise1()$/;"	f	file:
test_sortableserialise_numbers	tests/unittest.cc	/^static const double test_sortableserialise_numbers[] = {$/;"	v	file:
test_stem_all_queries	tests/api_queryparser.cc	/^static const test test_stem_all_queries[] = {$/;"	v	file:
test_stem_all_z_queries	tests/api_queryparser.cc	/^static const test test_stem_all_z_queries[] = {$/;"	v	file:
test_stemdict	tests/stemtest.cc	/^test_stemdict()$/;"	f	file:
test_stemjunk	tests/stemtest.cc	/^test_stemjunk()$/;"	f	file:
test_stemrandom	tests/stemtest.cc	/^test_stemrandom()$/;"	f	file:
test_stop_queries	tests/api_queryparser.cc	/^static const test test_stop_queries[] = {$/;"	v	file:
test_stopword_group_and_queries	tests/api_queryparser.cc	/^static const test test_stopword_group_and_queries[] = {$/;"	v	file:
test_stopword_group_or_queries	tests/api_queryparser.cc	/^static const test test_stopword_group_or_queries[] = {$/;"	v	file:
test_strbool1	tests/unittest.cc	/^static bool test_strbool1()$/;"	f	file:
test_stringcomp1	tests/internaltest.cc	/^static bool test_stringcomp1()$/;"	f	file:
test_synonym_op_queries	tests/api_queryparser.cc	/^static const test test_synonym_op_queries[] = {$/;"	v	file:
test_synonym_queries	tests/api_queryparser.cc	/^static const test test_synonym_queries[] = {$/;"	v	file:
test_temporarydtor1	tests/internaltest.cc	/^static bool test_temporarydtor1()$/;"	f	file:
test_termlist3_helper	tests/api_anydb.cc	/^test_termlist3_helper()$/;"	f	file:
test_tostring1	tests/unittest.cc	/^static bool test_tostring1()$/;"	f	file:
test_uuid1	tests/unittest.cc	/^static bool test_uuid1()$/;"	f	file:
test_value_customrange1_queries	tests/api_queryparser.cc	/^static const test test_value_customrange1_queries[] = {$/;"	v	file:
test_value_daterange1_queries	tests/api_queryparser.cc	/^static const test test_value_daterange1_queries[] = {$/;"	v	file:
test_value_daterange2_queries	tests/api_queryparser.cc	/^static const test test_value_daterange2_queries[] = {$/;"	v	file:
test_value_range1_queries	tests/api_queryparser.cc	/^static const test test_value_range1_queries[] = {$/;"	v	file:
test_value_range2_queries	tests/api_queryparser.cc	/^static const test test_value_range2_queries[] = {$/;"	v	file:
test_value_range4_queries	tests/api_queryparser.cc	/^static const test test_value_range4_queries[] = {$/;"	v	file:
test_value_stringrange1_queries	tests/api_queryparser.cc	/^static const test test_value_stringrange1_queries[] = {$/;"	v	file:
testcase	tests/api_unicode.cc	/^struct testcase {$/;"	s	file:
testcase2	tests/api_unicode.cc	/^struct testcase2 {$/;"	s	file:
testcase_begin	tests/perftest/perftest.cc	/^PerfTestLogger::testcase_begin(const string & testcase)$/;"	f	class:PerfTestLogger
testcase_end	tests/perftest/perftest.cc	/^PerfTestLogger::testcase_end()$/;"	f	class:PerfTestLogger
testcase_started	tests/perftest/perftest.h	/^    bool testcase_started;$/;"	m	class:PerfTestLogger
testcases	tests/api_unicode.cc	/^static const testcase testcases[] = {$/;"	v	file:
testcases2	tests/api_unicode.cc	/^static const testcase2 testcases2[] = {$/;"	v	file:
testharness_sources	tests/Makefile	/^testharness_sources = ..\/common\/errno_to_string.cc \\$/;"	m
testharness_sources	tests/harness/Makefile.mk	/^testharness_sources =\\$/;"	m
tests	tests/harness/testsuite.h	/^	const test_desc *tests;$/;"	m	class:test_driver
tests	tests/internaltest.cc	/^static const test_desc tests[] = {$/;"	v	file:
tests	tests/stemtest.cc	/^static const test_desc tests[] = {$/;"	v	file:
tests	tests/unittest.cc	/^static const test_desc tests[] = {$/;"	v	file:
testset	include/xapian/valuesetmatchdecider.h	/^    std::set<std::string> testset;$/;"	m	class:Xapian::ValueSetMatchDecider
text	tests/api_termgen.cc	/^    const char *text;$/;"	m	struct:test	file:
tf	backends/chert/chert_compact.cc	/^    Xapian::termcount tf, cf;$/;"	m	class:ChertCompact::PostlistCursor	file:
tf	backends/glass/glass_compact.cc	/^    Xapian::termcount tf, cf;$/;"	m	class:GlassCompact::PostlistCursor	file:
tf_delta	backends/glass/glass_inverter.h	/^	Xapian::termcount_diff tf_delta;$/;"	m	class:Inverter::PostingChanges
this_db	backends/chert/chert_postlist.h	/^	Xapian::Internal::intrusive_ptr<const ChertDatabase> this_db;$/;"	m	class:ChertPostList
this_db	backends/glass/glass_postlist.h	/^	Xapian::Internal::intrusive_ptr<const GlassDatabase> this_db;$/;"	m	class:GlassPostList
this_db	backends/multi/multi_postlist.h	/^	Xapian::Database this_db;$/;"	m	class:MultiPostList
this_db	backends/remote/net_termlist.h	/^	Xapian::Internal::intrusive_ptr<const RemoteDatabase> this_db;$/;"	m	class:NetworkTermList
this_ptr	common/debuglog.h	/^    const void * this_ptr;$/;"	m	class:DebugLogFunc
this_ptr	common/debuglog.h	/^    const void * this_ptr;$/;"	m	class:DebugLogFuncVoid
this_type	include/xapian/intrusive_ptr.h	/^    typedef intrusive_ptr this_type;$/;"	t	class:Xapian::Internal::intrusive_ptr
this_type	include/xapian/intrusive_ptr.h	/^    typedef opt_intrusive_ptr this_type;$/;"	t	class:Xapian::Internal::opt_intrusive_ptr
thread_param	net/tcpserver.cc	/^    thread_param(TcpServer *s, int c) : server(s), connected_socket(c) {}$/;"	f	struct:thread_param
thread_param	net/tcpserver.cc	/^struct thread_param$/;"	s	file:
throw_block_error	common/io_utils.cc	/^throw_block_error(const char * s, off_t b, int e)$/;"	f	file:
throw_cannot_test_lock	backends/flint_lock.cc	/^throw_cannot_test_lock()$/;"	f	file:
throw_connection_closed_unexpectedly	api/replication.cc	/^throw_connection_closed_unexpectedly()$/;"	f	file:
throw_connection_closed_unexpectedly	backends/chert/chert_databasereplicator.cc	/^throw_connection_closed_unexpectedly()$/;"	f	file:
throw_connection_closed_unexpectedly	backends/glass/glass_databasereplicator.cc	/^throw_connection_closed_unexpectedly()$/;"	f	file:
throw_connection_closed_unexpectedly	backends/remote/remote-database.cc	/^throw_connection_closed_unexpectedly()$/;"	f	file:
throw_database_closed	backends/chert/chert_table.cc	/^ChertTable::throw_database_closed()$/;"	f	class:ChertTable
throw_database_closed	backends/glass/glass_table.cc	/^GlassTable::throw_database_closed()$/;"	f	class:GlassTable
throw_database_closed	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::throw_database_closed()$/;"	f	class:InMemoryDatabase
throw_database_closed	net/remoteconnection.cc	/^throw_database_closed()$/;"	f	file:
throw_databaselockerror	backends/flint_lock.cc	/^FlintLock::throw_databaselockerror(FlintLock::reason why,$/;"	f	class:FlintLock
throw_handshake_failed	backends/remote/remote-database.cc	/^throw_handshake_failed(const string & context)$/;"	f	file:
throw_network_error	net/length.cc	/^throw_network_error(const char * msg)$/;"	f	file:
throw_network_error_insane_message_length	net/remoteconnection.cc	/^throw_network_error_insane_message_length()$/;"	f	file:
throw_read_only	net/remoteserver.cc	/^throw_read_only()$/;"	f	file:
throw_termlist_table_close_exception	backends/chert/chert_database.cc	/^ChertDatabase::throw_termlist_table_close_exception() const$/;"	f	class:ChertDatabase
throw_termlist_table_close_exception	backends/glass/glass_database.cc	/^GlassDatabase::throw_termlist_table_close_exception() const$/;"	f	class:GlassDatabase
time_limit	api/omenquireinternal.h	/^	double time_limit;$/;"	m	class:Xapian::Enquire::Internal
time_limit	matcher/multimatch.h	/^	double time_limit;$/;"	m	class:MultiMatch
time_query_parse	tests/api_queryparser.cc	/^time_query_parse(const Xapian::Database & db, const string & q,$/;"	f	file:
timed_out	matcher/multimatch.cc	/^    bool timed_out() const { return expired; }$/;"	f	class:TimeOut
timed_out	matcher/multimatch.cc	/^    bool timed_out() const { return false; }$/;"	f	class:TimeOut
timeout	backends/remote/remote-database.h	/^    double timeout;$/;"	m	class:RemoteDatabase
timerid	matcher/multimatch.cc	/^    timer_t timerid;$/;"	m	class:TimeOut	file:
tkclass	queryparser/lemon.c	/^  struct symbol *tkclass;    \/* Token class symbol *\/$/;"	m	struct:pstate	typeref:struct:pstate::symbol	file:
tl	backends/multi/multi_termlist.h	/^	TermList *tl;$/;"	m	class:MultiTermList
tl1	tests/api_closedb.cc	/^    Xapian::TermIterator tl1;$/;"	m	struct:closedb1_iterators	file:
tlend	tests/api_closedb.cc	/^    Xapian::TermIterator tlend;$/;"	m	struct:closedb1_iterators	file:
tmap	api/omenquire.cc	/^    const tmap_t &tmap;$/;"	m	class:Xapian::ByQueryIndexCmp	file:
tmap	backends/inmemory/inmemory_alltermslist.h	/^	const std::map<kdmtStr, InMemoryTerm> *tmap;$/;"	m	class:InMemoryAllTermsList
tmap_t	api/omenquire.cc	/^    typedef map<string, unsigned int> tmap_t;$/;"	t	class:Xapian::ByQueryIndexCmp	file:
tname	backends/chert/chert_postlist.cc	/^	string tname;$/;"	m	class:Chert::PostlistChunkWriter	file:
tname	backends/glass/glass_postlist.cc	/^	string tname;$/;"	m	class:Glass::PostlistChunkWriter	file:
tname	backends/inmemory/inmemory_database.h	/^	kdmtStr tname;$/;"	m	class:InMemoryTermEntry
tname	backends/remote/net_termlist.h	/^	string tname;$/;"	m	class:NetworkTermListItem
to_end	backends/chert/chert_cursor.h	/^	void to_end() { is_after_end = true; }$/;"	f	class:ChertCursor
to_end	backends/glass/glass_cursor.h	/^	void to_end() { is_after_end = true; }$/;"	f	class:GlassCursor
to_string	backends/uuids.cc	/^Uuid::to_string() const$/;"	f	class:Uuid
to_timespec	common/realtime.h	/^inline void to_timespec(double t, struct timespec *ts) {$/;"	f	namespace:RealTime
to_timeval	common/realtime.h	/^inline void to_timeval(double t, struct timeval *tv) {$/;"	f	namespace:RealTime
to_timeval	common/realtime.h	108;"	d
to_timeval_	common/realtime.h	/^inline void to_timeval_(double t, long & tv_sec, long & tv_usec) {$/;"	f	namespace:RealTime
to_unsigned_int	examples/xapian-pos.cc	/^bool to_unsigned_int(const char* s, T& result)$/;"	f
to_utf8	include/xapian/unicode.h	/^inline unsigned to_utf8(unsigned ch, char *buf) {$/;"	f	namespace:Xapian::Unicode
toggle_fragment	backends/chert/chert_spelling.cc	/^ChertSpellingTable::toggle_fragment(fragment frag, const string & word)$/;"	f	class:ChertSpellingTable
toggle_fragment	backends/glass/glass_spelling.cc	/^GlassSpellingTable::toggle_fragment(fragment frag, const string & word)$/;"	f	class:GlassSpellingTable
toggle_word	backends/chert/chert_spelling.cc	/^ChertSpellingTable::toggle_word(const string & word)$/;"	f	class:ChertSpellingTable
toggle_word	backends/glass/glass_spelling.cc	/^GlassSpellingTable::toggle_word(const string & word)$/;"	f	class:GlassSpellingTable
token	languages/compiler/header.h	/^    int token;$/;"	m	struct:tokeniser
token_codes	languages/compiler/header.h	/^enum token_codes {$/;"	g
token_disabled	languages/compiler/header.h	/^    char token_disabled[NUM_TOKEN_CODES];$/;"	m	struct:tokeniser
token_held	languages/compiler/header.h	/^    byte token_held;$/;"	m	struct:tokeniser
tokendest	queryparser/lemon.c	/^  char *tokendest;         \/* Code to execute to destroy token data *\/$/;"	m	struct:lemon	file:
tokeniser	languages/compiler/header.h	/^    struct tokeniser * tokeniser;$/;"	m	struct:analyser	typeref:struct:analyser::tokeniser
tokeniser	languages/compiler/header.h	/^struct tokeniser {$/;"	s
tokenlineno	queryparser/lemon.c	/^  int tokenlineno;      \/* Linenumber at which current token starts *\/$/;"	m	struct:pstate	file:
tokenprefix	queryparser/lemon.c	/^  char *tokenprefix;       \/* A prefix added to token names in the .h file *\/$/;"	m	struct:lemon	file:
tokenstart	queryparser/lemon.c	/^  char *tokenstart;     \/* Text of current token *\/$/;"	m	struct:pstate	file:
tokentype	queryparser/lemon.c	/^  char *tokentype;         \/* Type of terminal symbols in the parser stack *\/$/;"	m	struct:lemon	file:
tolower	include/xapian/unicode.h	/^inline unsigned tolower(unsigned ch) {$/;"	f	namespace:Xapian::Unicode
tolower	include/xapian/unicode.h	/^tolower(const std::string &term)$/;"	f	namespace:Xapian::Unicode
top_build_prefix	Makefile	/^top_build_prefix = $/;"	m
top_build_prefix	docs/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	tests/Makefile	/^top_build_prefix = ..\/$/;"	m
top_builddir	Makefile	/^top_builddir = .$/;"	m
top_builddir	docs/Makefile	/^top_builddir = ..$/;"	m
top_builddir	tests/Makefile	/^top_builddir = ..$/;"	m
top_distdir	Makefile	/^top_distdir = $(distdir)$/;"	m
top_srcdir	Makefile	/^top_srcdir = .$/;"	m
top_srcdir	docs/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	tests/Makefile	/^top_srcdir = ..$/;"	m
top_values_begin	api/matchspy.cc	/^ValueCountMatchSpy::top_values_begin(size_t maxvalues) const$/;"	f	class:ValueCountMatchSpy
top_values_end	include/xapian/matchspy.h	/^    TermIterator XAPIAN_NOTHROW(top_values_end(size_t) const) {$/;"	f	class:Xapian::ValueCountMatchSpy
tostring	common/str.cc	/^tostring(T value)$/;"	f	file:
tostring_unsigned	common/str.cc	/^tostring_unsigned(T value)$/;"	f	file:
total	include/xapian/matchspy.h	/^	Xapian::doccount total;$/;"	m	struct:Xapian::ValueCountMatchSpy::Internal
total	tests/harness/testsuite.cc	/^test_driver::result test_driver::total;$/;"	m	class:test_driver	file:
total	tests/harness/testsuite.h	/^	static result total;$/;"	m	class:test_driver
total_doclen	backends/chert/chert_dbstats.h	/^    Xapian::totallength total_doclen;$/;"	m	class:ChertDatabaseStats
total_doclen	backends/glass/glass_version.h	/^    Xapian::totallength total_doclen;$/;"	m	class:GlassVersion
total_length	backends/remote/remote-database.h	/^    mutable Xapian::totallength total_length;$/;"	m	class:RemoteDatabase
total_length	weight/weightinternal.h	/^    Xapian::totallength total_length;$/;"	m	class:Xapian::Weight::Internal
total_subqs	matcher/queryoptimiser.h	/^    Xapian::termcount total_subqs;$/;"	m	class:QueryOptimiser
total_term_count	weight/weightinternal.h	/^    Xapian::termcount total_term_count;$/;"	m	class:Xapian::Weight::Internal
totallength	include/xapian/types.h	/^typedef XAPIAN_TOTALLENGTH_TYPE totallength;$/;"	t	namespace:Xapian
totdocs	backends/inmemory/inmemory_database.h	/^    Xapian::doccount totdocs;$/;"	m	class:InMemoryDatabase
totlen	backends/inmemory/inmemory_database.h	/^    Xapian::totallength totlen;$/;"	m	class:InMemoryDatabase
touch	tests/harness/unixcmds.cc	/^void touch(const string &filename) {$/;"	f
toupper	include/xapian/unicode.h	/^inline unsigned toupper(unsigned ch) {$/;"	f	namespace:Xapian::Unicode
toupper	include/xapian/unicode.h	/^toupper(const std::string &term)$/;"	f	namespace:Xapian::Unicode
tout	tests/harness/testsuite.cc	/^std::ostringstream tout;$/;"	v
tplt_linedir	queryparser/lemon.c	/^PRIVATE void tplt_linedir(FILE *out, int lineno, char *filename)$/;"	f
tplt_open	queryparser/lemon.c	/^PRIVATE FILE *tplt_open(struct lemon *lemp)$/;"	f
tplt_print	queryparser/lemon.c	/^PRIVATE void tplt_print(FILE *out, struct lemon *lemp, char *str, int *lineno)$/;"	f
tplt_xfer	queryparser/lemon.c	/^PRIVATE void tplt_xfer(char *name, FILE *in, FILE *out, int *lineno)$/;"	f
tr_A	languages/lovins.cc	/^static int tr_A(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_AA	languages/lovins.cc	/^static int tr_AA(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_B	languages/lovins.cc	/^static int tr_B(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_BB	languages/lovins.cc	/^static int tr_BB(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_C	languages/lovins.cc	/^static int tr_C(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_CC	languages/lovins.cc	/^static int tr_CC(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_D	languages/lovins.cc	/^static int tr_D(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_E	languages/lovins.cc	/^static int tr_E(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_F	languages/lovins.cc	/^static int tr_F(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_G	languages/lovins.cc	/^static int tr_G(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_H	languages/lovins.cc	/^static int tr_H(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_I	languages/lovins.cc	/^static int tr_I(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_J	languages/lovins.cc	/^static int tr_J(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_K	languages/lovins.cc	/^static int tr_K(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_KER	languages/indonesian.cc	/^static int tr_KER(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_L	languages/lovins.cc	/^static int tr_L(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_LONG	languages/finnish.cc	/^static int tr_LONG(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_M	languages/lovins.cc	/^static int tr_M(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_N	languages/lovins.cc	/^static int tr_N(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_O	languages/lovins.cc	/^static int tr_O(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_P	languages/lovins.cc	/^static int tr_P(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_Q	languages/lovins.cc	/^static int tr_Q(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_R	languages/lovins.cc	/^static int tr_R(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_S	languages/lovins.cc	/^static int tr_S(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_SUFFIX_AN_OK	languages/indonesian.cc	/^static int tr_SUFFIX_AN_OK(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_SUFFIX_I_OK	languages/indonesian.cc	/^static int tr_SUFFIX_I_OK(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_SUFFIX_KAN_OK	languages/indonesian.cc	/^static int tr_SUFFIX_KAN_OK(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_T	languages/lovins.cc	/^static int tr_T(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_U	languages/lovins.cc	/^static int tr_U(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_V	languages/lovins.cc	/^static int tr_V(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_VI	languages/finnish.cc	/^static int tr_VI(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_VOWEL	languages/indonesian.cc	/^static int tr_VOWEL(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_W	languages/lovins.cc	/^static int tr_W(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_X	languages/lovins.cc	/^static int tr_X(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_Y	languages/lovins.cc	/^static int tr_Y(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_Z	languages/lovins.cc	/^static int tr_Z(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
transaction_active	backends/database.h	/^	bool transaction_active() const { return int(transaction_state) > 0; }$/;"	f	class:Xapian::Database::Internal
transaction_state	backends/database.h	/^	} transaction_state;$/;"	m	class:Xapian::Database::Internal	typeref:enum:Xapian::Database::Internal::__anon7
transform	Makefile	/^transform = $(program_transform_name)$/;"	m
transform	docs/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	tests/Makefile	/^transform = $(program_transform_name)$/;"	m
translate_code	queryparser/lemon.c	/^PRIVATE int translate_code(struct lemon *lemp, struct rule *rp){$/;"	f
true	languages/compiler/header.h	6;"	d
truncated_copy	tests/api_replicate.cc	/^truncated_copy(const string & srcpath, const string & destpath, off_t tocopy)$/;"	f	file:
type	include/xapian/error.h	/^    const char * type;$/;"	m	class:Xapian::Error
type	languages/compiler/header.h	/^    int type;                   \/* t_string etc *\/$/;"	m	struct:name
type	languages/compiler/header.h	/^    int type;$/;"	m	struct:node
type	queryparser/lemon.c	/^  enum e_action type;$/;"	m	struct:action	typeref:enum:action::e_action	file:
type	queryparser/lemon.c	/^  enum option_type type;$/;"	m	struct:s_options	typeref:enum:s_options::option_type	file:
type	queryparser/lemon.c	/^  enum symbol_type type;   \/* Symbols are all either TERMINALS or NTs *\/$/;"	m	struct:symbol	typeref:enum:symbol::symbol_type	file:
type	queryparser/queryparser_internal.h	/^    filter_type type;$/;"	m	struct:FieldInfo
type_smoothing	include/xapian/weight.h	/^    } type_smoothing;$/;"	t	class:Xapian::Weight	typeref:enum:Xapian::Weight::__anon15
typedef-members	docs/apidoc/html/namespaceXapian.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"><\/a>$/;"	a
typedef-members	docs/apidoc/html/types_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"><\/a>$/;"	a
uint2	common/internaltypes.h	/^typedef uint16_t uint2;$/;"	t
uint4	common/internaltypes.h	/^typedef uint32_t uint4;$/;"	t
uint8	common/internaltypes.h	/^typedef uint64_t uint8;$/;"	t
unaligned_read2	common/wordaccess.h	/^unaligned_read2(const unsigned char *ptr)$/;"	f
unaligned_read4	common/wordaccess.h	/^unaligned_read4(const unsigned char *ptr)$/;"	f
unaligned_write2	common/wordaccess.h	/^unaligned_write2(unsigned char *ptr, T value)$/;"	f
unaligned_write4	common/wordaccess.h	/^unaligned_write4(unsigned char *ptr, T value)$/;"	f
uncaught_exception	common/debuglog.h	/^    bool uncaught_exception;$/;"	m	class:DebugLogFunc
uncaught_exception	common/debuglog.h	/^    bool uncaught_exception;$/;"	m	class:DebugLogFuncVoid
uncollapsed_estimated	api/omenquireinternal.h	/^	Xapian::doccount uncollapsed_estimated;$/;"	m	class:Xapian::MSet::Internal
uncollapsed_lower_bound	api/omenquireinternal.h	/^	Xapian::doccount uncollapsed_lower_bound;$/;"	m	class:Xapian::MSet::Internal
uncollapsed_upper_bound	api/omenquireinternal.h	/^	Xapian::doccount uncollapsed_upper_bound;$/;"	m	class:Xapian::MSet::Internal
uncw_path	common/fileutils.cc	/^uncw_path(const string & path)$/;"	f	file:
unescape	bin/xapian-inspect.cc	/^unescape(const string& s)$/;"	f	file:
uni::addPage	unicode/uniParse.tcl	/^proc uni::addPage {info} {$/;"	p
uni::buildTables	unicode/uniParse.tcl	/^proc uni::buildTables {data} {$/;"	p
uni::getGroup	unicode/uniParse.tcl	/^proc uni::getGroup {value} {$/;"	p
uni::getValue	unicode/uniParse.tcl	/^proc uni::getValue {items index} {$/;"	p
uni::main	unicode/uniParse.tcl	/^proc uni::main {} {$/;"	p
uniform_prefixes	queryparser/queryparser_internal.cc	/^    bool uniform_prefixes;$/;"	m	class:Terms	file:
uninit	common/bitstream.h	/^	void uninit() {$/;"	f	struct:Xapian::BitReader::DIState
unittest_DEPENDENCIES	tests/Makefile	/^unittest_DEPENDENCIES = ..\/libgetopt.la $(am__DEPENDENCIES_1)$/;"	m
unittest_LDADD	tests/Makefile	/^unittest_LDADD = ..\/libgetopt.la $(XAPIAN_LIBS)$/;"	m
unittest_LDFLAGS	tests/Makefile	/^unittest_LDFLAGS = $(NO_INSTALL) $(ldflags)$/;"	m
unittest_LINK	tests/Makefile	/^unittest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
unittest_OBJECTS	tests/Makefile	/^unittest_OBJECTS = $(am_unittest_OBJECTS)$/;"	m
unittest_SOURCES	tests/Makefile	/^unittest_SOURCES = unittest.cc $(utestharness_sources)$/;"	m
unittest_assertion_failed	tests/unittest.cc	/^static const char * unittest_assertion_failed = NULL;$/;"	v	file:
unpack	backends/glass/glass_freelist.h	/^    bool unpack(const char ** p, const char * end) {$/;"	f	class:GlassFLCursor
unpack	backends/glass/glass_freelist.h	/^    bool unpack(const char ** pstart, const char * end) {$/;"	f	class:GlassFreeList
unpack	backends/glass/glass_freelist.h	/^    bool unpack(const std::string & s) {$/;"	f	class:GlassFreeList
unpack_bool	common/pack.h	/^unpack_bool(const char ** p, const char * end, bool * result)$/;"	f
unpack_string	common/pack.h	/^unpack_string(const char ** p, const char * end, std::string & result)$/;"	f
unpack_string_preserving_sort	common/pack.h	/^unpack_string_preserving_sort(const char ** p, const char * end,$/;"	f
unpack_uint	common/pack.h	/^unpack_uint(const char ** p, const char * end, U * result)$/;"	f
unpack_uint_last	common/pack.h	/^unpack_uint_last(const char ** p, const char * end, U * result)$/;"	f
unpack_uint_preserving_sort	common/pack.h	/^unpack_uint_preserving_sort(const char ** p, const char * end, U * result)$/;"	f
unreachable	languages/compiler/header.h	/^    int unreachable;           \/* 0 if code can be reached, 1 if current code$/;"	m	struct:generator
unref	include/xapian/intrusive_ptr.h	/^    void unref() const {$/;"	f	class:Xapian::Internal::opt_intrusive_base
unserialise	api/decvalwtsource.cc	/^DecreasingValueWeightPostingSource::unserialise(const std::string &s) const {$/;"	f	class:DecreasingValueWeightPostingSource
unserialise	api/matchspy.cc	/^MatchSpy::unserialise(const string &, const Registry &) const {$/;"	f	class:MatchSpy
unserialise	api/matchspy.cc	/^ValueCountMatchSpy::unserialise(const string & s, const Registry &) const$/;"	f	class:ValueCountMatchSpy
unserialise	api/omdocument.cc	/^Document::unserialise(const std::string &s)$/;"	f	class:Xapian::Document
unserialise	api/postingsource.cc	/^FixedWeightPostingSource::unserialise(const string &s) const$/;"	f	class:Xapian::FixedWeightPostingSource
unserialise	api/postingsource.cc	/^PostingSource::unserialise(const string &) const$/;"	f	class:Xapian::PostingSource
unserialise	api/postingsource.cc	/^ValueMapPostingSource::unserialise(const string &s) const$/;"	f	class:Xapian::ValueMapPostingSource
unserialise	api/postingsource.cc	/^ValueWeightPostingSource::unserialise(const string &s) const$/;"	f	class:Xapian::ValueWeightPostingSource
unserialise	api/query.cc	/^Query::unserialise(const string & s, const Registry & reg)$/;"	f	class:Xapian::Query
unserialise	api/queryinternal.cc	/^Query::Internal::unserialise(const char ** p, const char * end,$/;"	f	class:Xapian::Query::Internal
unserialise	backends/glass/glass_version.cc	/^RootInfo::unserialise(const char ** p, const char * end)$/;"	f	class:Glass::RootInfo
unserialise	geospatial/latlong_metrics.cc	/^GreatCircleMetric::unserialise(const string & s) const$/;"	f	class:GreatCircleMetric
unserialise	geospatial/latlongcoord.cc	/^LatLongCoord::unserialise(const char ** ptr, const char * end)$/;"	f	class:LatLongCoord
unserialise	geospatial/latlongcoord.cc	/^LatLongCoord::unserialise(const string & serialised)$/;"	f	class:LatLongCoord
unserialise	geospatial/latlongcoord.cc	/^LatLongCoords::unserialise(const string & serialised)$/;"	f	class:LatLongCoords
unserialise	matcher/localsubmatch.cc	/^LazyWeight::unserialise(const string &) const$/;"	f	class:LazyWeight
unserialise	tests/api_db.cc	/^    MyWeight * unserialise(const string &) const { return new MyWeight; }$/;"	f	class:MyWeight
unserialise	tests/api_serialise.cc	/^    MyPostingSource2 * unserialise(const std::string & s) const {$/;"	f	class:MyPostingSource2
unserialise	weight/bb2weight.cc	/^BB2Weight::unserialise(const string & s) const$/;"	f	class:Xapian::BB2Weight
unserialise	weight/bm25plusweight.cc	/^BM25PlusWeight::unserialise(const string & s) const$/;"	f	class:Xapian::BM25PlusWeight
unserialise	weight/bm25weight.cc	/^BM25Weight::unserialise(const string & s) const$/;"	f	class:Xapian::BM25Weight
unserialise	weight/boolweight.cc	/^BoolWeight::unserialise(const string& s) const$/;"	f	class:Xapian::BoolWeight
unserialise	weight/coordweight.cc	/^CoordWeight::unserialise(const string& s) const$/;"	f	class:Xapian::CoordWeight
unserialise	weight/dlhweight.cc	/^DLHWeight::unserialise(const string& s) const$/;"	f	class:Xapian::DLHWeight
unserialise	weight/dphweight.cc	/^DPHWeight::unserialise(const string& s) const$/;"	f	class:Xapian::DPHWeight
unserialise	weight/ifb2weight.cc	/^IfB2Weight::unserialise(const string & s) const$/;"	f	class:Xapian::IfB2Weight
unserialise	weight/ineb2weight.cc	/^IneB2Weight::unserialise(const string & s) const$/;"	f	class:Xapian::IneB2Weight
unserialise	weight/inl2weight.cc	/^InL2Weight::unserialise(const string & s) const$/;"	f	class:Xapian::InL2Weight
unserialise	weight/lmweight.cc	/^LMWeight::unserialise(const string & s) const$/;"	f	class:Xapian::LMWeight
unserialise	weight/pl2plusweight.cc	/^PL2PlusWeight::unserialise(const string & s) const$/;"	f	class:Xapian::PL2PlusWeight
unserialise	weight/pl2weight.cc	/^PL2Weight::unserialise(const string & s) const$/;"	f	class:Xapian::PL2Weight
unserialise	weight/tfidfweight.cc	/^TfIdfWeight::unserialise(const string & s) const$/;"	f	class:Xapian::TfIdfWeight
unserialise	weight/tradweight.cc	/^TradWeight::unserialise(const string & s) const$/;"	f	class:Xapian::TradWeight
unserialise	weight/weight.cc	/^Weight::unserialise(const string &) const$/;"	f	class:Xapian::Weight
unserialise_document	net/serialise.cc	/^unserialise_document(const string &s)$/;"	f
unserialise_double	common/serialise-double.cc	/^double unserialise_double(const char ** p, const char *end)$/;"	f
unserialise_error	net/serialise-error.cc	/^unserialise_error(const string &serialised_error, const string &prefix,$/;"	f
unserialise_mset	net/serialise.cc	/^unserialise_mset(const char * p, const char * p_end)$/;"	f
unserialise_rset	net/serialise.cc	/^unserialise_rset(const string &s)$/;"	f
unserialise_stats	backends/glass/glass_version.cc	/^GlassVersion::unserialise_stats()$/;"	f	class:GlassVersion
unserialise_stats	net/serialise.cc	/^unserialise_stats(const string &s, Xapian::Weight::Internal & stat)$/;"	f
unserialise_with_registry	api/postingsource.cc	/^PostingSource::unserialise_with_registry(const std::string &s,$/;"	f	class:Xapian::PostingSource
unserialise_with_registry	geospatial/latlong_posting_source.cc	/^LatLongDistancePostingSource::unserialise_with_registry(const string &s,$/;"	f	class:LatLongDistancePostingSource
unset_max_changesets_helper_	tests/api_replicate.cc	/^    unset_max_changesets_helper_() { }$/;"	f	struct:unset_max_changesets_helper_
unset_max_changesets_helper_	tests/api_replicate.cc	/^struct unset_max_changesets_helper_ {$/;"	s	file:
unstem	queryparser/queryparser_internal.h	/^    multimap<string, string> unstem;$/;"	m	class:Xapian::QueryParser::Internal
unstem_begin	queryparser/queryparser.cc	/^QueryParser::unstem_begin(const string &term) const$/;"	f	class:QueryParser
unstem_end	include/xapian/queryparser.h	/^    TermIterator XAPIAN_NOTHROW(unstem_end(const std::string &) const) {$/;"	f	class:Xapian::QueryParser
unstemmed	queryparser/queryparser_internal.cc	/^    string unstemmed;$/;"	m	class:Term	file:
unsupported_method	api/matchspy.cc	/^static void unsupported_method() {$/;"	f	file:
update	backends/chert/chert_values.cc	/^    void update(Xapian::docid did, const string & value) {$/;"	f	class:ValueUpdater
update	backends/glass/glass_values.cc	/^    void update(Xapian::docid did, const string & value) {$/;"	f	class:Glass::ValueUpdater
update_after_advance	matcher/externalpostlist.cc	/^ExternalPostList::update_after_advance() {$/;"	f	class:ExternalPostList
update_from_master	net/replicatetcpclient.cc	/^ReplicateTcpClient::update_from_master(const std::string & path,$/;"	f	class:ReplicateTcpClient
update_if_required	tests/collate-test	/^sub update_if_required {$/;"	s
update_mod_plist	backends/chert/chert_database.cc	/^ChertWritableDatabase::update_mod_plist(Xapian::docid did,$/;"	f	class:ChertWritableDatabase
update_overlapped_offset	net/remoteconnection.cc	/^update_overlapped_offset(WSAOVERLAPPED & overlapped, DWORD n)$/;"	f	file:
update_posting	backends/glass/glass_inverter.h	/^	void update_posting(Xapian::docid did, Xapian::termcount old_wdf,$/;"	f	class:Inverter::PostingChanges
update_posting	backends/glass/glass_inverter.h	/^    void update_posting(Xapian::docid did, const std::string & term,$/;"	f	class:Inverter
update_reader	backends/chert/chert_valuelist.cc	/^ChertValueList::update_reader()$/;"	f	class:ChertValueList
update_reader	backends/glass/glass_valuelist.cc	/^GlassValueList::update_reader()$/;"	f	class:GlassValueList
update_stats	backends/remote/remote-database.cc	/^RemoteDatabase::update_stats(message_type msg_code, const string & body) const$/;"	f	class:RemoteDatabase
update_stub_database	api/replication.cc	/^DatabaseReplica::Internal::update_stub_database() const$/;"	f	class:DatabaseReplica::Internal
uplus_modes	languages/compiler/header.h	/^enum uplus_modes {$/;"	g
uplusmode	languages/compiler/header.h	/^    int uplusmode;$/;"	m	struct:tokeniser
upper_bound	backends/valuestats.h	/^    std::string upper_bound;$/;"	m	struct:ValueStats
upper_bound	include/xapian/weight.h	/^    double upper_bound;$/;"	m	class:Xapian::BB2Weight
upper_bound	include/xapian/weight.h	/^    double upper_bound;$/;"	m	class:Xapian::DLHWeight
upper_bound	include/xapian/weight.h	/^    double upper_bound;$/;"	m	class:Xapian::DPHWeight
upper_bound	include/xapian/weight.h	/^    double upper_bound;$/;"	m	class:Xapian::IfB2Weight
upper_bound	include/xapian/weight.h	/^    double upper_bound;$/;"	m	class:Xapian::InL2Weight
upper_bound	include/xapian/weight.h	/^    double upper_bound;$/;"	m	class:Xapian::IneB2Weight
upper_bound	include/xapian/weight.h	/^    double upper_bound;$/;"	m	class:Xapian::PL2PlusWeight
upper_bound	include/xapian/weight.h	/^    double upper_bound;$/;"	m	class:Xapian::PL2Weight
usage	tests/harness/testsuite.cc	/^test_driver::usage()$/;"	f	class:test_driver
useCnt	queryparser/lemon.c	/^  int useCnt;              \/* Number of times used *\/$/;"	m	struct:symbol	file:
use_backend	tests/harness/testrunner.cc	/^TestRunner::use_backend(const string & backend_name)$/;"	f	class:TestRunner
use_cr	tests/harness/testsuite.cc	/^bool test_driver::use_cr = false;$/;"	m	class:test_driver	file:
use_cr	tests/harness/testsuite.h	/^	static bool use_cr;$/;"	m	class:test_driver
use_exact_termfreq	expand/expandweight.h	/^    bool use_exact_termfreq;$/;"	m	class:Xapian::Internal::ExpandWeight
useconds_t	include/xapian/dbfactory.h	/^typedef unsigned useconds_t;$/;"	t	namespace:Xapian
used	languages/compiler/header.h	/^    struct node * used;         \/* First use, or NULL if not used *\/$/;"	m	struct:name	typeref:struct:name::node
used_in_among	languages/compiler/header.h	/^    byte used_in_among;         \/* Function used in among? *\/$/;"	m	struct:name
used_ranges	api/compactor.cc	/^    const vector<pair<Xapian::docid, Xapian::docid>>& used_ranges;$/;"	m	class:CmpByFirstUsed	file:
user_backend	tests/harness/testrunner.h	/^    std::string user_backend;$/;"	m	class:TestRunner
user_templatename	queryparser/lemon.c	/^static char *user_templatename = NULL;$/;"	v	file:
usual	config.h	508;"	d
usual	config.h	511;"	d
utestharness_sources	tests/Makefile	/^utestharness_sources = \\$/;"	m
utestharness_sources	tests/harness/Makefile.mk	/^utestharness_sources =\\$/;"	m
uuid	backends/chert/chert_version.h	/^    Uuid uuid;$/;"	m	class:ChertVersion
uuid	backends/glass/glass_version.h	/^    Uuid uuid;$/;"	m	class:GlassVersion
uuid	backends/remote/remote-database.h	/^    mutable string uuid;$/;"	m	class:RemoteDatabase
uuid_data	backends/uuids.h	/^    unsigned char uuid_data[BINARY_SIZE];$/;"	m	class:Uuid
val	backends/inmemory/KeyDomet.h	/^        KeyDometType val; \/\/ non-const to allow move assignment (useful in vector resizing and algorithms)$/;"	m	class:kdmt::KeyDometSize::KeyDomet
val	common/gnu_getopt.h	/^    int val;$/;"	m	struct:option
valid	backends/inmemory/inmemory_database.h	/^	bool valid;$/;"	m	class:InMemoryPosting
validate_postingsource_params	geospatial/latlong_posting_source.cc	/^validate_postingsource_params(double k1, double k2) {$/;"	f	file:
valno	include/xapian/queryparser.h	/^    Xapian::valueno valno;$/;"	m	class:Xapian::StringValueRangeProcessor
value	backends/chert/chert_values.h	/^    std::string value;$/;"	m	class:ValueChunkReader
value	backends/glass/glass_values.h	/^    std::string value;$/;"	m	class:Glass::ValueChunkReader
value	languages/compiler/header.h	/^    symbol * value;$/;"	m	struct:m_pair
value	tests/internaltest.cc	/^	int value;$/;"	m	class:Test_Exception	file:
value_decode	bin/xapian-delve.cc	/^} value_decode = VALUE_ESCAPE;$/;"	v	typeref:enum:__anon9	file:
value_manager	backends/chert/chert_database.h	/^	mutable ChertValueManager value_manager;$/;"	m	class:ChertDatabase
value_manager	backends/chert/chert_document.h	/^    const ChertValueManager *value_manager;$/;"	m	class:ChertDocument
value_manager	backends/glass/glass_database.h	/^	mutable GlassValueManager value_manager;$/;"	m	class:GlassDatabase
value_manager	backends/glass/glass_document.h	/^    const GlassValueManager *value_manager;$/;"	m	class:GlassDocument
value_stats	backends/chert/chert_database.h	/^	mutable map<Xapian::valueno, ValueStats> value_stats;$/;"	m	class:ChertWritableDatabase
value_stats	backends/glass/glass_database.h	/^	mutable map<Xapian::valueno, ValueStats> value_stats;$/;"	m	class:GlassWritableDatabase
value_type	include/xapian/eset.h	/^    typedef Xapian::ESetIterator value_type;$/;"	t	class:Xapian::ESet
value_type	include/xapian/eset.h	/^    typedef std::string value_type;$/;"	t	class:Xapian::ESetIterator
value_type	include/xapian/geospatial.h	/^    typedef LatLongCoord value_type;$/;"	t	class:Xapian::LatLongCoordsIterator
value_type	include/xapian/mset.h	/^    typedef Xapian::MSetIterator value_type;$/;"	t	class:Xapian::MSet
value_type	include/xapian/mset.h	/^    typedef std::string value_type;$/;"	t	class:Xapian::MSetIterator
value_type	include/xapian/positioniterator.h	/^    typedef Xapian::termpos value_type;$/;"	t	class:Xapian::PositionIterator
value_type	include/xapian/postingiterator.h	/^    typedef Xapian::docid value_type;$/;"	t	class:Xapian::PostingIterator
value_type	include/xapian/termiterator.h	/^    typedef std::string value_type;$/;"	t	class:Xapian::TermIterator
value_type	include/xapian/unicode.h	/^    typedef unsigned value_type;$/;"	t	class:Xapian::Utf8Iterator
value_type	include/xapian/valueiterator.h	/^    typedef std::string value_type;$/;"	t	class:Xapian::ValueIterator
value_type	queryparser/queryparser_internal.cc	/^    typedef Xapian::Query value_type;$/;"	t	class:SynonymIterator	file:
value_used	languages/compiler/header.h	/^    byte value_used;            \/* (For variables) is its value ever used? *\/$/;"	m	struct:name
valuelist	backends/multi/multi_valuelist.cc	/^    ValueList * valuelist;$/;"	m	struct:SubValueList	file:
valuelist	matcher/valuerangepostlist.h	/^    ValueList * valuelist;$/;"	m	class:ValueRangePostList
valuelists	backends/inmemory/inmemory_database.h	/^    vector<std::map<Xapian::valueno, string> > valuelists;$/;"	m	class:InMemoryDatabase
valuelists	backends/multivaluelist.h	/^    std::vector<SubValueList *> valuelists;$/;"	m	class:MultiValueList
valuelists	matcher/valuestreamdocument.h	/^    mutable std::map<Xapian::valueno, ValueList *> valuelists;$/;"	m	class:ValueStreamDocument
valueno	include/xapian/types.h	/^typedef unsigned valueno;$/;"	t	namespace:Xapian
valueno_diff	include/xapian/types.h	/^typedef int valueno_diff; \/* FIXME: can overflow. *\/$/;"	t	namespace:Xapian
valuenum	include/xapian/valuesetmatchdecider.h	/^    valueno valuenum;$/;"	m	class:Xapian::ValueSetMatchDecider
values	api/matchspy.cc	/^    vector<StringAndFrequency> values;$/;"	m	class:StringAndFreqTermList	file:
values	backends/document.h	/^	mutable document_values values; \/\/ FIXME mutable is a hack$/;"	m	class:Xapian::Document::Internal
values	include/xapian/matchspy.h	/^	std::map<std::string, Xapian::doccount> values;$/;"	m	struct:Xapian::ValueCountMatchSpy::Internal
values_begin	api/matchspy.cc	/^ValueCountMatchSpy::values_begin() const$/;"	f	class:ValueCountMatchSpy
values_begin	api/omdocument.cc	/^Document::values_begin() const$/;"	f	class:Xapian::Document
values_count	api/omdocument.cc	/^Document::values_count() const {$/;"	f	class:Xapian::Document
values_count	api/omdocument.cc	/^Xapian::Document::Internal::values_count() const$/;"	f	class:Xapian::Document::Internal
values_end	include/xapian/document.h	/^	ValueIterator XAPIAN_NOTHROW(values_end() const) {$/;"	f	class:Xapian::Document
values_end	include/xapian/matchspy.h	/^    TermIterator XAPIAN_NOTHROW(values_end() const) {$/;"	f	class:Xapian::ValueCountMatchSpy
values_here	backends/document.h	/^	mutable bool values_here; \/\/ FIXME mutable is a hack$/;"	m	class:Xapian::Document::Internal
values_modified	backends/document.h	/^	bool values_modified() const {$/;"	f	class:Xapian::Document::Internal
values_to_repr	tests/api_matchspy.cc	/^static string values_to_repr(const Xapian::ValueCountMatchSpy & spy) {$/;"	f	file:
valuestats	backends/inmemory/inmemory_database.h	/^    std::map<Xapian::valueno, ValueStats> valuestats;$/;"	m	class:InMemoryDatabase
valuestream_begin	api/omdatabase.cc	/^Database::valuestream_begin(Xapian::valueno slot) const$/;"	f	class:Xapian::Database
valuestream_end	include/xapian/database.h	/^	ValueIterator XAPIAN_NOTHROW(valuestream_end(Xapian::valueno) const) {$/;"	f	class:Xapian::Database
var-members	docs/apidoc/html/constants_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"><\/a>$/;"	a
var-members	docs/apidoc/html/namespaceXapian.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"><\/a>$/;"	a
var-members	docs/apidoc/html/types_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"><\/a>$/;"	a
var_number	languages/compiler/header.h	/^    int var_number;            \/* Number of next variable to use. *\/$/;"	m	struct:generator
vardest	queryparser/lemon.c	/^  char *vardest;           \/* Code for the default non-terminal destructor *\/$/;"	m	struct:lemon	file:
variables_prefix	languages/compiler/header.h	/^    const char * variables_prefix;$/;"	m	struct:options
vars	languages/compiler/generator.c	/^static const char * vars[] = { "p", "c", "l", "lb", "bra", "ket", NULL };$/;"	v	file:
vartype	queryparser/lemon.c	/^  char *vartype;           \/* The default type of non-terminal symbols *\/$/;"	m	struct:lemon	file:
verbose	bin/xapian-delve.cc	/^static int verbose = 0;$/;"	v	file:
verbose	net/tcpserver.h	/^    bool verbose;$/;"	m	class:SOCKET_INITIALIZER_MIXIN
verbose	tests/harness/testsuite.cc	/^int verbose;$/;"	v
version	backends/chert/chert_cursor.h	/^	unsigned long version;$/;"	m	class:ChertCursor
version	backends/glass/glass_cursor.h	/^	unsigned long version;$/;"	m	class:GlassCursor
version_file	backends/chert/chert_database.h	/^	ChertVersion version_file;$/;"	m	class:ChertDatabase
version_file	backends/glass/glass_database.h	/^	GlassVersion version_file;$/;"	m	class:GlassDatabase
version_string	include/xapian.h	/^inline const char * version_string() {$/;"	f	namespace:Xapian
vet_dm	api/valuerangeproc.cc	/^vet_dm(int d, int m)$/;"	f	namespace:Xapian
vg_log_fd	tests/harness/testsuite.cc	/^static int vg_log_fd = -1;$/;"	v	file:
vocab	languages/compiler/syswords.h	/^static const struct system_word vocab[82+1] = {$/;"	v	typeref:struct:system_word
vsdoc	matcher/mergepostlist.h	/^	ValueStreamDocument & vsdoc;$/;"	m	class:MergePostList
w	languages/compiler/generator.c	/^static void w(struct generator * g, const char * s) {$/;"	f	file:
w_max	matcher/mergepostlist.h	/^	double w_max;$/;"	m	class:MergePostList
walk	backends/glass/glass_freelist.cc	/^GlassFreeList::walk(const GlassTable *B, uint4 block_size, bool inclusive)$/;"	f	class:GlassFreeList
want_doclength	matcher/synonympostlist.h	/^    bool want_doclength;$/;"	m	class:SynonymPostList
want_unique_terms	matcher/synonympostlist.h	/^    bool want_unique_terms;$/;"	m	class:SynonymPostList
want_wdf	matcher/synonympostlist.h	/^    bool want_wdf;$/;"	m	class:SynonymPostList
was_called	tests/api_backend.cc	/^    bool was_called() const { return called; }$/;"	f	class:CheckMatchDecider
wdb	net/remoteserver.h	/^    Xapian::WritableDatabase * wdb;$/;"	m	class:RemoteServer
wdf	api/documentterm.h	/^    Xapian::termcount wdf;$/;"	m	class:OmDocumentTerm
wdf	backends/chert/chert_postlist.cc	/^    Xapian::termcount wdf;$/;"	m	class:Chert::PostlistChunkReader	file:
wdf	backends/chert/chert_postlist.h	/^	Xapian::termcount wdf;$/;"	m	class:ChertPostList
wdf	backends/glass/glass_postlist.cc	/^    Xapian::termcount wdf;$/;"	m	class:Glass::PostlistChunkReader	file:
wdf	backends/glass/glass_postlist.h	/^	Xapian::termcount wdf;$/;"	m	class:GlassPostList
wdf	backends/inmemory/inmemory_database.h	/^	Xapian::termcount wdf;$/;"	m	class:InMemoryPosting
wdf	backends/inmemory/inmemory_database.h	/^	Xapian::termcount wdf;$/;"	m	class:InMemoryTermEntry
wdf	backends/remote/net_termlist.h	/^	Xapian::termcount wdf;$/;"	m	class:NetworkTermListItem
wdf_disjoint	matcher/synonympostlist.h	/^    bool wdf_disjoint;$/;"	m	class:SynonymPostList
wdf_ubound	backends/chert/chert_dbstats.h	/^    Xapian::termcount wdf_ubound;$/;"	m	class:ChertDatabaseStats
wdf_ubound	backends/glass/glass_version.h	/^    Xapian::termcount wdf_ubound;$/;"	m	class:GlassVersion
wdf_upper	tests/api_weight.cc	/^    mutable Xapian::termcount wdf_upper;$/;"	m	class:CheckStatsWeight	file:
wdf_upper_bound_	include/xapian/weight.h	/^    Xapian::termcount wdf_upper_bound_;$/;"	m	class:Xapian::Weight
weight	api/leafpostlist.h	/^    const Xapian::Weight * weight;$/;"	m	class:LeafPostList
weight	api/omenquireinternal.h	/^	mutable Weight * weight;$/;"	m	class:Xapian::Enquire::Internal
weight	matcher/multimatch.h	/^	const Xapian::Weight * weight;$/;"	m	class:MultiMatch
weight_collection	include/xapian/weight.h	/^    double weight_collection;$/;"	m	class:Xapian::LMWeight
weight_cutoff	api/omenquireinternal.h	/^	double weight_cutoff;$/;"	m	class:Xapian::Enquire::Internal
weight_cutoff	matcher/multimatch.h	/^	double weight_cutoff;$/;"	m	class:MultiMatch
weight_from_distance	geospatial/latlong_posting_source.cc	/^weight_from_distance(double dist, double k1, double k2)$/;"	f	file:
weight_map	include/xapian/postingsource.h	/^    std::map<std::string, double> weight_map;$/;"	m	class:Xapian::ValueMapPostingSource
weights	tests/api_percentages.cc	/^    vector<pair<Xapian::docid, double>> weights;$/;"	m	class:MyPostingSource	file:
wgotol	languages/compiler/generator.c	/^static void wgotol(struct generator * g, int n) {$/;"	f	file:
white_space	languages/compiler/tokeniser.c	/^static int white_space(struct tokeniser * t, int ch) {$/;"	f	file:
wi3	languages/compiler/generator.c	/^static void wi3(struct generator * g, int i) {$/;"	f	file:
wildcard	queryparser/lemon.c	/^  struct symbol *wildcard; \/* Token that matches anything *\/$/;"	m	struct:lemon	typeref:struct:lemon::symbol	file:
wildcard1_testcases	tests/api_query.cc	/^wildcard_testcase wildcard1_testcases[] = {$/;"	v	file:
wildcard_testcase	tests/api_query.cc	/^struct wildcard_testcase {$/;"	s	file:
winc	languages/compiler/generator.c	/^static void winc(struct generator * g, struct node * p) {     \/* increment c *\/$/;"	f	file:
window	api/queryinternal.cc	/^	Xapian::termcount window;$/;"	m	class:Xapian::Internal::AndContext::PosFilter	file:
window	api/queryinternal.h	/^    Xapian::termcount window;$/;"	m	class:Xapian::Internal::QueryWindowed
window	matcher/nearpostlist.h	/^    Xapian::termpos window;$/;"	m	class:NearPostList
window	matcher/phrasepostlist.h	/^    Xapian::termpos window;$/;"	m	class:PhrasePostList
window	queryparser/queryparser_internal.cc	/^    size_t window;$/;"	m	class:Terms	file:
window	tests/api_query.cc	/^    int window;$/;"	m	struct:positional_testcase	file:
within_DBL_EPSILON	common/omassert.cc	/^bool within_DBL_EPSILON(double a, double b) {$/;"	f	namespace:Xapian::Internal
wk	languages/compiler/generator.c	/^static void wk(struct generator * g, struct node * p, int keep_limit) {$/;"	f	file:
wlitarray	languages/compiler/generator.c	/^static void wlitarray(struct generator * g, symbol * p) {  \/* write literal array *\/$/;"	f	file:
wlitch	languages/compiler/generator.c	/^static void wlitch(struct generator * g, int ch) {$/;"	f	file:
wlitref	languages/compiler/generator.c	/^static void wlitref(struct generator * g, symbol * p) {  \/* write ref to literal array *\/$/;"	f	file:
wms	languages/compiler/generator.c	/^static void wms(struct generator * g, const char * s) {$/;"	f	file:
wordfreq_changes	backends/chert/chert_spelling.h	/^    std::map<std::string, Xapian::termcount> wordfreq_changes;$/;"	m	class:ChertSpellingTable
wordfreq_changes	backends/glass/glass_spelling.h	/^    std::map<std::string, Xapian::termcount> wordfreq_changes;$/;"	m	class:GlassSpellingTable
wordfreq_upper_bound	backends/glass/glass_spelling.h	/^    Xapian::termcount wordfreq_upper_bound = 0;$/;"	m	class:GlassSpellingTable
wqf	api/queryinternal.h	/^    Xapian::termcount wqf;$/;"	m	class:Xapian::Internal::QueryTerm
wqf	matcher/localsubmatch.cc	/^    Xapian::termcount wqf;$/;"	m	class:LazyWeight	file:
wqf_	include/xapian/weight.h	/^    Xapian::termcount wqf_;$/;"	m	class:Xapian::Weight
wqf_product_factor	include/xapian/weight.h	/^    double wqf_product_factor;$/;"	m	class:Xapian::DLHWeight
wqf_product_factor	include/xapian/weight.h	/^    double wqf_product_factor;$/;"	m	class:Xapian::DPHWeight
wqf_product_idf	include/xapian/weight.h	/^    double wqf_product_idf;$/;"	m	class:Xapian::IfB2Weight
wqf_product_idf	include/xapian/weight.h	/^    double wqf_product_idf;$/;"	m	class:Xapian::InL2Weight
wqf_product_idf	include/xapian/weight.h	/^    double wqf_product_idf;$/;"	m	class:Xapian::IneB2Weight
wrestore	languages/compiler/generator.c	/^static void wrestore(struct generator * g, struct node * p, int keep_token) {     \/* restore c *\/$/;"	f	file:
wrestorelimit	languages/compiler/generator.c	/^static void wrestorelimit(struct generator * g, struct node * p, int keep_token) {     \/* restore limit *\/$/;"	f	file:
writable	backends/chert/chert_table.h	/^	bool writable;$/;"	m	class:ChertTable
writable	backends/glass/glass_table.h	/^	bool writable;$/;"	m	class:GlassTable
writable	net/remoteserver.h	/^    bool writable;$/;"	m	class:RemoteServer
writable	net/remotetcpserver.h	/^    bool writable;$/;"	m	class:RemoteTcpServer
write	backends/chert/chert_dbstats.cc	/^ChertDatabaseStats::write(ChertPostListTable & postlist_table) const$/;"	f	class:ChertDatabaseStats
write	backends/glass/glass_version.cc	/^GlassVersion::write(glass_revision_number_t new_rev, int flags)$/;"	f	class:GlassVersion
write	common/Tokeniseise.pm	/^sub write {$/;"	s
write	tests/perftest/perftest.cc	/^PerfTestLogger::write(const string & text)$/;"	f	class:PerfTestLogger
writeRuleText	queryparser/lemon.c	/^static void writeRuleText(FILE *out, struct rule *rp){$/;"	f	file:
write_all	net/remoteconnection.cc	/^write_all(int fd, const char * p, size_t n)$/;"	f	file:
write_and_clear_changes	common/replicate_utils.cc	/^write_and_clear_changes(int changes_fd, string & buf, size_t bytes)$/;"	f
write_and_clear_tout	tests/harness/testsuite.cc	/^test_driver::write_and_clear_tout()$/;"	f	class:test_driver
write_b	languages/compiler/generator.c	/^extern void write_b(struct generator * g, symbol * b) {$/;"	f
write_block	backends/chert/chert_table.cc	/^ChertTable::write_block(uint4 n, const uint8_t * p) const$/;"	f	class:ChertTable
write_block	backends/glass/glass_changes.cc	/^GlassChanges::write_block(const char * p, size_t len)$/;"	f	class:GlassChanges
write_block	backends/glass/glass_changes.h	/^    void write_block(const std::string & s) {$/;"	f	class:GlassChanges
write_block	backends/glass/glass_freelist.cc	/^GlassFreeList::write_block(const GlassTable * B, uint4 n, uint8_t * ptr,$/;"	f	class:GlassFreeList
write_block	backends/glass/glass_table.cc	/^GlassTable::write_block(uint4 n, const uint8_t * p, bool appending) const$/;"	f	class:GlassTable
write_block_end	languages/compiler/generator.c	/^static void write_block_end(struct generator * g) {    \/* block end *\/$/;"	f	file:
write_block_start	languages/compiler/generator.c	/^static void write_block_start(struct generator * g) { \/* block start *\/$/;"	f	file:
write_ch	common/pretty.h	/^inline void write_ch(std::ostream & os, unsigned char ch)$/;"	f
write_changed_blocks	backends/chert/chert_table.cc	/^ChertTable::write_changed_blocks(int changes_fd)$/;"	f	class:ChertTable
write_changesets_to_fd	api/replication.cc	/^DatabaseMaster::write_changesets_to_fd(int fd,$/;"	f	class:DatabaseMaster
write_changesets_to_fd	backends/chert/chert_database.cc	/^ChertDatabase::write_changesets_to_fd(int fd,$/;"	f	class:ChertDatabase
write_changesets_to_fd	backends/database.cc	/^Database::Internal::write_changesets_to_fd(int, const string &, bool, ReplicationInfo *)$/;"	f	class:Xapian::Database::Internal
write_changesets_to_fd	backends/glass/glass_database.cc	/^GlassDatabase::write_changesets_to_fd(int fd,$/;"	f	class:GlassDatabase
write_char	languages/compiler/generator.c	/^extern void write_char(struct generator * g, int ch) {$/;"	f
write_check_limit	languages/compiler/generator.c	/^static void write_check_limit(struct generator * g, struct node * p) {$/;"	f	file:
write_comment	languages/compiler/generator.c	/^static void write_comment(struct generator * g, struct node * p) {$/;"	f	file:
write_comment_content	languages/compiler/generator.c	/^void write_comment_content(struct generator * g, struct node * p) {$/;"	f
write_data_address	languages/compiler/generator.c	/^static void write_data_address(struct generator * g, struct node * p) {$/;"	f	file:
write_failure	languages/compiler/generator.c	/^static void write_failure(struct generator * g, struct node * p) {          \/* fail *\/$/;"	f	file:
write_hex	languages/compiler/generator.c	/^static void write_hex(struct generator * g, int i) {$/;"	f	file:
write_hexdigit	languages/compiler/generator.c	/^static void write_hexdigit(struct generator * g, int i) {$/;"	f	file:
write_int	languages/compiler/generator.c	/^extern void write_int(struct generator * g, int i) {$/;"	f
write_margin	languages/compiler/generator.c	/^static void write_margin(struct generator * g) {$/;"	f	file:
write_newline	languages/compiler/generator.c	/^extern void write_newline(struct generator * g) {$/;"	f
write_start_of_chunk	backends/chert/chert_postlist.cc	/^write_start_of_chunk(string & chunk,$/;"	f	file:
write_start_of_chunk	backends/glass/glass_postlist.cc	/^write_start_of_chunk(string & chunk,$/;"	f	file:
write_str	languages/compiler/generator.c	/^extern void write_str(struct generator * g, struct str * str) {$/;"	f
write_string	languages/compiler/generator.c	/^extern void write_string(struct generator * g, const char * s) {$/;"	f
write_tag	backends/chert/chert_values.cc	/^    void write_tag() {$/;"	f	class:ValueUpdater	file:
write_tag	backends/glass/glass_values.cc	/^    void write_tag() {$/;"	f	class:Glass::ValueUpdater	file:
write_to_file	backends/chert/chert_btreebase.cc	/^ChertTable_base::write_to_file(const string &filename,$/;"	f	class:ChertTable_base
write_varname	languages/compiler/generator.c	/^static void write_varname(struct generator * g, struct name * p) {$/;"	f	file:
write_varref	languages/compiler/generator.c	/^static void write_varref(struct generator * g, struct name * p) {  \/* reference to variable *\/$/;"	f	file:
writef	languages/compiler/generator.c	/^static void writef(struct generator * g, const char * input, struct node * p) {$/;"	f	file:
ws_opt_space	languages/compiler/generator.c	/^static void ws_opt_space(struct generator * g, const char * s) {$/;"	f	file:
wsetl	languages/compiler/generator.c	/^static void wsetl(struct generator * g, int n) {$/;"	f	file:
wt	api/omenquireinternal.h	/^	double wt;$/;"	m	class:Xapian::Internal::MSetItem
wt	examples/quest.cc	/^struct wt { const char * s; int f; };$/;"	s	file:
wt	expand/esetinternal.h	/^    double wt;$/;"	m	class:Xapian::Internal::ExpandTerm
wt	include/xapian/weight.h	/^    double wt;$/;"	m	class:Xapian::BB2Weight
wt	matcher/extraweightpostlist.h	/^	Xapian::Weight * wt;$/;"	m	class:ExtraWeightPostList
wt	matcher/selectpostlist.h	/^	mutable double wt;$/;"	m	class:SelectPostList
wt	matcher/synonympostlist.h	/^    const Xapian::Weight * wt;$/;"	m	class:SynonymPostList
wt_factory	matcher/localsubmatch.h	/^    const Xapian::Weight * wt_factory;$/;"	m	class:LocalSubMatch
wt_tab	examples/quest.cc	/^static const wt wt_tab[] = {$/;"	v	file:
wtschemes	api/registry.cc	/^    std::map<std::string, Xapian::Weight *> wtschemes;$/;"	m	class:Xapian::Registry::Internal	file:
x	queryparser/lemon.c	/^  } x;$/;"	m	struct:action	typeref:union:action::__anon32	file:
x	tests/unittest.cc	/^    int x = 0;$/;"	m	class:A	file:
x	tests/unittest.cc	/^    int x = 0;$/;"	m	class:B	file:
x1a	queryparser/lemon.c	/^static struct s_x1 *x1a;$/;"	v	typeref:struct:s_x1	file:
x1node	queryparser/lemon.c	/^} x1node;$/;"	t	typeref:struct:s_x1node	file:
x2a	queryparser/lemon.c	/^static struct s_x2 *x2a;$/;"	v	typeref:struct:s_x2	file:
x2node	queryparser/lemon.c	/^} x2node;$/;"	t	typeref:struct:s_x2node	file:
x3a	queryparser/lemon.c	/^static struct s_x3 *x3a;$/;"	v	typeref:struct:s_x3	file:
x3node	queryparser/lemon.c	/^} x3node;$/;"	t	typeref:struct:s_x3node	file:
x4a	queryparser/lemon.c	/^static struct s_x4 *x4a;$/;"	v	typeref:struct:s_x4	file:
x4node	queryparser/lemon.c	/^} x4node;$/;"	t	typeref:struct:s_x4node	file:
x_return	languages/compiler/generator.c	/^    x_return = -1$/;"	e	enum:special_labels	file:
xapian_FD_SET_	common/safesysselect.h	/^inline void xapian_FD_SET_(int fd, fd_set *set) {$/;"	f
xapian_sleep_milliseconds	common/safe.cc	/^xapian_sleep_milliseconds(unsigned int millisecs)$/;"	f
xapianinclude_HEADERS	Makefile	/^xapianinclude_HEADERS = include\/xapian\/attributes.h \\$/;"	m
xapianinclude_HEADERS	include/Makefile.mk	/^xapianinclude_HEADERS =\\$/;"	m
xapianincludedir	Makefile	/^xapianincludedir = $(incdir)\/xapian$/;"	m
xapianincludedir	include/Makefile.mk	/^xapianincludedir = $(incdir)\/xapian$/;"	m
xfailed	tests/harness/testsuite.h	/^	    unsigned int xfailed = 0;$/;"	m	struct:test_driver::result
xpassed	tests/harness/testsuite.h	/^	    unsigned int xpassed = 0;$/;"	m	struct:test_driver::result
yy0	queryparser/queryparser_internal.cc	/^  ParseTOKENTYPE yy0;$/;"	m	union:__anon33	file:
yy14	queryparser/queryparser_internal.cc	/^  TermGroup * yy14;$/;"	m	union:__anon33	file:
yy32	queryparser/queryparser_internal.cc	/^  Terms * yy32;$/;"	m	union:__anon33	file:
yy39	queryparser/queryparser_internal.cc	/^  Query * yy39;$/;"	m	union:__anon33	file:
yy40	queryparser/queryparser_internal.cc	/^  ProbQuery * yy40;$/;"	m	union:__anon33	file:
yy46	queryparser/queryparser_internal.cc	/^  int yy46;$/;"	m	union:__anon33	file:
yyFallback	queryparser/queryparser_internal.cc	/^static const YYCODETYPE yyFallback[] = {$/;"	v	file:
yyParser	queryparser/queryparser_internal.cc	/^  yyParser() {$/;"	f	struct:yyParser
yyParser	queryparser/queryparser_internal.cc	/^struct yyParser {$/;"	s	file:
yyParser	queryparser/queryparser_internal.cc	/^typedef struct yyParser yyParser;$/;"	t	typeref:struct:yyParser	file:
yyRuleInfo	queryparser/queryparser_internal.cc	/^} yyRuleInfo[] = {$/;"	v	typeref:struct:__anon34	file:
yyRuleName	queryparser/queryparser_internal.cc	/^static const char *const yyRuleName[] = {$/;"	v	file:
yyStackEntry	queryparser/queryparser_internal.cc	/^  yyStackEntry() {$/;"	f	struct:yyStackEntry
yyStackEntry	queryparser/queryparser_internal.cc	/^  yyStackEntry(YYACTIONTYPE stateno_, YYCODETYPE major_, ParseTOKENTYPE minor_) {$/;"	f	struct:yyStackEntry
yyStackEntry	queryparser/queryparser_internal.cc	/^struct yyStackEntry {$/;"	s	file:
yyTokenName	queryparser/queryparser_internal.cc	/^static const char *const yyTokenName[] = { $/;"	v	file:
yyTraceShift	queryparser/queryparser_internal.cc	/^static void yyTraceShift(yyParser *yypParser, int yyNewState, const char *zTag){$/;"	f	file:
yyTraceShift	queryparser/queryparser_internal.cc	2017;"	d	file:
yy_accept	queryparser/queryparser_internal.cc	/^static void yy_accept($/;"	f	file:
yy_action	queryparser/queryparser_internal.cc	/^static const YYACTIONTYPE yy_action[] = {$/;"	v	file:
yy_default	queryparser/queryparser_internal.cc	/^static const YYACTIONTYPE yy_default[] = {$/;"	v	file:
yy_destructor	queryparser/queryparser_internal.cc	/^static void yy_destructor($/;"	f	file:
yy_find_reduce_action	queryparser/queryparser_internal.cc	/^static int yy_find_reduce_action($/;"	f	file:
yy_find_shift_action	queryparser/queryparser_internal.cc	/^static unsigned int yy_find_shift_action($/;"	f	file:
yy_lookahead	queryparser/queryparser_internal.cc	/^static const YYCODETYPE yy_lookahead[] = {$/;"	v	file:
yy_parse_failed	queryparser/queryparser_internal.cc	/^static void yy_parse_failed($/;"	f	file:
yy_pop_parser_stack	queryparser/queryparser_internal.cc	/^static void yy_pop_parser_stack(yyParser *pParser){$/;"	f	file:
yy_reduce	queryparser/queryparser_internal.cc	/^static void yy_reduce($/;"	f	file:
yy_reduce_ofst	queryparser/queryparser_internal.cc	/^static const short yy_reduce_ofst[] = {$/;"	v	file:
yy_shift	queryparser/queryparser_internal.cc	/^static void yy_shift($/;"	f	file:
yy_shift_ofst	queryparser/queryparser_internal.cc	/^static const unsigned short int yy_shift_ofst[] = {$/;"	v	file:
yy_syntax_error	queryparser/queryparser_internal.cc	/^static void yy_syntax_error($/;"	f	file:
yycoverage	queryparser/queryparser_internal.cc	/^static unsigned char yycoverage[YYNSTATE][YYNTOKEN];$/;"	v	file:
yyerrcnt	queryparser/queryparser_internal.cc	/^  int yyerrcnt;                 \/* Shifts left before out of the error *\/$/;"	m	struct:yyParser	file:
yyhwm	queryparser/queryparser_internal.cc	/^  int yyhwm;                    \/* High-water mark of the stack *\/$/;"	m	struct:yyParser	file:
yyinit	queryparser/queryparser_internal.cc	/^  int yyinit;$/;"	m	union:__anon33	file:
yystack	queryparser/queryparser_internal.cc	/^  vector<yyStackEntry> yystack; \/* The parser's stack *\/$/;"	m	struct:yyParser	file:
yytestcase	queryparser/queryparser_internal.cc	1286;"	d	file:
zero	backends/chert/chert_dbstats.h	/^    void zero() {$/;"	f	class:ChertDatabaseStats
zero_inits	tests/api_weight.cc	/^    unsigned & zero_inits, & non_zero_inits;$/;"	m	class:CheckInitWeight	file:
zeroed_new	backends/chert/chert_table.cc	/^static inline uint8_t *zeroed_new(size_t size)$/;"	f	file:
zeroed_new	backends/glass/glass_table.cc	/^static inline uint8_t *zeroed_new(size_t size)$/;"	f	file:
~B	tests/unittest.cc	/^    ~B() {$/;"	f	class:B
~BackendManager	tests/harness/backendmanager.cc	/^BackendManager::~BackendManager() { }$/;"	f	class:BackendManager
~BackendManagerRemoteTcp	tests/harness/backendmanager_remotetcp.cc	/^BackendManagerRemoteTcp::~BackendManagerRemoteTcp() {$/;"	f	class:BackendManagerRemoteTcp
~BranchPostList	matcher/branchpostlist.cc	/^BranchPostList::~BranchPostList()$/;"	f	class:BranchPostList
~ChertAllTermsList	backends/chert/chert_alltermslist.cc	/^ChertAllTermsList::~ChertAllTermsList()$/;"	f	class:ChertAllTermsList
~ChertCursor	backends/chert/chert_cursor.cc	/^ChertCursor::~ChertCursor()$/;"	f	class:ChertCursor
~ChertDatabase	backends/chert/chert_database.cc	/^ChertDatabase::~ChertDatabase()$/;"	f	class:ChertDatabase
~ChertMetadataTermList	backends/chert/chert_metadata.cc	/^ChertMetadataTermList::~ChertMetadataTermList()$/;"	f	class:ChertMetadataTermList
~ChertModifiedPostList	backends/chert/chert_modifiedpostlist.cc	/^ChertModifiedPostList::~ChertModifiedPostList()$/;"	f	class:ChertModifiedPostList
~ChertPostList	backends/chert/chert_postlist.cc	/^ChertPostList::~ChertPostList()$/;"	f	class:ChertPostList
~ChertSpellingWordsList	backends/chert/chert_spellingwordslist.cc	/^ChertSpellingWordsList::~ChertSpellingWordsList()$/;"	f	class:ChertSpellingWordsList
~ChertSynonymTermList	backends/chert/chert_synonym.cc	/^ChertSynonymTermList::~ChertSynonymTermList()$/;"	f	class:ChertSynonymTermList
~ChertTable	backends/chert/chert_table.cc	/^ChertTable::~ChertTable() {$/;"	f	class:ChertTable
~ChertTable_base	backends/chert/chert_btreebase.cc	/^ChertTable_base::~ChertTable_base()$/;"	f	class:ChertTable_base
~ChertValueList	backends/chert/chert_valuelist.cc	/^ChertValueList::~ChertValueList()$/;"	f	class:ChertValueList
~ChertWritableDatabase	backends/chert/chert_database.cc	/^ChertWritableDatabase::~ChertWritableDatabase()$/;"	f	class:ChertWritableDatabase
~Compactor	api/compactor.cc	/^Compactor::~Compactor() { }$/;"	f	class:Xapian::Compactor
~CompressionStream	common/compression_stream.cc	/^CompressionStream::~CompressionStream() {$/;"	f	class:CompressionStream
~Context	api/queryinternal.cc	/^Context::~Context()$/;"	f	class:Xapian::Internal::Context
~Cursor	backends/glass/glass_cursor.h	/^	~Cursor() { destroy(); }$/;"	f	class:Glass::Cursor
~Database	api/omdatabase.cc	/^Database::~Database()$/;"	f	class:Xapian::Database
~DatabaseReplica	api/replication.cc	/^DatabaseReplica::~DatabaseReplica()$/;"	f	class:DatabaseReplica
~DatabaseReplicator	backends/databasereplicator.cc	/^DatabaseReplicator::~DatabaseReplicator()$/;"	f	class:Xapian::DatabaseReplicator
~DebugLogFunc	common/debuglog.h	/^    ~DebugLogFunc() {$/;"	f	class:DebugLogFunc
~DebugLogFuncVoid	common/debuglog.h	/^    ~DebugLogFuncVoid() {$/;"	f	class:DebugLogFuncVoid
~DebugLogger	common/debuglog.cc	/^DebugLogger::~DebugLogger()$/;"	f	class:DebugLogger
~DestroyedFlag	tests/api_none.cc	/^    ~DestroyedFlag() {$/;"	f	class:DestroyedFlag
~Document	api/omdocument.cc	/^Document::~Document()$/;"	f	class:Xapian::Document
~ESet	expand/esetinternal.cc	/^ESet::~ESet() { }$/;"	f	class:Xapian::ESet
~Enquire	api/omenquire.cc	/^Enquire::~Enquire()$/;"	f	class:Xapian::Enquire
~ErrorHandler	api/errorhandler.cc	/^Xapian::ErrorHandler::~ErrorHandler() { }$/;"	f	class:Xapian::ErrorHandler
~ExactPhrasePostList	matcher/exactphrasepostlist.cc	/^ExactPhrasePostList::~ExactPhrasePostList()$/;"	f	class:ExactPhrasePostList
~ExpandDecider	api/expanddecider.cc	/^ExpandDecider::~ExpandDecider() { }$/;"	f	class:Xapian::ExpandDecider
~ExternalPostList	matcher/externalpostlist.cc	/^ExternalPostList::~ExternalPostList()$/;"	f	class:ExternalPostList
~ExtraWeightPostList	matcher/extraweightpostlist.h	/^	~ExtraWeightPostList() {$/;"	f	class:ExtraWeightPostList
~FD	common/fd.h	/^    ~FD() { if (fd != -1) ::close(fd); }$/;"	f	class:FD
~FDTracker	tests/harness/fdtracker.cc	/^FDTracker::~FDTracker()$/;"	f	class:FDTracker
~FieldProcessor	queryparser/queryparser.cc	/^FieldProcessor::~FieldProcessor() { }$/;"	f	class:FieldProcessor
~FlintLock	backends/flint_lock.h	/^    ~FlintLock() { release(); }$/;"	f	class:FlintLock
~GlassAllTermsList	backends/glass/glass_alltermslist.cc	/^GlassAllTermsList::~GlassAllTermsList()$/;"	f	class:GlassAllTermsList
~GlassChanges	backends/glass/glass_changes.cc	/^GlassChanges::~GlassChanges()$/;"	f	class:GlassChanges
~GlassCursor	backends/glass/glass_cursor.cc	/^GlassCursor::~GlassCursor()$/;"	f	class:GlassCursor
~GlassDatabase	backends/glass/glass_database.cc	/^GlassDatabase::~GlassDatabase()$/;"	f	class:GlassDatabase
~GlassDatabaseReplicator	backends/glass/glass_databasereplicator.cc	/^GlassDatabaseReplicator::~GlassDatabaseReplicator()$/;"	f	class:GlassDatabaseReplicator
~GlassFreeList	backends/glass/glass_freelist.h	/^    ~GlassFreeList() { delete [] p; delete [] pw; }$/;"	f	class:GlassFreeList
~GlassFreeListChecker	backends/glass/glass_freelist.h	/^    ~GlassFreeListChecker() {$/;"	f	class:GlassFreeListChecker
~GlassMetadataTermList	backends/glass/glass_metadata.cc	/^GlassMetadataTermList::~GlassMetadataTermList()$/;"	f	class:GlassMetadataTermList
~GlassPostList	backends/glass/glass_postlist.cc	/^GlassPostList::~GlassPostList()$/;"	f	class:GlassPostList
~GlassSpellingWordsList	backends/glass/glass_spellingwordslist.cc	/^GlassSpellingWordsList::~GlassSpellingWordsList()$/;"	f	class:GlassSpellingWordsList
~GlassSynonymTermList	backends/glass/glass_synonym.cc	/^GlassSynonymTermList::~GlassSynonymTermList()$/;"	f	class:GlassSynonymTermList
~GlassTable	backends/glass/glass_table.cc	/^GlassTable::~GlassTable() {$/;"	f	class:GlassTable
~GlassValueList	backends/glass/glass_valuelist.cc	/^GlassValueList::~GlassValueList()$/;"	f	class:GlassValueList
~GlassVersion	backends/glass/glass_version.cc	/^GlassVersion::~GlassVersion()$/;"	f	class:GlassVersion
~GlassWritableDatabase	backends/glass/glass_database.cc	/^GlassWritableDatabase::~GlassWritableDatabase()$/;"	f	class:GlassWritableDatabase
~InMemoryDatabase	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::~InMemoryDatabase()$/;"	f	class:InMemoryDatabase
~Internal	api/omdocument.cc	/^Xapian::Document::Internal::~Internal()$/;"	f	class:Xapian::Document::Internal
~Internal	api/omenquire.cc	/^Enquire::Internal::~Internal()$/;"	f	class:Xapian::Enquire::Internal
~Internal	api/omenquireinternal.h	/^	~Internal() { delete stats; }$/;"	f	class:Xapian::MSet::Internal
~Internal	api/postlist.cc	/^PostingIterator::Internal::~Internal() { }$/;"	f	class:Xapian::PostingIterator::Internal
~Internal	api/queryinternal.cc	/^Query::Internal::~Internal() { }$/;"	f	class:Xapian::Query::Internal
~Internal	api/registry.cc	/^Registry::Internal::~Internal()$/;"	f	class:Xapian::Registry::Internal
~Internal	api/replication.cc	/^    ~Internal() { delete conn; }$/;"	f	class:DatabaseReplica::Internal
~Internal	api/termlist.cc	/^TermIterator::Internal::~Internal() { }$/;"	f	class:Xapian::TermIterator::Internal
~Internal	backends/database.cc	/^Database::Internal::~Internal()$/;"	f	class:Xapian::Database::Internal
~Internal	backends/positionlist.h	/^    virtual ~Internal() { }$/;"	f	class:Xapian::PositionIterator::Internal
~Internal	backends/valuelist.cc	/^ValueIterator::Internal::~Internal() { }$/;"	f	class:Xapian::ValueIterator::Internal
~InternalStemArabic	languages/arabic.cc	/^Xapian::InternalStemArabic::~InternalStemArabic()$/;"	f	class:Xapian::InternalStemArabic
~InternalStemArmenian	languages/armenian.cc	/^Xapian::InternalStemArmenian::~InternalStemArmenian()$/;"	f	class:Xapian::InternalStemArmenian
~InternalStemBasque	languages/basque.cc	/^Xapian::InternalStemBasque::~InternalStemBasque()$/;"	f	class:Xapian::InternalStemBasque
~InternalStemCatalan	languages/catalan.cc	/^Xapian::InternalStemCatalan::~InternalStemCatalan()$/;"	f	class:Xapian::InternalStemCatalan
~InternalStemDanish	languages/danish.cc	/^Xapian::InternalStemDanish::~InternalStemDanish()$/;"	f	class:Xapian::InternalStemDanish
~InternalStemDutch	languages/dutch.cc	/^Xapian::InternalStemDutch::~InternalStemDutch()$/;"	f	class:Xapian::InternalStemDutch
~InternalStemEarlyenglish	languages/earlyenglish.cc	/^Xapian::InternalStemEarlyenglish::~InternalStemEarlyenglish()$/;"	f	class:Xapian::InternalStemEarlyenglish
~InternalStemEnglish	languages/english.cc	/^Xapian::InternalStemEnglish::~InternalStemEnglish()$/;"	f	class:Xapian::InternalStemEnglish
~InternalStemFinnish	languages/finnish.cc	/^Xapian::InternalStemFinnish::~InternalStemFinnish()$/;"	f	class:Xapian::InternalStemFinnish
~InternalStemFrench	languages/french.cc	/^Xapian::InternalStemFrench::~InternalStemFrench()$/;"	f	class:Xapian::InternalStemFrench
~InternalStemGerman	languages/german.cc	/^Xapian::InternalStemGerman::~InternalStemGerman()$/;"	f	class:Xapian::InternalStemGerman
~InternalStemGerman2	languages/german2.cc	/^Xapian::InternalStemGerman2::~InternalStemGerman2()$/;"	f	class:Xapian::InternalStemGerman2
~InternalStemHungarian	languages/hungarian.cc	/^Xapian::InternalStemHungarian::~InternalStemHungarian()$/;"	f	class:Xapian::InternalStemHungarian
~InternalStemIndonesian	languages/indonesian.cc	/^Xapian::InternalStemIndonesian::~InternalStemIndonesian()$/;"	f	class:Xapian::InternalStemIndonesian
~InternalStemIrish	languages/irish.cc	/^Xapian::InternalStemIrish::~InternalStemIrish()$/;"	f	class:Xapian::InternalStemIrish
~InternalStemItalian	languages/italian.cc	/^Xapian::InternalStemItalian::~InternalStemItalian()$/;"	f	class:Xapian::InternalStemItalian
~InternalStemKraaij_pohlmann	languages/kraaij_pohlmann.cc	/^Xapian::InternalStemKraaij_pohlmann::~InternalStemKraaij_pohlmann()$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
~InternalStemLithuanian	languages/lithuanian.cc	/^Xapian::InternalStemLithuanian::~InternalStemLithuanian()$/;"	f	class:Xapian::InternalStemLithuanian
~InternalStemLovins	languages/lovins.cc	/^Xapian::InternalStemLovins::~InternalStemLovins()$/;"	f	class:Xapian::InternalStemLovins
~InternalStemNepali	languages/nepali.cc	/^Xapian::InternalStemNepali::~InternalStemNepali()$/;"	f	class:Xapian::InternalStemNepali
~InternalStemNorwegian	languages/norwegian.cc	/^Xapian::InternalStemNorwegian::~InternalStemNorwegian()$/;"	f	class:Xapian::InternalStemNorwegian
~InternalStemPorter	languages/porter.cc	/^Xapian::InternalStemPorter::~InternalStemPorter()$/;"	f	class:Xapian::InternalStemPorter
~InternalStemPortuguese	languages/portuguese.cc	/^Xapian::InternalStemPortuguese::~InternalStemPortuguese()$/;"	f	class:Xapian::InternalStemPortuguese
~InternalStemRomanian	languages/romanian.cc	/^Xapian::InternalStemRomanian::~InternalStemRomanian()$/;"	f	class:Xapian::InternalStemRomanian
~InternalStemRussian	languages/russian.cc	/^Xapian::InternalStemRussian::~InternalStemRussian()$/;"	f	class:Xapian::InternalStemRussian
~InternalStemSpanish	languages/spanish.cc	/^Xapian::InternalStemSpanish::~InternalStemSpanish()$/;"	f	class:Xapian::InternalStemSpanish
~InternalStemSwedish	languages/swedish.cc	/^Xapian::InternalStemSwedish::~InternalStemSwedish()$/;"	f	class:Xapian::InternalStemSwedish
~InternalStemTamil	languages/tamil.cc	/^Xapian::InternalStemTamil::~InternalStemTamil()$/;"	f	class:Xapian::InternalStemTamil
~InternalStemTurkish	languages/turkish.cc	/^Xapian::InternalStemTurkish::~InternalStemTurkish()$/;"	f	class:Xapian::InternalStemTurkish
~KeyMaker	api/keymaker.cc	/^KeyMaker::~KeyMaker() { }$/;"	f	class:Xapian::KeyMaker
~LatLongDistanceKeyMaker	geospatial/latlong_distance_keymaker.cc	/^LatLongDistanceKeyMaker::~LatLongDistanceKeyMaker()$/;"	f	class:LatLongDistanceKeyMaker
~LatLongDistancePostingSource	geospatial/latlong_posting_source.cc	/^LatLongDistancePostingSource::~LatLongDistancePostingSource()$/;"	f	class:LatLongDistancePostingSource
~LatLongMetric	geospatial/latlong_metrics.cc	/^LatLongMetric::~LatLongMetric()$/;"	f	class:LatLongMetric
~LeafPostList	api/leafpostlist.cc	/^LeafPostList::~LeafPostList()$/;"	f	class:LeafPostList
~MSVCIgnoreInvalidParameter	common/msvcignoreinvalidparam.h	/^    ~MSVCIgnoreInvalidParameter() {$/;"	f	class:MSVCIgnoreInvalidParameter
~MSet	api/omenquire.cc	/^MSet::~MSet()$/;"	f	class:Xapian::MSet
~MatchDecider	api/omenquire.cc	/^MatchDecider::~MatchDecider() { }$/;"	f	class:Xapian::MatchDecider
~MatchSpy	api/matchspy.cc	/^MatchSpy::~MatchSpy() {}$/;"	f	class:MatchSpy
~MaxPostList	matcher/maxpostlist.cc	/^MaxPostList::~MaxPostList()$/;"	f	class:MaxPostList
~MergePostList	matcher/mergepostlist.cc	/^MergePostList::~MergePostList()$/;"	f	class:MergePostList
~MultiAllTermsList	backends/multi/multi_alltermslist.cc	/^MultiAllTermsList::~MultiAllTermsList()$/;"	f	class:MultiAllTermsList
~MultiAndPostList	matcher/multiandpostlist.cc	/^MultiAndPostList::~MultiAndPostList()$/;"	f	class:MultiAndPostList
~MultiPostList	backends/multi/multi_postlist.cc	/^MultiPostList::~MultiPostList()$/;"	f	class:MultiPostList
~MultiTermList	backends/multi/multi_termlist.cc	/^MultiTermList::~MultiTermList()$/;"	f	class:MultiTermList
~MultiValueList	backends/multi/multi_valuelist.cc	/^MultiValueList::~MultiValueList()$/;"	f	class:MultiValueList
~MultiXorPostList	matcher/multixorpostlist.cc	/^MultiXorPostList::~MultiXorPostList()$/;"	f	class:MultiXorPostList
~MyWeight	tests/api_db.cc	/^    ~MyWeight() { }$/;"	f	class:MyWeight
~NearPostList	matcher/nearpostlist.cc	/^NearPostList::~NearPostList()$/;"	f	class:NearPostList
~OrPosPostList	matcher/orpospostlist.cc	/^OrPosPostList::~OrPosPostList()$/;"	f	class:OrPosPostList
~OrTermList	expand/ortermlist.cc	/^OrTermList::~OrTermList()$/;"	f	class:OrTermList
~PerfTestLogger	tests/perftest/perftest.cc	/^PerfTestLogger::~PerfTestLogger()$/;"	f	class:PerfTestLogger
~PhrasePostList	matcher/phrasepostlist.cc	/^PhrasePostList::~PhrasePostList()$/;"	f	class:PhrasePostList
~PositionIterator	include/xapian/positioniterator.h	/^    ~PositionIterator() {$/;"	f	class:Xapian::PositionIterator
~PostingIterator	include/xapian/postingiterator.h	/^    ~PostingIterator() {$/;"	f	class:Xapian::PostingIterator
~PostingSource	api/postingsource.cc	/^PostingSource::~PostingSource() { }$/;"	f	class:Xapian::PostingSource
~ProbQuery	queryparser/queryparser_internal.cc	/^    ~ProbQuery() {$/;"	f	struct:ProbQuery
~ProgClient	net/progclient.cc	/^ProgClient::~ProgClient()$/;"	f	class:ProgClient
~Query	include/xapian/query.h	/^    ~Query() { }$/;"	f	class:Xapian::Query
~QueryOptimiser	matcher/queryoptimiser.h	/^    ~QueryOptimiser() {$/;"	f	class:QueryOptimiser
~QueryParser	queryparser/queryparser.cc	/^QueryParser::~QueryParser() { }$/;"	f	class:QueryParser
~RSet	api/omenquire.cc	/^RSet::~RSet()$/;"	f	class:Xapian::RSet
~RangeProcessor	queryparser/queryparser.cc	/^RangeProcessor::~RangeProcessor() { }$/;"	f	class:RangeProcessor
~Registry	api/registry.cc	/^Registry::~Registry()$/;"	f	class:Xapian::Registry
~RemoteConnection	net/remoteconnection.cc	/^RemoteConnection::~RemoteConnection()$/;"	f	class:RemoteConnection
~RemoteServer	net/remoteserver.cc	/^RemoteServer::~RemoteServer()$/;"	f	class:RemoteServer
~RemoteTcpClient	net/remotetcpclient.cc	/^RemoteTcpClient::~RemoteTcpClient()$/;"	f	class:RemoteTcpClient
~ReplicateTcpClient	net/replicatetcpclient.cc	/^ReplicateTcpClient::~ReplicateTcpClient()$/;"	f	class:ReplicateTcpClient
~ReplicateTcpServer	net/replicatetcpserver.cc	/^ReplicateTcpServer::~ReplicateTcpServer() {$/;"	f	class:ReplicateTcpServer
~Resolver	net/resolver.h	/^    ~Resolver() {$/;"	f	class:Resolver
~SelectPostList	matcher/selectpostlist.h	/^	~SelectPostList() { delete source; }$/;"	f	class:SelectPostList
~SignalRedirector	tests/harness/testsuite.cc	/^    ~SignalRedirector() {$/;"	f	class:SignalRedirector
~SmallVector	api/smallvector.h	/^    ~SmallVector() {$/;"	f	class:Xapian::SmallVector
~SnowballStemImplementation	languages/steminternal.cc	/^SnowballStemImplementation::~SnowballStemImplementation()$/;"	f	class:Xapian::SnowballStemImplementation
~Stem	languages/stem.cc	/^Stem::~Stem() { }$/;"	f	class:Xapian::Stem
~StemImplementation	languages/steminternal.cc	/^StemImplementation::~StemImplementation() { }$/;"	f	class:Xapian::StemImplementation
~Stopper	include/xapian/queryparser.h	/^    virtual ~Stopper() { }$/;"	f	class:Xapian::Stopper
~SubMatch	common/submatch.h	/^    virtual ~SubMatch() { }$/;"	f	class:SubMatch
~SubValueList	backends/multi/multi_valuelist.cc	/^    ~SubValueList() {$/;"	f	struct:SubValueList
~SynonymPostList	matcher/synonympostlist.cc	/^SynonymPostList::~SynonymPostList()$/;"	f	class:SynonymPostList
~TcpServer	net/tcpserver.cc	/^TcpServer::~TcpServer()$/;"	f	class:TcpServer
~TempDtorTest	tests/internaltest.cc	/^    ~TempDtorTest() { --count; }$/;"	f	struct:TempDtorTest
~TermGenerator	queryparser/termgenerator.cc	/^TermGenerator::~TermGenerator() { }$/;"	f	class:TermGenerator
~TermGroup	queryparser/queryparser_internal.cc	/^    ~TermGroup() {$/;"	f	class:TermGroup
~TermIterator	include/xapian/termiterator.h	/^    ~TermIterator() {$/;"	f	class:Xapian::TermIterator
~Terms	queryparser/queryparser_internal.cc	/^    ~Terms() {$/;"	f	class:Terms
~TestRunner	tests/harness/testrunner.cc	/^TestRunner::~TestRunner() { }$/;"	f	class:TestRunner
~TimeOut	matcher/multimatch.cc	/^    ~TimeOut() {$/;"	f	class:TimeOut
~ValueIterator	include/xapian/valueiterator.h	/^    ~ValueIterator() {$/;"	f	class:Xapian::ValueIterator
~ValueRangePostList	matcher/valuerangepostlist.cc	/^ValueRangePostList::~ValueRangePostList()$/;"	f	class:ValueRangePostList
~ValueRangeProcessor	queryparser/queryparser.cc	/^ValueRangeProcessor::~ValueRangeProcessor() { }$/;"	f	class:ValueRangeProcessor
~ValueStreamDocument	matcher/valuestreamdocument.cc	/^ValueStreamDocument::~ValueStreamDocument()$/;"	f	class:ValueStreamDocument
~ValueUpdater	backends/chert/chert_values.cc	/^    ~ValueUpdater() {$/;"	f	class:ValueUpdater
~ValueUpdater	backends/glass/glass_values.cc	/^    ~ValueUpdater() {$/;"	f	class:Glass::ValueUpdater
~Weight	weight/weight.cc	/^Weight::~Weight() { }$/;"	f	class:Xapian::Weight
~WinsockInitializer	net/remoteconnection.h	/^    ~WinsockInitializer() {$/;"	f	struct:WinsockInitializer
~WritableDatabase	api/omdatabase.cc	/^WritableDatabase::~WritableDatabase()$/;"	f	class:Xapian::WritableDatabase
~dircloser	common/fileutils.cc	/^    ~dircloser() {$/;"	f	class:dircloser
~edist_state	api/editdistance.cc	/^edist_state<CHR>::~edist_state() {$/;"	f	class:edist_state
~intrusive_ptr	include/xapian/intrusive_ptr.h	/^    ~intrusive_ptr()$/;"	f	class:Xapian::Internal::intrusive_ptr
~opt_intrusive_base	include/xapian/intrusive_ptr.h	/^    virtual ~opt_intrusive_base() { }$/;"	f	class:Xapian::Internal::opt_intrusive_base
~opt_intrusive_ptr	include/xapian/intrusive_ptr.h	/^    ~opt_intrusive_ptr()$/;"	f	class:Xapian::Internal::opt_intrusive_ptr
~test_autoptr	tests/internaltest.cc	/^    ~test_autoptr() {$/;"	f	class:test_autoptr
~test_refcnt	tests/internaltest.cc	/^	~test_refcnt() {$/;"	f	class:test_refcnt
~unset_max_changesets_helper_	tests/api_replicate.cc	/^    ~unset_max_changesets_helper_() { set_max_changesets(0); }$/;"	f	struct:unset_max_changesets_helper_
~yyParser	queryparser/queryparser_internal.cc	/^  ~yyParser() {$/;"	f	struct:yyParser
